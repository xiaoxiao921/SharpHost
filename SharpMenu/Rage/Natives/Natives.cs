namespace SharpMenu.Rage.Natives
{
    internal static class NativeUtil
    {
        internal const int @false = 0;
        internal const int @true = 1;
    }

    internal static unsafe class SYSTEM
    {
        internal static void WAIT(int ms) { NativeInvoker.Invoke(0x4EDE34FBADD967A6, (ulong)ms); }
        internal static int START_NEW_SCRIPT(char* scriptName, int stackSize) { return NativeInvoker.Invoke<int>(0xE81651AD79516E48, (ulong)scriptName, (ulong)stackSize); }
        internal static int START_NEW_SCRIPT_WITH_ARGS(char* scriptName, Any* args, int argCount, int stackSize) { return NativeInvoker.Invoke<int>(0xB8BA7F44DF1575E1, (ulong)scriptName, (ulong)args, (ulong)argCount, (ulong)stackSize); }
        internal static int START_NEW_SCRIPT_WITH_NAME_HASH(Hash scriptHash, int stackSize) { return NativeInvoker.Invoke<int>(0xEB1C67C3A5333A92, (ulong)scriptHash, (ulong)stackSize); }
        internal static int START_NEW_SCRIPT_WITH_NAME_HASH_AND_ARGS(Hash scriptHash, Any* args, int argCount, int stackSize) { return NativeInvoker.Invoke<int>(0xC4BB298BD441BE78, (ulong)scriptHash, (ulong)args, (ulong)argCount, (ulong)stackSize); }
        internal static int TIMERA() { return NativeInvoker.Invoke<int>(0x83666F9FB8FEBD4B); } // 0x83666F9FB8FEBD4B 0x45C8C188 b323, (ulong)83666F9FB8FEBD4B); }
        internal static int TIMERB() { return NativeInvoker.Invoke<int>(0xC9D9444186B5A374); } // 0xC9D9444186B5A374 0x330A9C0C b323, (ulong)C9D9444186B5A374); }
        internal static void SETTIMERA(int value) { NativeInvoker.Invoke(0xC1B1E9A034A63A62, (ulong)value); }
        internal static void SETTIMERB(int value) { NativeInvoker.Invoke(0x5AE11BC36633DE4E, (ulong)value); }
        internal static float TIMESTEP() { return NativeInvoker.Invoke<float>(0x0000000050597EE2); } // 0x0000000050597EE2 0x50597EE2 b323, (ulong)0000000050597EE2); }
        internal static float SIN(float value) { return NativeInvoker.Invoke<float>(0x0BADBFA3B172435F, *(uint*)&value); }
        internal static float COS(float value) { return NativeInvoker.Invoke<float>(0xD0FFB162F40A139C, *(uint*)&value); }
        internal static float SQRT(float value) { return NativeInvoker.Invoke<float>(0x71D93B57D07F9804, *(uint*)&value); }
        internal static float POW(float @base, float exponent) { return NativeInvoker.Invoke<float>(0xE3621CC40F31FE2E, *(uint*)&@base, *(uint*)&exponent); }
        internal static float LOG10_(float value) { return NativeInvoker.Invoke<float>(0xE816E655DE37FE20, *(uint*)&value); }
        internal static float VMAG(float x, float y, float z) { return NativeInvoker.Invoke<float>(0x652D2EEEF1D3E62C, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static float VMAG2(float x, float y, float z) { return NativeInvoker.Invoke<float>(0xA8CEACB4F35AE058, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static float VDIST(float x1, float y1, float z1, float x2, float y2, float z2) { return NativeInvoker.Invoke<float>(0x2A488C176D52CCA5, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2); }
        internal static float VDIST2(float x1, float y1, float z1, float x2, float y2, float z2) { return NativeInvoker.Invoke<float>(0xB7A628320EFF8E47, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2); }
        internal static int SHIFT_LEFT(int value, int bitShift) { return NativeInvoker.Invoke<int>(0xEDD95A39E5544DE8, (ulong)value, (ulong)bitShift); }
        internal static int SHIFT_RIGHT(int value, int bitShift) { return NativeInvoker.Invoke<int>(0x97EF1E5BCE9DC075, (ulong)value, (ulong)bitShift); }
        internal static int FLOOR(float value) { return NativeInvoker.Invoke<int>(0xF34EE736CF047844, *(uint*)&value); }
        internal static int CEIL(float value) { return NativeInvoker.Invoke<int>(0x11E019C8F43ACC8A, *(uint*)&value); }
        internal static int ROUND(float value) { return NativeInvoker.Invoke<int>(0xF2DB717A73826179, *(uint*)&value); }
        internal static float TO_FLOAT(int value) { return NativeInvoker.Invoke<float>(0xBBDA792448DB5A89, (ulong)value); }
        internal static void SET_THREAD_PRIORITY(int priority) { NativeInvoker.Invoke(0x42B65DEEF2EDF2A1, (ulong)priority); }
    }

    internal static unsafe class APP
    {
        internal static BOOL APP_DATA_VALID() { return NativeInvoker.Invoke<BOOL>(0x846AA8E7D55EE5B6); } // 0x846AA8E7D55EE5B6 0x72BDE002 b323, (ulong)846AA8E7D55EE5B6); }
        internal static int APP_GET_INT(char* property) { return NativeInvoker.Invoke<int>(0xD3A58A12C77D9D4B, (ulong)property); }
        internal static float APP_GET_FLOAT(char* property) { return NativeInvoker.Invoke<float>(0x1514FB24C02C2322, (ulong)property); }
        internal static char* APP_GET_STRING(char* property) { return (char*)NativeInvoker.Invoke<IntPtr>(0x749B023950D2311C, (ulong)property); }
        internal static void APP_SET_INT(char* property, int value) { NativeInvoker.Invoke(0x607E8E3D3E4F9611, (ulong)property, (ulong)value); }
        internal static void APP_SET_FLOAT(char* property, float value) { NativeInvoker.Invoke(0x25D7687C68E0DAA4, (ulong)property, *(uint*)&value); }
        internal static void APP_SET_STRING(char* property, char* value) { NativeInvoker.Invoke(0x3FF2FCEC4B7721B4, (ulong)property, (ulong)value); }
        internal static void APP_SET_APP(char* appName) { NativeInvoker.Invoke(0xCFD0406ADAF90D2B, (ulong)appName); }
        internal static void APP_SET_BLOCK(char* blockName) { NativeInvoker.Invoke(0x262AB456A3D21F93, (ulong)blockName); }
        internal static void APP_CLEAR_BLOCK() { NativeInvoker.Invoke(0x5FE1DF3342DB7DBA); } // 0x5FE1DF3342DB7DBA 0xDAB86A18 b323<, (ulong)5FE1DF3342DB7DBA); }
        internal static void APP_CLOSE_APP() { NativeInvoker.Invoke(0xE41C65E07A5F05FC); } // 0xE41C65E07A5F05FC 0x03767C7A b323<, (ulong)E41C65E07A5F05FC); }
        internal static void APP_CLOSE_BLOCK() { NativeInvoker.Invoke(0xE8E3FCF72EAC0EF8); } // 0xE8E3FCF72EAC0EF8 0xED97B202 b323<, (ulong)E8E3FCF72EAC0EF8); }
        internal static BOOL APP_HAS_LINKED_SOCIAL_CLUB_ACCOUNT() { return NativeInvoker.Invoke<BOOL>(0x71EEE69745088DA0); } // 0x71EEE69745088DA0 0xD368BA15 b323, (ulong)71EEE69745088DA0); }
        internal static BOOL APP_HAS_SYNCED_DATA(char* appName) { return NativeInvoker.Invoke<BOOL>(0xCA52279A7271517F, (ulong)appName); }
        internal static void APP_SAVE_DATA() { NativeInvoker.Invoke(0x95C5D356CDA6E85F); } // 0x95C5D356CDA6E85F 0x84A3918D b323<, (ulong)95C5D356CDA6E85F); }
        internal static int APP_GET_DELETED_FILE_STATUS() { return NativeInvoker.Invoke<int>(0xC9853A2BE3DED1A6); } // 0xC9853A2BE3DED1A6 0x784D550B b323, (ulong)C9853A2BE3DED1A6); }
        internal static BOOL APP_DELETE_APP_DATA(char* appName) { return NativeInvoker.Invoke<BOOL>(0x44151AEA95C8A003, (ulong)appName); }
    }

    internal static unsafe class AUDIO
    {
        internal static void PLAY_PED_RINGTONE(char* ringtoneName, Ped ped, BOOL p2) { NativeInvoker.Invoke(0xF9E56683CA8E11A5, (ulong)ringtoneName, (ulong)ped, (ulong)p2); }
        internal static BOOL IS_PED_RINGTONE_PLAYING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x1E8E5E20937E3137, (ulong)ped); }
        internal static void STOP_PED_RINGTONE(Ped ped) { NativeInvoker.Invoke(0x6C5AE23EFA885092, (ulong)ped); }
        internal static BOOL IS_MOBILE_PHONE_CALL_ONGOING() { return NativeInvoker.Invoke<BOOL>(0x7497D2CE2C30D24C); } // 0x7497D2CE2C30D24C 0x4ED1400A b323, (ulong)7497D2CE2C30D24C); }
        internal static BOOL N_0xC8B1B2425604CDD0() { return NativeInvoker.Invoke<BOOL>(0xC8B1B2425604CDD0); } // 0xC8B1B2425604CDD0 0x16FB88B5 b323, (ulong)C8B1B2425604CDD0); }
        internal static void CREATE_NEW_SCRIPTED_CONVERSATION() { NativeInvoker.Invoke(0xD2C91A0B572AAE56); } // 0xD2C91A0B572AAE56 0xB2BC25F8 b323<, (ulong)D2C91A0B572AAE56); }
        internal static void ADD_LINE_TO_CONVERSATION(int index, char* p1, char* p2, int p3, int p4, BOOL p5, BOOL p6, BOOL p7, BOOL p8, int p9, BOOL p10, BOOL p11, BOOL p12) { NativeInvoker.Invoke(0xC5EF963405593646, (ulong)index, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9, (ulong)p10, (ulong)p11, (ulong)p12); }
        internal static void ADD_PED_TO_CONVERSATION(int index, Ped ped, char* p2) { NativeInvoker.Invoke(0x95D9F4BC443956E7, (ulong)index, (ulong)ped, (ulong)p2); }
        internal static void N_0x33E3C6C6F2F0B506(Any p0, float p1, float p2, float p3) { NativeInvoker.Invoke(0x33E3C6C6F2F0B506, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3); }
        internal static void N_0x892B6AB8F33606F5(int p0, Entity entity) { NativeInvoker.Invoke(0x892B6AB8F33606F5, (ulong)p0, (ulong)entity); }
        internal static void SET_MICROPHONE_POSITION(BOOL p0, float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3) { NativeInvoker.Invoke(0xB6AE90EDDE95C762, (ulong)p0, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&x3, *(uint*)&y3, *(uint*)&z3); }
        internal static void N_0x0B568201DD99F0EB(BOOL p0) { NativeInvoker.Invoke(0x0B568201DD99F0EB, (ulong)p0); }
        internal static void N_0x61631F5DF50D1C34(BOOL p0) { NativeInvoker.Invoke(0x61631F5DF50D1C34, (ulong)p0); }
        internal static void START_SCRIPT_PHONE_CONVERSATION(BOOL p0, BOOL p1) { NativeInvoker.Invoke(0x252E5F915EABB675, (ulong)p0, (ulong)p1); }
        internal static void PRELOAD_SCRIPT_PHONE_CONVERSATION(BOOL p0, BOOL p1) { NativeInvoker.Invoke(0x6004BCB0E226AAEA, (ulong)p0, (ulong)p1); }
        internal static void START_SCRIPT_CONVERSATION(BOOL p0, BOOL p1, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0x6B17C62C9635D2DC, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void PRELOAD_SCRIPT_CONVERSATION(BOOL p0, BOOL p1, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0x3B3CAD6166916D87, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void START_PRELOADED_CONVERSATION() { NativeInvoker.Invoke(0x23641AFE870AF385); } // 0x23641AFE870AF385 0xA170261B b323<, (ulong)23641AFE870AF385); }
        internal static BOOL GET_IS_PRELOADED_CONVERSATION_READY() { return NativeInvoker.Invoke<BOOL>(0xE73364DB90778FFA); } // 0xE73364DB90778FFA 0x336F3D35 b323, (ulong)E73364DB90778FFA); }
        internal static BOOL IS_SCRIPTED_CONVERSATION_ONGOING() { return NativeInvoker.Invoke<BOOL>(0x16754C556D2EDE3D); } // 0x16754C556D2EDE3D 0xCB8FD96F b323, (ulong)16754C556D2EDE3D); }
        internal static BOOL IS_SCRIPTED_CONVERSATION_LOADED() { return NativeInvoker.Invoke<BOOL>(0xDF0D54BE7A776737); } // 0xDF0D54BE7A776737 0xE1870EA9 b323, (ulong)DF0D54BE7A776737); }
        internal static int GET_CURRENT_SCRIPTED_CONVERSATION_LINE() { return NativeInvoker.Invoke<int>(0x480357EE890C295A); } // 0x480357EE890C295A 0x9620E41F b323, (ulong)480357EE890C295A); }
        internal static void PAUSE_SCRIPTED_CONVERSATION(BOOL p0) { NativeInvoker.Invoke(0x8530AD776CD72B12, (ulong)p0); }
        internal static void RESTART_SCRIPTED_CONVERSATION() { NativeInvoker.Invoke(0x9AEB285D1818C9AC); } // 0x9AEB285D1818C9AC 0x6CB24B56 b323<, (ulong)9AEB285D1818C9AC); }
        internal static int STOP_SCRIPTED_CONVERSATION(BOOL p0) { return NativeInvoker.Invoke<int>(0xD79DEEFB53455EBA, (ulong)p0); }
        internal static void SKIP_TO_NEXT_SCRIPTED_CONVERSATION_LINE() { NativeInvoker.Invoke(0x9663FE6B7A61EB00); } // 0x9663FE6B7A61EB00 0x85C98304 b323<, (ulong)9663FE6B7A61EB00); }
        internal static void INTERRUPT_CONVERSATION(Any p0, Any* p1, Any* p2) { NativeInvoker.Invoke(0xA018A12E5C5C2FA6, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void INTERRUPT_CONVERSATION_AND_PAUSE(Ped ped, char* p1, char* p2) { NativeInvoker.Invoke(0x8A694D7A68F8DC38, (ulong)ped, (ulong)p1, (ulong)p2); }
        internal static Any N_0xAA19F5572C38B564(Any* p0) { return NativeInvoker.Invoke<Any>(0xAA19F5572C38B564, (ulong)p0); }
        internal static void N_0xB542DE8C3D1CB210(BOOL p0) { NativeInvoker.Invoke(0xB542DE8C3D1CB210, (ulong)p0); }
        internal static void REGISTER_SCRIPT_WITH_AUDIO(int p0) { NativeInvoker.Invoke(0xC6ED9D5092438D91, (ulong)p0); }
        internal static void UNREGISTER_SCRIPT_WITH_AUDIO() { NativeInvoker.Invoke(0xA8638BE228D4751A); } // 0xA8638BE228D4751A 0x66728EFE b323<, (ulong)A8638BE228D4751A); }
        internal static BOOL REQUEST_MISSION_AUDIO_BANK(char* p0, BOOL p1, Any p2) { return NativeInvoker.Invoke<BOOL>(0x7345BDD95E62E0F2, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL REQUEST_AMBIENT_AUDIO_BANK(char* p0, BOOL p1, Any p2) { return NativeInvoker.Invoke<BOOL>(0xFE02FFBED8CA9D99, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL REQUEST_SCRIPT_AUDIO_BANK(char* p0, BOOL p1, int p2) { return NativeInvoker.Invoke<BOOL>(0x2F844A8B08D76685, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static Any N_0x40763EA7B9B783E7(Any p0, Any p1, Any p2) { return NativeInvoker.Invoke<Any>(0x40763EA7B9B783E7, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static Any HINT_AMBIENT_AUDIO_BANK(Any p0, Any p1, Any p2) { return NativeInvoker.Invoke<Any>(0x8F8C0E370AE62F5C, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static Any HINT_SCRIPT_AUDIO_BANK(Any p0, Any p1, Any p2) { return NativeInvoker.Invoke<Any>(0xFB380A29641EC31A, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void RELEASE_MISSION_AUDIO_BANK() { NativeInvoker.Invoke(0x0EC92A1BF0857187); } // 0x0EC92A1BF0857187 0x8E8824C7 b323<, (ulong)0EC92A1BF0857187); }
        internal static void RELEASE_AMBIENT_AUDIO_BANK() { NativeInvoker.Invoke(0x65475A218FFAA93D); } // 0x65475A218FFAA93D 0x8C938784 b323<, (ulong)65475A218FFAA93D); }
        internal static void RELEASE_NAMED_SCRIPT_AUDIO_BANK(char* audioBank) { NativeInvoker.Invoke(0x77ED170667F50170, (ulong)audioBank); }
        internal static void RELEASE_SCRIPT_AUDIO_BANK() { NativeInvoker.Invoke(0x7A2D8AD0A9EB9C3F); } // 0x7A2D8AD0A9EB9C3F 0x22F865E5 b323<, (ulong)7A2D8AD0A9EB9C3F); }
        internal static void N_0x19AF7ED9B9D23058() { NativeInvoker.Invoke(0x19AF7ED9B9D23058); } // 0x19AF7ED9B9D23058 0xA58BBF4F b323<, (ulong)19AF7ED9B9D23058); }
        internal static void N_0x9AC92EED5E4793AB() { NativeInvoker.Invoke(0x9AC92EED5E4793AB); } // 0x9AC92EED5E4793AB 0xE67446E9 b323<, (ulong)9AC92EED5E4793AB); }
        internal static void N_0x11579D940949C49E(Any p0) { NativeInvoker.Invoke(0x11579D940949C49E, (ulong)p0); }
        internal static int GET_SOUND_ID() { return NativeInvoker.Invoke<int>(0x430386FE9BF80B45); } // 0x430386FE9BF80B45 0x6AE0AD56 b323, (ulong)430386FE9BF80B45); }
        internal static void RELEASE_SOUND_ID(int soundId) { NativeInvoker.Invoke(0x353FC880830B88FA, (ulong)soundId); }
        internal static void PLAY_SOUND(int soundId, char* audioName, char* audioRef, BOOL p3, Any p4, BOOL p5) { NativeInvoker.Invoke(0x7FF4944CC209192D, (ulong)soundId, (ulong)audioName, (ulong)audioRef, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static void PLAY_SOUND_FRONTEND(int soundId, char* audioName, char* audioRef, BOOL p3) { NativeInvoker.Invoke(0x67C540AA08E4A6F5, (ulong)soundId, (ulong)audioName, (ulong)audioRef, (ulong)p3); }
        internal static void PLAY_DEFERRED_SOUND_FRONTEND(char* soundName, char* soundsetName) { NativeInvoker.Invoke(0xCADA5A0D0702381E, (ulong)soundName, (ulong)soundsetName); }
        internal static void PLAY_SOUND_FROM_ENTITY(int soundId, char* audioName, Entity entity, char* audioRef, BOOL isNetwork, Any p5) { NativeInvoker.Invoke(0xE65F427EB70AB1ED, (ulong)soundId, (ulong)audioName, (ulong)entity, (ulong)audioRef, (ulong)isNetwork, (ulong)p5); }
        internal static void N_0x5B9853296731E88D(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { NativeInvoker.Invoke(0x5B9853296731E88D, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static void PLAY_SOUND_FROM_COORD(int soundId, char* audioName, float x, float y, float z, char* audioRef, BOOL isNetwork, int range, BOOL p8) { NativeInvoker.Invoke(0x8D8686B622B88120, (ulong)soundId, (ulong)audioName, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)audioRef, (ulong)isNetwork, (ulong)range, (ulong)p8); }
        internal static void N_0x7EC3C679D0E7E46B(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x7EC3C679D0E7E46B, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void STOP_SOUND(int soundId) { NativeInvoker.Invoke(0xA3B0C41BA5CC0BB5, (ulong)soundId); }
        internal static int GET_NETWORK_ID_FROM_SOUND_ID(int soundId) { return NativeInvoker.Invoke<int>(0x2DE3F0A134FFBC0D, (ulong)soundId); }
        internal static int GET_SOUND_ID_FROM_NETWORK_ID(int netId) { return NativeInvoker.Invoke<int>(0x75262FD12D0A1C84, (ulong)netId); }
        internal static void SET_VARIABLE_ON_SOUND(int soundId, Any* p1, float p2) { NativeInvoker.Invoke(0xAD6B3148A78AE9B6, (ulong)soundId, (ulong)p1, *(uint*)&p2); }
        internal static void SET_VARIABLE_ON_STREAM(char* p0, float p1) { NativeInvoker.Invoke(0x2F9D3834AEB9EF79, (ulong)p0, *(uint*)&p1); }
        internal static void OVERRIDE_UNDERWATER_STREAM(Any* p0, BOOL p1) { NativeInvoker.Invoke(0xF2A9CDABCEA04BD6, (ulong)p0, (ulong)p1); }
        internal static void SET_VARIABLE_ON_UNDER_WATER_STREAM(char* variableName, float value) { NativeInvoker.Invoke(0x733ADF241531E5C2, (ulong)variableName, *(uint*)&value); }
        internal static BOOL HAS_SOUND_FINISHED(int soundId) { return NativeInvoker.Invoke<BOOL>(0xFCBDCE714A7C88E5, (ulong)soundId); }
        internal static void PLAY_PED_AMBIENT_SPEECH_NATIVE(Ped ped, char* speechName, char* speechParam, Any p3) { NativeInvoker.Invoke(0x8E04FEDD28D42462, (ulong)ped, (ulong)speechName, (ulong)speechParam, (ulong)p3); }
        internal static void PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE(Ped ped, char* speechName, char* speechParam, Any p3) { NativeInvoker.Invoke(0xC6941B4A3A8FBBB9, (ulong)ped, (ulong)speechName, (ulong)speechParam, (ulong)p3); }
        internal static void PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(Ped ped, char* speechName, char* voiceName, char* speechParam, BOOL p4) { NativeInvoker.Invoke(0x3523634255FC3318, (ulong)ped, (ulong)speechName, (ulong)voiceName, (ulong)speechParam, (ulong)p4); }
        internal static void PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE(char* speechName, char* voiceName, float x, float y, float z, char* speechParam) { NativeInvoker.Invoke(0xED640017ED337E45, (ulong)speechName, (ulong)voiceName, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)speechParam); }
        internal static void OVERRIDE_TREVOR_RAGE(char* voiceEffect) { NativeInvoker.Invoke(0x13AD665062541A7E, (ulong)voiceEffect); }
        internal static void RESET_TREVOR_RAGE() { NativeInvoker.Invoke(0xE78503B10C4314E0); } // 0xE78503B10C4314E0 0xE80CF0D4 b323<, (ulong)E78503B10C4314E0); }
        internal static void SET_PLAYER_ANGRY(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xEA241BB04110F091, (ulong)ped, (ulong)toggle); }
        internal static void PLAY_PAIN(Ped ped, int painID, int p1, Any p3) { NativeInvoker.Invoke(0xBC9AE166038A5CEC, (ulong)ped, (ulong)painID, (ulong)p1, (ulong)p3); }
        internal static void RELEASE_WEAPON_AUDIO() { NativeInvoker.Invoke(0xCE4AC0439F607045); } // 0xCE4AC0439F607045 0x6096504C b323<, (ulong)CE4AC0439F607045); }
        internal static void ACTIVATE_AUDIO_SLOWMO_MODE(char* p0) { NativeInvoker.Invoke(0xD01005D2BA2EB778, (ulong)p0); }
        internal static void DEACTIVATE_AUDIO_SLOWMO_MODE(char* p0) { NativeInvoker.Invoke(0xDDC635D5B3262C56, (ulong)p0); }
        internal static void SET_AMBIENT_VOICE_NAME(Ped ped, char* name) { NativeInvoker.Invoke(0x6C8065A3B780185B, (ulong)ped, (ulong)name); }
        internal static void SET_AMBIENT_VOICE_NAME_HASH_(Ped ped, Hash hash) { NativeInvoker.Invoke(0x9A53DED9921DE990, (ulong)ped, (ulong)hash); }
        internal static Hash GET_AMBIENT_VOICE_NAME_HASH_(Ped ped) { return NativeInvoker.Invoke<Hash>(0x5E203DA2BA15D436, (ulong)ped); }
        internal static void SET_PED_SCREAM_(Ped ped) { NativeInvoker.Invoke(0x40CF0D12D142A9E8, (ulong)ped); }
        internal static void N_0x1B7ABE26CBCBF8C7(Ped ped, Any p1, Any p2) { NativeInvoker.Invoke(0x1B7ABE26CBCBF8C7, (ulong)ped, (ulong)p1, (ulong)p2); }
        internal static void SET_PED_VOICE_GROUP_(Ped ped, Hash voiceGroupHash) { NativeInvoker.Invoke(0x7CDC8C3B89F661B3, (ulong)ped, (ulong)voiceGroupHash); }
        internal static void SET_PED_AUDIO_GENDER_(Ped ped, BOOL p1) { NativeInvoker.Invoke(0xA5342D390CDA41D6, (ulong)ped, (ulong)p1); }
        internal static void STOP_CURRENT_PLAYING_SPEECH(Ped ped) { NativeInvoker.Invoke(0x7A73D05A607734C7, (ulong)ped); }
        internal static void STOP_CURRENT_PLAYING_AMBIENT_SPEECH(Ped ped) { NativeInvoker.Invoke(0xB8BEC0CA6F0EDB0F, (ulong)ped); }
        internal static BOOL IS_AMBIENT_SPEECH_PLAYING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x9072C8B49907BFAD, (ulong)ped); }
        internal static BOOL IS_SCRIPTED_SPEECH_PLAYING(Any p0) { return NativeInvoker.Invoke<BOOL>(0xCC9AA18DCC7084F4, (ulong)p0); }
        internal static BOOL IS_ANY_SPEECH_PLAYING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x729072355FA39EC9, (ulong)ped); }
        internal static Any N_0x30CA2EF91D15ADF8() { return NativeInvoker.Invoke<Any>(0x30CA2EF91D15ADF8); } // 0x30CA2EF91D15ADF8 b2189, (ulong)30CA2EF91D15ADF8); }
        internal static BOOL CAN_PED_SPEAK_(Ped ped, char* speechName, BOOL unk) { return NativeInvoker.Invoke<BOOL>(0x49B99BF3FDA89A7A, (ulong)ped, (ulong)speechName, (ulong)unk); }
        internal static BOOL IS_PED_IN_CURRENT_CONVERSATION(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x049E937F18F4020C, (ulong)ped); }
        internal static void SET_PED_IS_DRUNK(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x95D2D383D5396B8A, (ulong)ped, (ulong)toggle); }
        internal static void PLAY_ANIMAL_VOCALIZATION(Ped pedHandle, int p1, char* speechName) { NativeInvoker.Invoke(0xEE066C7006C49C0A, (ulong)pedHandle, (ulong)p1, (ulong)speechName); }
        internal static BOOL IS_ANIMAL_VOCALIZATION_PLAYING(Ped pedHandle) { return NativeInvoker.Invoke<BOOL>(0xC265DF9FB44A9FBD, (ulong)pedHandle); }
        internal static void SET_ANIMAL_MOOD(Ped animal, int mood) { NativeInvoker.Invoke(0xCC97B29285B1DC3B, (ulong)animal, (ulong)mood); }
        internal static BOOL IS_MOBILE_PHONE_RADIO_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0xB35CE999E8EF317E); } // 0xB35CE999E8EF317E 0x6E502A5B b323, (ulong)B35CE999E8EF317E); }
        internal static void SET_MOBILE_PHONE_RADIO_STATE(BOOL state) { NativeInvoker.Invoke(0xBF286C554784F3DF, (ulong)state); }
        internal static int GET_PLAYER_RADIO_STATION_INDEX() { return NativeInvoker.Invoke<int>(0xE8AF77C4C06ADC93); } // 0xE8AF77C4C06ADC93 0x1C4946AC b323, (ulong)E8AF77C4C06ADC93); }
        internal static char* GET_PLAYER_RADIO_STATION_NAME() { return (char*)NativeInvoker.Invoke<IntPtr>(0xF6D733C32076AD03); } // 0xF6D733C32076AD03 0xD909C107 b323, (ulong)F6D733C32076AD03); }
        internal static char* GET_RADIO_STATION_NAME(int radioStation) { return (char*)NativeInvoker.Invoke<IntPtr>(0xB28ECA15046CA8B9, (ulong)radioStation); }
        internal static int GET_PLAYER_RADIO_STATION_GENRE() { return NativeInvoker.Invoke<int>(0xA571991A7FE6CCEB); } // 0xA571991A7FE6CCEB 0x872CF0EA b323, (ulong)A571991A7FE6CCEB); }
        internal static BOOL IS_RADIO_RETUNING() { return NativeInvoker.Invoke<BOOL>(0xA151A7394A214E65); } // 0xA151A7394A214E65 0xCF29097B b323, (ulong)A151A7394A214E65); }
        internal static BOOL IS_RADIO_FADED_OUT() { return NativeInvoker.Invoke<BOOL>(0x0626A247D2405330); } // 0x0626A247D2405330 0x815CAE99 b323, (ulong)0626A247D2405330); }
        internal static void N_0xFF266D1D0EB1195D() { NativeInvoker.Invoke(0xFF266D1D0EB1195D); } // 0xFF266D1D0EB1195D 0x53DB6994 b323<, (ulong)FF266D1D0EB1195D); }
        internal static void N_0xDD6BCF9E94425DF9() { NativeInvoker.Invoke(0xDD6BCF9E94425DF9); } // 0xDD6BCF9E94425DF9 0xD70ECC80 b323<, (ulong)DD6BCF9E94425DF9); }
        internal static void SET_RADIO_TO_STATION_NAME(char* stationName) { NativeInvoker.Invoke(0xC69EDA28699D5107, (ulong)stationName); }
        internal static void SET_VEH_RADIO_STATION(Vehicle vehicle, char* radioStation) { NativeInvoker.Invoke(0x1B9C0099CB942AC6, (ulong)vehicle, (ulong)radioStation); }
        internal static void SET_VEH_HAS_RADIO_OVERRIDE_(Vehicle vehicle) { NativeInvoker.Invoke(0x3E45765F3FBB582F, (ulong)vehicle); }
        internal static BOOL IS_VEHICLE_RADIO_ENABLED_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x0BE4BE946463F917, (ulong)vehicle); }
        internal static void N_0xC1805D05E6D4FE10(Vehicle vehicle) { NativeInvoker.Invoke(0xC1805D05E6D4FE10, (ulong)vehicle); }
        internal static void SET_EMITTER_RADIO_STATION(char* emitterName, char* radioStation) { NativeInvoker.Invoke(0xACF57305B12AF907, (ulong)emitterName, (ulong)radioStation); }
        internal static void SET_STATIC_EMITTER_ENABLED(char* emitterName, BOOL toggle) { NativeInvoker.Invoke(0x399D2D3B33F1B8EB, (ulong)emitterName, (ulong)toggle); }
        internal static void LINK_STATIC_EMITTER_TO_ENTITY_(char* emitterName, Entity entity) { NativeInvoker.Invoke(0x651D3228960D08AF, (ulong)emitterName, (ulong)entity); }
        internal static void SET_RADIO_TO_STATION_INDEX(int radioStation) { NativeInvoker.Invoke(0xA619B168B8A8570F, (ulong)radioStation); }
        internal static void SET_FRONTEND_RADIO_ACTIVE(BOOL active) { NativeInvoker.Invoke(0xF7F26C6E9CC9EBB8, (ulong)active); }
        internal static void UNLOCK_MISSION_NEWS_STORY(int newsStory) { NativeInvoker.Invoke(0xB165AB7C248B2DC1, (ulong)newsStory); }
        internal static BOOL IS_MISSION_NEWS_STORY_UNLOCKED(int newsStory) { return NativeInvoker.Invoke<BOOL>(0x66E49BF55B4B1874, (ulong)newsStory); }
        internal static int GET_AUDIBLE_MUSIC_TRACK_TEXT_ID() { return NativeInvoker.Invoke<int>(0x50B196FC9ED6545B); } // 0x50B196FC9ED6545B 0xA2B88CA7 b323, (ulong)50B196FC9ED6545B); }
        internal static void PLAY_END_CREDITS_MUSIC(BOOL play) { NativeInvoker.Invoke(0xCD536C4D33DCC900, (ulong)play); }
        internal static void SKIP_RADIO_FORWARD() { NativeInvoker.Invoke(0x6DDBBDD98E2E9C25); } // 0x6DDBBDD98E2E9C25 0x10D36630 b323<, (ulong)6DDBBDD98E2E9C25); }
        internal static void FREEZE_RADIO_STATION(char* radioStation) { NativeInvoker.Invoke(0x344F393B027E38C3, (ulong)radioStation); }
        internal static void UNFREEZE_RADIO_STATION(char* radioStation) { NativeInvoker.Invoke(0xFC00454CF60B91DD, (ulong)radioStation); }
        internal static void SET_RADIO_AUTO_UNFREEZE(BOOL toggle) { NativeInvoker.Invoke(0xC1AA9F53CE982990, (ulong)toggle); }
        internal static void SET_INITIAL_PLAYER_STATION(char* radioStation) { NativeInvoker.Invoke(0x88795F13FACDA88D, (ulong)radioStation); }
        internal static void SET_USER_RADIO_CONTROL_ENABLED(BOOL toggle) { NativeInvoker.Invoke(0x19F21E63AE6EAE4E, (ulong)toggle); }
        internal static void SET_RADIO_TRACK(char* radioStation, char* radioTrack) { NativeInvoker.Invoke(0xB39786F201FEE30B, (ulong)radioStation, (ulong)radioTrack); }
        internal static void SET_RADIO_TRACK_MIX_(char* radioStationName, char* mixName, int p2) { NativeInvoker.Invoke(0x2CB0075110BE1E56, (ulong)radioStationName, (ulong)mixName, (ulong)p2); }
        internal static void N_0x55ECF4D13D9903B0(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x55ECF4D13D9903B0, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void SET_VEHICLE_RADIO_LOUD(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xBB6F1CAEC68B0BCE, (ulong)vehicle, (ulong)toggle); }
        internal static BOOL IS_VEHICLE_RADIO_LOUD_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x032A116663A4D5AC, (ulong)vehicle); }
        internal static void SET_MOBILE_RADIO_ENABLED_DURING_GAMEPLAY(BOOL toggle) { NativeInvoker.Invoke(0x1098355A16064BB3, (ulong)toggle); }
        internal static BOOL DOES_PLAYER_VEH_HAVE_RADIO() { return NativeInvoker.Invoke<BOOL>(0x109697E2FFBAC8A1); } // 0x109697E2FFBAC8A1 0x46B0C696 b323, (ulong)109697E2FFBAC8A1); }
        internal static BOOL IS_PLAYER_VEH_RADIO_ENABLE() { return NativeInvoker.Invoke<BOOL>(0x5F43D83FD6738741); } // 0x5F43D83FD6738741 0x2A3E5E8B b323, (ulong)5F43D83FD6738741); }
        internal static void SET_VEHICLE_RADIO_ENABLED(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x3B988190C0AA6C0B, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0xDA07819E452FFE8F(Any p0) { NativeInvoker.Invoke(0xDA07819E452FFE8F, (ulong)p0); }
        internal static void SET_CUSTOM_RADIO_TRACK_LIST(char* radioStation, char* trackListName, BOOL p2) { NativeInvoker.Invoke(0x4E404A9361F75BB2, (ulong)radioStation, (ulong)trackListName, (ulong)p2); }
        internal static void CLEAR_CUSTOM_RADIO_TRACK_LIST(char* radioStation) { NativeInvoker.Invoke(0x1654F24A88A8E3FE, (ulong)radioStation); }
        internal static int GET_NUM_UNLOCKED_RADIO_STATIONS() { return NativeInvoker.Invoke<int>(0xF1620ECB50E01DE7); } // 0xF1620ECB50E01DE7 0xCC91FCF5 b323, (ulong)F1620ECB50E01DE7); }
        internal static int FIND_RADIO_STATION_INDEX(Hash stationNameHash) { return NativeInvoker.Invoke<int>(0x8D67489793FF428B, (ulong)stationNameHash); }
        internal static void SET_RADIO_STATION_MUSIC_ONLY(char* radioStation, BOOL toggle) { NativeInvoker.Invoke(0x774BD811F656A122, (ulong)radioStation, (ulong)toggle); }
        internal static void SET_RADIO_FRONTEND_FADE_TIME(float fadeTime) { NativeInvoker.Invoke(0x2C96CDB04FCA358E, *(uint*)&fadeTime); }
        internal static void UNLOCK_RADIO_STATION_TRACK_LIST(char* radioStation, char* trackListName) { NativeInvoker.Invoke(0x031ACB6ABA18C729, (ulong)radioStation, (ulong)trackListName); }
        internal static void LOCK_RADIO_STATION_TRACK_LIST_(char* radioStation, char* trackListName) { NativeInvoker.Invoke(0xFF5E5EA2DCEEACF3, (ulong)radioStation, (ulong)trackListName); }
        internal static void UPDATE_LSUR_(BOOL enableMixes) { NativeInvoker.Invoke(0x47AED84213A47510, (ulong)enableMixes); }
        internal static void LOCK_RADIO_STATION_(char* radioStationName, BOOL toggle) { NativeInvoker.Invoke(0x477D9DB48F889591, (ulong)radioStationName, (ulong)toggle); }
        internal static void SET_RADIO_STATION_IS_VISIBLE_(char* radioStation, BOOL toggle) { NativeInvoker.Invoke(0x4CAFEBFA21EC188D, (ulong)radioStation, (ulong)toggle); }
        internal static BOOL N_0xC64A06D939F826F5(float* p0, float* p1, int* p2) { return NativeInvoker.Invoke<BOOL>(0xC64A06D939F826F5, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void FORCE_RADIO_TRACK_LIST_POSITION_(char* radioStation, char* trackListName, int milliseconds) { NativeInvoker.Invoke(0x4E0AF9114608257C, (ulong)radioStation, (ulong)trackListName, (ulong)milliseconds); }
        internal static int GET_CURRENT_RADIO_STATION_HASH_(char* radioStationName) { return NativeInvoker.Invoke<int>(0x3E65CDE5215832C1, (ulong)radioStationName); }
        internal static Hash N_0x34D66BC058019CE0(char* radioStationName) { return NativeInvoker.Invoke<Hash>(0x34D66BC058019CE0, (ulong)radioStationName); }
        internal static void N_0xF3365489E0DD50F9(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xF3365489E0DD50F9, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_AMBIENT_ZONE_STATE(char* zoneName, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xBDA07E5950085E46, (ulong)zoneName, (ulong)p1, (ulong)p2); }
        internal static void CLEAR_AMBIENT_ZONE_STATE(char* zoneName, BOOL p1) { NativeInvoker.Invoke(0x218DD44AAAC964FF, (ulong)zoneName, (ulong)p1); }
        internal static void SET_AMBIENT_ZONE_LIST_STATE(Any* p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x9748FA4DE50CCE3E, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void CLEAR_AMBIENT_ZONE_LIST_STATE(Any* p0, BOOL p1) { NativeInvoker.Invoke(0x120C48C614909FA4, (ulong)p0, (ulong)p1); }
        internal static void SET_AMBIENT_ZONE_STATE_PERSISTENT(char* ambientZone, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x1D6650420CEC9D3B, (ulong)ambientZone, (ulong)p1, (ulong)p2); }
        internal static void SET_AMBIENT_ZONE_LIST_STATE_PERSISTENT(char* ambientZone, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xF3638DAE8C4045E1, (ulong)ambientZone, (ulong)p1, (ulong)p2); }
        internal static BOOL IS_AMBIENT_ZONE_ENABLED(char* ambientZone) { return NativeInvoker.Invoke<BOOL>(0x01E2817A479A7F9B, (ulong)ambientZone); }
        internal static void N_0x5D2BFAAB8D956E0E() { NativeInvoker.Invoke(0x5D2BFAAB8D956E0E); } // 0x5D2BFAAB8D956E0E b573<, (ulong)5D2BFAAB8D956E0E); }
        internal static void SET_CUTSCENE_AUDIO_OVERRIDE(char* name) { NativeInvoker.Invoke(0x3B4BF5F0859204D9, (ulong)name); }
        internal static void SET_VARIABLE_ON_CUTSCENE_AUDIO_(char* variableName, float value) { NativeInvoker.Invoke(0xBCC29F935ED07688, (ulong)variableName, *(uint*)&value); }
        internal static int PLAY_POLICE_REPORT(char* name, float p1) { return NativeInvoker.Invoke<int>(0xDFEBD56D9BD1EB16, (ulong)name, *(uint*)&p1); }
        internal static void CANCEL_CURRENT_POLICE_REPORT_() { NativeInvoker.Invoke(0xB4F90FAF7670B16F); } // 0xB4F90FAF7670B16F b323<, (ulong)B4F90FAF7670B16F); }
        internal static void BLIP_SIREN(Vehicle vehicle) { NativeInvoker.Invoke(0x1B9025BDA76822B6, (ulong)vehicle); }
        internal static void OVERRIDE_VEH_HORN(Vehicle vehicle, BOOL @override, int hornHash) { NativeInvoker.Invoke(0x3CDC1E622CCE0356, (ulong)vehicle, (ulong)@override, (ulong)hornHash); }
        internal static BOOL IS_HORN_ACTIVE(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x9D6BFC12B05C6121, (ulong)vehicle); }
        internal static void SET_AGGRESSIVE_HORNS(BOOL toggle) { NativeInvoker.Invoke(0x395BF71085D1B1D9, (ulong)toggle); }
        internal static void N_0x02E93C796ABD3A97(BOOL p0) { NativeInvoker.Invoke(0x02E93C796ABD3A97, (ulong)p0); }
        internal static void N_0x58BB377BEC7CD5F4(BOOL p0, BOOL p1) { NativeInvoker.Invoke(0x58BB377BEC7CD5F4, (ulong)p0, (ulong)p1); }
        internal static void N_0x9BD7BD55E4533183(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x9BD7BD55E4533183, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL IS_STREAM_PLAYING() { return NativeInvoker.Invoke<BOOL>(0xD11FA52EB849D978); } // 0xD11FA52EB849D978 0xF1F51A14 b323, (ulong)D11FA52EB849D978); }
        internal static int GET_STREAM_PLAY_TIME() { return NativeInvoker.Invoke<int>(0x4E72BBDBCA58A3DB); } // 0x4E72BBDBCA58A3DB 0xB4F0AD56 b323, (ulong)4E72BBDBCA58A3DB); }
        internal static BOOL LOAD_STREAM(char* streamName, char* soundSet) { return NativeInvoker.Invoke<BOOL>(0x1F1F957154EC51DF, (ulong)streamName, (ulong)soundSet); }
        internal static BOOL LOAD_STREAM_WITH_START_OFFSET(char* streamName, int startOffset, char* soundSet) { return NativeInvoker.Invoke<BOOL>(0x59C16B79F53B3712, (ulong)streamName, (ulong)startOffset, (ulong)soundSet); }
        internal static void PLAY_STREAM_FROM_PED(Ped ped) { NativeInvoker.Invoke(0x89049DD63C08B5D1, (ulong)ped); }
        internal static void PLAY_STREAM_FROM_VEHICLE(Vehicle vehicle) { NativeInvoker.Invoke(0xB70374A758007DFA, (ulong)vehicle); }
        internal static void PLAY_STREAM_FROM_OBJECT(Object @object) { NativeInvoker.Invoke(0xEBAA9B64D76356FD, (ulong)@object); }
        internal static void PLAY_STREAM_FRONTEND() { NativeInvoker.Invoke(0x58FCE43488F9F5F4); } // 0x58FCE43488F9F5F4 0x2C2A16BC b323<, (ulong)58FCE43488F9F5F4); }
        internal static void PLAY_STREAM_FROM_POSITION(float x, float y, float z) { NativeInvoker.Invoke(0x21442F412E8DE56B, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void STOP_STREAM() { NativeInvoker.Invoke(0xA4718A1419D18151); } // 0xA4718A1419D18151 0xD1E364DE b323<, (ulong)A4718A1419D18151); }
        internal static void STOP_PED_SPEAKING(Ped ped, BOOL shaking) { NativeInvoker.Invoke(0x9D64D7405520E3D3, (ulong)ped, (ulong)shaking); }
        internal static void N_0xF8AD2EED7C47E8FE(Ped ped, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xF8AD2EED7C47E8FE, (ulong)ped, (ulong)p1, (ulong)p2); }
        internal static void N_0xAB6781A5F3101470(Any p0, Any p1) { NativeInvoker.Invoke(0xAB6781A5F3101470, (ulong)p0, (ulong)p1); }
        internal static void DISABLE_PED_PAIN_AUDIO(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xA9A41C1E940FB0E8, (ulong)ped, (ulong)toggle); }
        internal static BOOL IS_AMBIENT_SPEECH_DISABLED(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x932C2D096A2C3FFF, (ulong)ped); }
        internal static void N_0xA8A7D434AFB4B97B(char* p0, int p1) { NativeInvoker.Invoke(0xA8A7D434AFB4B97B, (ulong)p0, (ulong)p1); }
        internal static void N_0x2ACABED337622DF2(char* p0) { NativeInvoker.Invoke(0x2ACABED337622DF2, (ulong)p0); }
        internal static void SET_SIREN_WITH_NO_DRIVER(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x1FEF0683B96EBCF2, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_SIREN_KEEP_ON_(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xF584CF8529B51434, (ulong)vehicle, (ulong)toggle); }
        internal static void TRIGGER_SIREN_(Vehicle vehicle) { NativeInvoker.Invoke(0x66C3FB05206041BA, (ulong)vehicle); }
        internal static void SOUND_VEHICLE_HORN_THIS_FRAME_(Vehicle vehicle) { NativeInvoker.Invoke(0x9C11908013EA4715, (ulong)vehicle); }
        internal static void SET_HORN_ENABLED(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x76D683C108594D0E, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_AUDIO_VEHICLE_PRIORITY(Vehicle vehicle, Any p1) { NativeInvoker.Invoke(0xE5564483E407F914, (ulong)vehicle, (ulong)p1); }
        internal static void N_0x9D3AF56E94C9AE98(Vehicle vehicle, float p1) { NativeInvoker.Invoke(0x9D3AF56E94C9AE98, (ulong)vehicle, *(uint*)&p1); }
        internal static void USE_SIREN_AS_HORN(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xFA932DE350266EF8, (ulong)vehicle, (ulong)toggle); }
        internal static void FORCE_VEHICLE_ENGINE_AUDIO_(Vehicle vehicle, char* audioName) { NativeInvoker.Invoke(0x4F0C413926060B38, (ulong)vehicle, (ulong)audioName); }
        internal static void PRELOAD_VEHICLE_AUDIO_(Hash vehicleModel) { NativeInvoker.Invoke(0xCA4CEA6AE0000A7E, (ulong)vehicleModel); }
        internal static void SET_VEHICLE_STARTUP_REV_SOUND(Vehicle vehicle, char* p1, char* p2) { NativeInvoker.Invoke(0xF1F8157B8C3F171C, (ulong)vehicle, (ulong)p1, (ulong)p2); }
        internal static void RESET_VEHICLE_STARTUP_REV_SOUND_(Vehicle vehicle) { NativeInvoker.Invoke(0xD2DCCD8E16E20997, (ulong)vehicle); }
        internal static void N_0x97FFB4ADEED08066(Any p0, Any p1) { NativeInvoker.Invoke(0x97FFB4ADEED08066, (ulong)p0, (ulong)p1); }
        internal static BOOL IS_VEHICLE_AUDIBLY_DAMAGED(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x5DB8010EE71FDEF2, (ulong)vehicle); }
        internal static void SET_VEHICLE_AUDIO_ENGINE_DAMAGE_FACTOR(Vehicle vehicle, float damageFactor) { NativeInvoker.Invoke(0x59E7B488451F4D3A, (ulong)vehicle, *(uint*)&damageFactor); }
        internal static void SET_VEHICLE_AUDIO_BODY_DAMAGE_FACTOR(Vehicle vehicle, float p1) { NativeInvoker.Invoke(0x01BB4D577D38BD9E, (ulong)vehicle, *(uint*)&p1); }
        internal static void ENABLE_VEHICLE_FANBELT_DAMAGE(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x1C073274E065C6D2, (ulong)vehicle, (ulong)toggle); }
        internal static void ENABLE_VEHICLE_EXHAUST_POPS(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x2BE4BC731D039D5A, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_BOOST_ACTIVE(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x4A04DE7CAB2739A1, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0x6FDDAD856E36988A(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x6FDDAD856E36988A, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_SCRIPT_UPDATE_DOOR_AUDIO(Hash doorHash, BOOL toggle) { NativeInvoker.Invoke(0x06C0023BED16DD6B, (ulong)doorHash, (ulong)toggle); }
        internal static void PLAY_VEHICLE_DOOR_OPEN_SOUND(Vehicle vehicle, int doorId) { NativeInvoker.Invoke(0x3A539D52857EA82D, (ulong)vehicle, (ulong)doorId); }
        internal static void PLAY_VEHICLE_DOOR_CLOSE_SOUND(Vehicle vehicle, int doorId) { NativeInvoker.Invoke(0x62A456AA4769EF34, (ulong)vehicle, (ulong)doorId); }
        internal static void ENABLE_STALL_WARNING_SOUNDS(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xC15907D667F7CFB2, (ulong)vehicle, (ulong)toggle); }
        internal static BOOL IS_GAME_IN_CONTROL_OF_MUSIC() { return NativeInvoker.Invoke<BOOL>(0x6D28DC1671E334FD); } // 0x6D28DC1671E334FD 0x7643170D b323, (ulong)6D28DC1671E334FD); }
        internal static void SET_GPS_ACTIVE(BOOL active) { NativeInvoker.Invoke(0x3BD3F52BA9B1E4E8, (ulong)active); }
        internal static void PLAY_MISSION_COMPLETE_AUDIO(char* audioName) { NativeInvoker.Invoke(0xB138AAB8A70D3C69, (ulong)audioName); }
        internal static BOOL IS_MISSION_COMPLETE_PLAYING() { return NativeInvoker.Invoke<BOOL>(0x19A30C23F5827F8A); } // 0x19A30C23F5827F8A 0x939982A1 b323, (ulong)19A30C23F5827F8A); }
        internal static BOOL IS_MISSION_COMPLETE_READY_FOR_UI() { return NativeInvoker.Invoke<BOOL>(0x6F259F82D873B8B8); } // 0x6F259F82D873B8B8 0xCBE09AEC b323, (ulong)6F259F82D873B8B8); }
        internal static void BLOCK_DEATH_JINGLE(BOOL toggle) { NativeInvoker.Invoke(0xF154B8D1775B2DEC, (ulong)toggle); }
        internal static BOOL START_AUDIO_SCENE(char* scene) { return NativeInvoker.Invoke<BOOL>(0x013A80FC08F6E4F2, (ulong)scene); }
        internal static void STOP_AUDIO_SCENE(char* scene) { NativeInvoker.Invoke(0xDFE8422B3B94E688, (ulong)scene); }
        internal static void STOP_AUDIO_SCENES() { NativeInvoker.Invoke(0xBAC7FC81A75EC1A1); } // 0xBAC7FC81A75EC1A1 0xF6C7342A b323<, (ulong)BAC7FC81A75EC1A1); }
        internal static BOOL IS_AUDIO_SCENE_ACTIVE(char* scene) { return NativeInvoker.Invoke<BOOL>(0xB65B60556E2A9225, (ulong)scene); }
        internal static void SET_AUDIO_SCENE_VARIABLE(char* scene, char* variable, float value) { NativeInvoker.Invoke(0xEF21A9EF089A2668, (ulong)scene, (ulong)variable, *(uint*)&value); }
        internal static void SET_AUDIO_SCRIPT_CLEANUP_TIME(int time) { NativeInvoker.Invoke(0xA5F377B175A699C5, (ulong)time); }
        internal static void ADD_ENTITY_TO_AUDIO_MIX_GROUP(Entity entity, char* groupName, float p2) { NativeInvoker.Invoke(0x153973AB99FE8980, (ulong)entity, (ulong)groupName, *(uint*)&p2); }
        internal static void REMOVE_ENTITY_FROM_AUDIO_MIX_GROUP(Entity entity, float p1) { NativeInvoker.Invoke(0x18EB48CFC41F2EA0, (ulong)entity, *(uint*)&p1); }
        internal static BOOL AUDIO_IS_SCRIPTED_MUSIC_PLAYING() { return NativeInvoker.Invoke<BOOL>(0x845FFC3A4FEEFA3E); } // 0x845FFC3A4FEEFA3E 0x86E995D1 b323, (ulong)845FFC3A4FEEFA3E); }
        internal static Any N_0x2DD39BF3E2F9C47F() { return NativeInvoker.Invoke<Any>(0x2DD39BF3E2F9C47F); } // 0x2DD39BF3E2F9C47F b463, (ulong)2DD39BF3E2F9C47F); }
        internal static BOOL PREPARE_MUSIC_EVENT(char* @eventName) { return NativeInvoker.Invoke<BOOL>(0x1E5185B72EF5158A, (ulong)@eventName); }
        internal static BOOL CANCEL_MUSIC_EVENT(char* @eventName) { return NativeInvoker.Invoke<BOOL>(0x5B17A90291133DA5, (ulong)@eventName); }
        internal static BOOL TRIGGER_MUSIC_EVENT(char* @eventName) { return NativeInvoker.Invoke<BOOL>(0x706D57B0F50DA710, (ulong)@eventName); }
        internal static BOOL IS_MUSIC_ONESHOT_PLAYING() { return NativeInvoker.Invoke<BOOL>(0xA097AB275061FB21); } // 0xA097AB275061FB21 0x2705C4D5 b323, (ulong)A097AB275061FB21); }
        internal static int GET_MUSIC_PLAYTIME() { return NativeInvoker.Invoke<int>(0xE7A0D23DC414507B); } // 0xE7A0D23DC414507B 0xD633C809 b323, (ulong)E7A0D23DC414507B); }
        internal static void N_0x159B7318403A1CD8(Any p0) { NativeInvoker.Invoke(0x159B7318403A1CD8, (ulong)p0); }
        internal static void RECORD_BROKEN_GLASS(float x, float y, float z, float radius) { NativeInvoker.Invoke(0xFBE20329593DEC9D, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius); }
        internal static void CLEAR_ALL_BROKEN_GLASS() { NativeInvoker.Invoke(0xB32209EFFDC04913); } // 0xB32209EFFDC04913 0xE6B033BF b323<, (ulong)B32209EFFDC04913); }
        internal static void N_0x70B8EC8FC108A634(BOOL p0, Any p1) { NativeInvoker.Invoke(0x70B8EC8FC108A634, (ulong)p0, (ulong)p1); }
        internal static void N_0x149AEE66F0CB3A99(float p0, float p1) { NativeInvoker.Invoke(0x149AEE66F0CB3A99, *(uint*)&p0, *(uint*)&p1); }
        internal static void N_0x8BF907833BE275DE(float p0, float p1) { NativeInvoker.Invoke(0x8BF907833BE275DE, *(uint*)&p0, *(uint*)&p1); }
        internal static void FORCE_PED_PANIC_WALLA() { NativeInvoker.Invoke(0x062D5EAD4DA2FA6A); } // 0x062D5EAD4DA2FA6A 0xD87AF337 b323<, (ulong)062D5EAD4DA2FA6A); }
        internal static BOOL PREPARE_ALARM(char* alarmName) { return NativeInvoker.Invoke<BOOL>(0x9D74AE343DB65533, (ulong)alarmName); }
        internal static void START_ALARM(char* alarmName, BOOL p2) { NativeInvoker.Invoke(0x0355EF116C4C97B2, (ulong)alarmName, (ulong)p2); }
        internal static void STOP_ALARM(char* alarmName, BOOL toggle) { NativeInvoker.Invoke(0xA1CADDCD98415A41, (ulong)alarmName, (ulong)toggle); }
        internal static void STOP_ALL_ALARMS(BOOL stop) { NativeInvoker.Invoke(0x2F794A877ADD4C92, (ulong)stop); }
        internal static BOOL IS_ALARM_PLAYING(char* alarmName) { return NativeInvoker.Invoke<BOOL>(0x226435CB96CCFC8C, (ulong)alarmName); }
        internal static Hash GET_VEHICLE_DEFAULT_HORN(Vehicle vehicle) { return NativeInvoker.Invoke<Hash>(0x02165D55000219AC, (ulong)vehicle); }
        internal static Hash GET_VEHICLE_DEFAULT_HORN_IGNORE_MODS(Vehicle vehicle) { return NativeInvoker.Invoke<Hash>(0xACB5DCCA1EC76840, (ulong)vehicle); }
        internal static void RESET_PED_AUDIO_FLAGS(Ped ped) { NativeInvoker.Invoke(0xF54BB7B61036F335, (ulong)ped); }
        internal static void SET_PED_AUDIO_FOOTSTEP_LOUD_(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x0653B735BFBDFE87, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_AUDIO_FOOTSTEP_QUIET_(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x29DA3CA8D8B2692D, (ulong)ped, (ulong)toggle); }
        internal static void OVERRIDE_PLAYER_GROUND_MATERIAL(Hash hash, BOOL toggle) { NativeInvoker.Invoke(0xD2CC78CD3D0B50F9, (ulong)hash, (ulong)toggle); }
        internal static void N_0xBF4DC1784BE94DFA(Ped ped, BOOL p1, Hash hash) { NativeInvoker.Invoke(0xBF4DC1784BE94DFA, (ulong)ped, (ulong)p1, (ulong)hash); }
        internal static void OVERRIDE_MICROPHONE_SETTINGS_(Hash hash, BOOL toggle) { NativeInvoker.Invoke(0x75773E11BA459E90, (ulong)hash, (ulong)toggle); }
        internal static void FREEZE_MICROPHONE() { NativeInvoker.Invoke(0xD57AAAE0E2214D11); } // 0xD57AAAE0E2214D11 0x2B9D91E8 b323<, (ulong)D57AAAE0E2214D11); }
        internal static void DISTANT_COP_CAR_SIRENS(BOOL value) { NativeInvoker.Invoke(0x552369F549563AD5, (ulong)value); }
        internal static void N_0x43FA0DFC5DF87815(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0x43FA0DFC5DF87815, (ulong)vehicle, (ulong)p1); }
        internal static void N_0xB81CF134AEB56FFB() { NativeInvoker.Invoke(0xB81CF134AEB56FFB); } // 0xB81CF134AEB56FFB b791<, (ulong)B81CF134AEB56FFB); }
        internal static void SET_AUDIO_FLAG(char* flagName, BOOL toggle) { NativeInvoker.Invoke(0xB9EFD5C25018725A, (ulong)flagName, (ulong)toggle); }
        internal static Any PREPARE_SYNCHRONIZED_AUDIO_EVENT(char* p0, Any p1) { return NativeInvoker.Invoke<Any>(0xC7ABCACA4985A766, (ulong)p0, (ulong)p1); }
        internal static BOOL PREPARE_SYNCHRONIZED_AUDIO_EVENT_FOR_SCENE(Any p0, Any* p1) { return NativeInvoker.Invoke<BOOL>(0x029FE7CD1B7E2E75, (ulong)p0, (ulong)p1); }
        internal static BOOL PLAY_SYNCHRONIZED_AUDIO_EVENT(Any p0) { return NativeInvoker.Invoke<BOOL>(0x8B2FD4560E55DD2D, (ulong)p0); }
        internal static BOOL STOP_SYNCHRONIZED_AUDIO_EVENT(Any p0) { return NativeInvoker.Invoke<BOOL>(0x92D6A88E64A94430, (ulong)p0); }
        internal static void N_0xC8EDE9BDBCCBA6D4(Any* p0, float p1, float p2, float p3) { NativeInvoker.Invoke(0xC8EDE9BDBCCBA6D4, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3); }
        internal static void SET_SYNCHRONIZED_AUDIO_EVENT_POSITION_THIS_FRAME_(char* p0, Entity p1) { NativeInvoker.Invoke(0x950A154B8DAB6185, (ulong)p0, (ulong)p1); }
        internal static void SET_AUDIO_SPECIAL_EFFECT_MODE(int mode) { NativeInvoker.Invoke(0x12561FCBB62D5B9C, (ulong)mode); }
        internal static void SET_PORTAL_SETTINGS_OVERRIDE(char* p0, char* p1) { NativeInvoker.Invoke(0x044DBAD7A7FA2BE5, (ulong)p0, (ulong)p1); }
        internal static void REMOVE_PORTAL_SETTINGS_OVERRIDE(char* p0) { NativeInvoker.Invoke(0xB4BBFD9CD8B3922B, (ulong)p0); }
        internal static void N_0xE4E6DD5566D28C82() { NativeInvoker.Invoke(0xE4E6DD5566D28C82); } // 0xE4E6DD5566D28C82 0x7262B5BA b323<, (ulong)E4E6DD5566D28C82); }
        internal static int GET_MUSIC_VOL_SLIDER() { return NativeInvoker.Invoke<int>(0x3A48AB4445D499BE); } // 0x3A48AB4445D499BE 0x93A44A1F b323, (ulong)3A48AB4445D499BE); }
        internal static void REQUEST_TENNIS_BANKS(Ped ped) { NativeInvoker.Invoke(0x4ADA3F19BE4A6047, (ulong)ped); }
        internal static void UNREQUEST_TENNIS_BANKS() { NativeInvoker.Invoke(0x0150B6FF25A9E2E5); } // 0x0150B6FF25A9E2E5 0x1134F68B b323<, (ulong)0150B6FF25A9E2E5); }
        internal static void N_0xBEF34B1D9624D5DD(BOOL p0) { NativeInvoker.Invoke(0xBEF34B1D9624D5DD, (ulong)p0); }
        internal static void STOP_CUTSCENE_AUDIO() { NativeInvoker.Invoke(0x806058BBDC136E06); } // 0x806058BBDC136E06 0x55461BE6 b323<, (ulong)806058BBDC136E06); }
        internal static BOOL HAS_MULTIPLAYER_AUDIO_DATA_LOADED_() { return NativeInvoker.Invoke<BOOL>(0x544810ED9DB6BBE6); } // 0x544810ED9DB6BBE6 b323, (ulong)544810ED9DB6BBE6); }
        internal static BOOL HAS_MULTIPLAYER_AUDIO_DATA_UNLOADED_() { return NativeInvoker.Invoke<BOOL>(0x5B50ABB1FE3746F4); } // 0x5B50ABB1FE3746F4 b323, (ulong)5B50ABB1FE3746F4); }
        internal static int GET_VEHICLE_DEFAULT_HORN_VARIATION_(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0xD53F3A29BCE2580E, (ulong)vehicle); }
        internal static void SET_VEHICLE_HORN_VARIATION_(Vehicle vehicle, int value) { NativeInvoker.Invoke(0x0350E7E17BA767D0, (ulong)vehicle, (ulong)value); }
    }

    internal static unsafe class BRAIN
    {
        internal static void ADD_SCRIPT_TO_RANDOM_PED(char* name, Hash model, float p2, float p3) { NativeInvoker.Invoke(0x4EE5367468A65CCC, (ulong)name, (ulong)model, *(uint*)&p2, *(uint*)&p3); }
        internal static void REGISTER_OBJECT_SCRIPT_BRAIN(char* scriptName, Hash modelHash, int p2, float activationRange, int p4, int p5) { NativeInvoker.Invoke(0x0BE84C318BA6EC22, (ulong)scriptName, (ulong)modelHash, (ulong)p2, *(uint*)&activationRange, (ulong)p4, (ulong)p5); }
        internal static BOOL IS_OBJECT_WITHIN_BRAIN_ACTIVATION_RANGE(Object @object) { return NativeInvoker.Invoke<BOOL>(0xCCBA154209823057, (ulong)@object); }
        internal static void REGISTER_WORLD_POINT_SCRIPT_BRAIN(char* scriptName, float activationRange, int p2) { NativeInvoker.Invoke(0x3CDC7136613284BD, (ulong)scriptName, *(uint*)&activationRange, (ulong)p2); }
        internal static BOOL IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE() { return NativeInvoker.Invoke<BOOL>(0xC5042CC6F5E3D450); } // 0xC5042CC6F5E3D450 0x2CF305A0 b323, (ulong)C5042CC6F5E3D450); }
        internal static void ENABLE_SCRIPT_BRAIN_SET(int brainSet) { NativeInvoker.Invoke(0x67AA4D73F0CFA86B, (ulong)brainSet); }
        internal static void DISABLE_SCRIPT_BRAIN_SET(int brainSet) { NativeInvoker.Invoke(0x14D8518E9760F08F, (ulong)brainSet); }
        internal static void N_0x0B40ED49D7D6FF84() { NativeInvoker.Invoke(0x0B40ED49D7D6FF84); } // 0x0B40ED49D7D6FF84 0x19B27825 b323<, (ulong)0B40ED49D7D6FF84); }
        internal static void N_0x4D953DF78EBF8158() { NativeInvoker.Invoke(0x4D953DF78EBF8158); } // 0x4D953DF78EBF8158 0xF3A3AB08 b323<, (ulong)4D953DF78EBF8158); }
        internal static void N_0x6D6840CEE8845831(char* action) { NativeInvoker.Invoke(0x6D6840CEE8845831, (ulong)action); }
        internal static void N_0x6E91B04E08773030(char* action) { NativeInvoker.Invoke(0x6E91B04E08773030, (ulong)action); }
    }

    internal static unsafe class CAM
    {
        internal static void RENDER_SCRIPT_CAMS(BOOL render, BOOL ease, int easeTime, BOOL p3, BOOL p4, Any p5) { NativeInvoker.Invoke(0x07E5B515DB0636FC, (ulong)render, (ulong)ease, (ulong)easeTime, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static void STOP_RENDERING_SCRIPT_CAMS_USING_CATCH_UP(BOOL render, float p1, int p2, Any p3) { NativeInvoker.Invoke(0xC819F3CBB62BF692, (ulong)render, *(uint*)&p1, (ulong)p2, (ulong)p3); }
        internal static Cam CREATE_CAM(char* camName, BOOL p1) { return NativeInvoker.Invoke<Cam>(0xC3981DCE61D9E13F, (ulong)camName, (ulong)p1); }
        internal static Cam CREATE_CAM_WITH_PARAMS(char* camName, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fov, BOOL p8, int p9) { return NativeInvoker.Invoke<Cam>(0xB51194800B257161, (ulong)camName, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, *(uint*)&fov, (ulong)p8, (ulong)p9); }
        internal static Cam CREATE_CAMERA(Hash camHash, BOOL p1) { return NativeInvoker.Invoke<Cam>(0x5E3CF89C6BCCA67D, (ulong)camHash, (ulong)p1); }
        internal static Cam CREATE_CAMERA_WITH_PARAMS(Hash camHash, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fov, BOOL p8, Any p9) { return NativeInvoker.Invoke<Cam>(0x6ABFA3E16460F22D, (ulong)camHash, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, *(uint*)&fov, (ulong)p8, (ulong)p9); }
        internal static void DESTROY_CAM(Cam cam, BOOL bScriptHostCam) { NativeInvoker.Invoke(0x865908C81A2C22E9, (ulong)cam, (ulong)bScriptHostCam); }
        internal static void DESTROY_ALL_CAMS(BOOL bScriptHostCam) { NativeInvoker.Invoke(0x8E5FB15663F79120, (ulong)bScriptHostCam); }
        internal static BOOL DOES_CAM_EXIST(Cam cam) { return NativeInvoker.Invoke<BOOL>(0xA7A932170592B50E, (ulong)cam); }
        internal static void SET_CAM_ACTIVE(Cam cam, BOOL active) { NativeInvoker.Invoke(0x026FB97D0A425F84, (ulong)cam, (ulong)active); }
        internal static BOOL IS_CAM_ACTIVE(Cam cam) { return NativeInvoker.Invoke<BOOL>(0xDFB2B516207D3534, (ulong)cam); }
        internal static BOOL IS_CAM_RENDERING(Cam cam) { return NativeInvoker.Invoke<BOOL>(0x02EC0AF5C5A49B7A, (ulong)cam); }
        internal static Cam GET_RENDERING_CAM() { return NativeInvoker.Invoke<Cam>(0x5234F9F10919EABA); } // 0x5234F9F10919EABA 0x0FCF4DF1 b323, (ulong)5234F9F10919EABA); }
        internal static Vector3 GET_CAM_COORD(Cam cam) { return NativeInvoker.Invoke<Vector3>(0xBAC038F7459AE5AE, (ulong)cam); }
        internal static Vector3 GET_CAM_ROT(Cam cam, int rotationOrder) { return NativeInvoker.Invoke<Vector3>(0x7D304C1C955E3E12, (ulong)cam, (ulong)rotationOrder); }
        internal static float GET_CAM_FOV(Cam cam) { return NativeInvoker.Invoke<float>(0xC3330A45CCCDB26A, (ulong)cam); }
        internal static float GET_CAM_NEAR_CLIP(Cam cam) { return NativeInvoker.Invoke<float>(0xC520A34DAFBF24B1, (ulong)cam); }
        internal static float GET_CAM_FAR_CLIP(Cam cam) { return NativeInvoker.Invoke<float>(0xB60A9CFEB21CA6AA, (ulong)cam); }
        internal static float GET_CAM_FAR_DOF(Cam cam) { return NativeInvoker.Invoke<float>(0x255F8DAFD540D397, (ulong)cam); }
        internal static void SET_CAM_PARAMS(Cam cam, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fieldOfView, Any p8, int p9, int p10, int p11) { NativeInvoker.Invoke(0xBFD8727AEA3CCEBA, (ulong)cam, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, *(uint*)&fieldOfView, (ulong)p8, (ulong)p9, (ulong)p10, (ulong)p11); }
        internal static void SET_CAM_COORD(Cam cam, float posX, float posY, float posZ) { NativeInvoker.Invoke(0x4D41783FB745E42E, (ulong)cam, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ); }
        internal static void SET_CAM_ROT(Cam cam, float rotX, float rotY, float rotZ, int rotationOrder) { NativeInvoker.Invoke(0x85973643155D0B07, (ulong)cam, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, (ulong)rotationOrder); }
        internal static void SET_CAM_FOV(Cam cam, float fieldOfView) { NativeInvoker.Invoke(0xB13C14F66A00D047, (ulong)cam, *(uint*)&fieldOfView); }
        internal static void SET_CAM_NEAR_CLIP(Cam cam, float nearClip) { NativeInvoker.Invoke(0xC7848EFCCC545182, (ulong)cam, *(uint*)&nearClip); }
        internal static void SET_CAM_FAR_CLIP(Cam cam, float farClip) { NativeInvoker.Invoke(0xAE306F2A904BF86E, (ulong)cam, *(uint*)&farClip); }
        internal static void N_0xAABD62873FFB1A33(Any p0, Any p1) { NativeInvoker.Invoke(0xAABD62873FFB1A33, (ulong)p0, (ulong)p1); }
        internal static void SET_CAM_MOTION_BLUR_STRENGTH(Cam cam, float strength) { NativeInvoker.Invoke(0x6F0F77FBA9A8F2E6, (ulong)cam, *(uint*)&strength); }
        internal static void SET_CAM_NEAR_DOF(Cam cam, float nearDOF) { NativeInvoker.Invoke(0x3FA4BF0A7AB7DE2C, (ulong)cam, *(uint*)&nearDOF); }
        internal static void SET_CAM_FAR_DOF(Cam cam, float farDOF) { NativeInvoker.Invoke(0xEDD91296CD01AEE0, (ulong)cam, *(uint*)&farDOF); }
        internal static void SET_CAM_DOF_STRENGTH(Cam cam, float dofStrength) { NativeInvoker.Invoke(0x5EE29B4D7D5DF897, (ulong)cam, *(uint*)&dofStrength); }
        internal static void SET_CAM_DOF_PLANES(Cam cam, float p1, float p2, float p3, float p4) { NativeInvoker.Invoke(0x3CF48F6F96E749DC, (ulong)cam, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4); }
        internal static void SET_CAM_USE_SHALLOW_DOF_MODE(Cam cam, BOOL toggle) { NativeInvoker.Invoke(0x16A96863A17552BB, (ulong)cam, (ulong)toggle); }
        internal static void SET_USE_HI_DOF() { NativeInvoker.Invoke(0xA13B0222F3D94A94); } // 0xA13B0222F3D94A94 0x8BBF2950 b323<, (ulong)A13B0222F3D94A94); }
        internal static void N_0xF55E4046F6F831DC(Any p0, float p1) { NativeInvoker.Invoke(0xF55E4046F6F831DC, (ulong)p0, *(uint*)&p1); }
        internal static void N_0xE111A7C0D200CBC5(Any p0, float p1) { NativeInvoker.Invoke(0xE111A7C0D200CBC5, (ulong)p0, *(uint*)&p1); }
        internal static void SET_CAM_DOF_FNUMBER_OF_LENS_(Cam camera, float p1) { NativeInvoker.Invoke(0x7DD234D6F3914C5B, (ulong)camera, *(uint*)&p1); }
        internal static void SET_CAM_DOF_FOCAL_LENGTH_MULTIPLIER_(Cam camera, float multiplier) { NativeInvoker.Invoke(0x47B595D60664CFFA, (ulong)camera, *(uint*)&multiplier); }
        internal static void SET_CAM_DOF_FOCUS_DISTANCE_BIAS_(Cam camera, float p1) { NativeInvoker.Invoke(0xC669EEA5D031B7DE, (ulong)camera, *(uint*)&p1); }
        internal static void SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE_(Cam camera, float p1) { NativeInvoker.Invoke(0xC3654A441402562D, (ulong)camera, *(uint*)&p1); }
        internal static void SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE_BLEND_LEVEL_(Cam camera, float p1) { NativeInvoker.Invoke(0x2C654B4943BDDF7C, (ulong)camera, *(uint*)&p1); }
        internal static void ATTACH_CAM_TO_ENTITY(Cam cam, Entity entity, float xOffset, float yOffset, float zOffset, BOOL isRelative) { NativeInvoker.Invoke(0xFEDB7D269E8C60E3, (ulong)cam, (ulong)entity, *(uint*)&xOffset, *(uint*)&yOffset, *(uint*)&zOffset, (ulong)isRelative); }
        internal static void ATTACH_CAM_TO_PED_BONE(Cam cam, Ped ped, int boneIndex, float x, float y, float z, BOOL heading) { NativeInvoker.Invoke(0x61A3DBA14AB7F411, (ulong)cam, (ulong)ped, (ulong)boneIndex, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)heading); }
        internal static void ATTACH_CAM_TO_PED_BONE_2_(Cam cam, Ped ped, int boneIndex, float p3, float p4, float p5, float p6, float p7, float p8, BOOL p9) { NativeInvoker.Invoke(0x149916F50C34A40D, (ulong)cam, (ulong)ped, (ulong)boneIndex, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, *(uint*)&p7, *(uint*)&p8, (ulong)p9); }
        internal static void N_0x202A5ED9CE01D6E7(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8) { NativeInvoker.Invoke(0x202A5ED9CE01D6E7, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8); }
        internal static void ATTACH_CAM_TO_VEHICLE_BONE_(Cam cam, Vehicle vehicle, int boneIndex, BOOL relativeRotation, float rotX, float rotY, float rotZ, float offsetX, float offsetY, float offsetZ, BOOL fixedDirection) { NativeInvoker.Invoke(0x8DB3F12A02CAEF72, (ulong)cam, (ulong)vehicle, (ulong)boneIndex, (ulong)relativeRotation, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, *(uint*)&offsetX, *(uint*)&offsetY, *(uint*)&offsetZ, (ulong)fixedDirection); }
        internal static void DETACH_CAM(Cam cam) { NativeInvoker.Invoke(0xA2FABBE87F4BAD82, (ulong)cam); }
        internal static void SET_CAM_INHERIT_ROLL_VEHICLE(Cam cam, BOOL p1) { NativeInvoker.Invoke(0x45F1DE9C34B93AE6, (ulong)cam, (ulong)p1); }
        internal static void POINT_CAM_AT_COORD(Cam cam, float x, float y, float z) { NativeInvoker.Invoke(0xF75497BB865F0803, (ulong)cam, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void POINT_CAM_AT_ENTITY(Cam cam, Entity entity, float p2, float p3, float p4, BOOL p5) { NativeInvoker.Invoke(0x5640BFF86B16E8DC, (ulong)cam, (ulong)entity, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, (ulong)p5); }
        internal static void POINT_CAM_AT_PED_BONE(Cam cam, Ped ped, int boneIndex, float x, float y, float z, BOOL p6) { NativeInvoker.Invoke(0x68B2B5F33BA63C41, (ulong)cam, (ulong)ped, (ulong)boneIndex, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)p6); }
        internal static void STOP_CAM_POINTING(Cam cam) { NativeInvoker.Invoke(0xF33AB75780BA57DE, (ulong)cam); }
        internal static void SET_CAM_AFFECTS_AIMING(Cam cam, BOOL toggle) { NativeInvoker.Invoke(0x8C1DC7770C51DC8D, (ulong)cam, (ulong)toggle); }
        internal static void N_0x661B5C8654ADD825(Cam cam, BOOL p1) { NativeInvoker.Invoke(0x661B5C8654ADD825, (ulong)cam, (ulong)p1); }
        internal static void N_0xA2767257A320FC82(Any p0, BOOL p1) { NativeInvoker.Invoke(0xA2767257A320FC82, (ulong)p0, (ulong)p1); }
        internal static void N_0x271017B9BA825366(Any p0, BOOL p1) { NativeInvoker.Invoke(0x271017B9BA825366, (ulong)p0, (ulong)p1); }
        internal static void SET_CAM_DEBUG_NAME(Cam camera, char* name) { NativeInvoker.Invoke(0x1B93E0107865DD40, (ulong)camera, (ulong)name); }
        internal static Cam GET_DEBUG_CAMERA_() { return NativeInvoker.Invoke<Cam>(0x77C3CEC46BE286F6); } // 0x77C3CEC46BE286F6 b2372, (ulong)77C3CEC46BE286F6); }
        internal static void ADD_CAM_SPLINE_NODE(Cam camera, float x, float y, float z, float xRot, float yRot, float zRot, int length, int p8, int p9) { NativeInvoker.Invoke(0x8609C75EC438FB3B, (ulong)camera, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&xRot, *(uint*)&yRot, *(uint*)&zRot, (ulong)length, (ulong)p8, (ulong)p9); }
        internal static void ADD_CAM_SPLINE_NODE_USING_CAMERA_FRAME(Cam cam, Cam cam2, int p2, int p3) { NativeInvoker.Invoke(0x0A9F2A468B328E74, (ulong)cam, (ulong)cam2, (ulong)p2, (ulong)p3); }
        internal static void ADD_CAM_SPLINE_NODE_USING_CAMERA(Cam cam, Cam cam2, int p2, int p3) { NativeInvoker.Invoke(0x0FB82563989CF4FB, (ulong)cam, (ulong)cam2, (ulong)p2, (ulong)p3); }
        internal static void ADD_CAM_SPLINE_NODE_USING_GAMEPLAY_FRAME(Cam cam, int p1, int p2) { NativeInvoker.Invoke(0x609278246A29CA34, (ulong)cam, (ulong)p1, (ulong)p2); }
        internal static void SET_CAM_SPLINE_PHASE(Cam cam, float p1) { NativeInvoker.Invoke(0x242B5874F0A4E052, (ulong)cam, *(uint*)&p1); }
        internal static float GET_CAM_SPLINE_PHASE(Cam cam) { return NativeInvoker.Invoke<float>(0xB5349E36C546509A, (ulong)cam); }
        internal static float GET_CAM_SPLINE_NODE_PHASE(Cam cam) { return NativeInvoker.Invoke<float>(0xD9D0E694C8282C96, (ulong)cam); }
        internal static void SET_CAM_SPLINE_DURATION(Cam cam, int timeDuration) { NativeInvoker.Invoke(0x1381539FEE034CDA, (ulong)cam, (ulong)timeDuration); }
        internal static void SET_CAM_SPLINE_SMOOTHING_STYLE(Cam cam, int smoothingStyle) { NativeInvoker.Invoke(0xD1B0F412F109EA5D, (ulong)cam, (ulong)smoothingStyle); }
        internal static int GET_CAM_SPLINE_NODE_INDEX(Cam cam) { return NativeInvoker.Invoke<int>(0xB22B17DF858716A6, (ulong)cam); }
        internal static void SET_CAM_SPLINE_NODE_EASE(Cam cam, int p1, int p2, float p3) { NativeInvoker.Invoke(0x83B8201ED82A9A2D, (ulong)cam, (ulong)p1, (ulong)p2, *(uint*)&p3); }
        internal static void SET_CAM_SPLINE_NODE_VELOCITY_SCALE(Cam cam, int p1, float scale) { NativeInvoker.Invoke(0xA6385DEB180F319F, (ulong)cam, (ulong)p1, *(uint*)&scale); }
        internal static void OVERRIDE_CAM_SPLINE_VELOCITY(Cam cam, int p1, float p2, float p3) { NativeInvoker.Invoke(0x40B62FA033EB0346, (ulong)cam, (ulong)p1, *(uint*)&p2, *(uint*)&p3); }
        internal static void OVERRIDE_CAM_SPLINE_MOTION_BLUR(Cam cam, int p1, float p2, float p3) { NativeInvoker.Invoke(0x7DCF7C708D292D55, (ulong)cam, (ulong)p1, *(uint*)&p2, *(uint*)&p3); }
        internal static void SET_CAM_SPLINE_NODE_EXTRA_FLAGS(Cam cam, int p1, int flags) { NativeInvoker.Invoke(0x7BF1A54AE67AC070, (ulong)cam, (ulong)p1, (ulong)flags); }
        internal static BOOL IS_CAM_SPLINE_PAUSED(Any p0) { return NativeInvoker.Invoke<BOOL>(0x0290F35C0AD97864, (ulong)p0); }
        internal static void SET_CAM_ACTIVE_WITH_INTERP(Cam camTo, Cam camFrom, int duration, int easeLocation, int easeRotation) { NativeInvoker.Invoke(0x9FBDA379383A52A4, (ulong)camTo, (ulong)camFrom, (ulong)duration, (ulong)easeLocation, (ulong)easeRotation); }
        internal static BOOL IS_CAM_INTERPOLATING(Cam cam) { return NativeInvoker.Invoke<BOOL>(0x036F97C908C2B52C, (ulong)cam); }
        internal static void SHAKE_CAM(Cam cam, char* type, float amplitude) { NativeInvoker.Invoke(0x6A25241C340D3822, (ulong)cam, (ulong)type, *(uint*)&amplitude); }
        internal static void ANIMATED_SHAKE_CAM(Cam cam, char* p1, char* p2, char* p3, float amplitude) { NativeInvoker.Invoke(0xA2746EEAE3E577CD, (ulong)cam, (ulong)p1, (ulong)p2, (ulong)p3, *(uint*)&amplitude); }
        internal static BOOL IS_CAM_SHAKING(Cam cam) { return NativeInvoker.Invoke<BOOL>(0x6B24BFE83A2BE47B, (ulong)cam); }
        internal static void SET_CAM_SHAKE_AMPLITUDE(Cam cam, float amplitude) { NativeInvoker.Invoke(0xD93DB43B82BC0D00, (ulong)cam, *(uint*)&amplitude); }
        internal static void STOP_CAM_SHAKING(Cam cam, BOOL p1) { NativeInvoker.Invoke(0xBDECF64367884AC3, (ulong)cam, (ulong)p1); }
        internal static void SHAKE_SCRIPT_GLOBAL(char* p0, float p1) { NativeInvoker.Invoke(0xF4C8CF9E353AFECA, (ulong)p0, *(uint*)&p1); }
        internal static void ANIMATED_SHAKE_SCRIPT_GLOBAL(char* p0, char* p1, char* p2, float p3) { NativeInvoker.Invoke(0xC2EAE3FB8CDBED31, (ulong)p0, (ulong)p1, (ulong)p2, *(uint*)&p3); }
        internal static BOOL IS_SCRIPT_GLOBAL_SHAKING() { return NativeInvoker.Invoke<BOOL>(0xC912AF078AF19212); } // 0xC912AF078AF19212 0x6AEFE6A5 b323, (ulong)C912AF078AF19212); }
        internal static void STOP_SCRIPT_GLOBAL_SHAKING(BOOL p0) { NativeInvoker.Invoke(0x1C9D7949FA533490, (ulong)p0); }
        internal static void N_0x5D96CFB59DA076A0(Vehicle vehicle, int p1, float p2) { NativeInvoker.Invoke(0x5D96CFB59DA076A0, (ulong)vehicle, (ulong)p1, *(uint*)&p2); }
        internal static BOOL PLAY_CAM_ANIM(Cam cam, char* animName, char* animDictionary, float x, float y, float z, float xRot, float yRot, float zRot, BOOL p9, int p10) { return NativeInvoker.Invoke<BOOL>(0x9A2D0FB2E7852392, (ulong)cam, (ulong)animName, (ulong)animDictionary, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&xRot, *(uint*)&yRot, *(uint*)&zRot, (ulong)p9, (ulong)p10); }
        internal static BOOL IS_CAM_PLAYING_ANIM(Cam cam, char* animName, char* animDictionary) { return NativeInvoker.Invoke<BOOL>(0xC90621D8A0CEECF2, (ulong)cam, (ulong)animName, (ulong)animDictionary); }
        internal static void SET_CAM_ANIM_CURRENT_PHASE(Cam cam, float phase) { NativeInvoker.Invoke(0x4145A4C44FF3B5A6, (ulong)cam, *(uint*)&phase); }
        internal static float GET_CAM_ANIM_CURRENT_PHASE(Cam cam) { return NativeInvoker.Invoke<float>(0xA10B2DB49E92A6B0, (ulong)cam); }
        internal static BOOL PLAY_SYNCHRONIZED_CAM_ANIM(Any p0, Any p1, char* animName, char* animDictionary) { return NativeInvoker.Invoke<BOOL>(0xE32EFE9AB4A9AA0C, (ulong)p0, (ulong)p1, (ulong)animName, (ulong)animDictionary); }
        internal static void SET_FLY_CAM_HORIZONTAL_RESPONSE(Cam cam, float p1, float p2, float p3) { NativeInvoker.Invoke(0x503F5920162365B2, (ulong)cam, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3); }
        internal static void SET_FLY_CAM_VERTICAL_SPEED_MULTIPLIER_(Cam cam, float p1, float p2, float p3) { NativeInvoker.Invoke(0xE827B9382CFB41BA, (ulong)cam, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3); }
        internal static void SET_FLY_CAM_MAX_HEIGHT(Cam cam, float height) { NativeInvoker.Invoke(0xF9D02130ECDD1D77, (ulong)cam, *(uint*)&height); }
        internal static void SET_FLY_CAM_COORD_AND_CONSTRAIN(Cam cam, float x, float y, float z) { NativeInvoker.Invoke(0xC91C6C55199308CA, (ulong)cam, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void N_0xC8B5C4A79CC18B94(Cam cam) { NativeInvoker.Invoke(0xC8B5C4A79CC18B94, (ulong)cam); }
        internal static BOOL N_0x5C48A1D6E3B33179(Cam cam) { return NativeInvoker.Invoke<BOOL>(0x5C48A1D6E3B33179, (ulong)cam); }
        internal static BOOL IS_SCREEN_FADED_OUT() { return NativeInvoker.Invoke<BOOL>(0xB16FCE9DDC7BA182); } // 0xB16FCE9DDC7BA182 0x9CAA05FA b323, (ulong)B16FCE9DDC7BA182); }
        internal static BOOL IS_SCREEN_FADED_IN() { return NativeInvoker.Invoke<BOOL>(0x5A859503B0C08678); } // 0x5A859503B0C08678 0x4F37276D b323, (ulong)5A859503B0C08678); }
        internal static BOOL IS_SCREEN_FADING_OUT() { return NativeInvoker.Invoke<BOOL>(0x797AC7CB535BA28F); } // 0x797AC7CB535BA28F 0x79275A57 b323, (ulong)797AC7CB535BA28F); }
        internal static BOOL IS_SCREEN_FADING_IN() { return NativeInvoker.Invoke<BOOL>(0x5C544BC6C57AC575); } // 0x5C544BC6C57AC575 0xC7C82800 b323, (ulong)5C544BC6C57AC575); }
        internal static void DO_SCREEN_FADE_IN(int duration) { NativeInvoker.Invoke(0xD4E8E24955024033, (ulong)duration); }
        internal static void DO_SCREEN_FADE_OUT(int duration) { NativeInvoker.Invoke(0x891B5B39AC6302AF, (ulong)duration); }
        internal static void SET_WIDESCREEN_BORDERS(BOOL p0, int p1) { NativeInvoker.Invoke(0xDCD4EA924F42D01A, (ulong)p0, (ulong)p1); }
        internal static BOOL N_0x4879E4FE39074CDF() { return NativeInvoker.Invoke<BOOL>(0x4879E4FE39074CDF); } // 0x4879E4FE39074CDF b372, (ulong)4879E4FE39074CDF); }
        internal static Vector3 GET_GAMEPLAY_CAM_COORD() { return NativeInvoker.Invoke<Vector3>(0x14D6F5678D8F1B37); } // 0x14D6F5678D8F1B37 0x9388CF79 b323, (ulong)14D6F5678D8F1B37); }
        internal static Vector3 GET_GAMEPLAY_CAM_ROT(int rotationOrder) { return NativeInvoker.Invoke<Vector3>(0x837765A25378F0BB, (ulong)rotationOrder); }
        internal static float GET_GAMEPLAY_CAM_FOV() { return NativeInvoker.Invoke<float>(0x65019750A0324133); } // 0x65019750A0324133 0x4D6B3BFA b323, (ulong)65019750A0324133); }
        internal static void N_0x487A82C650EB7799(float p0) { NativeInvoker.Invoke(0x487A82C650EB7799, *(uint*)&p0); }
        internal static void N_0x0225778816FDC28C(float p0) { NativeInvoker.Invoke(0x0225778816FDC28C, *(uint*)&p0); }
        internal static float GET_GAMEPLAY_CAM_RELATIVE_HEADING() { return NativeInvoker.Invoke<float>(0x743607648ADD4587); } // 0x743607648ADD4587 0xCAF839C2 b323, (ulong)743607648ADD4587); }
        internal static void SET_GAMEPLAY_CAM_RELATIVE_HEADING(float heading) { NativeInvoker.Invoke(0xB4EC2312F4E5B1F1, *(uint*)&heading); }
        internal static float GET_GAMEPLAY_CAM_RELATIVE_PITCH() { return NativeInvoker.Invoke<float>(0x3A6867B4845BEDA2); } // 0x3A6867B4845BEDA2 0xFC5A4946 b323, (ulong)3A6867B4845BEDA2); }
        internal static void SET_GAMEPLAY_CAM_RELATIVE_PITCH(float angle, float scalingFactor) { NativeInvoker.Invoke(0x6D0858B8EDFD2B7D, *(uint*)&angle, *(uint*)&scalingFactor); }
        internal static void SET_GAMEPLAY_CAM_RELATIVE_ROTATION_(float roll, float pitch, float yaw) { NativeInvoker.Invoke(0x48608C3464F58AB4, *(uint*)&roll, *(uint*)&pitch, *(uint*)&yaw); }
        internal static void N_0x28B022A17B068A3A(float p0, float p1) { NativeInvoker.Invoke(0x28B022A17B068A3A, *(uint*)&p0, *(uint*)&p1); }
        internal static void SET_GAMEPLAY_CAM_RAW_YAW_(float yaw) { NativeInvoker.Invoke(0x103991D4A307D472, *(uint*)&yaw); }
        internal static void SET_GAMEPLAY_CAM_RAW_PITCH_(float pitch) { NativeInvoker.Invoke(0x759E13EBC1C15C5A, *(uint*)&pitch); }
        internal static void N_0x469F2ECDEC046337(BOOL p0) { NativeInvoker.Invoke(0x469F2ECDEC046337, (ulong)p0); }
        internal static void SHAKE_GAMEPLAY_CAM(char* shakeName, float intensity) { NativeInvoker.Invoke(0xFD55E49555E017CF, (ulong)shakeName, *(uint*)&intensity); }
        internal static BOOL IS_GAMEPLAY_CAM_SHAKING() { return NativeInvoker.Invoke<BOOL>(0x016C090630DF1F89); } // 0x016C090630DF1F89 0x3457D681 b323, (ulong)016C090630DF1F89); }
        internal static void SET_GAMEPLAY_CAM_SHAKE_AMPLITUDE(float amplitude) { NativeInvoker.Invoke(0xA87E00932DB4D85D, *(uint*)&amplitude); }
        internal static void STOP_GAMEPLAY_CAM_SHAKING(BOOL p0) { NativeInvoker.Invoke(0x0EF93E9F3D08C178, (ulong)p0); }
        internal static void SET_GAMEPLAY_CAM_FOLLOW_PED_THIS_UPDATE(Ped ped) { NativeInvoker.Invoke(0x8BBACBF51DA047A8, (ulong)ped); }
        internal static BOOL IS_GAMEPLAY_CAM_RENDERING() { return NativeInvoker.Invoke<BOOL>(0x39B5D1B10383F0C8); } // 0x39B5D1B10383F0C8 0x0EF276DA b323, (ulong)39B5D1B10383F0C8); }
        internal static BOOL N_0x3044240D2E0FA842() { return NativeInvoker.Invoke<BOOL>(0x3044240D2E0FA842); } // 0x3044240D2E0FA842 0xC0B00C20 b323, (ulong)3044240D2E0FA842); }
        internal static BOOL N_0x705A276EBFF3133D() { return NativeInvoker.Invoke<BOOL>(0x705A276EBFF3133D); } // 0x705A276EBFF3133D 0x60C23785 b323, (ulong)705A276EBFF3133D); }
        internal static void N_0xDB90C6CCA48940F1(BOOL p0) { NativeInvoker.Invoke(0xDB90C6CCA48940F1, (ulong)p0); }
        internal static void ENABLE_CROSSHAIR_THIS_FRAME_() { NativeInvoker.Invoke(0xEA7F0AD7E9BA676F); } // 0xEA7F0AD7E9BA676F 0xA61FF9AC b323<, (ulong)EA7F0AD7E9BA676F); }
        internal static BOOL IS_GAMEPLAY_CAM_LOOKING_BEHIND() { return NativeInvoker.Invoke<BOOL>(0x70FDA869F3317EA9); } // 0x70FDA869F3317EA9 0x33C83F17 b323, (ulong)70FDA869F3317EA9); }
        internal static void DISABLE_CAM_COLLISION_FOR_ENTITY_(Entity entity) { NativeInvoker.Invoke(0x2AED6301F67007D5, (ulong)entity); }
        internal static void DISABLE_CAM_COLLISION_FOR_OBJECT(Entity entity) { NativeInvoker.Invoke(0x49482F9FCD825AAA, (ulong)entity); }
        internal static void N_0xA7092AFE81944852() { NativeInvoker.Invoke(0xA7092AFE81944852); } // 0xA7092AFE81944852 b2189<, (ulong)A7092AFE81944852); }
        internal static void N_0xFD3151CD37EA2245(Entity entity) { NativeInvoker.Invoke(0xFD3151CD37EA2245, (ulong)entity); }
        internal static void N_0xB1381B97F70C7B30() { NativeInvoker.Invoke(0xB1381B97F70C7B30); } // 0xB1381B97F70C7B30 b1180<, (ulong)B1381B97F70C7B30); }
        internal static void N_0xDD79DF9F4D26E1C9() { NativeInvoker.Invoke(0xDD79DF9F4D26E1C9); } // 0xDD79DF9F4D26E1C9 0x6B0E9D57 b323<, (ulong)DD79DF9F4D26E1C9); }
        internal static BOOL IS_SPHERE_VISIBLE(float x, float y, float z, float radius) { return NativeInvoker.Invoke<BOOL>(0xE33D59DA70B58FDF, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius); }
        internal static BOOL IS_FOLLOW_PED_CAM_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0xC6D3D26810C8E0F9); } // 0xC6D3D26810C8E0F9 0x9F9E856C b323, (ulong)C6D3D26810C8E0F9); }
        internal static BOOL SET_FOLLOW_PED_CAM_THIS_UPDATE(char* camName, int p1) { return NativeInvoker.Invoke<BOOL>(0x44A113DD6FFC48D1, (ulong)camName, (ulong)p1); }
        internal static void N_0x271401846BD26E92(BOOL p0, BOOL p1) { NativeInvoker.Invoke(0x271401846BD26E92, (ulong)p0, (ulong)p1); }
        internal static void N_0xC8391C309684595A() { NativeInvoker.Invoke(0xC8391C309684595A); } // 0xC8391C309684595A 0x1F9DE6E4 b323<, (ulong)C8391C309684595A); }
        internal static void CLAMP_GAMEPLAY_CAM_YAW_(float minimum, float maximum) { NativeInvoker.Invoke(0x8F993D26E0CA5E8E, *(uint*)&minimum, *(uint*)&maximum); }
        internal static void CLAMP_GAMEPLAY_CAM_PITCH_(float minimum, float maximum) { NativeInvoker.Invoke(0xA516C198B7DCA1E1, *(uint*)&minimum, *(uint*)&maximum); }
        internal static void ANIMATE_GAMEPLAY_CAM_ZOOM_(float p0, float distance) { NativeInvoker.Invoke(0xDF2E1F7742402E81, *(uint*)&p0, *(uint*)&distance); }
        internal static void SET_IN_VEHICLE_CAM_STATE_THIS_UPDATE(Vehicle p0, int p1) { NativeInvoker.Invoke(0xE9EA16D6E54CDCA4, (ulong)p0, (ulong)p1); }
        internal static void DISABLE_FIRST_PERSON_CAM_THIS_FRAME_() { NativeInvoker.Invoke(0xDE2EF5DA284CC8DF); } // 0xDE2EF5DA284CC8DF b323<, (ulong)DE2EF5DA284CC8DF); }
        internal static void N_0x59424BD75174C9B1() { NativeInvoker.Invoke(0x59424BD75174C9B1); } // 0x59424BD75174C9B1 b323<, (ulong)59424BD75174C9B1); }
        internal static void N_0x9F97DA93681F87EA() { NativeInvoker.Invoke(0x9F97DA93681F87EA); } // 0x9F97DA93681F87EA b1734<, (ulong)9F97DA93681F87EA); }
        internal static int GET_FOLLOW_PED_CAM_ZOOM_LEVEL() { return NativeInvoker.Invoke<int>(0x33E6C8EFD0CD93E9); } // 0x33E6C8EFD0CD93E9 0x57583DF1 b323, (ulong)33E6C8EFD0CD93E9); }
        internal static int GET_FOLLOW_PED_CAM_VIEW_MODE() { return NativeInvoker.Invoke<int>(0x8D4D46230B2C353A); } // 0x8D4D46230B2C353A 0xA65FF946 b323, (ulong)8D4D46230B2C353A); }
        internal static void SET_FOLLOW_PED_CAM_VIEW_MODE(int viewMode) { NativeInvoker.Invoke(0x5A4F9EDF1673F704, (ulong)viewMode); }
        internal static BOOL IS_FOLLOW_VEHICLE_CAM_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0xCBBDE6D335D6D496); } // 0xCBBDE6D335D6D496 0x8DD49B77 b323, (ulong)CBBDE6D335D6D496); }
        internal static void N_0x91EF6EE6419E5B97(BOOL p0) { NativeInvoker.Invoke(0x91EF6EE6419E5B97, (ulong)p0); }
        internal static void N_0x9DFE13ECDC1EC196(BOOL p0, BOOL p1) { NativeInvoker.Invoke(0x9DFE13ECDC1EC196, (ulong)p0, (ulong)p1); }
        internal static BOOL N_0x79C0E43EB9B944E2(Hash hash) { return NativeInvoker.Invoke<BOOL>(0x79C0E43EB9B944E2, (ulong)hash); }
        internal static int GET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL() { return NativeInvoker.Invoke<int>(0xEE82280AB767B690); } // 0xEE82280AB767B690 0x8CD67DE3 b323, (ulong)EE82280AB767B690); }
        internal static void SET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL(int zoomLevel) { NativeInvoker.Invoke(0x19464CB6E4078C8A, (ulong)zoomLevel); }
        internal static int GET_FOLLOW_VEHICLE_CAM_VIEW_MODE() { return NativeInvoker.Invoke<int>(0xA4FF579AC0E3AAAE); } // 0xA4FF579AC0E3AAAE 0xA4B4DB03 b323, (ulong)A4FF579AC0E3AAAE); }
        internal static void SET_FOLLOW_VEHICLE_CAM_VIEW_MODE(int viewMode) { NativeInvoker.Invoke(0xAC253D7842768F48, (ulong)viewMode); }
        internal static int GET_CAM_VIEW_MODE_FOR_CONTEXT(int context) { return NativeInvoker.Invoke<int>(0xEE778F8C7E1142E2, (ulong)context); }
        internal static void SET_CAM_VIEW_MODE_FOR_CONTEXT(int context, int viewMode) { NativeInvoker.Invoke(0x2A2173E46DAECD12, (ulong)context, (ulong)viewMode); }
        internal static int GET_CAM_ACTIVE_VIEW_MODE_CONTEXT_() { return NativeInvoker.Invoke<int>(0x19CAFA3C87F7C2FF); } // 0x19CAFA3C87F7C2FF b323, (ulong)19CAFA3C87F7C2FF); }
        internal static void USE_STUNT_CAMERA_THIS_FRAME_() { NativeInvoker.Invoke(0x6493CF69859B116A); } // 0x6493CF69859B116A b791<, (ulong)6493CF69859B116A); }
        internal static void SET_GAMEPLAY_CAM_HASH_(char* camName) { NativeInvoker.Invoke(0x425A920FDB9A0DDA, (ulong)camName); }
        internal static void N_0x0AA27680A0BD43FA() { NativeInvoker.Invoke(0x0AA27680A0BD43FA); } // 0x0AA27680A0BD43FA b1103<, (ulong)0AA27680A0BD43FA); }
        internal static void SET_FOLLOW_TURRET_SEAT_CAM_(int seatIndex) { NativeInvoker.Invoke(0x5C90CAB09951A12F, (ulong)seatIndex); }
        internal static BOOL IS_AIM_CAM_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0x68EDDA28A5976D07); } // 0x68EDDA28A5976D07 0xC24B4F6F b323, (ulong)68EDDA28A5976D07); }
        internal static BOOL IS_AIM_CAM_THIRD_PERSON_ACTIVE_() { return NativeInvoker.Invoke<BOOL>(0x74BD83EA840F6BC9); } // 0x74BD83EA840F6BC9 0x8F320DE4 b323, (ulong)74BD83EA840F6BC9); }
        internal static BOOL IS_FIRST_PERSON_AIM_CAM_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0x5E346D934122613F); } // 0x5E346D934122613F 0xD6280468 b323, (ulong)5E346D934122613F); }
        internal static void DISABLE_AIM_CAM_THIS_UPDATE() { NativeInvoker.Invoke(0x1A31FE0049E542F6); } // 0x1A31FE0049E542F6 0x1BAA7182 b323<, (ulong)1A31FE0049E542F6); }
        internal static float GET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR() { return NativeInvoker.Invoke<float>(0x7EC52CC40597D170); } // 0x7EC52CC40597D170 0x33951005 b323, (ulong)7EC52CC40597D170); }
        internal static void SET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR(float zoomFactor) { NativeInvoker.Invoke(0x70894BD0915C5BCA, *(uint*)&zoomFactor); }
        internal static void N_0xCED08CBE8EBB97C7(float p0, float p1) { NativeInvoker.Invoke(0xCED08CBE8EBB97C7, *(uint*)&p0, *(uint*)&p1); }
        internal static void N_0x2F7F2B26DD3F18EE(float p0, float p1) { NativeInvoker.Invoke(0x2F7F2B26DD3F18EE, *(uint*)&p0, *(uint*)&p1); }
        internal static void SET_FIRST_PERSON_CAM_PITCH_RANGE_(float p0, float p1) { NativeInvoker.Invoke(0xBCFC632DB7673BF0, *(uint*)&p0, *(uint*)&p1); }
        internal static void SET_FIRST_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE(float p0) { NativeInvoker.Invoke(0x0AF7B437918103B3, *(uint*)&p0); }
        internal static void SET_THIRD_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE(float p0) { NativeInvoker.Invoke(0x42156508606DE65E, *(uint*)&p0); }
        internal static void N_0x4008EDF7D6E48175(BOOL p0) { NativeInvoker.Invoke(0x4008EDF7D6E48175, (ulong)p0); }
        internal static void N_0x380B4968D1E09E55() { NativeInvoker.Invoke(0x380B4968D1E09E55); } // 0x380B4968D1E09E55 b1290<, (ulong)380B4968D1E09E55); }
        internal static Vector3 GET_FINAL_RENDERED_CAM_COORD() { return NativeInvoker.Invoke<Vector3>(0xA200EB1EE790F448); } // 0xA200EB1EE790F448 0x9C84BDA0 b323, (ulong)A200EB1EE790F448); }
        internal static Vector3 GET_FINAL_RENDERED_CAM_ROT(int rotationOrder) { return NativeInvoker.Invoke<Vector3>(0x5B4E4C817FCC2DFB, (ulong)rotationOrder); }
        internal static Vector3 GET_FINAL_RENDERED_IN_WHEN_FRIENDLY_ROT(Player player, int rotationOrder) { return NativeInvoker.Invoke<Vector3>(0x26903D9CD1175F2C, (ulong)player, (ulong)rotationOrder); }
        internal static float GET_FINAL_RENDERED_CAM_FOV() { return NativeInvoker.Invoke<float>(0x80EC114669DAEFF4); } // 0x80EC114669DAEFF4 0x721B763B b323, (ulong)80EC114669DAEFF4); }
        internal static float GET_FINAL_RENDERED_IN_WHEN_FRIENDLY_FOV(Player player) { return NativeInvoker.Invoke<float>(0x5F35F6732C3FBBA0, (ulong)player); }
        internal static float GET_FINAL_RENDERED_CAM_NEAR_CLIP() { return NativeInvoker.Invoke<float>(0xD0082607100D7193); } // 0xD0082607100D7193 0x457AE195 b323, (ulong)D0082607100D7193); }
        internal static float GET_FINAL_RENDERED_CAM_FAR_CLIP() { return NativeInvoker.Invoke<float>(0xDFC8CBC606FDB0FC); } // 0xDFC8CBC606FDB0FC 0x46CB3A49 b323, (ulong)DFC8CBC606FDB0FC); }
        internal static float GET_FINAL_RENDERED_CAM_NEAR_DOF() { return NativeInvoker.Invoke<float>(0xA03502FC581F7D9B); } // 0xA03502FC581F7D9B 0x19297A7A b323, (ulong)A03502FC581F7D9B); }
        internal static float GET_FINAL_RENDERED_CAM_FAR_DOF() { return NativeInvoker.Invoke<float>(0x9780F32BCAF72431); } // 0x9780F32BCAF72431 0xF24777CA b323, (ulong)9780F32BCAF72431); }
        internal static float GET_FINAL_RENDERED_CAM_MOTION_BLUR_STRENGTH() { return NativeInvoker.Invoke<float>(0x162F9D995753DC19); } // 0x162F9D995753DC19 0x38992E83 b323, (ulong)162F9D995753DC19); }
        internal static void SET_GAMEPLAY_COORD_HINT(float x, float y, float z, int duration, int blendOutDuration, int blendInDuration, int unk) { NativeInvoker.Invoke(0xD51ADCD2D8BC0FB3, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)duration, (ulong)blendOutDuration, (ulong)blendInDuration, (ulong)unk); }
        internal static void SET_GAMEPLAY_PED_HINT(Ped p0, float x1, float y1, float z1, BOOL p4, Any p5, Any p6, Any p7) { NativeInvoker.Invoke(0x2B486269ACD548D3, (ulong)p0, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7); }
        internal static void SET_GAMEPLAY_VEHICLE_HINT(Vehicle vehicle, float offsetX, float offsetY, float offsetZ, BOOL p4, int time, int easeInTime, int easeOutTime) { NativeInvoker.Invoke(0xA2297E18F3E71C2E, (ulong)vehicle, *(uint*)&offsetX, *(uint*)&offsetY, *(uint*)&offsetZ, (ulong)p4, (ulong)time, (ulong)easeInTime, (ulong)easeOutTime); }
        internal static void SET_GAMEPLAY_OBJECT_HINT(Any p0, float p1, float p2, float p3, BOOL p4, Any p5, Any p6, Any p7) { NativeInvoker.Invoke(0x83E87508A2CA2AC6, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7); }
        internal static void SET_GAMEPLAY_ENTITY_HINT(Entity entity, float xOffset, float yOffset, float zOffset, BOOL p4, int p5, int p6, int p7, Any p8) { NativeInvoker.Invoke(0x189E955A8313E298, (ulong)entity, *(uint*)&xOffset, *(uint*)&yOffset, *(uint*)&zOffset, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8); }
        internal static BOOL IS_GAMEPLAY_HINT_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0xE520FF1AD2785B40); } // 0xE520FF1AD2785B40 0xAD8DA205 b323, (ulong)E520FF1AD2785B40); }
        internal static void STOP_GAMEPLAY_HINT(BOOL p0) { NativeInvoker.Invoke(0xF46C581C61718916, (ulong)p0); }
        internal static void N_0xCCD078C2665D2973(BOOL p0) { NativeInvoker.Invoke(0xCCD078C2665D2973, (ulong)p0); }
        internal static void N_0x247ACBC4ABBC9D1C(BOOL p0) { NativeInvoker.Invoke(0x247ACBC4ABBC9D1C, (ulong)p0); }
        internal static Any N_0xBF72910D0F26F025() { return NativeInvoker.Invoke<Any>(0xBF72910D0F26F025); } // 0xBF72910D0F26F025 b323, (ulong)BF72910D0F26F025); }
        internal static void SET_GAMEPLAY_HINT_FOV(float FOV) { NativeInvoker.Invoke(0x513403FB9C56211F, *(uint*)&FOV); }
        internal static void SET_GAMEPLAY_HINT_FOLLOW_DISTANCE_SCALAR(float value) { NativeInvoker.Invoke(0xF8BDBF3D573049A1, *(uint*)&value); }
        internal static void SET_GAMEPLAY_HINT_BASE_ORBIT_PITCH_OFFSET(float value) { NativeInvoker.Invoke(0xD1F8363DFAD03848, *(uint*)&value); }
        internal static void SET_GAMEPLAY_HINT_ANIM_OFFSETX_(float xOffset) { NativeInvoker.Invoke(0x5D7B620DAE436138, *(uint*)&xOffset); }
        internal static void SET_GAMEPLAY_HINT_ANIM_OFFSETY_(float yOffset) { NativeInvoker.Invoke(0xC92717EF615B6704, *(uint*)&yOffset); }
        internal static void SET_GAMEPLAY_HINT_ANIM_CLOSEUP_(BOOL toggle) { NativeInvoker.Invoke(0xE3433EADAAF7EE40, (ulong)toggle); }
        internal static void SET_CINEMATIC_BUTTON_ACTIVE(BOOL p0) { NativeInvoker.Invoke(0x51669F7D1FB53D9F, (ulong)p0); }
        internal static BOOL IS_CINEMATIC_CAM_RENDERING() { return NativeInvoker.Invoke<BOOL>(0xB15162CB5826E9E8); } // 0xB15162CB5826E9E8 0x80471AD9 b323, (ulong)B15162CB5826E9E8); }
        internal static void SHAKE_CINEMATIC_CAM(char* p0, float p1) { NativeInvoker.Invoke(0xDCE214D9ED58F3CF, (ulong)p0, *(uint*)&p1); }
        internal static BOOL IS_CINEMATIC_CAM_SHAKING() { return NativeInvoker.Invoke<BOOL>(0xBBC08F6B4CB8FF0A); } // 0xBBC08F6B4CB8FF0A 0x8376D939 b323, (ulong)BBC08F6B4CB8FF0A); }
        internal static void SET_CINEMATIC_CAM_SHAKE_AMPLITUDE(float p0) { NativeInvoker.Invoke(0xC724C701C30B2FE7, *(uint*)&p0); }
        internal static void STOP_CINEMATIC_CAM_SHAKING(BOOL p0) { NativeInvoker.Invoke(0x2238E588E588A6D7, (ulong)p0); }
        internal static void DISABLE_VEHICLE_FIRST_PERSON_CAM_THIS_FRAME_() { NativeInvoker.Invoke(0xADFF1B2A555F5FBA); } // 0xADFF1B2A555F5FBA 0x5AC6DAC9 b323<, (ulong)ADFF1B2A555F5FBA); }
        internal static void N_0x62ECFCFDEE7885D6() { NativeInvoker.Invoke(0x62ECFCFDEE7885D6); } // 0x62ECFCFDEE7885D6 0x837F8581 b323<, (ulong)62ECFCFDEE7885D6); }
        internal static void INVALIDATE_VEHICLE_IDLE_CAM_() { NativeInvoker.Invoke(0x9E4CFFF989258472); } // 0x9E4CFFF989258472 0x65DDE8AF b323<, (ulong)9E4CFFF989258472); }
        internal static void INVALIDATE_IDLE_CAM() { NativeInvoker.Invoke(0xF4F2C0D4EE209E20); } // 0xF4F2C0D4EE209E20 0xD75CDD75 b323<, (ulong)F4F2C0D4EE209E20); }
        internal static BOOL IS_CINEMATIC_IDLE_CAM_RENDERING() { return NativeInvoker.Invoke<BOOL>(0xCA9D2AA3E326D720); } // 0xCA9D2AA3E326D720 0x96A07066 b323, (ulong)CA9D2AA3E326D720); }
        internal static BOOL IS_IN_VEHICLE_CAM_DISABLED_() { return NativeInvoker.Invoke<BOOL>(0x4F32C0D5A90A9B40); } // 0x4F32C0D5A90A9B40 b323, (ulong)4F32C0D5A90A9B40); }
        internal static void CREATE_CINEMATIC_SHOT(Any p0, int p1, Any p2, Entity entity) { NativeInvoker.Invoke(0x741B0129D4560F31, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)entity); }
        internal static BOOL IS_CINEMATIC_SHOT_ACTIVE(Any p0) { return NativeInvoker.Invoke<BOOL>(0xCC9F3371A7C28BC9, (ulong)p0); }
        internal static void STOP_CINEMATIC_SHOT(Hash p0) { NativeInvoker.Invoke(0x7660C6E75D3A078E, (ulong)p0); }
        internal static void FORCE_CINEMATIC_RENDERING_THIS_UPDATE(BOOL p0) { NativeInvoker.Invoke(0xA41BCD7213805AAC, (ulong)p0); }
        internal static void N_0xDC9DA9E8789F5246() { NativeInvoker.Invoke(0xDC9DA9E8789F5246); } // 0xDC9DA9E8789F5246 0x4938C82F b323<, (ulong)DC9DA9E8789F5246); }
        internal static void SET_CINEMATIC_MODE_ACTIVE(BOOL toggle) { NativeInvoker.Invoke(0xDCF0754AC3D6FD4E, (ulong)toggle); }
        internal static Any N_0x1F2300CB7FA7B7F6() { return NativeInvoker.Invoke<Any>(0x1F2300CB7FA7B7F6); } // 0x1F2300CB7FA7B7F6 0x6739AD55 b323, (ulong)1F2300CB7FA7B7F6); }
        internal static Any N_0x17FCA7199A530203() { return NativeInvoker.Invoke<Any>(0x17FCA7199A530203); } // 0x17FCA7199A530203 b323, (ulong)17FCA7199A530203); }
        internal static Any N_0xD7360051C885628B() { return NativeInvoker.Invoke<Any>(0xD7360051C885628B); } // 0xD7360051C885628B b372, (ulong)D7360051C885628B); }
        internal static BOOL IS_CINEMATIC_CAM_ACTIVE_() { return NativeInvoker.Invoke<BOOL>(0xF5F1E89A970B7796); } // 0xF5F1E89A970B7796 b1493, (ulong)F5F1E89A970B7796); }
        internal static void N_0x7B8A361C1813FBEF() { NativeInvoker.Invoke(0x7B8A361C1813FBEF); } // 0x7B8A361C1813FBEF b573<, (ulong)7B8A361C1813FBEF); }
        internal static void STOP_CUTSCENE_CAM_SHAKING() { NativeInvoker.Invoke(0xDB629FFD9285FA06); } // 0xDB629FFD9285FA06 0xF07D603D b323<, (ulong)DB629FFD9285FA06); }
        internal static void N_0x324C5AA411DA7737(Any p0) { NativeInvoker.Invoke(0x324C5AA411DA7737, (ulong)p0); }
        internal static void N_0x12DED8CA53D47EA5(float p0) { NativeInvoker.Invoke(0x12DED8CA53D47EA5, *(uint*)&p0); }
        internal static Ped GET_FOCUS_PED_ON_SCREEN(float p0, int p1, float p2, float p3, float p4, float p5, float p6, int p7, int p8) { return NativeInvoker.Invoke<Ped>(0x89215EC747DF244A, *(uint*)&p0, (ulong)p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, (ulong)p7, (ulong)p8); }
        internal static void N_0x5A43C76F7FC7BA5F() { NativeInvoker.Invoke(0x5A43C76F7FC7BA5F); } // 0x5A43C76F7FC7BA5F 0xE206C450 b323<, (ulong)5A43C76F7FC7BA5F); }
        internal static void SET_CAM_EFFECT_(int p0) { NativeInvoker.Invoke(0x80C8B1846639BB19, (ulong)p0); }
        internal static void N_0x5C41E6BABC9E2112(Any p0) { NativeInvoker.Invoke(0x5C41E6BABC9E2112, (ulong)p0); }
        internal static void SET_GAMEPLAY_CAM_VEHICLE_CAMERA_(char* vehicleName) { NativeInvoker.Invoke(0x21E253A7F8DA5DFB, (ulong)vehicleName); }
        internal static void SET_GAMEPLAY_CAM_VEHICLE_CAMERA_NAME_(Hash vehicleModel) { NativeInvoker.Invoke(0x11FA5D3479C7DD47, (ulong)vehicleModel); }
        internal static Any N_0xEAF0FA793D05C592() { return NativeInvoker.Invoke<Any>(0xEAF0FA793D05C592); } // 0xEAF0FA793D05C592 b323, (ulong)EAF0FA793D05C592); }
        internal static void N_0x62374889A4D59F72() { NativeInvoker.Invoke(0x62374889A4D59F72); } // 0x62374889A4D59F72 b877<, (ulong)62374889A4D59F72); }
        internal static float REPLAY_FREE_CAM_GET_MAX_RANGE_() { return NativeInvoker.Invoke<float>(0x8BFCEB5EA1B161B6); } // 0x8BFCEB5EA1B161B6 b323, (ulong)8BFCEB5EA1B161B6); }
    }

    internal static unsafe class CLOCK
    {
        internal static void SET_CLOCK_TIME(int hour, int minute, int second) { NativeInvoker.Invoke(0x47C3B5848C3E45D8, (ulong)hour, (ulong)minute, (ulong)second); }
        internal static void PAUSE_CLOCK(BOOL toggle) { NativeInvoker.Invoke(0x4055E40BD2DBEC1D, (ulong)toggle); }
        internal static void ADVANCE_CLOCK_TIME_TO(int hour, int minute, int second) { NativeInvoker.Invoke(0xC8CA9670B9D83B3B, (ulong)hour, (ulong)minute, (ulong)second); }
        internal static void ADD_TO_CLOCK_TIME(int hours, int minutes, int seconds) { NativeInvoker.Invoke(0xD716F30D8C8980E2, (ulong)hours, (ulong)minutes, (ulong)seconds); }
        internal static int GET_CLOCK_HOURS() { return NativeInvoker.Invoke<int>(0x25223CA6B4D20B7F); } // 0x25223CA6B4D20B7F 0x7EF8316F b323, (ulong)25223CA6B4D20B7F); }
        internal static int GET_CLOCK_MINUTES() { return NativeInvoker.Invoke<int>(0x13D2B8ADD79640F2); } // 0x13D2B8ADD79640F2 0x94AAC486 b323, (ulong)13D2B8ADD79640F2); }
        internal static int GET_CLOCK_SECONDS() { return NativeInvoker.Invoke<int>(0x494E97C2EF27C470); } // 0x494E97C2EF27C470 0x099C927E b323, (ulong)494E97C2EF27C470); }
        internal static void SET_CLOCK_DATE(int day, int month, int year) { NativeInvoker.Invoke(0xB096419DF0D06CE7, (ulong)day, (ulong)month, (ulong)year); }
        internal static int GET_CLOCK_DAY_OF_WEEK() { return NativeInvoker.Invoke<int>(0xD972E4BD7AEB235F); } // 0xD972E4BD7AEB235F 0x84E4A289 b323, (ulong)D972E4BD7AEB235F); }
        internal static int GET_CLOCK_DAY_OF_MONTH() { return NativeInvoker.Invoke<int>(0x3D10BC92A4DB1D35); } // 0x3D10BC92A4DB1D35 0xC7A5ACB7 b323, (ulong)3D10BC92A4DB1D35); }
        internal static int GET_CLOCK_MONTH() { return NativeInvoker.Invoke<int>(0xBBC72712E80257A1); } // 0xBBC72712E80257A1 0x3C48A3D5 b323, (ulong)BBC72712E80257A1); }
        internal static int GET_CLOCK_YEAR() { return NativeInvoker.Invoke<int>(0x961777E64BDAF717); } // 0x961777E64BDAF717 0xB8BECF15 b323, (ulong)961777E64BDAF717); }
        internal static int GET_MILLISECONDS_PER_GAME_MINUTE() { return NativeInvoker.Invoke<int>(0x2F8B4D1C595B11DB); } // 0x2F8B4D1C595B11DB 0x3B74095C b323, (ulong)2F8B4D1C595B11DB); }
        internal static void GET_POSIX_TIME(int* year, int* month, int* day, int* hour, int* minute, int* second) { NativeInvoker.Invoke(0xDA488F299A5B164E, (ulong)year, (ulong)month, (ulong)day, (ulong)hour, (ulong)minute, (ulong)second); }
        internal static void GET_UTC_TIME(int* year, int* month, int* day, int* hour, int* minute, int* second) { NativeInvoker.Invoke(0x8117E09A19EEF4D3, (ulong)year, (ulong)month, (ulong)day, (ulong)hour, (ulong)minute, (ulong)second); }
        internal static void GET_LOCAL_TIME(int* year, int* month, int* day, int* hour, int* minute, int* second) { NativeInvoker.Invoke(0x50C7A99057A69748, (ulong)year, (ulong)month, (ulong)day, (ulong)hour, (ulong)minute, (ulong)second); }
    }

    internal static unsafe class CUTSCENE
    {
        internal static void REQUEST_CUTSCENE(char* cutsceneName, int flags) { NativeInvoker.Invoke(0x7A86743F475D9E09, (ulong)cutsceneName, (ulong)flags); }
        internal static void REQUEST_CUTSCENE_WITH_PLAYBACK_LIST(char* cutsceneName, int playbackFlags, int flags) { NativeInvoker.Invoke(0xC23DE0E91C30B58C, (ulong)cutsceneName, (ulong)playbackFlags, (ulong)flags); }
        internal static void REMOVE_CUTSCENE() { NativeInvoker.Invoke(0x440AF51A3462B86F); } // 0x440AF51A3462B86F 0x8052F533 b323<, (ulong)440AF51A3462B86F); }
        internal static BOOL HAS_CUTSCENE_LOADED() { return NativeInvoker.Invoke<BOOL>(0xC59F528E9AB9F339); } // 0xC59F528E9AB9F339 0xF9998582 b323, (ulong)C59F528E9AB9F339); }
        internal static BOOL HAS_THIS_CUTSCENE_LOADED(char* cutsceneName) { return NativeInvoker.Invoke<BOOL>(0x228D3D94F8A11C3C, (ulong)cutsceneName); }
        internal static void N_0x8D9DF6ECA8768583(int threadId) { NativeInvoker.Invoke(0x8D9DF6ECA8768583, (ulong)threadId); }
        internal static BOOL CAN_REQUEST_ASSETS_FOR_CUTSCENE_ENTITY() { return NativeInvoker.Invoke<BOOL>(0xB56BBBCC2955D9CB); } // 0xB56BBBCC2955D9CB 0xDD8878E9 b323, (ulong)B56BBBCC2955D9CB); }
        internal static BOOL IS_CUTSCENE_PLAYBACK_FLAG_SET(int flag) { return NativeInvoker.Invoke<BOOL>(0x71B74D2AE19338D0, (ulong)flag); }
        internal static void SET_CUTSCENE_ENTITY_STREAMING_FLAGS(char* cutsceneEntName, int p1, int p2) { NativeInvoker.Invoke(0x4C61C75BEE8184C2, (ulong)cutsceneEntName, (ulong)p1, (ulong)p2); }
        internal static void REQUEST_CUT_FILE(char* cutsceneName) { NativeInvoker.Invoke(0x06A3524161C502BA, (ulong)cutsceneName); }
        internal static BOOL HAS_CUT_FILE_LOADED(char* cutsceneName) { return NativeInvoker.Invoke<BOOL>(0xA1C996C2A744262E, (ulong)cutsceneName); }
        internal static void REMOVE_CUT_FILE(char* cutsceneName) { NativeInvoker.Invoke(0xD00D76A7DFC9D852, (ulong)cutsceneName); }
        internal static int GET_CUT_FILE_NUM_SECTIONS_(char* cutsceneName) { return NativeInvoker.Invoke<int>(0x0ABC54DE641DC0FC, (ulong)cutsceneName); }
        internal static void START_CUTSCENE(int flags) { NativeInvoker.Invoke(0x186D5CB5E7B0FF7B, (ulong)flags); }
        internal static void START_CUTSCENE_AT_COORDS(float x, float y, float z, int flags) { NativeInvoker.Invoke(0x1C9ADDA3244A1FBF, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)flags); }
        internal static void STOP_CUTSCENE(BOOL p0) { NativeInvoker.Invoke(0xC7272775B4DC786E, (ulong)p0); }
        internal static void STOP_CUTSCENE_IMMEDIATELY() { NativeInvoker.Invoke(0xD220BDD222AC4A1E); } // 0xD220BDD222AC4A1E 0xF528A2AD b323<, (ulong)D220BDD222AC4A1E); }
        internal static void SET_CUTSCENE_ORIGIN(float x, float y, float z, float p3, int p4) { NativeInvoker.Invoke(0xB812B3FD1C01CF27, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&p3, (ulong)p4); }
        internal static void N_0x011883F41211432A(float x1, float y1, float z1, float x2, float y2, float z2, int p6) { NativeInvoker.Invoke(0x011883F41211432A, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)p6); }
        internal static int GET_CUTSCENE_TIME() { return NativeInvoker.Invoke<int>(0xE625BEABBAFFDAB9); } // 0xE625BEABBAFFDAB9 0x53F5B5AB b323, (ulong)E625BEABBAFFDAB9); }
        internal static int GET_CUTSCENE_TOTAL_DURATION() { return NativeInvoker.Invoke<int>(0xEE53B14A19E480D4); } // 0xEE53B14A19E480D4 0x0824EBE8 b323, (ulong)EE53B14A19E480D4); }
        internal static int N_0x971D7B15BCDBEF99() { return NativeInvoker.Invoke<int>(0x971D7B15BCDBEF99); } // 0x971D7B15BCDBEF99 b1734, (ulong)971D7B15BCDBEF99); }
        internal static BOOL WAS_CUTSCENE_SKIPPED() { return NativeInvoker.Invoke<BOOL>(0x40C8656EDAEDD569); } // 0x40C8656EDAEDD569 0xC9B6949D b323, (ulong)40C8656EDAEDD569); }
        internal static BOOL HAS_CUTSCENE_FINISHED() { return NativeInvoker.Invoke<BOOL>(0x7C0A893088881D57); } // 0x7C0A893088881D57 0x5DED14B4 b323, (ulong)7C0A893088881D57); }
        internal static BOOL IS_CUTSCENE_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0x991251AFC3981F84); } // 0x991251AFC3981F84 0xCCE2FE9D b323, (ulong)991251AFC3981F84); }
        internal static BOOL IS_CUTSCENE_PLAYING() { return NativeInvoker.Invoke<BOOL>(0xD3C2E180A40F031E); } // 0xD3C2E180A40F031E 0xA3A78392 b323, (ulong)D3C2E180A40F031E); }
        internal static int GET_CUTSCENE_SECTION_PLAYING() { return NativeInvoker.Invoke<int>(0x49010A6A396553D8); } // 0x49010A6A396553D8 0x1026F0D6 b323, (ulong)49010A6A396553D8); }
        internal static Entity GET_ENTITY_INDEX_OF_CUTSCENE_ENTITY(char* cutsceneEntName, Hash modelHash) { return NativeInvoker.Invoke<Entity>(0x0A2E9FDB9A8C62F6, (ulong)cutsceneEntName, (ulong)modelHash); }
        internal static int N_0x583DF8E3D4AFBD98() { return NativeInvoker.Invoke<int>(0x583DF8E3D4AFBD98); } // 0x583DF8E3D4AFBD98 0x5AE68AE6 b323, (ulong)583DF8E3D4AFBD98); }
        internal static BOOL N_0x4CEBC1ED31E8925E(char* cutsceneName) { return NativeInvoker.Invoke<BOOL>(0x4CEBC1ED31E8925E, (ulong)cutsceneName); }
        internal static Any N_0x4FCD976DA686580C(Any p0) { return NativeInvoker.Invoke<Any>(0x4FCD976DA686580C, (ulong)p0); }
        internal static void REGISTER_ENTITY_FOR_CUTSCENE(Ped cutscenePed, char* cutsceneEntName, int p2, Hash modelHash, int p4) { NativeInvoker.Invoke(0xE40C1C56DF95C2E8, (ulong)cutscenePed, (ulong)cutsceneEntName, (ulong)p2, (ulong)modelHash, (ulong)p4); }
        internal static Entity GET_ENTITY_INDEX_OF_REGISTERED_ENTITY(char* cutsceneEntName, Hash modelHash) { return NativeInvoker.Invoke<Entity>(0xC0741A26499654CD, (ulong)cutsceneEntName, (ulong)modelHash); }
        internal static void N_0x7F96F23FA9B73327(Hash modelHash) { NativeInvoker.Invoke(0x7F96F23FA9B73327, (ulong)modelHash); }
        internal static void SET_CUTSCENE_TRIGGER_AREA(float p0, float p1, float p2, float p3, float p4, float p5) { NativeInvoker.Invoke(0x9896CE4721BE84BA, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5); }
        internal static BOOL CAN_SET_ENTER_STATE_FOR_REGISTERED_ENTITY(char* cutsceneEntName, Hash modelHash) { return NativeInvoker.Invoke<BOOL>(0x645D0B458D8E17B5, (ulong)cutsceneEntName, (ulong)modelHash); }
        internal static BOOL CAN_SET_EXIT_STATE_FOR_REGISTERED_ENTITY(char* cutsceneEntName, Hash modelHash) { return NativeInvoker.Invoke<BOOL>(0x4C6A6451C79E4662, (ulong)cutsceneEntName, (ulong)modelHash); }
        internal static BOOL CAN_SET_EXIT_STATE_FOR_CAMERA(BOOL p0) { return NativeInvoker.Invoke<BOOL>(0xB2CBCD0930DFB420, (ulong)p0); }
        internal static void N_0xC61B86C9F61EB404(BOOL toggle) { NativeInvoker.Invoke(0xC61B86C9F61EB404, (ulong)toggle); }
        internal static void SET_CUTSCENE_FADE_VALUES(BOOL p0, BOOL p1, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0x8093F23ABACCC7D4, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x20746F7B1032A3C7(BOOL p0, BOOL p1, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0x20746F7B1032A3C7, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x06EE9048FD080382(BOOL p0) { NativeInvoker.Invoke(0x06EE9048FD080382, (ulong)p0); }
        internal static int N_0xA0FE76168A189DDB() { return NativeInvoker.Invoke<int>(0xA0FE76168A189DDB); } // 0xA0FE76168A189DDB b323, (ulong)A0FE76168A189DDB); }
        internal static void N_0x2F137B508DE238F2(BOOL p0) { NativeInvoker.Invoke(0x2F137B508DE238F2, (ulong)p0); }
        internal static void N_0xE36A98D8AB3D3C66(BOOL p0) { NativeInvoker.Invoke(0xE36A98D8AB3D3C66, (ulong)p0); }
        internal static Any N_0x5EDEF0CF8C1DAB3C() { return NativeInvoker.Invoke<Any>(0x5EDEF0CF8C1DAB3C); } // 0x5EDEF0CF8C1DAB3C 0xDBD88708 b323, (ulong)5EDEF0CF8C1DAB3C); }
        internal static void SET_CUTSCENE_CAN_BE_SKIPPED(BOOL p0) { NativeInvoker.Invoke(0x41FAA8FB2ECE8720, (ulong)p0); }
        internal static void REGISTER_SYNCHRONISED_SCRIPT_SPEECH() { NativeInvoker.Invoke(0x2131046957F31B04); } // 0x2131046957F31B04 0xB60CFBB9 b323<, (ulong)2131046957F31B04); }
        internal static void SET_CUTSCENE_PED_COMPONENT_VARIATION(char* cutsceneEntName, int p1, int p2, int p3, Hash modelHash) { NativeInvoker.Invoke(0xBA01E7B6DEEFBBC9, (ulong)cutsceneEntName, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)modelHash); }
        internal static void SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED(char* cutsceneEntName, Ped ped, Hash modelHash) { NativeInvoker.Invoke(0x2A56C06EBEF2B0D9, (ulong)cutsceneEntName, (ulong)ped, (ulong)modelHash); }
        internal static BOOL DOES_CUTSCENE_ENTITY_EXIST(char* cutsceneEntName, Hash modelHash) { return NativeInvoker.Invoke<BOOL>(0x499EF20C5DB25C59, (ulong)cutsceneEntName, (ulong)modelHash); }
        internal static void SET_CUTSCENE_PED_PROP_VARIATION(char* cutsceneEntName, int p1, int p2, int p3, Hash modelHash) { NativeInvoker.Invoke(0x0546524ADE2E9723, (ulong)cutsceneEntName, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)modelHash); }
        internal static BOOL HAS_CUTSCENE_CUT_THIS_FRAME_() { return NativeInvoker.Invoke<BOOL>(0x708BDD8CD795B043); } // 0x708BDD8CD795B043 0x4315A7C5 b323, (ulong)708BDD8CD795B043); }
    }

    internal static unsafe class DATAFILE
    {
        internal static void DATAFILE_WATCH_REQUEST_ID(int id) { NativeInvoker.Invoke(0xAD6875BBC0FC899C, (ulong)id); }
        internal static void DATAFILE_CLEAR_WATCH_LIST() { NativeInvoker.Invoke(0x6CC86E78358D5119); } // 0x6CC86E78358D5119 0x5B39D0AC b323<, (ulong)6CC86E78358D5119); }
        internal static BOOL DATAFILE_IS_VALID_REQUEST_ID(int index) { return NativeInvoker.Invoke<BOOL>(0xFCCAE5B92A830878, (ulong)index); }
        internal static BOOL DATAFILE_HAS_LOADED_FILE_DATA(Any p0) { return NativeInvoker.Invoke<BOOL>(0x15FF52B809DB2353, (ulong)p0); }
        internal static BOOL DATAFILE_HAS_VALID_FILE_DATA(Any p0) { return NativeInvoker.Invoke<BOOL>(0xF8CC1EBE0B62E29F, (ulong)p0); }
        internal static BOOL DATAFILE_SELECT_ACTIVE_FILE(Any p0, Any p1) { return NativeInvoker.Invoke<BOOL>(0x22DA66936E0FFF37, (ulong)p0, (ulong)p1); }
        internal static BOOL DATAFILE_DELETE_REQUESTED_FILE(Any p0) { return NativeInvoker.Invoke<BOOL>(0x8F5EA1C01D65A100, (ulong)p0); }
        internal static BOOL UGC_CREATE_CONTENT(Any* data, int dataCount, char* contentName, char* description, char* tagsCsv, char* contentTypeName, BOOL publish, Any p7) { return NativeInvoker.Invoke<BOOL>(0xC84527E235FCA219, (ulong)data, (ulong)dataCount, (ulong)contentName, (ulong)description, (ulong)tagsCsv, (ulong)contentTypeName, (ulong)publish, (ulong)p7); }
        internal static BOOL UGC_CREATE_MISSION(char* contentName, char* description, char* tagsCsv, char* contentTypeName, BOOL publish, Any p5) { return NativeInvoker.Invoke<BOOL>(0xA5EFC3E847D60507, (ulong)contentName, (ulong)description, (ulong)tagsCsv, (ulong)contentTypeName, (ulong)publish, (ulong)p5); }
        internal static BOOL UGC_UPDATE_CONTENT(char* contentId, Any* data, int dataCount, char* contentName, char* description, char* tagsCsv, char* contentTypeName, Any p7) { return NativeInvoker.Invoke<BOOL>(0x648E7A5434AF7969, (ulong)contentId, (ulong)data, (ulong)dataCount, (ulong)contentName, (ulong)description, (ulong)tagsCsv, (ulong)contentTypeName, (ulong)p7); }
        internal static BOOL UGC_UPDATE_MISSION(char* contentId, char* contentName, char* description, char* tagsCsv, char* contentTypeName, Any p5) { return NativeInvoker.Invoke<BOOL>(0x4645DE9980999E93, (ulong)contentId, (ulong)contentName, (ulong)description, (ulong)tagsCsv, (ulong)contentTypeName, (ulong)p5); }
        internal static BOOL UGC_SET_PLAYER_DATA(char* contentId, float rating, char* contentTypeName, Any p3) { return NativeInvoker.Invoke<BOOL>(0x692D808C34A82143, (ulong)contentId, *(uint*)&rating, (ulong)contentTypeName, (ulong)p3); }
        internal static BOOL DATAFILE_SELECT_UGC_DATA(int p0, Any p1) { return NativeInvoker.Invoke<BOOL>(0xA69AC4ADE82B57A4, (ulong)p0, (ulong)p1); }
        internal static BOOL DATAFILE_SELECT_UGC_STATS(int p0, BOOL p1, Any p2) { return NativeInvoker.Invoke<BOOL>(0x9CB0BFA7A9342C3D, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL DATAFILE_SELECT_UGC_PLAYER_DATA(int p0, Any p1) { return NativeInvoker.Invoke<BOOL>(0x52818819057F2B40, (ulong)p0, (ulong)p1); }
        internal static BOOL DATAFILE_SELECT_CREATOR_STATS(int p0, Any p1) { return NativeInvoker.Invoke<BOOL>(0x01095C95CD46B624, (ulong)p0, (ulong)p1); }
        internal static BOOL DATAFILE_LOAD_OFFLINE_UGC(char* filename, Any p1) { return NativeInvoker.Invoke<BOOL>(0xC5238C011AF405E4, (ulong)filename, (ulong)p1); }
        internal static void DATAFILE_CREATE(int p0) { NativeInvoker.Invoke(0xD27058A1CA2B13EE, (ulong)p0); }
        internal static void DATAFILE_DELETE(int p0) { NativeInvoker.Invoke(0x9AB9C1CFC8862DFB, (ulong)p0); }
        internal static void DATAFILE_STORE_MISSION_HEADER(int p0) { NativeInvoker.Invoke(0x2ED61456317B8178, (ulong)p0); }
        internal static void DATAFILE_FLUSH_MISSION_HEADER() { NativeInvoker.Invoke(0xC55854C7D7274882); } // 0xC55854C7D7274882 0xF11F956F b323<, (ulong)C55854C7D7274882); }
        internal static char* DATAFILE_GET_FILE_DICT(int p0) { return (char*)NativeInvoker.Invoke<IntPtr>(0x906B778CA1DC72B6, (ulong)p0); }
        internal static BOOL DATAFILE_START_SAVE_TO_CLOUD(char* filename, Any p1) { return NativeInvoker.Invoke<BOOL>(0x83BCCE3224735F05, (ulong)filename, (ulong)p1); }
        internal static BOOL DATAFILE_UPDATE_SAVE_TO_CLOUD(BOOL* p0) { return NativeInvoker.Invoke<BOOL>(0x4DFDD9EB705F8140, (ulong)p0); }
        internal static BOOL DATAFILE_IS_SAVE_PENDING() { return NativeInvoker.Invoke<BOOL>(0xBEDB96A7584AA8CF); } // 0xBEDB96A7584AA8CF 0x5DCD0796 b323, (ulong)BEDB96A7584AA8CF); }
        internal static Any N_0xA6EEF01087181EDD(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0xA6EEF01087181EDD, (ulong)p0, (ulong)p1); }
        internal static void N_0x6AD0BD5E087866CB(Any p0) { NativeInvoker.Invoke(0x6AD0BD5E087866CB, (ulong)p0); }
        internal static Any N_0xDBF860CF1DB8E599(Any p0) { return NativeInvoker.Invoke<Any>(0xDBF860CF1DB8E599, (ulong)p0); }
        internal static void DATADICT_SET_BOOL(Any* @objectData, char* key, BOOL value) { NativeInvoker.Invoke(0x35124302A556A325, (ulong)@objectData, (ulong)key, (ulong)value); }
        internal static void DATADICT_SET_INT(Any* @objectData, char* key, int value) { NativeInvoker.Invoke(0xE7E035450A7948D5, (ulong)@objectData, (ulong)key, (ulong)value); }
        internal static void DATADICT_SET_FLOAT(Any* @objectData, char* key, float value) { NativeInvoker.Invoke(0xC27E1CC2D795105E, (ulong)@objectData, (ulong)key, *(uint*)&value); }
        internal static void DATADICT_SET_STRING(Any* @objectData, char* key, char* value) { NativeInvoker.Invoke(0x8FF3847DADD8E30C, (ulong)@objectData, (ulong)key, (ulong)value); }
        internal static void DATADICT_SET_VECTOR(Any* @objectData, char* key, float valueX, float valueY, float valueZ) { NativeInvoker.Invoke(0x4CD49B76338C7DEE, (ulong)@objectData, (ulong)key, *(uint*)&valueX, *(uint*)&valueY, *(uint*)&valueZ); }
        internal static Any* DATADICT_CREATE_DICT(Any* @objectData, char* key) { return (Any*)NativeInvoker.Invoke<IntPtr>(0xA358F56F10732EE1, (ulong)@objectData, (ulong)key); }
        internal static Any* DATADICT_CREATE_ARRAY(Any* @objectData, char* key) { return (Any*)NativeInvoker.Invoke<IntPtr>(0x5B11728527CA6E5F, (ulong)@objectData, (ulong)key); }
        internal static BOOL DATADICT_GET_BOOL(Any* @objectData, char* key) { return NativeInvoker.Invoke<BOOL>(0x1186940ED72FFEEC, (ulong)@objectData, (ulong)key); }
        internal static int DATADICT_GET_INT(Any* @objectData, char* key) { return NativeInvoker.Invoke<int>(0x78F06F6B1FB5A80C, (ulong)@objectData, (ulong)key); }
        internal static float DATADICT_GET_FLOAT(Any* @objectData, char* key) { return NativeInvoker.Invoke<float>(0x06610343E73B9727, (ulong)@objectData, (ulong)key); }
        internal static char* DATADICT_GET_STRING(Any* @objectData, char* key) { return (char*)NativeInvoker.Invoke<IntPtr>(0x3D2FD9E763B24472, (ulong)@objectData, (ulong)key); }
        internal static Vector3 DATADICT_GET_VECTOR(Any* @objectData, char* key) { return NativeInvoker.Invoke<Vector3>(0x46CD3CB66E0825CC, (ulong)@objectData, (ulong)key); }
        internal static Any* DATADICT_GET_DICT(Any* @objectData, char* key) { return (Any*)NativeInvoker.Invoke<IntPtr>(0xB6B9DDC412FCEEE2, (ulong)@objectData, (ulong)key); }
        internal static Any* DATADICT_GET_ARRAY(Any* @objectData, char* key) { return (Any*)NativeInvoker.Invoke<IntPtr>(0x7A983AA9DA2659ED, (ulong)@objectData, (ulong)key); }
        internal static int DATADICT_GET_TYPE(Any* @objectData, char* key) { return NativeInvoker.Invoke<int>(0x031C55ED33227371, (ulong)@objectData, (ulong)key); }
        internal static void DATAARRAY_ADD_BOOL(Any* arrayData, BOOL value) { NativeInvoker.Invoke(0xF8B0F5A43E928C76, (ulong)arrayData, (ulong)value); }
        internal static void DATAARRAY_ADD_INT(Any* arrayData, int value) { NativeInvoker.Invoke(0xCABDB751D86FE93B, (ulong)arrayData, (ulong)value); }
        internal static void DATAARRAY_ADD_FLOAT(Any* arrayData, float value) { NativeInvoker.Invoke(0x57A995FD75D37F56, (ulong)arrayData, *(uint*)&value); }
        internal static void DATAARRAY_ADD_STRING(Any* arrayData, char* value) { NativeInvoker.Invoke(0x2F0661C155AEEEAA, (ulong)arrayData, (ulong)value); }
        internal static void DATAARRAY_ADD_VECTOR(Any* arrayData, float valueX, float valueY, float valueZ) { NativeInvoker.Invoke(0x407F8D034F70F0C2, (ulong)arrayData, *(uint*)&valueX, *(uint*)&valueY, *(uint*)&valueZ); }
        internal static Any* DATAARRAY_ADD_DICT(Any* arrayData) { return (Any*)NativeInvoker.Invoke<IntPtr>(0x6889498B3E19C797, (ulong)arrayData); }
        internal static BOOL DATAARRAY_GET_BOOL(Any* arrayData, int arrayIndex) { return NativeInvoker.Invoke<BOOL>(0x50C1B2874E50C114, (ulong)arrayData, (ulong)arrayIndex); }
        internal static int DATAARRAY_GET_INT(Any* arrayData, int arrayIndex) { return NativeInvoker.Invoke<int>(0x3E5AE19425CD74BE, (ulong)arrayData, (ulong)arrayIndex); }
        internal static float DATAARRAY_GET_FLOAT(Any* arrayData, int arrayIndex) { return NativeInvoker.Invoke<float>(0xC0C527B525D7CFB5, (ulong)arrayData, (ulong)arrayIndex); }
        internal static char* DATAARRAY_GET_STRING(Any* arrayData, int arrayIndex) { return (char*)NativeInvoker.Invoke<IntPtr>(0xD3F2FFEB8D836F52, (ulong)arrayData, (ulong)arrayIndex); }
        internal static Vector3 DATAARRAY_GET_VECTOR(Any* arrayData, int arrayIndex) { return NativeInvoker.Invoke<Vector3>(0x8D2064E5B64A628A, (ulong)arrayData, (ulong)arrayIndex); }
        internal static Any* DATAARRAY_GET_DICT(Any* arrayData, int arrayIndex) { return (Any*)NativeInvoker.Invoke<IntPtr>(0x8B5FADCC4E3A145F, (ulong)arrayData, (ulong)arrayIndex); }
        internal static int DATAARRAY_GET_COUNT(Any* arrayData) { return NativeInvoker.Invoke<int>(0x065DB281590CEA2D, (ulong)arrayData); }
        internal static int DATAARRAY_GET_TYPE(Any* arrayData, int arrayIndex) { return NativeInvoker.Invoke<int>(0x3A0014ADB172A3C5, (ulong)arrayData, (ulong)arrayIndex); }
    }

    internal static unsafe class DECORATOR
    {
        internal static BOOL DECOR_SET_TIME(Entity entity, char* propertyName, int timestamp) { return NativeInvoker.Invoke<BOOL>(0x95AED7B8E39ECAA4, (ulong)entity, (ulong)propertyName, (ulong)timestamp); }
        internal static BOOL DECOR_SET_BOOL(Entity entity, char* propertyName, BOOL value) { return NativeInvoker.Invoke<BOOL>(0x6B1E8E2ED1335B71, (ulong)entity, (ulong)propertyName, (ulong)value); }
        internal static BOOL DECOR_SET_FLOAT(Entity entity, char* propertyName, float value) { return NativeInvoker.Invoke<BOOL>(0x211AB1DD8D0F363A, (ulong)entity, (ulong)propertyName, *(uint*)&value); }
        internal static BOOL DECOR_SET_INT(Entity entity, char* propertyName, int value) { return NativeInvoker.Invoke<BOOL>(0x0CE3AA5E1CA19E10, (ulong)entity, (ulong)propertyName, (ulong)value); }
        internal static BOOL DECOR_GET_BOOL(Entity entity, char* propertyName) { return NativeInvoker.Invoke<BOOL>(0xDACE671663F2F5DB, (ulong)entity, (ulong)propertyName); }
        internal static float DECOR_GET_FLOAT(Entity entity, char* propertyName) { return NativeInvoker.Invoke<float>(0x6524A2F114706F43, (ulong)entity, (ulong)propertyName); }
        internal static int DECOR_GET_INT(Entity entity, char* propertyName) { return NativeInvoker.Invoke<int>(0xA06C969B02A97298, (ulong)entity, (ulong)propertyName); }
        internal static BOOL DECOR_EXIST_ON(Entity entity, char* propertyName) { return NativeInvoker.Invoke<BOOL>(0x05661B80A8C9165F, (ulong)entity, (ulong)propertyName); }
        internal static BOOL DECOR_REMOVE(Entity entity, char* propertyName) { return NativeInvoker.Invoke<BOOL>(0x00EE9F297C738720, (ulong)entity, (ulong)propertyName); }
        internal static void DECOR_REGISTER(char* propertyName, int type) { NativeInvoker.Invoke(0x9FD90732F56403CE, (ulong)propertyName, (ulong)type); }
        internal static BOOL DECOR_IS_REGISTERED_AS_TYPE(char* propertyName, int type) { return NativeInvoker.Invoke<BOOL>(0x4F14F9F870D6FBC8, (ulong)propertyName, (ulong)type); }
        internal static void DECOR_REGISTER_LOCK() { NativeInvoker.Invoke(0xA9D14EEA259F9248); } // 0xA9D14EEA259F9248 0x7F3F1C02 b323<, (ulong)A9D14EEA259F9248); }
    }

    internal static unsafe class DLC
    {
        internal static BOOL N_0x241FCA5B1AA14F75() { return NativeInvoker.Invoke<BOOL>(0x241FCA5B1AA14F75); } // 0x241FCA5B1AA14F75 0x0AF83036 b323, (ulong)241FCA5B1AA14F75); }
        internal static BOOL IS_DLC_PRESENT(Hash dlcHash) { return NativeInvoker.Invoke<BOOL>(0x812595A0644CE1DE, (ulong)dlcHash); }
        internal static BOOL N_0xF2E07819EF1A5289() { return NativeInvoker.Invoke<BOOL>(0xF2E07819EF1A5289); } // 0xF2E07819EF1A5289 0x881B1FDB b323, (ulong)F2E07819EF1A5289); }
        internal static BOOL N_0x9489659372A81585() { return NativeInvoker.Invoke<BOOL>(0x9489659372A81585); } // 0x9489659372A81585 0xC2169164 b323, (ulong)9489659372A81585); }
        internal static BOOL N_0xA213B11DFF526300() { return NativeInvoker.Invoke<BOOL>(0xA213B11DFF526300); } // 0xA213B11DFF526300 0xF79A97F5 b323, (ulong)A213B11DFF526300); }
        internal static BOOL GET_EXTRA_CONTENT_PACK_HAS_BEEN_INSTALLED_() { return NativeInvoker.Invoke<BOOL>(0x8D30F648014A92B5); } // 0x8D30F648014A92B5 0xF69B729C b323, (ulong)8D30F648014A92B5); }
        internal static BOOL GET_IS_LOADING_SCREEN_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0x10D0A8F259E93EC9); } // 0x10D0A8F259E93EC9 0x517B601B b323, (ulong)10D0A8F259E93EC9); }
        internal static BOOL N_0xC4637A6D03C24CC3() { return NativeInvoker.Invoke<BOOL>(0xC4637A6D03C24CC3); } // 0xC4637A6D03C24CC3 b1734, (ulong)C4637A6D03C24CC3); }
        internal static BOOL HAS_CLOUD_REQUESTS_FINISHED(BOOL* p0, Any unused) { return NativeInvoker.Invoke<BOOL>(0x46E2B844905BC5F0, (ulong)p0, (ulong)unused); }
        internal static void ON_ENTER_SP() { NativeInvoker.Invoke(0xD7C10C4A637992C9); } // 0xD7C10C4A637992C9 0x8BF60FC3 b323<, (ulong)D7C10C4A637992C9); }
        internal static void ON_ENTER_MP() { NativeInvoker.Invoke(0x0888C3502DBBEEF5); } // 0x0888C3502DBBEEF5 0xC65586A9 b323<, (ulong)0888C3502DBBEEF5); }
    }

    internal static unsafe class ENTITY
    {
        internal static BOOL DOES_ENTITY_EXIST(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x7239B21A38F536BA, (ulong)entity); }
        internal static BOOL DOES_ENTITY_BELONG_TO_THIS_SCRIPT(Entity entity, BOOL p1) { return NativeInvoker.Invoke<BOOL>(0xDDE6DF5AE89981D2, (ulong)entity, (ulong)p1); }
        internal static BOOL DOES_ENTITY_HAVE_DRAWABLE(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x060D6E96F8B8E48D, (ulong)entity); }
        internal static BOOL DOES_ENTITY_HAVE_PHYSICS(Entity entity) { return NativeInvoker.Invoke<BOOL>(0xDA95EA3317CC5064, (ulong)entity); }
        internal static BOOL HAS_ENTITY_ANIM_FINISHED(Entity entity, char* animDict, char* animName, int p3) { return NativeInvoker.Invoke<BOOL>(0x20B711662962B472, (ulong)entity, (ulong)animDict, (ulong)animName, (ulong)p3); }
        internal static BOOL HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x95EB9964FF5C5C65, (ulong)entity); }
        internal static BOOL HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x605F5A140F202491, (ulong)entity); }
        internal static BOOL HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE(Entity entity) { return NativeInvoker.Invoke<BOOL>(0xDFD5033FDBA0A9C8, (ulong)entity); }
        internal static BOOL HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(Entity entity1, Entity entity2, BOOL p2) { return NativeInvoker.Invoke<BOOL>(0xC86D67D52A707CF8, (ulong)entity1, (ulong)entity2, (ulong)p2); }
        internal static BOOL HAS_ENTITY_CLEAR_LOS_TO_ENTITY(Entity entity1, Entity entity2, int traceType) { return NativeInvoker.Invoke<BOOL>(0xFCDFF7B72D23A1AC, (ulong)entity1, (ulong)entity2, (ulong)traceType); }
        internal static Any HAS_ENTITY_CLEAR_LOS_TO_ENTITY_2_(Entity entity1, Entity entity2, int traceType) { return NativeInvoker.Invoke<Any>(0x394BDE2A7BBA031E, (ulong)entity1, (ulong)entity2, (ulong)traceType); }
        internal static BOOL HAS_ENTITY_CLEAR_LOS_TO_ENTITY_IN_FRONT(Entity entity1, Entity entity2) { return NativeInvoker.Invoke<BOOL>(0x0267D00AF114F17A, (ulong)entity1, (ulong)entity2); }
        internal static BOOL HAS_ENTITY_COLLIDED_WITH_ANYTHING(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x8BAD02F0368D9E14, (ulong)entity); }
        internal static Hash GET_LAST_MATERIAL_HIT_BY_ENTITY(Entity entity) { return NativeInvoker.Invoke<Hash>(0x5C3D0A935F535C4C, (ulong)entity); }
        internal static Vector3 GET_COLLISION_NORMAL_OF_LAST_HIT_FOR_ENTITY(Entity entity) { return NativeInvoker.Invoke<Vector3>(0xE465D4AB7CA6AE72, (ulong)entity); }
        internal static void FORCE_ENTITY_AI_AND_ANIMATION_UPDATE(Entity entity) { NativeInvoker.Invoke(0x40FDEDB72F8293B2, (ulong)entity); }
        internal static float GET_ENTITY_ANIM_CURRENT_TIME(Entity entity, char* animDict, char* animName) { return NativeInvoker.Invoke<float>(0x346D81500D088F42, (ulong)entity, (ulong)animDict, (ulong)animName); }
        internal static float GET_ENTITY_ANIM_TOTAL_TIME(Entity entity, char* animDict, char* animName) { return NativeInvoker.Invoke<float>(0x50BD2730B191E360, (ulong)entity, (ulong)animDict, (ulong)animName); }
        internal static float GET_ANIM_DURATION(char* animDict, char* animName) { return NativeInvoker.Invoke<float>(0xFEDDF04D62B8D790, (ulong)animDict, (ulong)animName); }
        internal static Entity GET_ENTITY_ATTACHED_TO(Entity entity) { return NativeInvoker.Invoke<Entity>(0x48C2BED9180FE123, (ulong)entity); }
        internal static Vector3 GET_ENTITY_COORDS(Entity entity, BOOL alive) { return NativeInvoker.Invoke<Vector3>(0x3FEF770D40960D5A, (ulong)entity, (ulong)alive); }
        internal static Vector3 GET_ENTITY_FORWARD_VECTOR(Entity entity) { return NativeInvoker.Invoke<Vector3>(0x0A794A5A57F8DF91, (ulong)entity); }
        internal static float GET_ENTITY_FORWARD_X(Entity entity) { return NativeInvoker.Invoke<float>(0x8BB4EF4214E0E6D5, (ulong)entity); }
        internal static float GET_ENTITY_FORWARD_Y(Entity entity) { return NativeInvoker.Invoke<float>(0x866A4A5FAE349510, (ulong)entity); }
        internal static float GET_ENTITY_HEADING(Entity entity) { return NativeInvoker.Invoke<float>(0xE83D4F9BA2A38914, (ulong)entity); }
        internal static float GET_ENTITY_PHYSICS_HEADING_(Entity entity) { return NativeInvoker.Invoke<float>(0x846BF6291198A71E, (ulong)entity); }
        internal static int GET_ENTITY_HEALTH(Entity entity) { return NativeInvoker.Invoke<int>(0xEEF059FAD016D209, (ulong)entity); }
        internal static int GET_ENTITY_MAX_HEALTH(Entity entity) { return NativeInvoker.Invoke<int>(0x15D757606D170C3C, (ulong)entity); }
        internal static void SET_ENTITY_MAX_HEALTH(Entity entity, int value) { NativeInvoker.Invoke(0x166E7CF68597D8B5, (ulong)entity, (ulong)value); }
        internal static float GET_ENTITY_HEIGHT(Entity entity, float X, float Y, float Z, BOOL atTop, BOOL inWorldCoords) { return NativeInvoker.Invoke<float>(0x5A504562485944DD, (ulong)entity, *(uint*)&X, *(uint*)&Y, *(uint*)&Z, (ulong)atTop, (ulong)inWorldCoords); }
        internal static float GET_ENTITY_HEIGHT_ABOVE_GROUND(Entity entity) { return NativeInvoker.Invoke<float>(0x1DD55701034110E5, (ulong)entity); }
        internal static void GET_ENTITY_MATRIX(Entity entity, Vector3* forwardVector, Vector3* rightVector, Vector3* upVector, Vector3* position) { NativeInvoker.Invoke(0xECB2FC7235A7D137, (ulong)entity, (ulong)forwardVector, (ulong)rightVector, (ulong)upVector, (ulong)position); }
        internal static Hash GET_ENTITY_MODEL(Entity entity) { return NativeInvoker.Invoke<Hash>(0x9F47B058362C84B5, (ulong)entity); }
        internal static Vector3 GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(Entity entity, float posX, float posY, float posZ) { return NativeInvoker.Invoke<Vector3>(0x2274BC1C4885E333, (ulong)entity, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ); }
        internal static Vector3 GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(Entity entity, float offsetX, float offsetY, float offsetZ) { return NativeInvoker.Invoke<Vector3>(0x1899F328B0E12848, (ulong)entity, *(uint*)&offsetX, *(uint*)&offsetY, *(uint*)&offsetZ); }
        internal static float GET_ENTITY_PITCH(Entity entity) { return NativeInvoker.Invoke<float>(0xD45DC2893621E1FE, (ulong)entity); }
        internal static void GET_ENTITY_QUATERNION(Entity entity, float* x, float* y, float* z, float* w) { NativeInvoker.Invoke(0x7B3703D2D32DFA18, (ulong)entity, (ulong)x, (ulong)y, (ulong)z, (ulong)w); }
        internal static float GET_ENTITY_ROLL(Entity entity) { return NativeInvoker.Invoke<float>(0x831E0242595560DF, (ulong)entity); }
        internal static Vector3 GET_ENTITY_ROTATION(Entity entity, int rotationOrder) { return NativeInvoker.Invoke<Vector3>(0xAFBD61CC738D9EB9, (ulong)entity, (ulong)rotationOrder); }
        internal static Vector3 GET_ENTITY_ROTATION_VELOCITY(Entity entity) { return NativeInvoker.Invoke<Vector3>(0x213B91045D09B983, (ulong)entity); }
        internal static char* GET_ENTITY_SCRIPT(Entity entity, ScrHandle* script) { return (char*)NativeInvoker.Invoke<IntPtr>(0xA6E9C38DB51D7748, (ulong)entity, (ulong)script); }
        internal static float GET_ENTITY_SPEED(Entity entity) { return NativeInvoker.Invoke<float>(0xD5037BA82E12416F, (ulong)entity); }
        internal static Vector3 GET_ENTITY_SPEED_VECTOR(Entity entity, BOOL relative) { return NativeInvoker.Invoke<Vector3>(0x9A8D700A51CB7B0D, (ulong)entity, (ulong)relative); }
        internal static float GET_ENTITY_UPRIGHT_VALUE(Entity entity) { return NativeInvoker.Invoke<float>(0x95EED5A694951F9F, (ulong)entity); }
        internal static Vector3 GET_ENTITY_VELOCITY(Entity entity) { return NativeInvoker.Invoke<Vector3>(0x4805D2B1D8CF94A9, (ulong)entity); }
        internal static Object GET_OBJECT_INDEX_FROM_ENTITY_INDEX(Entity entity) { return NativeInvoker.Invoke<Object>(0xD7E3B9735C0F89D6, (ulong)entity); }
        internal static Ped GET_PED_INDEX_FROM_ENTITY_INDEX(Entity entity) { return NativeInvoker.Invoke<Ped>(0x04A2A40C73395041, (ulong)entity); }
        internal static Vehicle GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(Entity entity) { return NativeInvoker.Invoke<Vehicle>(0x4B53F92932ADFAC0, (ulong)entity); }
        internal static Vector3 GET_WORLD_POSITION_OF_ENTITY_BONE(Entity entity, int boneIndex) { return NativeInvoker.Invoke<Vector3>(0x44A8FCB8ED227738, (ulong)entity, (ulong)boneIndex); }
        internal static Player GET_NEAREST_PLAYER_TO_ENTITY(Entity entity) { return NativeInvoker.Invoke<Player>(0x7196842CB375CDB3, (ulong)entity); }
        internal static Player GET_NEAREST_PLAYER_TO_ENTITY_ON_TEAM(Entity entity, int team) { return NativeInvoker.Invoke<Player>(0x4DC9A62F844D9337, (ulong)entity, (ulong)team); }
        internal static int GET_ENTITY_TYPE(Entity entity) { return NativeInvoker.Invoke<int>(0x8ACD366038D14505, (ulong)entity); }
        internal static int GET_ENTITY_POPULATION_TYPE(Entity entity) { return NativeInvoker.Invoke<int>(0xF6F5161F4534EDFF, (ulong)entity); }
        internal static BOOL IS_AN_ENTITY(int handle) { return NativeInvoker.Invoke<BOOL>(0x731EC8A916BD11A1, (ulong)handle); }
        internal static BOOL IS_ENTITY_A_PED(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x524AC5ECEA15343E, (ulong)entity); }
        internal static BOOL IS_ENTITY_A_MISSION_ENTITY(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x0A7B270912999B3C, (ulong)entity); }
        internal static BOOL IS_ENTITY_A_VEHICLE(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x6AC7003FA6E5575E, (ulong)entity); }
        internal static BOOL IS_ENTITY_AN_OBJECT(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x8D68C8FD0FACA94E, (ulong)entity); }
        internal static BOOL IS_ENTITY_AT_COORD(Entity entity, float xPos, float yPos, float zPos, float xSize, float ySize, float zSize, BOOL p7, BOOL p8, int p9) { return NativeInvoker.Invoke<BOOL>(0x20B60995556D004F, (ulong)entity, *(uint*)&xPos, *(uint*)&yPos, *(uint*)&zPos, *(uint*)&xSize, *(uint*)&ySize, *(uint*)&zSize, (ulong)p7, (ulong)p8, (ulong)p9); }
        internal static BOOL IS_ENTITY_AT_ENTITY(Entity entity1, Entity entity2, float xSize, float ySize, float zSize, BOOL p5, BOOL p6, int p7) { return NativeInvoker.Invoke<BOOL>(0x751B70C3D034E187, (ulong)entity1, (ulong)entity2, *(uint*)&xSize, *(uint*)&ySize, *(uint*)&zSize, (ulong)p5, (ulong)p6, (ulong)p7); }
        internal static BOOL IS_ENTITY_ATTACHED(Entity entity) { return NativeInvoker.Invoke<BOOL>(0xB346476EF1A64897, (ulong)entity); }
        internal static BOOL IS_ENTITY_ATTACHED_TO_ANY_OBJECT(Entity entity) { return NativeInvoker.Invoke<BOOL>(0xCF511840CEEDE0CC, (ulong)entity); }
        internal static BOOL IS_ENTITY_ATTACHED_TO_ANY_PED(Entity entity) { return NativeInvoker.Invoke<BOOL>(0xB1632E9A5F988D11, (ulong)entity); }
        internal static BOOL IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x26AA915AD89BFB4B, (ulong)entity); }
        internal static BOOL IS_ENTITY_ATTACHED_TO_ENTITY(Entity from, Entity to) { return NativeInvoker.Invoke<BOOL>(0xEFBE71898A993728, (ulong)from, (ulong)to); }
        internal static BOOL IS_ENTITY_DEAD(Entity entity, BOOL p1) { return NativeInvoker.Invoke<BOOL>(0x5F9532F3B5CC2551, (ulong)entity, (ulong)p1); }
        internal static BOOL IS_ENTITY_IN_AIR(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x886E37EC497200B6, (ulong)entity); }
        internal static BOOL IS_ENTITY_IN_ANGLED_AREA(Entity entity, float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL debug, BOOL includeZ, Any p10) { return NativeInvoker.Invoke<BOOL>(0x51210CED3DA1C78A, (ulong)entity, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&width, (ulong)debug, (ulong)includeZ, (ulong)p10); }
        internal static BOOL IS_ENTITY_IN_AREA(Entity entity, float x1, float y1, float z1, float x2, float y2, float z2, BOOL p7, BOOL p8, Any p9) { return NativeInvoker.Invoke<BOOL>(0x54736AA40E271165, (ulong)entity, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)p7, (ulong)p8, (ulong)p9); }
        internal static BOOL IS_ENTITY_IN_ZONE(Entity entity, char* zone) { return NativeInvoker.Invoke<BOOL>(0xB6463CF6AF527071, (ulong)entity, (ulong)zone); }
        internal static BOOL IS_ENTITY_IN_WATER(Entity entity) { return NativeInvoker.Invoke<BOOL>(0xCFB0A0D8EDD145A3, (ulong)entity); }
        internal static float GET_ENTITY_SUBMERGED_LEVEL(Entity entity) { return NativeInvoker.Invoke<float>(0xE81AFC1BC4CC41CE, (ulong)entity); }
        internal static void N_0x694E00132F2823ED(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0x694E00132F2823ED, (ulong)entity, (ulong)toggle); }
        internal static BOOL IS_ENTITY_ON_SCREEN(Entity entity) { return NativeInvoker.Invoke<BOOL>(0xE659E47AF827484B, (ulong)entity); }
        internal static BOOL IS_ENTITY_PLAYING_ANIM(Entity entity, char* animDict, char* animName, int taskFlag) { return NativeInvoker.Invoke<BOOL>(0x1F0B79228E461EC9, (ulong)entity, (ulong)animDict, (ulong)animName, (ulong)taskFlag); }
        internal static BOOL IS_ENTITY_STATIC(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x1218E6886D3D8327, (ulong)entity); }
        internal static BOOL IS_ENTITY_TOUCHING_ENTITY(Entity entity, Entity targetEntity) { return NativeInvoker.Invoke<BOOL>(0x17FFC1B2BA35A494, (ulong)entity, (ulong)targetEntity); }
        internal static BOOL IS_ENTITY_TOUCHING_MODEL(Entity entity, Hash modelHash) { return NativeInvoker.Invoke<BOOL>(0x0F42323798A58C8C, (ulong)entity, (ulong)modelHash); }
        internal static BOOL IS_ENTITY_UPRIGHT(Entity entity, float angle) { return NativeInvoker.Invoke<BOOL>(0x5333F526F6AB19AA, (ulong)entity, *(uint*)&angle); }
        internal static BOOL IS_ENTITY_UPSIDEDOWN(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x1DBD58820FA61D71, (ulong)entity); }
        internal static BOOL IS_ENTITY_VISIBLE(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x47D6F43D77935C75, (ulong)entity); }
        internal static BOOL IS_ENTITY_VISIBLE_TO_SCRIPT(Entity entity) { return NativeInvoker.Invoke<BOOL>(0xD796CB5BA8F20E32, (ulong)entity); }
        internal static BOOL IS_ENTITY_OCCLUDED(Entity entity) { return NativeInvoker.Invoke<BOOL>(0xE31C2C72B8692B64, (ulong)entity); }
        internal static BOOL WOULD_ENTITY_BE_OCCLUDED(Hash entityModelHash, float x, float y, float z, BOOL p4) { return NativeInvoker.Invoke<BOOL>(0xEE5D2A122E09EC42, (ulong)entityModelHash, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)p4); }
        internal static BOOL IS_ENTITY_WAITING_FOR_WORLD_COLLISION(Entity entity) { return NativeInvoker.Invoke<BOOL>(0xD05BFF0C0A12C68F, (ulong)entity); }
        internal static void APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(Entity entity, int forceType, float x, float y, float z, BOOL p5, BOOL isDirectionRel, BOOL isForceRel, BOOL p8) { NativeInvoker.Invoke(0x18FF00FC7EFF559E, (ulong)entity, (ulong)forceType, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)p5, (ulong)isDirectionRel, (ulong)isForceRel, (ulong)p8); }
        internal static void APPLY_FORCE_TO_ENTITY(Entity entity, int forceFlags, float x, float y, float z, float offX, float offY, float offZ, int boneIndex, BOOL isDirectionRel, BOOL ignoreUpVec, BOOL isForceRel, BOOL p12, BOOL p13) { NativeInvoker.Invoke(0xC5F68BE9613E2D18, (ulong)entity, (ulong)forceFlags, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&offX, *(uint*)&offY, *(uint*)&offZ, (ulong)boneIndex, (ulong)isDirectionRel, (ulong)ignoreUpVec, (ulong)isForceRel, (ulong)p12, (ulong)p13); }
        internal static void ATTACH_ENTITY_TO_ENTITY(Entity entity1, Entity entity2, int boneIndex, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, BOOL p9, BOOL useSoftPinning, BOOL collision, BOOL isPed, int vertexIndex, BOOL fixedRot) { NativeInvoker.Invoke(0x6B9BBD38AB0796DF, (ulong)entity1, (ulong)entity2, (ulong)boneIndex, *(uint*)&xPos, *(uint*)&yPos, *(uint*)&zPos, *(uint*)&xRot, *(uint*)&yRot, *(uint*)&zRot, (ulong)p9, (ulong)useSoftPinning, (ulong)collision, (ulong)isPed, (ulong)vertexIndex, (ulong)fixedRot); }
        internal static void ATTACH_ENTITY_BONE_TO_ENTITY_BONE_(Entity entity1, Entity entity2, int boneIndex1, int boneIndex2, BOOL p4, BOOL p5) { NativeInvoker.Invoke(0x5C48B75732C8456C, (ulong)entity1, (ulong)entity2, (ulong)boneIndex1, (ulong)boneIndex2, (ulong)p4, (ulong)p5); }
        internal static void ATTACH_ENTITY_BONE_TO_ENTITY_BONE_PHYSICALLY_(Entity entity1, Entity entity2, int boneIndex1, int boneIndex2, BOOL p4, BOOL p5) { NativeInvoker.Invoke(0xFD1695C5D3B05439, (ulong)entity1, (ulong)entity2, (ulong)boneIndex1, (ulong)boneIndex2, (ulong)p4, (ulong)p5); }
        internal static void ATTACH_ENTITY_TO_ENTITY_PHYSICALLY(Entity entity1, Entity entity2, int boneIndex1, int boneIndex2, float xPos1, float yPos1, float zPos1, float xPos2, float yPos2, float zPos2, float xRot, float yRot, float zRot, float breakForce, BOOL fixedRot, BOOL p15, BOOL collision, BOOL p17, int p18) { NativeInvoker.Invoke(0xC3675780C92F90F9, (ulong)entity1, (ulong)entity2, (ulong)boneIndex1, (ulong)boneIndex2, *(uint*)&xPos1, *(uint*)&yPos1, *(uint*)&zPos1, *(uint*)&xPos2, *(uint*)&yPos2, *(uint*)&zPos2, *(uint*)&xRot, *(uint*)&yRot, *(uint*)&zRot, *(uint*)&breakForce, (ulong)fixedRot, (ulong)p15, (ulong)collision, (ulong)p17, (ulong)p18); }
        internal static void PROCESS_ENTITY_ATTACHMENTS(Entity entity) { NativeInvoker.Invoke(0xF4080490ADC51C6F, (ulong)entity); }
        internal static int GET_ENTITY_BONE_INDEX_BY_NAME(Entity entity, char* boneName) { return NativeInvoker.Invoke<int>(0xFB71170B7E76ACBA, (ulong)entity, (ulong)boneName); }
        internal static void CLEAR_ENTITY_LAST_DAMAGE_ENTITY(Entity entity) { NativeInvoker.Invoke(0xA72CD9CA74A5ECBA, (ulong)entity); }
        internal static void DELETE_ENTITY(Entity* entity) { NativeInvoker.Invoke(0xAE3CBE5BF394C9C9, (ulong)entity); }
        internal static void DETACH_ENTITY(Entity entity, BOOL dynamic, BOOL collision) { NativeInvoker.Invoke(0x961AC54BF0613F5D, (ulong)entity, (ulong)dynamic, (ulong)collision); }
        internal static void FREEZE_ENTITY_POSITION(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0x428CA6DBD1094446, (ulong)entity, (ulong)toggle); }
        internal static void SET_ENTITY_CLEANUP_BY_ENGINE_(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0x3910051CCECDB00C, (ulong)entity, (ulong)toggle); }
        internal static BOOL PLAY_ENTITY_ANIM(Entity entity, char* animName, char* animDict, float p3, BOOL loop, BOOL stayInAnim, BOOL p6, float delta, Any bitset) { return NativeInvoker.Invoke<BOOL>(0x7FB218262B810701, (ulong)entity, (ulong)animName, (ulong)animDict, *(uint*)&p3, (ulong)loop, (ulong)stayInAnim, (ulong)p6, *(uint*)&delta, (ulong)bitset); }
        internal static BOOL PLAY_SYNCHRONIZED_ENTITY_ANIM(Entity entity, int syncedScene, char* animation, char* propName, float p4, float p5, Any p6, float p7) { return NativeInvoker.Invoke<BOOL>(0xC77720A12FE14A86, (ulong)entity, (ulong)syncedScene, (ulong)animation, (ulong)propName, *(uint*)&p4, *(uint*)&p5, (ulong)p6, *(uint*)&p7); }
        internal static BOOL PLAY_SYNCHRONIZED_MAP_ENTITY_ANIM(float p0, float p1, float p2, float p3, Any p4, Any p5, Any* p6, Any* p7, float p8, float p9, Any p10, float p11) { return NativeInvoker.Invoke<BOOL>(0xB9C54555ED30FBC4, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, *(uint*)&p8, *(uint*)&p9, (ulong)p10, *(uint*)&p11); }
        internal static BOOL STOP_SYNCHRONIZED_MAP_ENTITY_ANIM(float p0, float p1, float p2, float p3, Any p4, float p5) { return NativeInvoker.Invoke<BOOL>(0x11E79CAB7183B6F5, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, (ulong)p4, *(uint*)&p5); }
        internal static Any STOP_ENTITY_ANIM(Entity entity, char* animation, char* animGroup, float p3) { return NativeInvoker.Invoke<Any>(0x28004F88151E03E0, (ulong)entity, (ulong)animation, (ulong)animGroup, *(uint*)&p3); }
        internal static BOOL STOP_SYNCHRONIZED_ENTITY_ANIM(Entity entity, float p1, BOOL p2) { return NativeInvoker.Invoke<BOOL>(0x43D3807C077261E3, (ulong)entity, *(uint*)&p1, (ulong)p2); }
        internal static BOOL HAS_ANIM_EVENT_FIRED(Entity entity, Hash actionHash) { return NativeInvoker.Invoke<BOOL>(0xEAF4CD9EA3E7E922, (ulong)entity, (ulong)actionHash); }
        internal static BOOL FIND_ANIM_EVENT_PHASE(char* animDictionary, char* animName, char* p2, Any* p3, Any* p4) { return NativeInvoker.Invoke<BOOL>(0x07F1BE2BCCAA27A7, (ulong)animDictionary, (ulong)animName, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void SET_ENTITY_ANIM_CURRENT_TIME(Entity entity, char* animDictionary, char* animName, float time) { NativeInvoker.Invoke(0x4487C259F0F70977, (ulong)entity, (ulong)animDictionary, (ulong)animName, *(uint*)&time); }
        internal static void SET_ENTITY_ANIM_SPEED(Entity entity, char* animDictionary, char* animName, float speedMultiplier) { NativeInvoker.Invoke(0x28D1A16553C51776, (ulong)entity, (ulong)animDictionary, (ulong)animName, *(uint*)&speedMultiplier); }
        internal static void SET_ENTITY_AS_MISSION_ENTITY(Entity entity, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xAD738C3085FE7E11, (ulong)entity, (ulong)p1, (ulong)p2); }
        internal static void SET_ENTITY_AS_NO_LONGER_NEEDED(Entity* entity) { NativeInvoker.Invoke(0xB736A491E64A32CF, (ulong)entity); }
        internal static void SET_PED_AS_NO_LONGER_NEEDED(Ped* ped) { NativeInvoker.Invoke(0x2595DD4236549CE3, (ulong)ped); }
        internal static void SET_VEHICLE_AS_NO_LONGER_NEEDED(Vehicle* vehicle) { NativeInvoker.Invoke(0x629BFA74418D6239, (ulong)vehicle); }
        internal static void SET_OBJECT_AS_NO_LONGER_NEEDED(Object* @object) { NativeInvoker.Invoke(0x3AE22DEB5BA5A3E6, (ulong)@object); }
        internal static void SET_ENTITY_CAN_BE_DAMAGED(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0x1760FFA8AB074D66, (ulong)entity, (ulong)toggle); }
        internal static BOOL GET_ENTITY_CAN_BE_DAMAGED_(Entity entity) { return NativeInvoker.Invoke<BOOL>(0xD95CC5D2AB15A09F, (ulong)entity); }
        internal static void SET_ENTITY_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP(Entity entity, BOOL bCanBeDamaged, int relGroup) { NativeInvoker.Invoke(0xE22D8FDE858B8119, (ulong)entity, (ulong)bCanBeDamaged, (ulong)relGroup); }
        internal static void N_0x352E2B5CF420BF3B(Any p0, Any p1) { NativeInvoker.Invoke(0x352E2B5CF420BF3B, (ulong)p0, (ulong)p1); }
        internal static void SET_ENTITY_CAN_BE_TARGETED_WITHOUT_LOS(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0xD3997889736FD899, (ulong)entity, (ulong)toggle); }
        internal static void SET_ENTITY_COLLISION(Entity entity, BOOL toggle, BOOL keepPhysics) { NativeInvoker.Invoke(0x1A9205C1B9EE827F, (ulong)entity, (ulong)toggle, (ulong)keepPhysics); }
        internal static BOOL GET_ENTITY_COLLISION_DISABLED(Entity entity) { return NativeInvoker.Invoke<BOOL>(0xCCF1E97BEFDAE480, (ulong)entity); }
        internal static void SET_ENTITY_COMPLETELY_DISABLE_COLLISION(Entity entity, BOOL toggle, BOOL keepPhysics) { NativeInvoker.Invoke(0x9EBC85ED0FFFE51C, (ulong)entity, (ulong)toggle, (ulong)keepPhysics); }
        internal static void SET_ENTITY_COORDS(Entity entity, float xPos, float yPos, float zPos, BOOL xAxis, BOOL yAxis, BOOL zAxis, BOOL clearArea) { NativeInvoker.Invoke(0x06843DA7060A026B, (ulong)entity, *(uint*)&xPos, *(uint*)&yPos, *(uint*)&zPos, (ulong)xAxis, (ulong)yAxis, (ulong)zAxis, (ulong)clearArea); }
        internal static void SET_ENTITY_COORDS_WITHOUT_PLANTS_RESET(Entity entity, float xPos, float yPos, float zPos, BOOL alive, BOOL deadFlag, BOOL ragdollFlag, BOOL clearArea) { NativeInvoker.Invoke(0x621873ECE1178967, (ulong)entity, *(uint*)&xPos, *(uint*)&yPos, *(uint*)&zPos, (ulong)alive, (ulong)deadFlag, (ulong)ragdollFlag, (ulong)clearArea); }
        internal static void SET_ENTITY_COORDS_NO_OFFSET(Entity entity, float xPos, float yPos, float zPos, BOOL xAxis, BOOL yAxis, BOOL zAxis) { NativeInvoker.Invoke(0x239A3351AC1DA385, (ulong)entity, *(uint*)&xPos, *(uint*)&yPos, *(uint*)&zPos, (ulong)xAxis, (ulong)yAxis, (ulong)zAxis); }
        internal static void SET_ENTITY_DYNAMIC(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0x1718DE8E3F2823CA, (ulong)entity, (ulong)toggle); }
        internal static void SET_ENTITY_HEADING(Entity entity, float heading) { NativeInvoker.Invoke(0x8E2530AA8ADA980E, (ulong)entity, *(uint*)&heading); }
        internal static void SET_ENTITY_HEALTH(Entity entity, int health, int p2) { NativeInvoker.Invoke(0x6B76DC1F3AE6E6A3, (ulong)entity, (ulong)health, (ulong)p2); }
        internal static void SET_ENTITY_INVINCIBLE(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0x3882114BDE571AD4, (ulong)entity, (ulong)toggle); }
        internal static void SET_ENTITY_IS_TARGET_PRIORITY(Entity entity, BOOL p1, float p2) { NativeInvoker.Invoke(0xEA02E132F5C68722, (ulong)entity, (ulong)p1, *(uint*)&p2); }
        internal static void SET_ENTITY_LIGHTS(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0x7CFBA6A80BDF3874, (ulong)entity, (ulong)toggle); }
        internal static void SET_ENTITY_LOAD_COLLISION_FLAG(Entity entity, BOOL toggle, Any p2) { NativeInvoker.Invoke(0x0DC7CABAB1E9B67E, (ulong)entity, (ulong)toggle, (ulong)p2); }
        internal static BOOL HAS_COLLISION_LOADED_AROUND_ENTITY(Entity entity) { return NativeInvoker.Invoke<BOOL>(0xE9676F61BC0B3321, (ulong)entity); }
        internal static void SET_ENTITY_MAX_SPEED(Entity entity, float speed) { NativeInvoker.Invoke(0x0E46A3FCBDE2A1B1, (ulong)entity, *(uint*)&speed); }
        internal static void SET_ENTITY_ONLY_DAMAGED_BY_PLAYER(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0x79F020FF9EDC0748, (ulong)entity, (ulong)toggle); }
        internal static void SET_ENTITY_ONLY_DAMAGED_BY_RELATIONSHIP_GROUP(Entity entity, BOOL p1, Any p2) { NativeInvoker.Invoke(0x7022BD828FA0B082, (ulong)entity, (ulong)p1, (ulong)p2); }
        internal static void SET_ENTITY_PROOFS(Entity entity, BOOL bulletProof, BOOL fireProof, BOOL explosionProof, BOOL collisionProof, BOOL meleeProof, BOOL p6, BOOL p7, BOOL drownProof) { NativeInvoker.Invoke(0xFAEE099C6F890BB8, (ulong)entity, (ulong)bulletProof, (ulong)fireProof, (ulong)explosionProof, (ulong)collisionProof, (ulong)meleeProof, (ulong)p6, (ulong)p7, (ulong)drownProof); }
        internal static BOOL GET_ENTITY_PROOFS_(Entity entity, BOOL* bulletProof, BOOL* fireProof, BOOL* explosionProof, BOOL* collisionProof, BOOL* meleeProof, BOOL* steamProof, BOOL* p7, BOOL* drownProof) { return NativeInvoker.Invoke<BOOL>(0xBE8CD9BE829BBEBF, (ulong)entity, (ulong)bulletProof, (ulong)fireProof, (ulong)explosionProof, (ulong)collisionProof, (ulong)meleeProof, (ulong)steamProof, (ulong)p7, (ulong)drownProof); }
        internal static void SET_ENTITY_QUATERNION(Entity entity, float x, float y, float z, float w) { NativeInvoker.Invoke(0x77B21BE7AC540F07, (ulong)entity, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&w); }
        internal static void SET_ENTITY_RECORDS_COLLISIONS(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0x0A50A1EEDAD01E65, (ulong)entity, (ulong)toggle); }
        internal static void SET_ENTITY_ROTATION(Entity entity, float pitch, float roll, float yaw, int rotationOrder, BOOL p5) { NativeInvoker.Invoke(0x8524A8B0171D5E07, (ulong)entity, *(uint*)&pitch, *(uint*)&roll, *(uint*)&yaw, (ulong)rotationOrder, (ulong)p5); }
        internal static void SET_ENTITY_VISIBLE(Entity entity, BOOL toggle, BOOL unk) { NativeInvoker.Invoke(0xEA1C610A04DB6BBB, (ulong)entity, (ulong)toggle, (ulong)unk); }
        internal static void N_0xC34BC448DA29F5E9(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0xC34BC448DA29F5E9, (ulong)entity, (ulong)toggle); }
        internal static void N_0xE66377CDDADA4810(Entity entity, BOOL p1) { NativeInvoker.Invoke(0xE66377CDDADA4810, (ulong)entity, (ulong)p1); }
        internal static void SET_ENTITY_VELOCITY(Entity entity, float x, float y, float z) { NativeInvoker.Invoke(0x1C99BB7B6E96D16F, (ulong)entity, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void SET_ENTITY_ANGULAR_VELOCITY_(Entity entity, float x, float y, float z) { NativeInvoker.Invoke(0x8339643499D1222E, (ulong)entity, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void SET_ENTITY_HAS_GRAVITY(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0x4A4722448F18EEF5, (ulong)entity, (ulong)toggle); }
        internal static void SET_ENTITY_LOD_DIST(Entity entity, int value) { NativeInvoker.Invoke(0x5927F96A78577363, (ulong)entity, (ulong)value); }
        internal static int GET_ENTITY_LOD_DIST(Entity entity) { return NativeInvoker.Invoke<int>(0x4159C2762B5791D6, (ulong)entity); }
        internal static void SET_ENTITY_ALPHA(Entity entity, int alphaLevel, BOOL skin) { NativeInvoker.Invoke(0x44A0870B7E92D7C0, (ulong)entity, (ulong)alphaLevel, (ulong)skin); }
        internal static int GET_ENTITY_ALPHA(Entity entity) { return NativeInvoker.Invoke<int>(0x5A47B3B5E63E94C6, (ulong)entity); }
        internal static void RESET_ENTITY_ALPHA(Entity entity) { NativeInvoker.Invoke(0x9B1E824FFBB7027A, (ulong)entity); }
        internal static void N_0x490861B88F4FD846(Any p0) { NativeInvoker.Invoke(0x490861B88F4FD846, (ulong)p0); }
        internal static void N_0xCEA7C8E1B48FF68C(Any p0, Any p1) { NativeInvoker.Invoke(0xCEA7C8E1B48FF68C, (ulong)p0, (ulong)p1); }
        internal static void N_0x5C3B791D580E0BC2(Entity entity, float p1) { NativeInvoker.Invoke(0x5C3B791D580E0BC2, (ulong)entity, *(uint*)&p1); }
        internal static void SET_ENTITY_ALWAYS_PRERENDER(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0xACAD101E1FB66689, (ulong)entity, (ulong)toggle); }
        internal static void SET_ENTITY_RENDER_SCORCHED(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0x730F5F8D3F0F2050, (ulong)entity, (ulong)toggle); }
        internal static void SET_ENTITY_TRAFFICLIGHT_OVERRIDE(Entity entity, int state) { NativeInvoker.Invoke(0x57C5DB656185EAC4, (ulong)entity, (ulong)state); }
        internal static void N_0x78E8E3A640178255(Entity entity) { NativeInvoker.Invoke(0x78E8E3A640178255, (ulong)entity); }
        internal static void CREATE_MODEL_SWAP(float x, float y, float z, float radius, Hash originalModel, Hash newModel, BOOL p6) { NativeInvoker.Invoke(0x92C47782FDA8B2A3, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)originalModel, (ulong)newModel, (ulong)p6); }
        internal static void REMOVE_MODEL_SWAP(float x, float y, float z, float radius, Hash originalModel, Hash newModel, BOOL p6) { NativeInvoker.Invoke(0x033C0F9A64E229AE, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)originalModel, (ulong)newModel, (ulong)p6); }
        internal static void CREATE_MODEL_HIDE(float x, float y, float z, float radius, Hash modelHash, BOOL p5) { NativeInvoker.Invoke(0x8A97BCA30A0CE478, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)modelHash, (ulong)p5); }
        internal static void CREATE_MODEL_HIDE_EXCLUDING_SCRIPT_OBJECTS(float x, float y, float z, float radius, Hash modelHash, BOOL p5) { NativeInvoker.Invoke(0x3A52AE588830BF7F, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)modelHash, (ulong)p5); }
        internal static void REMOVE_MODEL_HIDE(float x, float y, float z, float radius, Hash modelHash, BOOL p5) { NativeInvoker.Invoke(0xD9E3006FB3CBD765, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)modelHash, (ulong)p5); }
        internal static void CREATE_FORCED_OBJECT(float x, float y, float z, Any p3, Hash modelHash, BOOL p5) { NativeInvoker.Invoke(0x150E808B375A385A, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)p3, (ulong)modelHash, (ulong)p5); }
        internal static void REMOVE_FORCED_OBJECT(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x61B6775E83C0DB6F, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void SET_ENTITY_NO_COLLISION_ENTITY(Entity entity1, Entity entity2, BOOL thisFrameOnly) { NativeInvoker.Invoke(0xA53ED5520C07654A, (ulong)entity1, (ulong)entity2, (ulong)thisFrameOnly); }
        internal static void SET_ENTITY_MOTION_BLUR(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0x295D82A8559F9150, (ulong)entity, (ulong)toggle); }
        internal static void SET_CAN_AUTO_VAULT_ON_ENTITY(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0xE12ABE5E3A389A6C, (ulong)entity, (ulong)toggle); }
        internal static void SET_CAN_CLIMB_ON_ENTITY(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0xA80AE305E0A3044F, (ulong)entity, (ulong)toggle); }
        internal static void N_0xDC6F8601FAF2E893(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0xDC6F8601FAF2E893, (ulong)entity, (ulong)toggle); }
        internal static void SET_ENTITY_DECALS_DISABLED_(Entity entity, BOOL p1) { NativeInvoker.Invoke(0x2C2E3DC128F44309, (ulong)entity, (ulong)p1); }
        internal static void N_0x1A092BB0C3808B96(Entity entity, BOOL p1) { NativeInvoker.Invoke(0x1A092BB0C3808B96, (ulong)entity, (ulong)p1); }
        internal static Vector3 GET_ENTITY_BONE_ROTATION_(Entity entity, int boneIndex) { return NativeInvoker.Invoke<Vector3>(0xCE6294A232D03786, (ulong)entity, (ulong)boneIndex); }
        internal static Vector3 GET_ENTITY_BONE_POSITION_2_(Entity entity, int boneIndex) { return NativeInvoker.Invoke<Vector3>(0x46F8696933A63C9B, (ulong)entity, (ulong)boneIndex); }
        internal static Vector3 GET_ENTITY_BONE_ROTATION_LOCAL_(Entity entity, int boneIndex) { return NativeInvoker.Invoke<Vector3>(0xBD8D32550E5CEBFE, (ulong)entity, (ulong)boneIndex); }
        internal static int GET_ENTITY_BONE_COUNT_(Entity entity) { return NativeInvoker.Invoke<int>(0xB328DCC3A3AA401B, (ulong)entity); }
        internal static void ENABLE_ENTITY_UNK_(Entity entity) { NativeInvoker.Invoke(0x6CE177D014502E8A, (ulong)entity); }
        internal static void N_0xB17BC6453F6CF5AC(Any p0, Any p1) { NativeInvoker.Invoke(0xB17BC6453F6CF5AC, (ulong)p0, (ulong)p1); }
        internal static void N_0x68B562E124CC0AEF(Pickup pickup, Pickup pickup2) { NativeInvoker.Invoke(0x68B562E124CC0AEF, (ulong)pickup, (ulong)pickup2); }
        internal static void N_0x36F32DE87082343E(Any p0, Any p1) { NativeInvoker.Invoke(0x36F32DE87082343E, (ulong)p0, (ulong)p1); }
        internal static Entity GET_ENTITY_PICKUP_(Entity entity, Hash modelHash) { return NativeInvoker.Invoke<Entity>(0x1F922734E259BD26, (ulong)entity, (ulong)modelHash); }
        internal static void N_0xD7B80E7C3BEFC396(Pickup pickup, BOOL toggle) { NativeInvoker.Invoke(0xD7B80E7C3BEFC396, (ulong)pickup, (ulong)toggle); }
    }

    internal static unsafe class EVENT
    {
        internal static void SET_DECISION_MAKER(Ped ped, Hash name) { NativeInvoker.Invoke(0xB604A2942ADED0EE, (ulong)ped, (ulong)name); }
        internal static void CLEAR_DECISION_MAKER_EVENT_RESPONSE(Hash name, int @eventType) { NativeInvoker.Invoke(0x4FC9381A7AEE8968, (ulong)name, (ulong)@eventType); }
        internal static void BLOCK_DECISION_MAKER_EVENT(Hash name, int @eventType) { NativeInvoker.Invoke(0xE42FCDFD0E4196F7, (ulong)name, (ulong)@eventType); }
        internal static void UNBLOCK_DECISION_MAKER_EVENT(Hash name, int @eventType) { NativeInvoker.Invoke(0xD7CD9CF34F2C99E8, (ulong)name, (ulong)@eventType); }
        internal static ScrHandle ADD_SHOCKING_EVENT_AT_POSITION(int @eventType, float x, float y, float z, float duration) { return NativeInvoker.Invoke<ScrHandle>(0xD9F8455409B525E9, (ulong)@eventType, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&duration); }
        internal static ScrHandle ADD_SHOCKING_EVENT_FOR_ENTITY(int @eventType, Entity entity, float duration) { return NativeInvoker.Invoke<ScrHandle>(0x7FD8F3BE76F89422, (ulong)@eventType, (ulong)entity, *(uint*)&duration); }
        internal static BOOL IS_SHOCKING_EVENT_IN_SPHERE(int @eventType, float x, float y, float z, float radius) { return NativeInvoker.Invoke<BOOL>(0x1374ABB7C15BAB92, (ulong)@eventType, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius); }
        internal static BOOL REMOVE_SHOCKING_EVENT(ScrHandle @event) { return NativeInvoker.Invoke<BOOL>(0x2CDA538C44C6CCE5, (ulong)@event); }
        internal static void REMOVE_ALL_SHOCKING_EVENTS(BOOL p0) { NativeInvoker.Invoke(0xEAABE8FDFA21274C, (ulong)p0); }
        internal static void REMOVE_SHOCKING_EVENT_SPAWN_BLOCKING_AREAS() { NativeInvoker.Invoke(0x340F1415B68AEADE); } // 0x340F1415B68AEADE 0xA0CE89C8 b323<, (ulong)340F1415B68AEADE); }
        internal static void SUPPRESS_SHOCKING_EVENTS_NEXT_FRAME() { NativeInvoker.Invoke(0x2F9A292AD0A3BD89); } // 0x2F9A292AD0A3BD89 0x4CC674B5 b323<, (ulong)2F9A292AD0A3BD89); }
        internal static void SUPPRESS_SHOCKING_EVENT_TYPE_NEXT_FRAME(int @eventType) { NativeInvoker.Invoke(0x3FD2EC8BF1F1CF30, (ulong)@eventType); }
        internal static void SUPPRESS_AGITATION_EVENTS_NEXT_FRAME() { NativeInvoker.Invoke(0x5F3B7749C112D552); } // 0x5F3B7749C112D552 0x80340396 b323<, (ulong)5F3B7749C112D552); }
    }

    internal static unsafe class FILES
    {
        internal static int GET_NUM_TATTOO_SHOP_DLC_ITEMS(int character) { return NativeInvoker.Invoke<int>(0x278F76C3B0A8F109, (ulong)character); }
        internal static BOOL GET_TATTOO_SHOP_DLC_ITEM_DATA(int characterType, int decorationIndex, Any* outComponent) { return NativeInvoker.Invoke<BOOL>(0xFF56381874F82086, (ulong)characterType, (ulong)decorationIndex, (ulong)outComponent); }
        internal static int N_0x10144267DD22866C(Hash overlayHash, Any p1, int character) { return NativeInvoker.Invoke<int>(0x10144267DD22866C, (ulong)overlayHash, (ulong)p1, (ulong)character); }
        internal static void INIT_SHOP_PED_COMPONENT(Any* outComponent) { NativeInvoker.Invoke(0x1E8C308FD312C036, (ulong)outComponent); }
        internal static void INIT_SHOP_PED_PROP(Any* outProp) { NativeInvoker.Invoke(0xEB0A2B758F7B850F, (ulong)outProp); }
        internal static int SETUP_SHOP_PED_APPAREL_QUERY(int p0, int p1, int p2, int p3) { return NativeInvoker.Invoke<int>(0x50F457823CE6EB5F, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static int SETUP_SHOP_PED_APPAREL_QUERY_TU(int character, int p1, int p2, BOOL p3, int p4, int componentId) { return NativeInvoker.Invoke<int>(0x9BDF59818B1E38C1, (ulong)character, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)componentId); }
        internal static void GET_SHOP_PED_QUERY_COMPONENT(int componentId, Any* outComponent) { NativeInvoker.Invoke(0x249E310B2D920699, (ulong)componentId, (ulong)outComponent); }
        internal static int N_0x96E2929292A4DB77(Hash componentHash) { return NativeInvoker.Invoke<int>(0x96E2929292A4DB77, (ulong)componentHash); }
        internal static void GET_SHOP_PED_COMPONENT(Hash componentHash, Any* outComponent) { NativeInvoker.Invoke(0x74C0E2A57EC66760, (ulong)componentHash, (ulong)outComponent); }
        internal static void GET_SHOP_PED_QUERY_PROP(int componentId, Any* outProp) { NativeInvoker.Invoke(0xDE44A00999B2837D, (ulong)componentId, (ulong)outProp); }
        internal static int N_0x6CEBE002E58DEE97(Hash componentHash) { return NativeInvoker.Invoke<int>(0x6CEBE002E58DEE97, (ulong)componentHash); }
        internal static void GET_SHOP_PED_PROP(Hash componentHash, Any* outProp) { NativeInvoker.Invoke(0x5D5CAFF661DDF6FC, (ulong)componentHash, (ulong)outProp); }
        internal static Hash GET_HASH_NAME_FOR_COMPONENT(Entity entity, int componentId, int drawableVariant, int textureVariant) { return NativeInvoker.Invoke<Hash>(0x0368B3A838070348, (ulong)entity, (ulong)componentId, (ulong)drawableVariant, (ulong)textureVariant); }
        internal static Hash GET_HASH_NAME_FOR_PROP(Entity entity, int componentId, int propIndex, int propTextureIndex) { return NativeInvoker.Invoke<Hash>(0x5D6160275CAEC8DD, (ulong)entity, (ulong)componentId, (ulong)propIndex, (ulong)propTextureIndex); }
        internal static int GET_SHOP_PED_APPAREL_VARIANT_COMPONENT_COUNT(Hash componentHash) { return NativeInvoker.Invoke<int>(0xC17AD0E5752BECDA, (ulong)componentHash); }
        internal static int GET_SHOP_PED_APPAREL_VARIANT_PROP_COUNT_(Hash propHash) { return NativeInvoker.Invoke<int>(0xD40AAC51E8E4C663, (ulong)propHash); }
        internal static void GET_VARIANT_COMPONENT(Hash componentHash, int variantComponentIndex, Hash* nameHash, int* enumValue, int* componentType) { NativeInvoker.Invoke(0x6E11F282F11863B6, (ulong)componentHash, (ulong)variantComponentIndex, (ulong)nameHash, (ulong)enumValue, (ulong)componentType); }
        internal static void GET_VARIANT_PROP_(Hash componentHash, int variantPropIndex, Hash* nameHash, int* enumValue, int* anchorPoint) { NativeInvoker.Invoke(0xD81B7F27BC773E66, (ulong)componentHash, (ulong)variantPropIndex, (ulong)nameHash, (ulong)enumValue, (ulong)anchorPoint); }
        internal static int GET_SHOP_PED_APPAREL_FORCED_COMPONENT_COUNT(Hash componentHash) { return NativeInvoker.Invoke<int>(0xC6B9DB42C04DD8C3, (ulong)componentHash); }
        internal static int GET_SHOP_PED_APPAREL_FORCED_PROP_COUNT(Hash componentHash) { return NativeInvoker.Invoke<int>(0x017568A8182D98A6, (ulong)componentHash); }
        internal static void GET_FORCED_COMPONENT(Hash componentHash, int forcedComponentIndex, Hash* nameHash, int* enumValue, int* componentType) { NativeInvoker.Invoke(0x6C93ED8C2F74859B, (ulong)componentHash, (ulong)forcedComponentIndex, (ulong)nameHash, (ulong)enumValue, (ulong)componentType); }
        internal static void GET_FORCED_PROP(Hash componentHash, int forcedPropIndex, Hash* nameHash, int* enumValue, int* anchorPoint) { NativeInvoker.Invoke(0xE1CA84EBF72E691D, (ulong)componentHash, (ulong)forcedPropIndex, (ulong)nameHash, (ulong)enumValue, (ulong)anchorPoint); }
        internal static BOOL DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(Hash componentHash, Hash restrictionTagHash, int componentId) { return NativeInvoker.Invoke<BOOL>(0x341DE7ED1D2A1BFD, (ulong)componentHash, (ulong)restrictionTagHash, (ulong)componentId); }
        internal static int SETUP_SHOP_PED_OUTFIT_QUERY(int character, BOOL p1) { return NativeInvoker.Invoke<int>(0xF3FBE2D50A6A8C28, (ulong)character, (ulong)p1); }
        internal static void GET_SHOP_PED_QUERY_OUTFIT(int outfitIndex, Any* outfit) { NativeInvoker.Invoke(0x6D793F03A631FE56, (ulong)outfitIndex, (ulong)outfit); }
        internal static void GET_SHOP_PED_OUTFIT(Any p0, Any* p1) { NativeInvoker.Invoke(0xB7952076E444979D, (ulong)p0, (ulong)p1); }
        internal static int GET_SHOP_PED_OUTFIT_LOCATE(Any p0) { return NativeInvoker.Invoke<int>(0x073CA26B079F956E, (ulong)p0); }
        internal static BOOL GET_SHOP_PED_OUTFIT_PROP_VARIANT(Hash outfitHash, int variantIndex, Any* outPropVariant) { return NativeInvoker.Invoke<BOOL>(0xA9F9C2E0FDE11CBB, (ulong)outfitHash, (ulong)variantIndex, (ulong)outPropVariant); }
        internal static BOOL GET_SHOP_PED_OUTFIT_COMPONENT_VARIANT(Hash outfitHash, int variantIndex, Any* outComponentVariant) { return NativeInvoker.Invoke<BOOL>(0x19F2A026EDF0013F, (ulong)outfitHash, (ulong)variantIndex, (ulong)outComponentVariant); }
        internal static int GET_NUM_DLC_VEHICLES() { return NativeInvoker.Invoke<int>(0xA7A866D21CD2329B); } // 0xA7A866D21CD2329B 0x8EAF9CF6 b323, (ulong)A7A866D21CD2329B); }
        internal static Hash GET_DLC_VEHICLE_MODEL(int dlcVehicleIndex) { return NativeInvoker.Invoke<Hash>(0xECC01B7C5763333C, (ulong)dlcVehicleIndex); }
        internal static BOOL GET_DLC_VEHICLE_DATA(int dlcVehicleIndex, int* outData) { return NativeInvoker.Invoke<BOOL>(0x33468EDC08E371F6, (ulong)dlcVehicleIndex, (ulong)outData); }
        internal static int GET_DLC_VEHICLE_FLAGS(int dlcVehicleIndex) { return NativeInvoker.Invoke<int>(0x5549EE11FA22FCF2, (ulong)dlcVehicleIndex); }
        internal static int GET_NUM_DLC_WEAPONS() { return NativeInvoker.Invoke<int>(0xEE47635F352DA367); } // 0xEE47635F352DA367 0x2B757E6C b323, (ulong)EE47635F352DA367); }
        internal static int GET_NUM_DLC_WEAPONS_SP_() { return NativeInvoker.Invoke<int>(0x4160B65AE085B5A9); } // 0x4160B65AE085B5A9 b2060, (ulong)4160B65AE085B5A9); }
        internal static BOOL GET_DLC_WEAPON_DATA(int dlcWeaponIndex, int* outData) { return NativeInvoker.Invoke<BOOL>(0x79923CD21BECE14E, (ulong)dlcWeaponIndex, (ulong)outData); }
        internal static BOOL GET_DLC_WEAPON_DATA_SP_(int dlcWeaponIndex, int* outData) { return NativeInvoker.Invoke<BOOL>(0x310836EE7129BA33, (ulong)dlcWeaponIndex, (ulong)outData); }
        internal static int GET_NUM_DLC_WEAPON_COMPONENTS(int dlcWeaponIndex) { return NativeInvoker.Invoke<int>(0x405425358A7D61FE, (ulong)dlcWeaponIndex); }
        internal static int GET_NUM_DLC_WEAPON_COMPONENTS_SP_(int dlcWeaponIndex) { return NativeInvoker.Invoke<int>(0xAD2A7A6DFF55841B, (ulong)dlcWeaponIndex); }
        internal static BOOL GET_DLC_WEAPON_COMPONENT_DATA(int dlcWeaponIndex, int dlcWeapCompIndex, int* ComponentDataPtr) { return NativeInvoker.Invoke<BOOL>(0x6CF598A2957C2BF8, (ulong)dlcWeaponIndex, (ulong)dlcWeapCompIndex, (ulong)ComponentDataPtr); }
        internal static BOOL GET_DLC_WEAPON_COMPONENT_DATA_SP_(int dlcWeaponIndex, int dlcWeapCompIndex, int* ComponentDataPtr) { return NativeInvoker.Invoke<BOOL>(0x31D5E073B6F93CDC, (ulong)dlcWeaponIndex, (ulong)dlcWeapCompIndex, (ulong)ComponentDataPtr); }
        internal static BOOL IS_CONTENT_ITEM_LOCKED(Hash itemHash) { return NativeInvoker.Invoke<BOOL>(0xD4D7B033C3AA243C, (ulong)itemHash); }
        internal static BOOL IS_DLC_VEHICLE_MOD(Hash hash) { return NativeInvoker.Invoke<BOOL>(0x0564B9FF9631B82C, (ulong)hash); }
        internal static Hash GET_DLC_VEHICLE_MOD_LOCK_HASH(Hash hash) { return NativeInvoker.Invoke<Hash>(0xC098810437312FFF, (ulong)hash); }
        internal static void LOAD_CONTENT_CHANGE_SET_GROUP_(Hash hash) { NativeInvoker.Invoke(0x6BEDF5769AC2DC07, (ulong)hash); }
        internal static void UNLOAD_CONTENT_CHANGE_SET_GROUP_(Hash hash) { NativeInvoker.Invoke(0x3C1978285B036B25, (ulong)hash); }
    }

    internal static unsafe class FIRE
    {
        internal static FireId START_SCRIPT_FIRE(float X, float Y, float Z, int maxChildren, BOOL isGasFire) { return NativeInvoker.Invoke<FireId>(0x6B83617E04503888, *(uint*)&X, *(uint*)&Y, *(uint*)&Z, (ulong)maxChildren, (ulong)isGasFire); }
        internal static void REMOVE_SCRIPT_FIRE(FireId fireHandle) { NativeInvoker.Invoke(0x7FF548385680673F, (ulong)fireHandle); }
        internal static FireId START_ENTITY_FIRE(Entity entity) { return NativeInvoker.Invoke<FireId>(0xF6A9D9708F6F23DF, (ulong)entity); }
        internal static void STOP_ENTITY_FIRE(Entity entity) { NativeInvoker.Invoke(0x7F0DD2EBBB651AFF, (ulong)entity); }
        internal static BOOL IS_ENTITY_ON_FIRE(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x28D3FED7190D3A0B, (ulong)entity); }
        internal static int GET_NUMBER_OF_FIRES_IN_RANGE(float x, float y, float z, float radius) { return NativeInvoker.Invoke<int>(0x50CAD495A460B305, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius); }
        internal static void SET_FIRE_SPREAD_RATE_(float p0) { NativeInvoker.Invoke(0x8F390AC4155099BA, *(uint*)&p0); }
        internal static void STOP_FIRE_IN_RANGE(float x, float y, float z, float radius) { NativeInvoker.Invoke(0x056A8A219B8E829F, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius); }
        internal static BOOL GET_CLOSEST_FIRE_POS(Vector3* outPosition, float x, float y, float z) { return NativeInvoker.Invoke<BOOL>(0x352A9F6BCF90081F, (ulong)outPosition, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void ADD_EXPLOSION(float x, float y, float z, int explosionType, float damageScale, BOOL isAudible, BOOL isInvisible, float cameraShake, BOOL noDamage) { NativeInvoker.Invoke(0xE3AD2BDBAEE269AC, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)explosionType, *(uint*)&damageScale, (ulong)isAudible, (ulong)isInvisible, *(uint*)&cameraShake, (ulong)noDamage); }
        internal static void ADD_OWNED_EXPLOSION(Ped ped, float x, float y, float z, int explosionType, float damageScale, BOOL isAudible, BOOL isInvisible, float cameraShake) { NativeInvoker.Invoke(0x172AA1B624FA1013, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)explosionType, *(uint*)&damageScale, (ulong)isAudible, (ulong)isInvisible, *(uint*)&cameraShake); }
        internal static void ADD_EXPLOSION_WITH_USER_VFX(float x, float y, float z, int explosionType, Hash explosionFx, float damageScale, BOOL isAudible, BOOL isInvisible, float cameraShake) { NativeInvoker.Invoke(0x36DD3FE58B5E5212, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)explosionType, (ulong)explosionFx, *(uint*)&damageScale, (ulong)isAudible, (ulong)isInvisible, *(uint*)&cameraShake); }
        internal static BOOL IS_EXPLOSION_IN_AREA(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2) { return NativeInvoker.Invoke<BOOL>(0x2E2EBA0EE7CED0E0, (ulong)explosionType, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2); }
        internal static BOOL IS_EXPLOSION_ACTIVE_IN_AREA(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2) { return NativeInvoker.Invoke<BOOL>(0x6070104B699B2EF4, (ulong)explosionType, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2); }
        internal static BOOL IS_EXPLOSION_IN_SPHERE(int explosionType, float x, float y, float z, float radius) { return NativeInvoker.Invoke<BOOL>(0xAB0F816885B0E483, (ulong)explosionType, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius); }
        internal static Entity GET_ENTITY_INSIDE_EXPLOSION_SPHERE_(int explosionType, float x, float y, float z, float radius) { return NativeInvoker.Invoke<Entity>(0xB3CD51E3DB86F176, (ulong)explosionType, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius); }
        internal static BOOL IS_EXPLOSION_IN_ANGLED_AREA(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2, float width) { return NativeInvoker.Invoke<BOOL>(0xA079A6C51525DC4B, (ulong)explosionType, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&width); }
        internal static Entity GET_ENTITY_INSIDE_EXPLOSION_AREA_(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2, float radius) { return NativeInvoker.Invoke<Entity>(0x14BA4BA137AF6CEC, (ulong)explosionType, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&radius); }
    }

    internal static unsafe class GRAPHICS
    {
        internal static void SET_DEBUG_LINES_AND_SPHERES_DRAWING_ACTIVE(BOOL enabled) { NativeInvoker.Invoke(0x175B6BFC15CDD0C5, (ulong)enabled); }
        internal static void DRAW_DEBUG_LINE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9) { NativeInvoker.Invoke(0x7FDFADE676AA3CB0, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9); }
        internal static void DRAW_DEBUG_LINE_WITH_TWO_COLOURS(float x1, float y1, float z1, float x2, float y2, float z2, int r1, int g1, int b1, int r2, int g2, int b2, int alpha1, int alpha2) { NativeInvoker.Invoke(0xD8B9A8AC5608FF94, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)r1, (ulong)g1, (ulong)b1, (ulong)r2, (ulong)g2, (ulong)b2, (ulong)alpha1, (ulong)alpha2); }
        internal static void DRAW_DEBUG_SPHERE(float x, float y, float z, float radius, int red, int green, int blue, int alpha) { NativeInvoker.Invoke(0xAAD68E1AB39DA632, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha); }
        internal static void DRAW_DEBUG_BOX(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9) { NativeInvoker.Invoke(0x083A2CA4F2E573BD, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9); }
        internal static void DRAW_DEBUG_CROSS(float x, float y, float z, float size, int red, int green, int blue, int alpha) { NativeInvoker.Invoke(0x73B1189623049839, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&size, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha); }
        internal static void DRAW_DEBUG_TEXT(char* text, float x, float y, float z, int red, int green, int blue, int alpha) { NativeInvoker.Invoke(0x3903E216620488E8, (ulong)text, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha); }
        internal static void DRAW_DEBUG_TEXT_2D(char* text, float x, float y, float z, int red, int green, int blue, int alpha) { NativeInvoker.Invoke(0xA3BB2E9555C05A8F, (ulong)text, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha); }
        internal static void DRAW_LINE(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha) { NativeInvoker.Invoke(0x6B7256074AE34680, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha); }
        internal static void DRAW_POLY(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, int red, int green, int blue, int alpha) { NativeInvoker.Invoke(0xAC26716048436851, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&x3, *(uint*)&y3, *(uint*)&z3, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha); }
        internal static void DRAW_SPRITE_POLY_(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, int red, int green, int blue, int alpha, char* textureDict, char* textureName, float u1, float v1, float w1, float u2, float v2, float w2, float u3, float v3, float w3) { NativeInvoker.Invoke(0x29280002282F1928, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&x3, *(uint*)&y3, *(uint*)&z3, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha, (ulong)textureDict, (ulong)textureName, *(uint*)&u1, *(uint*)&v1, *(uint*)&w1, *(uint*)&u2, *(uint*)&v2, *(uint*)&w2, *(uint*)&u3, *(uint*)&v3, *(uint*)&w3); }
        internal static void DRAW_SPRITE_POLY_2_(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, float red1, float green1, float blue1, int alpha1, float red2, float green2, float blue2, int alpha2, float red3, float green3, float blue3, int alpha3, char* textureDict, char* textureName, float u1, float v1, float w1, float u2, float v2, float w2, float u3, float v3, float w3) { NativeInvoker.Invoke(0x736D7AA1B750856B, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&x3, *(uint*)&y3, *(uint*)&z3, *(uint*)&red1, *(uint*)&green1, *(uint*)&blue1, (ulong)alpha1, *(uint*)&red2, *(uint*)&green2, *(uint*)&blue2, (ulong)alpha2, *(uint*)&red3, *(uint*)&green3, *(uint*)&blue3, (ulong)alpha3, (ulong)textureDict, (ulong)textureName, *(uint*)&u1, *(uint*)&v1, *(uint*)&w1, *(uint*)&u2, *(uint*)&v2, *(uint*)&w2, *(uint*)&u3, *(uint*)&v3, *(uint*)&w3); }
        internal static void DRAW_BOX(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int blue, int alpha) { NativeInvoker.Invoke(0xD3A9971CADAC7252, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha); }
        internal static void SET_BACKFACECULLING(BOOL toggle) { NativeInvoker.Invoke(0x23BA6B0C2AD7B0D3, (ulong)toggle); }
        internal static void N_0xC5C8F970D4EDFF71(Any p0) { NativeInvoker.Invoke(0xC5C8F970D4EDFF71, (ulong)p0); }
        internal static Any BEGIN_TAKE_MISSION_CREATOR_PHOTO() { return NativeInvoker.Invoke<Any>(0x1DD2139A9A20DCE8); } // 0x1DD2139A9A20DCE8 0xBA9AD458 b323, (ulong)1DD2139A9A20DCE8); }
        internal static Any GET_STATUS_OF_TAKE_MISSION_CREATOR_PHOTO() { return NativeInvoker.Invoke<Any>(0x90A78ECAA4E78453); } // 0x90A78ECAA4E78453 0xADBBA287 b323, (ulong)90A78ECAA4E78453); }
        internal static void FREE_MEMORY_FOR_MISSION_CREATOR_PHOTO() { NativeInvoker.Invoke(0x0A46AF8A78DC5E0A); } // 0x0A46AF8A78DC5E0A 0x9E553002 b323<, (ulong)0A46AF8A78DC5E0A); }
        internal static BOOL LOAD_MISSION_CREATOR_PHOTO(Any* p0, Any p1, Any p2, Any p3) { return NativeInvoker.Invoke<BOOL>(0x4862437A486F91B0, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static int GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO(Any* p0) { return NativeInvoker.Invoke<int>(0x1670F8D05056F257, (ulong)p0); }
        internal static Any N_0x7FA5D82B8F58EC06() { return NativeInvoker.Invoke<Any>(0x7FA5D82B8F58EC06); } // 0x7FA5D82B8F58EC06 0x1F3CADB0 b323, (ulong)7FA5D82B8F58EC06); }
        internal static Any N_0x5B0316762AFD4A64() { return NativeInvoker.Invoke<Any>(0x5B0316762AFD4A64); } // 0x5B0316762AFD4A64 0xA9DC8558 b323, (ulong)5B0316762AFD4A64); }
        internal static void N_0x346EF3ECAAAB149E() { NativeInvoker.Invoke(0x346EF3ECAAAB149E); } // 0x346EF3ECAAAB149E 0x88EAF398 b323<, (ulong)346EF3ECAAAB149E); }
        internal static BOOL BEGIN_TAKE_HIGH_QUALITY_PHOTO() { return NativeInvoker.Invoke<BOOL>(0xA67C35C56EB1BD9D); } // 0xA67C35C56EB1BD9D 0x47B0C137 b323, (ulong)A67C35C56EB1BD9D); }
        internal static int GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO() { return NativeInvoker.Invoke<int>(0x0D6CA79EEEBD8CA3); } // 0x0D6CA79EEEBD8CA3 0x65376C9B b323, (ulong)0D6CA79EEEBD8CA3); }
        internal static void FREE_MEMORY_FOR_HIGH_QUALITY_PHOTO() { NativeInvoker.Invoke(0xD801CC02177FA3F1); } // 0xD801CC02177FA3F1 0x9CBA682A b323<, (ulong)D801CC02177FA3F1); }
        internal static void N_0x1BBC135A4D25EDDE(BOOL p0) { NativeInvoker.Invoke(0x1BBC135A4D25EDDE, (ulong)p0); }
        internal static void N_0xF3F776ADA161E47D(Any p0, Any p1) { NativeInvoker.Invoke(0xF3F776ADA161E47D, (ulong)p0, (ulong)p1); }
        internal static void N_0xADD6627C4D325458(Any p0) { NativeInvoker.Invoke(0xADD6627C4D325458, (ulong)p0); }
        internal static BOOL SAVE_HIGH_QUALITY_PHOTO(int unused) { return NativeInvoker.Invoke<BOOL>(0x3DEC726C25A11BAC, (ulong)unused); }
        internal static int GET_STATUS_OF_SAVE_HIGH_QUALITY_PHOTO() { return NativeInvoker.Invoke<int>(0x0C0C4E81E1AC60A0); } // 0x0C0C4E81E1AC60A0 0xEC5D0317 b323, (ulong)0C0C4E81E1AC60A0); }
        internal static BOOL N_0x759650634F07B6B4(Any p0) { return NativeInvoker.Invoke<BOOL>(0x759650634F07B6B4, (ulong)p0); }
        internal static Any N_0xCB82A0BF0E3E3265(Any p0) { return NativeInvoker.Invoke<Any>(0xCB82A0BF0E3E3265, (ulong)p0); }
        internal static void FREE_MEMORY_FOR_LOW_QUALITY_PHOTO() { NativeInvoker.Invoke(0x6A12D88881435DCA); } // 0x6A12D88881435DCA 0x108F36CC b323<, (ulong)6A12D88881435DCA); }
        internal static void DRAW_LOW_QUALITY_PHOTO_TO_PHONE(BOOL p0, BOOL p1) { NativeInvoker.Invoke(0x1072F115DAB0717E, (ulong)p0, (ulong)p1); }
        internal static int GET_MAXIMUM_NUMBER_OF_PHOTOS() { return NativeInvoker.Invoke<int>(0x34D23450F028B0BF); } // 0x34D23450F028B0BF 0x727AA63F b323, (ulong)34D23450F028B0BF); }
        internal static int GET_MAXIMUM_NUMBER_OF_CLOUD_PHOTOS() { return NativeInvoker.Invoke<int>(0xDC54A7AF8B3A14EF); } // 0xDC54A7AF8B3A14EF 0x239272BD b323, (ulong)DC54A7AF8B3A14EF); }
        internal static int GET_CURRENT_NUMBER_OF_CLOUD_PHOTOS() { return NativeInvoker.Invoke<int>(0x473151EBC762C6DA); } // 0x473151EBC762C6DA 0x21DBF0C9 b323, (ulong)473151EBC762C6DA); }
        internal static Any N_0x2A893980E96B659A(Any p0) { return NativeInvoker.Invoke<Any>(0x2A893980E96B659A, (ulong)p0); }
        internal static Any GET_STATUS_OF_SORTED_LIST_OPERATION(Any p0) { return NativeInvoker.Invoke<Any>(0xF5BED327CEA362B1, (ulong)p0); }
        internal static void N_0x4AF92ACD3141D96C() { NativeInvoker.Invoke(0x4AF92ACD3141D96C); } // 0x4AF92ACD3141D96C 0xC9EF81ED b323<, (ulong)4AF92ACD3141D96C); }
        internal static Any N_0xE791DF1F73ED2C8B(Any p0) { return NativeInvoker.Invoke<Any>(0xE791DF1F73ED2C8B, (ulong)p0); }
        internal static Any N_0xEC72C258667BE5EA(Any p0) { return NativeInvoker.Invoke<Any>(0xEC72C258667BE5EA, (ulong)p0); }
        internal static int RETURN_TWO_(int p0) { return NativeInvoker.Invoke<int>(0x40AFB081F8ADD4EE, (ulong)p0); }
        internal static void DRAW_LIGHT_WITH_RANGE_AND_SHADOW_(float x, float y, float z, int r, int g, int b, float range, float intensity, float shadow) { NativeInvoker.Invoke(0xF49E9A9716A04595, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)r, (ulong)g, (ulong)b, *(uint*)&range, *(uint*)&intensity, *(uint*)&shadow); }
        internal static void DRAW_LIGHT_WITH_RANGE(float posX, float posY, float posZ, int colorR, int colorG, int colorB, float range, float intensity) { NativeInvoker.Invoke(0xF2A1B2771A01DBD4, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, (ulong)colorR, (ulong)colorG, (ulong)colorB, *(uint*)&range, *(uint*)&intensity); }
        internal static void DRAW_SPOT_LIGHT(float posX, float posY, float posZ, float dirX, float dirY, float dirZ, int colorR, int colorG, int colorB, float distance, float brightness, float hardness, float radius, float falloff) { NativeInvoker.Invoke(0xD0F64B265C8C8B33, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, *(uint*)&dirX, *(uint*)&dirY, *(uint*)&dirZ, (ulong)colorR, (ulong)colorG, (ulong)colorB, *(uint*)&distance, *(uint*)&brightness, *(uint*)&hardness, *(uint*)&radius, *(uint*)&falloff); }
        internal static void DRAW_SPOT_LIGHT_WITH_SHADOW_(float posX, float posY, float posZ, float dirX, float dirY, float dirZ, int colorR, int colorG, int colorB, float distance, float brightness, float roundness, float radius, float falloff, int shadowId) { NativeInvoker.Invoke(0x5BCA583A583194DB, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, *(uint*)&dirX, *(uint*)&dirY, *(uint*)&dirZ, (ulong)colorR, (ulong)colorG, (ulong)colorB, *(uint*)&distance, *(uint*)&brightness, *(uint*)&roundness, *(uint*)&radius, *(uint*)&falloff, (ulong)shadowId); }
        internal static void FADE_UP_PED_LIGHT(float p0) { NativeInvoker.Invoke(0xC9B18B4619F48F7B, *(uint*)&p0); }
        internal static void UPDATE_LIGHTS_ON_ENTITY(Entity entity) { NativeInvoker.Invoke(0xDEADC0DEDEADC0DE, (ulong)entity); }
        internal static void N_0x9641588DAB93B4B5(Any p0) { NativeInvoker.Invoke(0x9641588DAB93B4B5, (ulong)p0); }
        internal static Any N_0x393BD2275CEB7793() { return NativeInvoker.Invoke<Any>(0x393BD2275CEB7793); } // 0x393BD2275CEB7793 b1103, (ulong)393BD2275CEB7793); }
        internal static void DRAW_MARKER(int type, float posX, float posY, float posZ, float dirX, float dirY, float dirZ, float rotX, float rotY, float rotZ, float scaleX, float scaleY, float scaleZ, int red, int green, int blue, int alpha, BOOL bobUpAndDown, BOOL faceCamera, int p19, BOOL rotate, char* textureDict, char* textureName, BOOL drawOnEnts) { NativeInvoker.Invoke(0x28477EC23D892089, (ulong)type, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, *(uint*)&dirX, *(uint*)&dirY, *(uint*)&dirZ, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, *(uint*)&scaleX, *(uint*)&scaleY, *(uint*)&scaleZ, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha, (ulong)bobUpAndDown, (ulong)faceCamera, (ulong)p19, (ulong)rotate, (ulong)textureDict, (ulong)textureName, (ulong)drawOnEnts); }
        internal static void DRAW_MARKER_2_(int type, float posX, float posY, float posZ, float dirX, float dirY, float dirZ, float rotX, float rotY, float rotZ, float scaleX, float scaleY, float scaleZ, int red, int green, int blue, int alpha, BOOL bobUpAndDown, BOOL faceCamera, Any p19, BOOL rotate, char* textureDict, char* textureName, BOOL drawOnEnts, BOOL p24, BOOL p25) { NativeInvoker.Invoke(0xE82728F0DE75D13A, (ulong)type, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, *(uint*)&dirX, *(uint*)&dirY, *(uint*)&dirZ, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, *(uint*)&scaleX, *(uint*)&scaleY, *(uint*)&scaleZ, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha, (ulong)bobUpAndDown, (ulong)faceCamera, (ulong)p19, (ulong)rotate, (ulong)textureDict, (ulong)textureName, (ulong)drawOnEnts, (ulong)p24, (ulong)p25); }
        internal static void DRAW_SPHERE_(float x, float y, float z, float radius, int red, int green, int blue, float alpha) { NativeInvoker.Invoke(0x799017F9E3B10112, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)red, (ulong)green, (ulong)blue, *(uint*)&alpha); }
        internal static int CREATE_CHECKPOINT(int type, float posX1, float posY1, float posZ1, float posX2, float posY2, float posZ2, float diameter, int red, int green, int blue, int alpha, int reserved) { return NativeInvoker.Invoke<int>(0x0134F0835AB6BFCB, (ulong)type, *(uint*)&posX1, *(uint*)&posY1, *(uint*)&posZ1, *(uint*)&posX2, *(uint*)&posY2, *(uint*)&posZ2, *(uint*)&diameter, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha, (ulong)reserved); }
        internal static void SET_CHECKPOINT_SCALE_(int checkpoint, float p0) { NativeInvoker.Invoke(0x4B5B4DA5D79F1943, (ulong)checkpoint, *(uint*)&p0); }
        internal static void SET_CHECKPOINT_ICON_SCALE_(int checkpoint, float scale) { NativeInvoker.Invoke(0x44621483FF966526, (ulong)checkpoint, *(uint*)&scale); }
        internal static void SET_CHECKPOINT_CYLINDER_HEIGHT(int checkpoint, float nearHeight, float farHeight, float radius) { NativeInvoker.Invoke(0x2707AAE9D9297D89, (ulong)checkpoint, *(uint*)&nearHeight, *(uint*)&farHeight, *(uint*)&radius); }
        internal static void SET_CHECKPOINT_RGBA(int checkpoint, int red, int green, int blue, int alpha) { NativeInvoker.Invoke(0x7167371E8AD747F7, (ulong)checkpoint, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha); }
        internal static void SET_CHECKPOINT_RGBA2(int checkpoint, int red, int green, int blue, int alpha) { NativeInvoker.Invoke(0xB9EA40907C680580, (ulong)checkpoint, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha); }
        internal static void N_0xF51D36185993515D(int checkpoint, float posX, float posY, float posZ, float unkX, float unkY, float unkZ) { NativeInvoker.Invoke(0xF51D36185993515D, (ulong)checkpoint, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, *(uint*)&unkX, *(uint*)&unkY, *(uint*)&unkZ); }
        internal static void N_0xFCF6788FC4860CD4(int checkpoint) { NativeInvoker.Invoke(0xFCF6788FC4860CD4, (ulong)checkpoint); }
        internal static void N_0x615D3925E87A3B26(int checkpoint) { NativeInvoker.Invoke(0x615D3925E87A3B26, (ulong)checkpoint); }
        internal static void N_0xDB1EA9411C8911EC(Any p0) { NativeInvoker.Invoke(0xDB1EA9411C8911EC, (ulong)p0); }
        internal static void N_0x3C788E7F6438754D(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x3C788E7F6438754D, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void DELETE_CHECKPOINT(int checkpoint) { NativeInvoker.Invoke(0xF5ED37F54CD4D52E, (ulong)checkpoint); }
        internal static void DONT_RENDER_IN_GAME_UI(BOOL p0) { NativeInvoker.Invoke(0x22A249A53034450A, (ulong)p0); }
        internal static void FORCE_RENDER_IN_GAME_UI(BOOL toggle) { NativeInvoker.Invoke(0xDC459CFA0CCE245B, (ulong)toggle); }
        internal static void REQUEST_STREAMED_TEXTURE_DICT(char* textureDict, BOOL p1) { NativeInvoker.Invoke(0xDFA2EF8E04127DD5, (ulong)textureDict, (ulong)p1); }
        internal static BOOL HAS_STREAMED_TEXTURE_DICT_LOADED(char* textureDict) { return NativeInvoker.Invoke<BOOL>(0x0145F696AAAAD2E4, (ulong)textureDict); }
        internal static void SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED(char* textureDict) { NativeInvoker.Invoke(0xBE2CACCF5A8AA805, (ulong)textureDict); }
        internal static void DRAW_RECT(float x, float y, float width, float height, int r, int g, int b, int a, BOOL p8) { NativeInvoker.Invoke(0x3A618A217E5154F0, *(uint*)&x, *(uint*)&y, *(uint*)&width, *(uint*)&height, (ulong)r, (ulong)g, (ulong)b, (ulong)a, (ulong)p8); }
        internal static void SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(BOOL toggle) { NativeInvoker.Invoke(0xC6372ECD45D73BCD, (ulong)toggle); }
        internal static void SET_SCRIPT_GFX_DRAW_ORDER(int drawOrder) { NativeInvoker.Invoke(0x61BB1D9B3A95D802, (ulong)drawOrder); }
        internal static void SET_SCRIPT_GFX_ALIGN(int horizontalAlign, int verticalAlign) { NativeInvoker.Invoke(0xB8A850F20A067EB6, (ulong)horizontalAlign, (ulong)verticalAlign); }
        internal static void RESET_SCRIPT_GFX_ALIGN() { NativeInvoker.Invoke(0xE3A3DB414A373DAB); } // 0xE3A3DB414A373DAB 0x3FE33BD6 b323<, (ulong)E3A3DB414A373DAB); }
        internal static void SET_SCRIPT_GFX_ALIGN_PARAMS(float x, float y, float w, float h) { NativeInvoker.Invoke(0xF5A2C681787E579D, *(uint*)&x, *(uint*)&y, *(uint*)&w, *(uint*)&h); }
        internal static void GET_SCRIPT_GFX_POSITION_(float x, float y, float* calculatedX, float* calculatedY) { NativeInvoker.Invoke(0x6DD8F5AA635EB4B2, *(uint*)&x, *(uint*)&y, (ulong)calculatedX, (ulong)calculatedY); }
        internal static float GET_SAFE_ZONE_SIZE() { return NativeInvoker.Invoke<float>(0xBAF107B6BB2C97F0); } // 0xBAF107B6BB2C97F0 0x3F0D1A6F b323, (ulong)BAF107B6BB2C97F0); }
        internal static void DRAW_SPRITE(char* textureDict, char* textureName, float screenX, float screenY, float width, float height, float heading, int red, int green, int blue, int alpha, BOOL p11) { NativeInvoker.Invoke(0xE7FFAE5EBF23D890, (ulong)textureDict, (ulong)textureName, *(uint*)&screenX, *(uint*)&screenY, *(uint*)&width, *(uint*)&height, *(uint*)&heading, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha, (ulong)p11); }
        internal static void N_0x2D3B147AFAD49DE0(char* textureDict, char* textureName, float x, float y, float width, float height, float p6, int red, int green, int blue, int alpha, Any p11) { NativeInvoker.Invoke(0x2D3B147AFAD49DE0, (ulong)textureDict, (ulong)textureName, *(uint*)&x, *(uint*)&y, *(uint*)&width, *(uint*)&height, *(uint*)&p6, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha, (ulong)p11); }
        internal static void DRAW_INTERACTIVE_SPRITE_(char* textureDict, char* textureName, float screenX, float screenY, float width, float height, float heading, int red, int green, int blue, int alpha) { NativeInvoker.Invoke(0x2BC54A8188768488, (ulong)textureDict, (ulong)textureName, *(uint*)&screenX, *(uint*)&screenY, *(uint*)&width, *(uint*)&height, *(uint*)&heading, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha); }
        internal static void DRAW_SPRITE_UV_(char* textureDict, char* textureName, float x, float y, float width, float height, float u1, float v1, float u2, float v2, float heading, int red, int green, int blue, int alpha) { NativeInvoker.Invoke(0x95812F9B26074726, (ulong)textureDict, (ulong)textureName, *(uint*)&x, *(uint*)&y, *(uint*)&width, *(uint*)&height, *(uint*)&u1, *(uint*)&v1, *(uint*)&u2, *(uint*)&v2, *(uint*)&heading, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha); }
        internal static Any ADD_ENTITY_ICON(Entity entity, char* icon) { return NativeInvoker.Invoke<Any>(0x9CD43EEE12BF4DD0, (ulong)entity, (ulong)icon); }
        internal static void SET_ENTITY_ICON_VISIBILITY(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0xE0E8BEECCA96BA31, (ulong)entity, (ulong)toggle); }
        internal static void SET_ENTITY_ICON_COLOR(Entity entity, int red, int green, int blue, int alpha) { NativeInvoker.Invoke(0x1D5F595CCAE2E238, (ulong)entity, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha); }
        internal static void SET_DRAW_ORIGIN(float x, float y, float z, Any p3) { NativeInvoker.Invoke(0xAA0008F3BBB8F416, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)p3); }
        internal static void CLEAR_DRAW_ORIGIN() { NativeInvoker.Invoke(0xFF0B610F6BE0D7AF); } // 0xFF0B610F6BE0D7AF 0xDD76B263 b323<, (ulong)FF0B610F6BE0D7AF); }
        internal static int SET_BINK_MOVIE_(char* name) { return NativeInvoker.Invoke<int>(0x338D9F609FD632DB, (ulong)name); }
        internal static void PLAY_BINK_MOVIE_(int binkMovie) { NativeInvoker.Invoke(0x70D2CC8A542A973C, (ulong)binkMovie); }
        internal static void STOP_BINK_MOVIE_(int binkMovie) { NativeInvoker.Invoke(0x63606A61DE68898A, (ulong)binkMovie); }
        internal static void RELEASE_BINK_MOVIE_(int binkMovie) { NativeInvoker.Invoke(0x04D950EEFA4EED8C, (ulong)binkMovie); }
        internal static void DRAW_BINK_MOVIE_(int binkMovie, float p1, float p2, float p3, float p4, float p5, int r, int g, int b, int a) { NativeInvoker.Invoke(0x7118E83EEB9F7238, (ulong)binkMovie, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, (ulong)r, (ulong)g, (ulong)b, (ulong)a); }
        internal static void SET_BINK_MOVIE_TIME_(int binkMovie, float progress) { NativeInvoker.Invoke(0x0CB6B3446855B57A, (ulong)binkMovie, *(uint*)&progress); }
        internal static float GET_BINK_MOVIE_TIME_(int binkMovie) { return NativeInvoker.Invoke<float>(0x8E17DDD6B9D5BF29, (ulong)binkMovie); }
        internal static void SET_BINK_MOVIE_VOLUME_(int binkMovie, float value) { NativeInvoker.Invoke(0xAFF33B1178172223, (ulong)binkMovie, *(uint*)&value); }
        internal static void ATTACH_TV_AUDIO_TO_ENTITY(Entity entity) { NativeInvoker.Invoke(0x845BAD77CC770633, (ulong)entity); }
        internal static void SET_BINK_MOVIE_UNK_2_(int binkMovie, BOOL p1) { NativeInvoker.Invoke(0xF816F2933752322D, (ulong)binkMovie, (ulong)p1); }
        internal static void SET_TV_AUDIO_FRONTEND(BOOL toggle) { NativeInvoker.Invoke(0x113D2C5DC57E1774, (ulong)toggle); }
        internal static void SET_BINK_SHOULD_SKIP_(int binkMovie, BOOL bShouldSkip) { NativeInvoker.Invoke(0x6805D58CAA427B72, (ulong)binkMovie, (ulong)bShouldSkip); }
        internal static int LOAD_MOVIE_MESH_SET(char* movieMeshSetName) { return NativeInvoker.Invoke<int>(0xB66064452270E8F1, (ulong)movieMeshSetName); }
        internal static void RELEASE_MOVIE_MESH_SET(int movieMeshSet) { NativeInvoker.Invoke(0xEB119AA014E89183, (ulong)movieMeshSet); }
        internal static Any QUERY_MOVIE_MESH_SET_STATE(Any p0) { return NativeInvoker.Invoke<Any>(0x9B6E70C5CEEF4EEB, (ulong)p0); }
        internal static void GET_SCREEN_RESOLUTION(int* x, int* y) { NativeInvoker.Invoke(0x888D57E407E63624, (ulong)x, (ulong)y); }
        internal static void GET_ACTIVE_SCREEN_RESOLUTION_(int* x, int* y) { NativeInvoker.Invoke(0x873C9F3104101DD3, (ulong)x, (ulong)y); }
        internal static float GET_ASPECT_RATIO_(BOOL b) { return NativeInvoker.Invoke<float>(0xF1307EF624A80D87, (ulong)b); }
        internal static Any N_0xB2EBE8CBC58B90E9() { return NativeInvoker.Invoke<Any>(0xB2EBE8CBC58B90E9); } // 0xB2EBE8CBC58B90E9 b323, (ulong)B2EBE8CBC58B90E9); }
        internal static BOOL GET_IS_WIDESCREEN() { return NativeInvoker.Invoke<BOOL>(0x30CF4BDA4FCB1905); } // 0x30CF4BDA4FCB1905 0xEC717AEF b323, (ulong)30CF4BDA4FCB1905); }
        internal static BOOL GET_IS_HIDEF() { return NativeInvoker.Invoke<BOOL>(0x84ED31191CC5D2C9); } // 0x84ED31191CC5D2C9 0x1C340359 b323, (ulong)84ED31191CC5D2C9); }
        internal static void N_0xEFABC7722293DA7C() { NativeInvoker.Invoke(0xEFABC7722293DA7C); } // 0xEFABC7722293DA7C b323<, (ulong)EFABC7722293DA7C); }
        internal static void SET_NIGHTVISION(BOOL toggle) { NativeInvoker.Invoke(0x18F621F7A5B1F85D, (ulong)toggle); }
        internal static BOOL GET_REQUESTINGNIGHTVISION() { return NativeInvoker.Invoke<BOOL>(0x35FB78DC42B7BD21); } // 0x35FB78DC42B7BD21 0xF3A6309E b323, (ulong)35FB78DC42B7BD21); }
        internal static BOOL GET_USINGNIGHTVISION() { return NativeInvoker.Invoke<BOOL>(0x2202A3F42C8E5F79); } // 0x2202A3F42C8E5F79 0x62619061 b323, (ulong)2202A3F42C8E5F79); }
        internal static void N_0xEF398BEEE4EF45F9(BOOL p0) { NativeInvoker.Invoke(0xEF398BEEE4EF45F9, (ulong)p0); }
        internal static void N_0x814AF7DCAACC597B(Any p0) { NativeInvoker.Invoke(0x814AF7DCAACC597B, (ulong)p0); }
        internal static void N_0x43FA7CBE20DAB219(Any p0) { NativeInvoker.Invoke(0x43FA7CBE20DAB219, (ulong)p0); }
        internal static void SET_NOISEOVERIDE(BOOL toggle) { NativeInvoker.Invoke(0xE787BF1C5CF823C9, (ulong)toggle); }
        internal static void SET_NOISINESSOVERIDE(float value) { NativeInvoker.Invoke(0xCB6A7C3BB17A0C67, *(uint*)&value); }
        internal static BOOL GET_SCREEN_COORD_FROM_WORLD_COORD(float worldX, float worldY, float worldZ, float* screenX, float* screenY) { return NativeInvoker.Invoke<BOOL>(0x34E82F05DF2974F5, *(uint*)&worldX, *(uint*)&worldY, *(uint*)&worldZ, (ulong)screenX, (ulong)screenY); }
        internal static Vector3 GET_TEXTURE_RESOLUTION(char* textureDict, char* textureName) { return NativeInvoker.Invoke<Vector3>(0x35736EE65BD00C11, (ulong)textureDict, (ulong)textureName); }
        internal static BOOL OVERRIDE_PED_BADGE_TEXTURE_(Ped ped, char* txd, char* txn) { return NativeInvoker.Invoke<BOOL>(0x95EB5E34F821BABE, (ulong)ped, (ulong)txd, (ulong)txn); }
        internal static void N_0xE2892E7E55D7073A(float p0) { NativeInvoker.Invoke(0xE2892E7E55D7073A, *(uint*)&p0); }
        internal static void SET_FLASH(float p0, float p1, float fadeIn, float duration, float fadeOut) { NativeInvoker.Invoke(0x0AB84296FED9CFC6, *(uint*)&p0, *(uint*)&p1, *(uint*)&fadeIn, *(uint*)&duration, *(uint*)&fadeOut); }
        internal static void DISABLE_OCCLUSION_THIS_FRAME() { NativeInvoker.Invoke(0x3669F1B198DCAA4F); } // 0x3669F1B198DCAA4F 0x0DCC0B8B b323<, (ulong)3669F1B198DCAA4F); }
        internal static void SET_ARTIFICIAL_LIGHTS_STATE(BOOL state) { NativeInvoker.Invoke(0x1268615ACE24D504, (ulong)state); }
        internal static void SET_ARTIFICIAL_LIGHTS_STATE_AFFECTS_VEHICLES_(BOOL toggle) { NativeInvoker.Invoke(0xE2B187C0939B3D32, (ulong)toggle); }
        internal static void N_0xC35A6D07C93802B2() { NativeInvoker.Invoke(0xC35A6D07C93802B2); } // 0xC35A6D07C93802B2 b323<, (ulong)C35A6D07C93802B2); }
        internal static int CREATE_TRACKED_POINT() { return NativeInvoker.Invoke<int>(0xE2C9439ED45DEA60); } // 0xE2C9439ED45DEA60 0x3129C31A b323, (ulong)E2C9439ED45DEA60); }
        internal static void SET_TRACKED_POINT_INFO(int point, float x, float y, float z, float radius) { NativeInvoker.Invoke(0x164ECBB3CF750CB0, (ulong)point, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius); }
        internal static BOOL IS_TRACKED_POINT_VISIBLE(int point) { return NativeInvoker.Invoke<BOOL>(0xC45CCDAAC9221CA8, (ulong)point); }
        internal static void DESTROY_TRACKED_POINT(int point) { NativeInvoker.Invoke(0xB25DC90BAD56CA42, (ulong)point); }
        internal static Any N_0xBE197EAA669238F4(Any p0, Any p1, Any p2, Any p3) { return NativeInvoker.Invoke<Any>(0xBE197EAA669238F4, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x61F95E5BB3E0A8C6(Any p0) { NativeInvoker.Invoke(0x61F95E5BB3E0A8C6, (ulong)p0); }
        internal static void N_0xAE51BC858F32BA66(Any p0, float p1, float p2, float p3, float p4) { NativeInvoker.Invoke(0xAE51BC858F32BA66, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4); }
        internal static void N_0x649C97D52332341A(Any p0) { NativeInvoker.Invoke(0x649C97D52332341A, (ulong)p0); }
        internal static Any N_0x2C42340F916C5930(Any p0) { return NativeInvoker.Invoke<Any>(0x2C42340F916C5930, (ulong)p0); }
        internal static void N_0x14FC5833464340A8() { NativeInvoker.Invoke(0x14FC5833464340A8); } // 0x14FC5833464340A8 b323<, (ulong)14FC5833464340A8); }
        internal static void N_0x0218BA067D249DEA() { NativeInvoker.Invoke(0x0218BA067D249DEA); } // 0x0218BA067D249DEA b323<, (ulong)0218BA067D249DEA); }
        internal static void N_0x1612C45F9E3E0D44() { NativeInvoker.Invoke(0x1612C45F9E3E0D44); } // 0x1612C45F9E3E0D44 b323<, (ulong)1612C45F9E3E0D44); }
        internal static void N_0x5DEBD9C4DC995692() { NativeInvoker.Invoke(0x5DEBD9C4DC995692); } // 0x5DEBD9C4DC995692 b323<, (ulong)5DEBD9C4DC995692); }
        internal static void N_0xAAE9BE70EC7C69AB(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7) { NativeInvoker.Invoke(0xAAE9BE70EC7C69AB, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7); }
        internal static void GRASS_LOD_SHRINK_SCRIPT_AREAS_(float x, float y, float z, float radius, float p4, float p5, float p6) { NativeInvoker.Invoke(0x6D955F6A9E0295B1, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6); }
        internal static void GRASS_LOD_RESET_SCRIPT_AREAS_() { NativeInvoker.Invoke(0x302C91AB2D477F7E); } // 0x302C91AB2D477F7E b323<, (ulong)302C91AB2D477F7E); }
        internal static void CASCADE_SHADOWS_INIT_SESSION() { NativeInvoker.Invoke(0x03FC694AE06C5A20); } // 0x03FC694AE06C5A20 0x48F16186 b323<, (ulong)03FC694AE06C5A20); }
        internal static void CASCADE_SHADOWS_SET_CASCADE_BOUNDS(Any p0, BOOL p1, float p2, float p3, float p4, float p5, BOOL p6, float p7) { NativeInvoker.Invoke(0xD2936CAB8B58FCBD, (ulong)p0, (ulong)p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, (ulong)p6, *(uint*)&p7); }
        internal static void CASCADE_SHADOWS_SET_CASCADE_BOUNDS_SCALE(float p0) { NativeInvoker.Invoke(0x5F0F3F56635809EF, *(uint*)&p0); }
        internal static void CASCADE_SHADOWS_SET_ENTITY_TRACKER_SCALE(float p0) { NativeInvoker.Invoke(0x5E9DAF5A20F15908, *(uint*)&p0); }
        internal static void N_0x36F6626459D91457(float p0) { NativeInvoker.Invoke(0x36F6626459D91457, *(uint*)&p0); }
        internal static void N_0x259BA6D4E6F808F1(Any p0) { NativeInvoker.Invoke(0x259BA6D4E6F808F1, (ulong)p0); }
        internal static void CASCADE_SHADOWS_ENABLE_ENTITY_TRACKER(BOOL toggle) { NativeInvoker.Invoke(0x80ECBC0C856D3B0B, (ulong)toggle); }
        internal static void N_0x25FC3E33A31AD0C9(BOOL p0) { NativeInvoker.Invoke(0x25FC3E33A31AD0C9, (ulong)p0); }
        internal static void CASCADE_SHADOWS_SET_SHADOW_SAMPLE_TYPE(char* type) { NativeInvoker.Invoke(0xB11D94BC55F41932, (ulong)type); }
        internal static void CASCADE_SHADOWS_CLEAR_SHADOW_SAMPLE_TYPE() { NativeInvoker.Invoke(0x27CB772218215325); } // 0x27CB772218215325 b323<, (ulong)27CB772218215325); }
        internal static void CASCADE_SHADOWS_SET_AIRCRAFT_MODE(BOOL p0) { NativeInvoker.Invoke(0x6DDBF9DFFC4AC080, (ulong)p0); }
        internal static void CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_MODE(BOOL p0) { NativeInvoker.Invoke(0xD39D13C9FEBF0511, (ulong)p0); }
        internal static void CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_VALUE(float p0) { NativeInvoker.Invoke(0x02AC28F3A01FA04A, *(uint*)&p0); }
        internal static void N_0x0AE73D8DF3A762B2(BOOL p0) { NativeInvoker.Invoke(0x0AE73D8DF3A762B2, (ulong)p0); }
        internal static void N_0xCA465D9CC0D231BA(Any p0) { NativeInvoker.Invoke(0xCA465D9CC0D231BA, (ulong)p0); }
        internal static void GOLF_TRAIL_SET_ENABLED(BOOL toggle) { NativeInvoker.Invoke(0xA51C4B86B71652AE, (ulong)toggle); }
        internal static void GOLF_TRAIL_SET_PATH(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, BOOL p8) { NativeInvoker.Invoke(0x312342E1A4874F3F, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, *(uint*)&p7, (ulong)p8); }
        internal static void GOLF_TRAIL_SET_RADIUS(float p0, float p1, float p2) { NativeInvoker.Invoke(0x2485D34E50A22E84, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2); }
        internal static void GOLF_TRAIL_SET_COLOUR(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11) { NativeInvoker.Invoke(0x12995F2E53FFA601, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9, (ulong)p10, (ulong)p11); }
        internal static void GOLF_TRAIL_SET_TESSELLATION(int p0, int p1) { NativeInvoker.Invoke(0xDBAA5EC848BA2D46, (ulong)p0, (ulong)p1); }
        internal static void N_0xC0416B061F2B7E5E(BOOL p0) { NativeInvoker.Invoke(0xC0416B061F2B7E5E, (ulong)p0); }
        internal static void GOLF_TRAIL_SET_FIXED_CONTROL_POINT(int type, float xPos, float yPos, float zPos, float p4, int red, int green, int blue, int alpha) { NativeInvoker.Invoke(0xB1BB03742917A5D6, (ulong)type, *(uint*)&xPos, *(uint*)&yPos, *(uint*)&zPos, *(uint*)&p4, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha); }
        internal static void GOLF_TRAIL_SET_SHADER_PARAMS(float p0, float p1, float p2, float p3, float p4) { NativeInvoker.Invoke(0x9CFDD90B2B844BF7, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4); }
        internal static void GOLF_TRAIL_SET_FACING(BOOL p0) { NativeInvoker.Invoke(0x06F761EA47C1D3ED, (ulong)p0); }
        internal static float GOLF_TRAIL_GET_MAX_HEIGHT() { return NativeInvoker.Invoke<float>(0xA4819F5E23E2FFAD); } // 0xA4819F5E23E2FFAD 0xA08B46AD b323, (ulong)A4819F5E23E2FFAD); }
        internal static Vector3 GOLF_TRAIL_GET_VISUAL_CONTROL_POINT(int p0) { return NativeInvoker.Invoke<Vector3>(0xA4664972A9B8F8BA, (ulong)p0); }
        internal static void SET_SEETHROUGH(BOOL toggle) { NativeInvoker.Invoke(0x7E08924259E08CE0, (ulong)toggle); }
        internal static BOOL GET_USINGSEETHROUGH() { return NativeInvoker.Invoke<BOOL>(0x44B80ABAB9D80BD3); } // 0x44B80ABAB9D80BD3 0x1FE547F2 b323, (ulong)44B80ABAB9D80BD3); }
        internal static void SEETHROUGH_RESET() { NativeInvoker.Invoke(0x70A64C0234EF522C); } // 0x70A64C0234EF522C 0x310E9B67 b323<, (ulong)70A64C0234EF522C); }
        internal static void SEETHROUGH_SET_FADE_START_DISTANCE_(float distance) { NativeInvoker.Invoke(0xA78DE25577300BA1, *(uint*)&distance); }
        internal static void SEETHROUGH_SET_FADE_END_DISTANCE_(float distance) { NativeInvoker.Invoke(0x9D75795B9DC6EBBF, *(uint*)&distance); }
        internal static float SEETHROUGH_GET_MAX_THICKNESS_() { return NativeInvoker.Invoke<float>(0x43DBAE39626CE83F); } // 0x43DBAE39626CE83F b1290, (ulong)43DBAE39626CE83F); }
        internal static void SEETHROUGH_SET_MAX_THICKNESS_(float thickness) { NativeInvoker.Invoke(0x0C8FAC83902A62DF, *(uint*)&thickness); }
        internal static void SEETHROUGH_SET_NOISE_AMOUNT_MIN_(float amount) { NativeInvoker.Invoke(0xFF5992E1C9E65D05, *(uint*)&amount); }
        internal static void SEETHROUGH_SET_NOISE_AMOUNT_MAX_(float amount) { NativeInvoker.Invoke(0xFEBFBFDFB66039DE, *(uint*)&amount); }
        internal static void SEETHROUGH_SET_HI_LIGHT_INTENSITY_(float intensity) { NativeInvoker.Invoke(0x19E50EB6E33E1D28, *(uint*)&intensity); }
        internal static void SEETHROUGH_SET_HI_LIGHT_NOISE_(float noise) { NativeInvoker.Invoke(0x1636D7FC127B10D2, *(uint*)&noise); }
        internal static void SEETHROUGH_SET_HEATSCALE(int index, float heatScale) { NativeInvoker.Invoke(0xD7D0B00177485411, (ulong)index, *(uint*)&heatScale); }
        internal static void SEETHROUGH_SET_COLOR_NEAR_(int red, int green, int blue) { NativeInvoker.Invoke(0x1086127B3A63505E, (ulong)red, (ulong)green, (ulong)blue); }
        internal static void N_0xB3C641F3630BF6DA(float p0) { NativeInvoker.Invoke(0xB3C641F3630BF6DA, *(uint*)&p0); }
        internal static float N_0xE59343E9E96529E7() { return NativeInvoker.Invoke<float>(0xE59343E9E96529E7); } // 0xE59343E9E96529E7 0xD906A3A9 b323, (ulong)E59343E9E96529E7); }
        internal static void N_0x6A51F78772175A51(BOOL toggle) { NativeInvoker.Invoke(0x6A51F78772175A51, (ulong)toggle); }
        internal static void TOGGLE_PLAYER_DAMAGE_OVERLAY(BOOL toggle) { NativeInvoker.Invoke(0xE63D7C6EECECB66B, (ulong)toggle); }
        internal static void N_0xE3E2C1B4C59DBC77(int unk) { NativeInvoker.Invoke(0xE3E2C1B4C59DBC77, (ulong)unk); }
        internal static BOOL TRIGGER_SCREENBLUR_FADE_IN(float transitionTime) { return NativeInvoker.Invoke<BOOL>(0xA328A24AAA6B7FDC, *(uint*)&transitionTime); }
        internal static BOOL TRIGGER_SCREENBLUR_FADE_OUT(float transitionTime) { return NativeInvoker.Invoke<BOOL>(0xEFACC8AEF94430D5, *(uint*)&transitionTime); }
        internal static void DISABLE_SCREENBLUR_FADE() { NativeInvoker.Invoke(0xDE81239437E8C5A8); } // 0xDE81239437E8C5A8 0xDB7AECDA b323<, (ulong)DE81239437E8C5A8); }
        internal static float GET_SCREENBLUR_FADE_CURRENT_TIME() { return NativeInvoker.Invoke<float>(0x5CCABFFCA31DDE33); } // 0x5CCABFFCA31DDE33 0xEA432A94 b323, (ulong)5CCABFFCA31DDE33); }
        internal static BOOL IS_SCREENBLUR_FADE_RUNNING() { return NativeInvoker.Invoke<BOOL>(0x7B226C785A52A0A9); } // 0x7B226C785A52A0A9 0x926B8734 b323, (ulong)7B226C785A52A0A9); }
        internal static void TOGGLE_PAUSED_RENDERPHASES(BOOL toggle) { NativeInvoker.Invoke(0xDFC252D8A3E15AB7, (ulong)toggle); }
        internal static BOOL GET_TOGGLE_PAUSED_RENDERPHASES_STATUS() { return NativeInvoker.Invoke<BOOL>(0xEB3DAC2C86001E5E); } // 0xEB3DAC2C86001E5E 0xD4F5D07D b323, (ulong)EB3DAC2C86001E5E); }
        internal static void RESET_PAUSED_RENDERPHASES() { NativeInvoker.Invoke(0xE1C8709406F2C41C); } // 0xE1C8709406F2C41C 0x0113EAE4 b323<, (ulong)E1C8709406F2C41C); }
        internal static void N_0x851CD923176EBA7C() { NativeInvoker.Invoke(0x851CD923176EBA7C); } // 0x851CD923176EBA7C 0xDCBA251B b323<, (ulong)851CD923176EBA7C); }
        internal static void SET_HIDOF_ENV_BLUR_PARAMS_(BOOL p0, BOOL p1, float nearplaneOut, float nearplaneIn, float farplaneOut, float farplaneIn) { NativeInvoker.Invoke(0xBA3D65906822BED5, (ulong)p0, (ulong)p1, *(uint*)&nearplaneOut, *(uint*)&nearplaneIn, *(uint*)&farplaneOut, *(uint*)&farplaneIn); }
        internal static void N_0xB569F41F3E7E83A4(Any p0) { NativeInvoker.Invoke(0xB569F41F3E7E83A4, (ulong)p0); }
        internal static BOOL N_0x7AC24EAB6D74118D(BOOL p0) { return NativeInvoker.Invoke<BOOL>(0x7AC24EAB6D74118D, (ulong)p0); }
        internal static Any N_0xBCEDB009461DA156() { return NativeInvoker.Invoke<Any>(0xBCEDB009461DA156); } // 0xBCEDB009461DA156 0x5AB94128 b323, (ulong)BCEDB009461DA156); }
        internal static BOOL N_0x27FEB5254759CDE3(char* textureDict, BOOL p1) { return NativeInvoker.Invoke<BOOL>(0x27FEB5254759CDE3, (ulong)textureDict, (ulong)p1); }
        internal static int START_PARTICLE_FX_NON_LOOPED_AT_COORD(char* effectName, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis) { return NativeInvoker.Invoke<int>(0x25129531F77B9ED3, (ulong)effectName, *(uint*)&xPos, *(uint*)&yPos, *(uint*)&zPos, *(uint*)&xRot, *(uint*)&yRot, *(uint*)&zRot, *(uint*)&scale, (ulong)xAxis, (ulong)yAxis, (ulong)zAxis); }
        internal static BOOL START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(char* effectName, float xPos, float yPos, float zPos, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis, BOOL p11) { return NativeInvoker.Invoke<BOOL>(0xF56B8137DF10135D, (ulong)effectName, *(uint*)&xPos, *(uint*)&yPos, *(uint*)&zPos, *(uint*)&xRot, *(uint*)&yRot, *(uint*)&zRot, *(uint*)&scale, (ulong)xAxis, (ulong)yAxis, (ulong)zAxis, (ulong)p11); }
        internal static BOOL START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE(char* effectName, Ped ped, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) { return NativeInvoker.Invoke<BOOL>(0x0E7E72961BA18619, (ulong)effectName, (ulong)ped, *(uint*)&offsetX, *(uint*)&offsetY, *(uint*)&offsetZ, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, (ulong)boneIndex, *(uint*)&scale, (ulong)axisX, (ulong)axisY, (ulong)axisZ); }
        internal static BOOL START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_PED_BONE(char* effectName, Ped ped, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) { return NativeInvoker.Invoke<BOOL>(0xA41B6A43642AC2CF, (ulong)effectName, (ulong)ped, *(uint*)&offsetX, *(uint*)&offsetY, *(uint*)&offsetZ, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, (ulong)boneIndex, *(uint*)&scale, (ulong)axisX, (ulong)axisY, (ulong)axisZ); }
        internal static BOOL START_PARTICLE_FX_NON_LOOPED_ON_ENTITY(char* effectName, Entity entity, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) { return NativeInvoker.Invoke<BOOL>(0x0D53A3B8DA0809D2, (ulong)effectName, (ulong)entity, *(uint*)&offsetX, *(uint*)&offsetY, *(uint*)&offsetZ, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, *(uint*)&scale, (ulong)axisX, (ulong)axisY, (ulong)axisZ); }
        internal static BOOL START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(char* effectName, Entity entity, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) { return NativeInvoker.Invoke<BOOL>(0xC95EB1DB6E92113D, (ulong)effectName, (ulong)entity, *(uint*)&offsetX, *(uint*)&offsetY, *(uint*)&offsetZ, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, *(uint*)&scale, (ulong)axisX, (ulong)axisY, (ulong)axisZ); }
        internal static BOOL START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY_BONE_(char* effectName, Entity entity, float offsetX, float offsetY, float offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, BOOL axisX, BOOL axisY, BOOL axisZ) { return NativeInvoker.Invoke<BOOL>(0x02B1F2A72E0F5325, (ulong)effectName, (ulong)entity, *(uint*)&offsetX, *(uint*)&offsetY, *(uint*)&offsetZ, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, (ulong)boneIndex, *(uint*)&scale, (ulong)axisX, (ulong)axisY, (ulong)axisZ); }
        internal static void SET_PARTICLE_FX_NON_LOOPED_COLOUR(float r, float g, float b) { NativeInvoker.Invoke(0x26143A59EF48B262, *(uint*)&r, *(uint*)&g, *(uint*)&b); }
        internal static void SET_PARTICLE_FX_NON_LOOPED_ALPHA(float alpha) { NativeInvoker.Invoke(0x77168D722C58B2FC, *(uint*)&alpha); }
        internal static void N_0x8CDE909A0370BB3A(BOOL toggle) { NativeInvoker.Invoke(0x8CDE909A0370BB3A, (ulong)toggle); }
        internal static int START_PARTICLE_FX_LOOPED_AT_COORD(char* effectName, float x, float y, float z, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis, BOOL p11) { return NativeInvoker.Invoke<int>(0xE184F4F0DC5910E7, (ulong)effectName, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&xRot, *(uint*)&yRot, *(uint*)&zRot, *(uint*)&scale, (ulong)xAxis, (ulong)yAxis, (ulong)zAxis, (ulong)p11); }
        internal static int START_PARTICLE_FX_LOOPED_ON_PED_BONE(char* effectName, Ped ped, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis) { return NativeInvoker.Invoke<int>(0xF28DA9F38CD1787C, (ulong)effectName, (ulong)ped, *(uint*)&xOffset, *(uint*)&yOffset, *(uint*)&zOffset, *(uint*)&xRot, *(uint*)&yRot, *(uint*)&zRot, (ulong)boneIndex, *(uint*)&scale, (ulong)xAxis, (ulong)yAxis, (ulong)zAxis); }
        internal static int START_PARTICLE_FX_LOOPED_ON_ENTITY(char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis) { return NativeInvoker.Invoke<int>(0x1AE42C1660FD6517, (ulong)effectName, (ulong)entity, *(uint*)&xOffset, *(uint*)&yOffset, *(uint*)&zOffset, *(uint*)&xRot, *(uint*)&yRot, *(uint*)&zRot, *(uint*)&scale, (ulong)xAxis, (ulong)yAxis, (ulong)zAxis); }
        internal static int START_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis) { return NativeInvoker.Invoke<int>(0xC6EB449E33977F0B, (ulong)effectName, (ulong)entity, *(uint*)&xOffset, *(uint*)&yOffset, *(uint*)&zOffset, *(uint*)&xRot, *(uint*)&yRot, *(uint*)&zRot, (ulong)boneIndex, *(uint*)&scale, (ulong)xAxis, (ulong)yAxis, (ulong)zAxis); }
        internal static int START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY(char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis, Any p12, Any p13, Any p14, Any p15) { return NativeInvoker.Invoke<int>(0x6F60E89A7B64EE1D, (ulong)effectName, (ulong)entity, *(uint*)&xOffset, *(uint*)&yOffset, *(uint*)&zOffset, *(uint*)&xRot, *(uint*)&yRot, *(uint*)&zRot, *(uint*)&scale, (ulong)xAxis, (ulong)yAxis, (ulong)zAxis, (ulong)p12, (ulong)p13, (ulong)p14, (ulong)p15); }
        internal static int START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(char* effectName, Entity entity, float xOffset, float yOffset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis, Any p13, Any p14, Any p15, Any p16) { return NativeInvoker.Invoke<int>(0xDDE23F30CC5A0F03, (ulong)effectName, (ulong)entity, *(uint*)&xOffset, *(uint*)&yOffset, *(uint*)&zOffset, *(uint*)&xRot, *(uint*)&yRot, *(uint*)&zRot, (ulong)boneIndex, *(uint*)&scale, (ulong)xAxis, (ulong)yAxis, (ulong)zAxis, (ulong)p13, (ulong)p14, (ulong)p15, (ulong)p16); }
        internal static void STOP_PARTICLE_FX_LOOPED(int ptfxHandle, BOOL p1) { NativeInvoker.Invoke(0x8F75998877616996, (ulong)ptfxHandle, (ulong)p1); }
        internal static void REMOVE_PARTICLE_FX(int ptfxHandle, BOOL p1) { NativeInvoker.Invoke(0xC401503DFE8D53CF, (ulong)ptfxHandle, (ulong)p1); }
        internal static void REMOVE_PARTICLE_FX_FROM_ENTITY(Entity entity) { NativeInvoker.Invoke(0xB8FEAEEBCC127425, (ulong)entity); }
        internal static void REMOVE_PARTICLE_FX_IN_RANGE(float X, float Y, float Z, float radius) { NativeInvoker.Invoke(0xDD19FA1C6D657305, *(uint*)&X, *(uint*)&Y, *(uint*)&Z, *(uint*)&radius); }
        internal static void N_0xBA0127DA25FD54C9(Any p0, Any p1) { NativeInvoker.Invoke(0xBA0127DA25FD54C9, (ulong)p0, (ulong)p1); }
        internal static BOOL DOES_PARTICLE_FX_LOOPED_EXIST(int ptfxHandle) { return NativeInvoker.Invoke<BOOL>(0x74AFEF0D2E1E409B, (ulong)ptfxHandle); }
        internal static void SET_PARTICLE_FX_LOOPED_OFFSETS(int ptfxHandle, float x, float y, float z, float rotX, float rotY, float rotZ) { NativeInvoker.Invoke(0xF7DDEBEC43483C43, (ulong)ptfxHandle, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ); }
        internal static void SET_PARTICLE_FX_LOOPED_EVOLUTION(int ptfxHandle, char* propertyName, float amount, BOOL noNetwork) { NativeInvoker.Invoke(0x5F0C4B5B1C393BE2, (ulong)ptfxHandle, (ulong)propertyName, *(uint*)&amount, (ulong)noNetwork); }
        internal static void SET_PARTICLE_FX_LOOPED_COLOUR(int ptfxHandle, float r, float g, float b, BOOL p4) { NativeInvoker.Invoke(0x7F8F65877F88783B, (ulong)ptfxHandle, *(uint*)&r, *(uint*)&g, *(uint*)&b, (ulong)p4); }
        internal static void SET_PARTICLE_FX_LOOPED_ALPHA(int ptfxHandle, float alpha) { NativeInvoker.Invoke(0x726845132380142E, (ulong)ptfxHandle, *(uint*)&alpha); }
        internal static void SET_PARTICLE_FX_LOOPED_SCALE(int ptfxHandle, float scale) { NativeInvoker.Invoke(0xB44250AAA456492D, (ulong)ptfxHandle, *(uint*)&scale); }
        internal static void SET_PARTICLE_FX_LOOPED_FAR_CLIP_DIST(int ptfxHandle, float range) { NativeInvoker.Invoke(0xDCB194B85EF7B541, (ulong)ptfxHandle, *(uint*)&range); }
        internal static void SET_PARTICLE_FX_CAM_INSIDE_VEHICLE(BOOL p0) { NativeInvoker.Invoke(0xEEC4047028426510, (ulong)p0); }
        internal static void SET_PARTICLE_FX_CAM_INSIDE_NONPLAYER_VEHICLE(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0xACEE6F360FC1F6B6, (ulong)vehicle, (ulong)p1); }
        internal static void SET_PARTICLE_FX_SHOOTOUT_BOAT(Any p0) { NativeInvoker.Invoke(0x96EF97DAEB89BEF5, (ulong)p0); }
        internal static void N_0x2A251AA48B2B46DB() { NativeInvoker.Invoke(0x2A251AA48B2B46DB); } // 0x2A251AA48B2B46DB b323<, (ulong)2A251AA48B2B46DB); }
        internal static void N_0x908311265D42A820(Any p0) { NativeInvoker.Invoke(0x908311265D42A820, (ulong)p0); }
        internal static void N_0xCFD16F0DB5A3535C(BOOL toggle) { NativeInvoker.Invoke(0xCFD16F0DB5A3535C, (ulong)toggle); }
        internal static void N_0x5F6DF3D92271E8A1(BOOL toggle) { NativeInvoker.Invoke(0x5F6DF3D92271E8A1, (ulong)toggle); }
        internal static void N_0x2B40A97646381508(Any p0) { NativeInvoker.Invoke(0x2B40A97646381508, (ulong)p0); }
        internal static void ENABLE_CLOWN_BLOOD_VFX(BOOL toggle) { NativeInvoker.Invoke(0xD821490579791273, (ulong)toggle); }
        internal static void ENABLE_ALIEN_BLOOD_VFX(BOOL toggle) { NativeInvoker.Invoke(0x9DCE1F0F78260875, (ulong)toggle); }
        internal static void SET_PARTICLE_FX_BULLET_IMPACT_SCALE(float scale) { NativeInvoker.Invoke(0x27E32866E9A5C416, *(uint*)&scale); }
        internal static void N_0xBB90E12CAC1DAB25(float p0) { NativeInvoker.Invoke(0xBB90E12CAC1DAB25, *(uint*)&p0); }
        internal static void N_0xCA4AE345A153D573(BOOL p0) { NativeInvoker.Invoke(0xCA4AE345A153D573, (ulong)p0); }
        internal static void N_0x54E22EA2C1956A8D(float p0) { NativeInvoker.Invoke(0x54E22EA2C1956A8D, *(uint*)&p0); }
        internal static void N_0x949F397A288B28B3(float p0) { NativeInvoker.Invoke(0x949F397A288B28B3, *(uint*)&p0); }
        internal static void N_0xBA3D194057C79A7B(char* p0) { NativeInvoker.Invoke(0xBA3D194057C79A7B, (ulong)p0); }
        internal static void N_0x5DBF05DB5926D089(Any p0) { NativeInvoker.Invoke(0x5DBF05DB5926D089, (ulong)p0); }
        internal static void N_0x9B079E5221D984D3(BOOL p0) { NativeInvoker.Invoke(0x9B079E5221D984D3, (ulong)p0); }
        internal static void USE_PARTICLE_FX_ASSET(char* name) { NativeInvoker.Invoke(0x6C38AF3693A69A91, (ulong)name); }
        internal static void SET_PARTICLE_FX_OVERRIDE(char* oldAsset, char* newAsset) { NativeInvoker.Invoke(0xEA1E2D93F6F75ED9, (ulong)oldAsset, (ulong)newAsset); }
        internal static void RESET_PARTICLE_FX_OVERRIDE(char* name) { NativeInvoker.Invoke(0x89C8553DD3274AAE, (ulong)name); }
        internal static void N_0xA46B73FAA3460AE1(BOOL p0) { NativeInvoker.Invoke(0xA46B73FAA3460AE1, (ulong)p0); }
        internal static void N_0xF78B803082D4386F(float p0) { NativeInvoker.Invoke(0xF78B803082D4386F, *(uint*)&p0); }
        internal static void WASH_DECALS_IN_RANGE(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x9C30613D50A6ADEF, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void WASH_DECALS_FROM_VEHICLE(Vehicle vehicle, float p1) { NativeInvoker.Invoke(0x5B712761429DBC14, (ulong)vehicle, *(uint*)&p1); }
        internal static void FADE_DECALS_IN_RANGE(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0xD77EDADB0420E6E0, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void REMOVE_DECALS_IN_RANGE(float x, float y, float z, float range) { NativeInvoker.Invoke(0x5D6B2D4830A67C62, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&range); }
        internal static void REMOVE_DECALS_FROM_OBJECT(Object obj) { NativeInvoker.Invoke(0xCCF71CBDDF5B6CB9, (ulong)obj); }
        internal static void REMOVE_DECALS_FROM_OBJECT_FACING(Object obj, float x, float y, float z) { NativeInvoker.Invoke(0xA6F6F70FDC6D144C, (ulong)obj, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void REMOVE_DECALS_FROM_VEHICLE(Vehicle vehicle) { NativeInvoker.Invoke(0xE91F1B65F2B48D57, (ulong)vehicle); }
        internal static int ADD_DECAL(int decalType, float posX, float posY, float posZ, float p4, float p5, float p6, float p7, float p8, float p9, float width, float height, float rCoef, float gCoef, float bCoef, float opacity, float timeout, BOOL p17, BOOL p18, BOOL p19) { return NativeInvoker.Invoke<int>(0xB302244A1839BDAD, (ulong)decalType, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, *(uint*)&p7, *(uint*)&p8, *(uint*)&p9, *(uint*)&width, *(uint*)&height, *(uint*)&rCoef, *(uint*)&gCoef, *(uint*)&bCoef, *(uint*)&opacity, *(uint*)&timeout, (ulong)p17, (ulong)p18, (ulong)p19); }
        internal static int ADD_PETROL_DECAL(float x, float y, float z, float groundLvl, float width, float transparency) { return NativeInvoker.Invoke<int>(0x4F5212C7AD880DF8, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&groundLvl, *(uint*)&width, *(uint*)&transparency); }
        internal static void START_PETROL_TRAIL_DECALS(float p0) { NativeInvoker.Invoke(0x99AC7F0D8B9C893D, *(uint*)&p0); }
        internal static void ADD_PETROL_TRAIL_DECAL_INFO(float x, float y, float z, float p3) { NativeInvoker.Invoke(0x967278682CB6967A, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&p3); }
        internal static void END_PETROL_TRAIL_DECALS() { NativeInvoker.Invoke(0x0A123435A26C36CD); } // 0x0A123435A26C36CD 0xCCCA6855 b323<, (ulong)0A123435A26C36CD); }
        internal static void REMOVE_DECAL(int decal) { NativeInvoker.Invoke(0xED3F346429CCD659, (ulong)decal); }
        internal static BOOL IS_DECAL_ALIVE(int decal) { return NativeInvoker.Invoke<BOOL>(0xC694D74949CAFD0C, (ulong)decal); }
        internal static float GET_DECAL_WASH_LEVEL(int decal) { return NativeInvoker.Invoke<float>(0x323F647679A09103, (ulong)decal); }
        internal static void N_0xD9454B5752C857DC() { NativeInvoker.Invoke(0xD9454B5752C857DC); } // 0xD9454B5752C857DC 0xEAB6417C b323<, (ulong)D9454B5752C857DC); }
        internal static void N_0x27CFB1B1E078CB2D() { NativeInvoker.Invoke(0x27CFB1B1E078CB2D); } // 0x27CFB1B1E078CB2D 0xC2703B88 b323<, (ulong)27CFB1B1E078CB2D); }
        internal static void SET_DISABLE_DECAL_RENDERING_THIS_FRAME() { NativeInvoker.Invoke(0x4B5CFC83122DF602); } // 0x4B5CFC83122DF602 0xA706E84D b323<, (ulong)4B5CFC83122DF602); }
        internal static BOOL GET_IS_PETROL_DECAL_IN_RANGE(float xCoord, float yCoord, float zCoord, float radius) { return NativeInvoker.Invoke<BOOL>(0x2F09F7976C512404, *(uint*)&xCoord, *(uint*)&yCoord, *(uint*)&zCoord, *(uint*)&radius); }
        internal static void PATCH_DECAL_DIFFUSE_MAP(int decalType, char* textureDict, char* textureName) { NativeInvoker.Invoke(0x8A35C742130C6080, (ulong)decalType, (ulong)textureDict, (ulong)textureName); }
        internal static void UNPATCH_DECAL_DIFFUSE_MAP(int decalType) { NativeInvoker.Invoke(0xB7ED70C49521A61D, (ulong)decalType); }
        internal static void MOVE_VEHICLE_DECALS(Any p0, Any p1) { NativeInvoker.Invoke(0x84C8D7C2D30D3280, (ulong)p0, (ulong)p1); }
        internal static BOOL ADD_VEHICLE_CREW_EMBLEM(Vehicle vehicle, Ped ped, int boneIndex, float x1, float x2, float x3, float y1, float y2, float y3, float z1, float z2, float z3, float scale, Any p13, int alpha) { return NativeInvoker.Invoke<BOOL>(0x428BDCB9DA58DA53, (ulong)vehicle, (ulong)ped, (ulong)boneIndex, *(uint*)&x1, *(uint*)&x2, *(uint*)&x3, *(uint*)&y1, *(uint*)&y2, *(uint*)&y3, *(uint*)&z1, *(uint*)&z2, *(uint*)&z3, *(uint*)&scale, (ulong)p13, (ulong)alpha); }
        internal static Any N_0x82ACC484FFA3B05F(Any p0) { return NativeInvoker.Invoke<Any>(0x82ACC484FFA3B05F, (ulong)p0); }
        internal static void REMOVE_VEHICLE_CREW_EMBLEM(Vehicle vehicle, int p1) { NativeInvoker.Invoke(0xD2300034310557E4, (ulong)vehicle, (ulong)p1); }
        internal static int GET_VEHICLE_CREW_EMBLEM_REQUEST_STATE(Vehicle vehicle, int p1) { return NativeInvoker.Invoke<int>(0xFE26117A5841B2FF, (ulong)vehicle, (ulong)p1); }
        internal static BOOL DOES_VEHICLE_HAVE_CREW_EMBLEM(Vehicle vehicle, int p1) { return NativeInvoker.Invoke<BOOL>(0x060D935D3981A275, (ulong)vehicle, (ulong)p1); }
        internal static void N_0x0E4299C549F0D1F1(BOOL toggle) { NativeInvoker.Invoke(0x0E4299C549F0D1F1, (ulong)toggle); }
        internal static void N_0x02369D5C8A51FDCF(BOOL toggle) { NativeInvoker.Invoke(0x02369D5C8A51FDCF, (ulong)toggle); }
        internal static void N_0x46D1A61A21F566FC(float p0) { NativeInvoker.Invoke(0x46D1A61A21F566FC, *(uint*)&p0); }
        internal static void OVERRIDE_INTERIOR_SMOKE_NAME(char* name) { NativeInvoker.Invoke(0x2A2A52824DB96700, (ulong)name); }
        internal static void OVERRIDE_INTERIOR_SMOKE_LEVEL(float level) { NativeInvoker.Invoke(0x1600FD8CF72EBC12, *(uint*)&level); }
        internal static void OVERRIDE_INTERIOR_SMOKE_END() { NativeInvoker.Invoke(0xEFB55E7C25D3B3BE); } // 0xEFB55E7C25D3B3BE 0xE29EE145 b323<, (ulong)EFB55E7C25D3B3BE); }
        internal static void REGISTER_NOIR_SCREEN_EFFECT_THIS_FRAME_() { NativeInvoker.Invoke(0xA44FF770DFBC5DAE); } // 0xA44FF770DFBC5DAE b323<, (ulong)A44FF770DFBC5DAE); }
        internal static void DISABLE_VEHICLE_DISTANTLIGHTS(BOOL toggle) { NativeInvoker.Invoke(0xC9F98AC1884E73A2, (ulong)toggle); }
        internal static void N_0x03300B57FCAC6DDB(BOOL p0) { NativeInvoker.Invoke(0x03300B57FCAC6DDB, (ulong)p0); }
        internal static void N_0x98EDF76A7271E4F2() { NativeInvoker.Invoke(0x98EDF76A7271E4F2); } // 0x98EDF76A7271E4F2 b323<, (ulong)98EDF76A7271E4F2); }
        internal static void SET_FORCE_PED_FOOTSTEPS_TRACKS_(BOOL toggle) { NativeInvoker.Invoke(0xAEEDAD1420C65CC0, (ulong)toggle); }
        internal static void SET_FORCE_VEHICLE_TRAILS_(BOOL toggle) { NativeInvoker.Invoke(0x4CC7F0FEA5283FE0, (ulong)toggle); }
        internal static void DISABLE_SCRIPT_AMBIENT_EFFECTS_(Any p0) { NativeInvoker.Invoke(0xEFD97FF47B745B8D, (ulong)p0); }
        internal static void PRESET_INTERIOR_AMBIENT_CACHE(char* timecycleModifierName) { NativeInvoker.Invoke(0xD7021272EB0A451E, (ulong)timecycleModifierName); }
        internal static void SET_TIMECYCLE_MODIFIER(char* modifierName) { NativeInvoker.Invoke(0x2C933ABF17A1DF41, (ulong)modifierName); }
        internal static void SET_TIMECYCLE_MODIFIER_STRENGTH(float strength) { NativeInvoker.Invoke(0x82E7FFCD5B2326B3, *(uint*)&strength); }
        internal static void SET_TRANSITION_TIMECYCLE_MODIFIER(char* modifierName, float transition) { NativeInvoker.Invoke(0x3BCF567485E1971C, (ulong)modifierName, *(uint*)&transition); }
        internal static void N_0x1CBA05AE7BD7EE05(float p0) { NativeInvoker.Invoke(0x1CBA05AE7BD7EE05, *(uint*)&p0); }
        internal static void CLEAR_TIMECYCLE_MODIFIER() { NativeInvoker.Invoke(0x0F07E7745A236711); } // 0x0F07E7745A236711 0x8D8DF8EE b323<, (ulong)0F07E7745A236711); }
        internal static int GET_TIMECYCLE_MODIFIER_INDEX() { return NativeInvoker.Invoke<int>(0xFDF3D97C674AFB66); } // 0xFDF3D97C674AFB66 0x594FEEC4 b323, (ulong)FDF3D97C674AFB66); }
        internal static int GET_TIMECYCLE_TRANSITION_MODIFIER_INDEX() { return NativeInvoker.Invoke<int>(0x459FD2C8D0AB78BC); } // 0x459FD2C8D0AB78BC 0x03C44E4B b323, (ulong)459FD2C8D0AB78BC); }
        internal static Any N_0x98D18905BF723B99() { return NativeInvoker.Invoke<Any>(0x98D18905BF723B99); } // 0x98D18905BF723B99 b1493, (ulong)98D18905BF723B99); }
        internal static void PUSH_TIMECYCLE_MODIFIER() { NativeInvoker.Invoke(0x58F735290861E6B4); } // 0x58F735290861E6B4 0x7E082045 b323<, (ulong)58F735290861E6B4); }
        internal static void POP_TIMECYCLE_MODIFIER() { NativeInvoker.Invoke(0x3C8938D7D872211E); } // 0x3C8938D7D872211E 0x79D7D235 b323<, (ulong)3C8938D7D872211E); }
        internal static void SET_CURRENT_PLAYER_TCMODIFIER(char* modifierName) { NativeInvoker.Invoke(0xBBF327DED94E4DEB, (ulong)modifierName); }
        internal static void SET_PLAYER_TCMODIFIER_TRANSITION(float value) { NativeInvoker.Invoke(0xBDEB86F4D5809204, *(uint*)&value); }
        internal static void SET_NEXT_PLAYER_TCMODIFIER(char* modifierName) { NativeInvoker.Invoke(0xBF59707B3E5ED531, (ulong)modifierName); }
        internal static void ADD_TCMODIFIER_OVERRIDE(char* modifierName1, char* modifierName2) { NativeInvoker.Invoke(0x1A8E2C8B9CF4549C, (ulong)modifierName1, (ulong)modifierName2); }
        internal static void REMOVE_TCMODIFIER_OVERRIDE(char* p0) { NativeInvoker.Invoke(0x15E33297C3E8DC60, (ulong)p0); }
        internal static void SET_EXTRA_TIMECYCLE_MODIFIER_(char* modifierName) { NativeInvoker.Invoke(0x5096FD9CCB49056D, (ulong)modifierName); }
        internal static void CLEAR_EXTRA_TIMECYCLE_MODIFIER_() { NativeInvoker.Invoke(0x92CCC17A7A2285DA); } // 0x92CCC17A7A2285DA 0x6776720A b323<, (ulong)92CCC17A7A2285DA); }
        internal static int GET_EXTRA_TIMECYCLE_MODIFIER_INDEX_() { return NativeInvoker.Invoke<int>(0xBB0527EC6341496D); } // 0xBB0527EC6341496D b323, (ulong)BB0527EC6341496D); }
        internal static void SET_EXTRA_TIMECYCLE_MODIFIER_STRENGTH_(float strength) { NativeInvoker.Invoke(0x2C328AF17210F009, *(uint*)&strength); }
        internal static void RESET_EXTRA_TIMECYCLE_MODIFIER_STRENGTH_() { NativeInvoker.Invoke(0x2BF72AD5B41AA739); } // 0x2BF72AD5B41AA739 b323<, (ulong)2BF72AD5B41AA739); }
        internal static int REQUEST_SCALEFORM_MOVIE(char* scaleformName) { return NativeInvoker.Invoke<int>(0x11FE353CF9733E6F, (ulong)scaleformName); }
        internal static int REQUEST_SCALEFORM_MOVIE_2_(char* scaleformName) { return NativeInvoker.Invoke<int>(0x65E7E78842E74CDB, (ulong)scaleformName); }
        internal static int REQUEST_SCALEFORM_MOVIE_INSTANCE(char* scaleformName) { return NativeInvoker.Invoke<int>(0xC514489CFB8AF806, (ulong)scaleformName); }
        internal static int REQUEST_SCALEFORM_MOVIE_INTERACTIVE_(char* scaleformName) { return NativeInvoker.Invoke<int>(0xBD06C611BB9048C2, (ulong)scaleformName); }
        internal static BOOL HAS_SCALEFORM_MOVIE_LOADED(int scaleformHandle) { return NativeInvoker.Invoke<BOOL>(0x85F01B8D5B90570E, (ulong)scaleformHandle); }
        internal static BOOL N_0x2FCB133CA50A49EB(int val) { return NativeInvoker.Invoke<BOOL>(0x2FCB133CA50A49EB, (ulong)val); }
        internal static BOOL N_0x86255B1FC929E33E(int val) { return NativeInvoker.Invoke<BOOL>(0x86255B1FC929E33E, (ulong)val); }
        internal static BOOL HAS_SCALEFORM_MOVIE_FILENAME_LOADED(char* scaleformName) { return NativeInvoker.Invoke<BOOL>(0x0C1C5D756FB5F337, (ulong)scaleformName); }
        internal static BOOL HAS_SCALEFORM_CONTAINER_MOVIE_LOADED_INTO_PARENT(int scaleformHandle) { return NativeInvoker.Invoke<BOOL>(0x8217150E1217EBFD, (ulong)scaleformHandle); }
        internal static void SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(int* scaleformHandle) { NativeInvoker.Invoke(0x1D132D614DD86811, (ulong)scaleformHandle); }
        internal static void SET_SCALEFORM_MOVIE_TO_USE_SYSTEM_TIME(int scaleform, BOOL toggle) { NativeInvoker.Invoke(0x6D8EB211944DCE08, (ulong)scaleform, (ulong)toggle); }
        internal static void N_0x32F34FF7F617643B(Any p0, Any p1) { NativeInvoker.Invoke(0x32F34FF7F617643B, (ulong)p0, (ulong)p1); }
        internal static void SET_SCALEFORM_FIT_RENDERTARGET_(int scaleformHandle, BOOL toggle) { NativeInvoker.Invoke(0xE6A9F00D4240B519, (ulong)scaleformHandle, (ulong)toggle); }
        internal static void DRAW_SCALEFORM_MOVIE(int scaleformHandle, float x, float y, float width, float height, int red, int green, int blue, int alpha, int unk) { NativeInvoker.Invoke(0x54972ADAF0294A93, (ulong)scaleformHandle, *(uint*)&x, *(uint*)&y, *(uint*)&width, *(uint*)&height, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha, (ulong)unk); }
        internal static void DRAW_SCALEFORM_MOVIE_FULLSCREEN(int scaleform, int red, int green, int blue, int alpha, int unk) { NativeInvoker.Invoke(0x0DF606929C105BE1, (ulong)scaleform, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha, (ulong)unk); }
        internal static void DRAW_SCALEFORM_MOVIE_FULLSCREEN_MASKED(int scaleform1, int scaleform2, int red, int green, int blue, int alpha) { NativeInvoker.Invoke(0xCF537FDE4FBD4CE5, (ulong)scaleform1, (ulong)scaleform2, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha); }
        internal static void DRAW_SCALEFORM_MOVIE_3D(int scaleform, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float p7, float p8, float p9, float scaleX, float scaleY, float scaleZ, Any p13) { NativeInvoker.Invoke(0x87D51D72255D4E78, (ulong)scaleform, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, *(uint*)&p7, *(uint*)&p8, *(uint*)&p9, *(uint*)&scaleX, *(uint*)&scaleY, *(uint*)&scaleZ, (ulong)p13); }
        internal static void DRAW_SCALEFORM_MOVIE_3D_SOLID(int scaleform, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float p7, float p8, float p9, float scaleX, float scaleY, float scaleZ, Any p13) { NativeInvoker.Invoke(0x1CE592FDC749D6F5, (ulong)scaleform, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, *(uint*)&p7, *(uint*)&p8, *(uint*)&p9, *(uint*)&scaleX, *(uint*)&scaleY, *(uint*)&scaleZ, (ulong)p13); }
        internal static void CALL_SCALEFORM_MOVIE_METHOD(int scaleform, char* method) { NativeInvoker.Invoke(0xFBD96D87AC96D533, (ulong)scaleform, (ulong)method); }
        internal static void CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER(int scaleform, char* methodName, float param1, float param2, float param3, float param4, float param5) { NativeInvoker.Invoke(0xD0837058AE2E4BEE, (ulong)scaleform, (ulong)methodName, *(uint*)&param1, *(uint*)&param2, *(uint*)&param3, *(uint*)&param4, *(uint*)&param5); }
        internal static void CALL_SCALEFORM_MOVIE_METHOD_WITH_STRING(int scaleform, char* methodName, char* param1, char* param2, char* param3, char* param4, char* param5) { NativeInvoker.Invoke(0x51BC1ED3CC44E8F7, (ulong)scaleform, (ulong)methodName, (ulong)param1, (ulong)param2, (ulong)param3, (ulong)param4, (ulong)param5); }
        internal static void CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER_AND_STRING(int scaleform, char* methodName, float floatParam1, float floatParam2, float floatParam3, float floatParam4, float floatParam5, char* @stringParam1, char* @stringParam2, char* @stringParam3, char* @stringParam4, char* @stringParam5) { NativeInvoker.Invoke(0xEF662D8D57E290B1, (ulong)scaleform, (ulong)methodName, *(uint*)&floatParam1, *(uint*)&floatParam2, *(uint*)&floatParam3, *(uint*)&floatParam4, *(uint*)&floatParam5, (ulong)@stringParam1, (ulong)@stringParam2, (ulong)@stringParam3, (ulong)@stringParam4, (ulong)@stringParam5); }
        internal static BOOL BEGIN_SCALEFORM_SCRIPT_HUD_MOVIE_METHOD(int hudComponent, char* methodName) { return NativeInvoker.Invoke<BOOL>(0x98C494FD5BDFBFD5, (ulong)hudComponent, (ulong)methodName); }
        internal static BOOL BEGIN_SCALEFORM_MOVIE_METHOD(int scaleform, char* methodName) { return NativeInvoker.Invoke<BOOL>(0xF6E48914C7A8694E, (ulong)scaleform, (ulong)methodName); }
        internal static BOOL BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND(char* methodName) { return NativeInvoker.Invoke<BOOL>(0xAB58C27C2E6123C6, (ulong)methodName); }
        internal static BOOL BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER(char* methodName) { return NativeInvoker.Invoke<BOOL>(0xB9449845F73F5E9C, (ulong)methodName); }
        internal static void END_SCALEFORM_MOVIE_METHOD() { NativeInvoker.Invoke(0xC6796A8FFA375E53); } // 0xC6796A8FFA375E53 0x02DBF2D7 b323<, (ulong)C6796A8FFA375E53); }
        internal static Any END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE() { return NativeInvoker.Invoke<Any>(0xC50AA39A577AF886); } // 0xC50AA39A577AF886 0x2F38B526 b323, (ulong)C50AA39A577AF886); }
        internal static BOOL IS_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_READY(int methodReturn) { return NativeInvoker.Invoke<BOOL>(0x768FF8961BA904D6, (ulong)methodReturn); }
        internal static int GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT(int methodReturn) { return NativeInvoker.Invoke<int>(0x2DE7EFA66B906036, (ulong)methodReturn); }
        internal static BOOL GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_BOOL_(int methodReturn) { return NativeInvoker.Invoke<BOOL>(0xD80A80346A45D761, (ulong)methodReturn); }
        internal static char* GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING(int methodReturn) { return (char*)NativeInvoker.Invoke<IntPtr>(0xE1E258829A885245, (ulong)methodReturn); }
        internal static void SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(int value) { NativeInvoker.Invoke(0xC3D0841A0CC546A6, (ulong)value); }
        internal static void SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(float value) { NativeInvoker.Invoke(0xD69736AAE04DB51A, *(uint*)&value); }
        internal static void SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(BOOL value) { NativeInvoker.Invoke(0xC58424BA936EB458, (ulong)value); }
        internal static void BEGIN_TEXT_COMMAND_SCALEFORM_STRING(char* componentType) { NativeInvoker.Invoke(0x80338406F3475E55, (ulong)componentType); }
        internal static void END_TEXT_COMMAND_SCALEFORM_STRING() { NativeInvoker.Invoke(0x362E2D3FE93A9959); } // 0x362E2D3FE93A9959 0x386CE0B8 b323<, (ulong)362E2D3FE93A9959); }
        internal static void END_TEXT_COMMAND_SCALEFORM_STRING_2_() { NativeInvoker.Invoke(0xAE4E8157D9ECF087); } // 0xAE4E8157D9ECF087 0x2E80DB52 b323<, (ulong)AE4E8157D9ECF087); }
        internal static void SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING_2_(char* @string) { NativeInvoker.Invoke(0x77FE3402004CD1B0, (ulong)@string); }
        internal static void SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING(char* @string) { NativeInvoker.Invoke(0xBA7148484BD90365, (ulong)@string); }
        internal static void SCALEFORM_MOVIE_METHOD_ADD_PARAM_PLAYER_NAME_STRING(char* @string) { NativeInvoker.Invoke(0xE83A3E3557A56640, (ulong)@string); }
        internal static BOOL DOES_LATEST_BRIEF_STRING_EXIST(int p0) { return NativeInvoker.Invoke<BOOL>(0x5E657EF1099EDD65, (ulong)p0); }
        internal static void SCALEFORM_MOVIE_METHOD_ADD_PARAM_LATEST_BRIEF_STRING(int value) { NativeInvoker.Invoke(0xEC52C631A1831C03, (ulong)value); }
        internal static void REQUEST_SCALEFORM_SCRIPT_HUD_MOVIE(int hudComponent) { NativeInvoker.Invoke(0x9304881D6F6537EA, (ulong)hudComponent); }
        internal static BOOL HAS_SCALEFORM_SCRIPT_HUD_MOVIE_LOADED(int hudComponent) { return NativeInvoker.Invoke<BOOL>(0xDF6E5987D2B4D140, (ulong)hudComponent); }
        internal static void REMOVE_SCALEFORM_SCRIPT_HUD_MOVIE(int hudComponent) { NativeInvoker.Invoke(0xF44A5456AC3F4F97, (ulong)hudComponent); }
        internal static BOOL N_0xD1C7CB175E012964(int scaleformHandle) { return NativeInvoker.Invoke<BOOL>(0xD1C7CB175E012964, (ulong)scaleformHandle); }
        internal static void SET_TV_CHANNEL(int channel) { NativeInvoker.Invoke(0xBAABBB23EB6E484E, (ulong)channel); }
        internal static int GET_TV_CHANNEL() { return NativeInvoker.Invoke<int>(0xFC1E275A90D39995); } // 0xFC1E275A90D39995 0x6B96145A b323, (ulong)FC1E275A90D39995); }
        internal static void SET_TV_VOLUME(float volume) { NativeInvoker.Invoke(0x2982BF73F66E9DDC, *(uint*)&volume); }
        internal static float GET_TV_VOLUME() { return NativeInvoker.Invoke<float>(0x2170813D3DD8661B); } // 0x2170813D3DD8661B 0x39555CF0 b323, (ulong)2170813D3DD8661B); }
        internal static void DRAW_TV_CHANNEL(float xPos, float yPos, float xScale, float yScale, float rotation, int red, int green, int blue, int alpha) { NativeInvoker.Invoke(0xFDDC2B4ED3C69DF0, *(uint*)&xPos, *(uint*)&yPos, *(uint*)&xScale, *(uint*)&yScale, *(uint*)&rotation, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha); }
        internal static void SET_TV_CHANNEL_PLAYLIST(int tvChannel, char* playlistName, BOOL restart) { NativeInvoker.Invoke(0xF7B38B8305F1FE8B, (ulong)tvChannel, (ulong)playlistName, (ulong)restart); }
        internal static void SET_TV_CHANNEL_PLAYLIST_AT_HOUR(int tvChannel, char* playlistName, int hour) { NativeInvoker.Invoke(0x2201C576FACAEBE8, (ulong)tvChannel, (ulong)playlistName, (ulong)hour); }
        internal static void CLEAR_TV_CHANNEL_PLAYLIST(int tvChannel) { NativeInvoker.Invoke(0xBEB3D46BB7F043C0, (ulong)tvChannel); }
        internal static BOOL IS_PLAYLIST_UNK_(int tvChannel, Any p1) { return NativeInvoker.Invoke<BOOL>(0x1F710BFF7DAE6261, (ulong)tvChannel, (ulong)p1); }
        internal static BOOL IS_TV_PLAYLIST_ITEM_PLAYING_(Hash videoCliphash) { return NativeInvoker.Invoke<BOOL>(0x0AD973CA1E077B60, (ulong)videoCliphash); }
        internal static void ENABLE_MOVIE_KEYFRAME_WAIT(BOOL toggle) { NativeInvoker.Invoke(0x74C180030FDE4B69, (ulong)toggle); }
        internal static void N_0xD1C55B110E4DF534(Any p0) { NativeInvoker.Invoke(0xD1C55B110E4DF534, (ulong)p0); }
        internal static Hash N_0x30432A0118736E00() { return NativeInvoker.Invoke<Hash>(0x30432A0118736E00); } // 0x30432A0118736E00 b1493, (ulong)30432A0118736E00); }
        internal static void ENABLE_MOVIE_SUBTITLES(BOOL toggle) { NativeInvoker.Invoke(0x873FA65C778AD970, (ulong)toggle); }
        internal static BOOL UI3DSCENE_IS_AVAILABLE() { return NativeInvoker.Invoke<BOOL>(0xD3A10FC7FD8D98CD); } // 0xD3A10FC7FD8D98CD 0xE40A0F1A b323, (ulong)D3A10FC7FD8D98CD); }
        internal static BOOL UI3DSCENE_PUSH_PRESET(char* presetName) { return NativeInvoker.Invoke<BOOL>(0xF1CEA8A4198D8E9A, (ulong)presetName); }
        internal static BOOL N_0x98C4FE6EC34154CA(char* presetName, Ped ped, int p2, float posX, float posY, float posZ) { return NativeInvoker.Invoke<BOOL>(0x98C4FE6EC34154CA, (ulong)presetName, (ulong)ped, (ulong)p2, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ); }
        internal static void N_0x7A42B2E236E71415() { NativeInvoker.Invoke(0x7A42B2E236E71415); } // 0x7A42B2E236E71415 0x431AA036 b323<, (ulong)7A42B2E236E71415); }
        internal static void N_0x108BE26959A9D9BB(BOOL toggle) { NativeInvoker.Invoke(0x108BE26959A9D9BB, (ulong)toggle); }
        internal static void TERRAINGRID_ACTIVATE(BOOL toggle) { NativeInvoker.Invoke(0xA356990E161C9E65, (ulong)toggle); }
        internal static void TERRAINGRID_SET_PARAMS(float x, float y, float z, float p3, float rotation, float p5, float width, float height, float p8, float scale, float glowIntensity, float normalHeight, float heightDiff) { NativeInvoker.Invoke(0x1C4FC5752BCD8E48, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&p3, *(uint*)&rotation, *(uint*)&p5, *(uint*)&width, *(uint*)&height, *(uint*)&p8, *(uint*)&scale, *(uint*)&glowIntensity, *(uint*)&normalHeight, *(uint*)&heightDiff); }
        internal static void TERRAINGRID_SET_COLOURS(int lowR, int lowG, int lowB, int lowAlpha, int r, int g, int b, int alpha, int highR, int highG, int highB, int highAlpha) { NativeInvoker.Invoke(0x5CE62918F8D703C7, (ulong)lowR, (ulong)lowG, (ulong)lowB, (ulong)lowAlpha, (ulong)r, (ulong)g, (ulong)b, (ulong)alpha, (ulong)highR, (ulong)highG, (ulong)highB, (ulong)highAlpha); }
        internal static void ANIMPOSTFX_PLAY(char* effectName, int duration, BOOL looped) { NativeInvoker.Invoke(0x2206BF9A37B7F724, (ulong)effectName, (ulong)duration, (ulong)looped); }
        internal static void ANIMPOSTFX_STOP(char* effectName) { NativeInvoker.Invoke(0x068E835A1D0DC0E3, (ulong)effectName); }
        internal static float ANIMPOSTFX_GET_UNK_(char* effectName) { return NativeInvoker.Invoke<float>(0xE35B38A27E8E7179, (ulong)effectName); }
        internal static BOOL ANIMPOSTFX_IS_RUNNING(char* effectName) { return NativeInvoker.Invoke<BOOL>(0x36AD3E690DA5ACEB, (ulong)effectName); }
        internal static void ANIMPOSTFX_STOP_ALL() { NativeInvoker.Invoke(0xB4EDDC19532BFB85); } // 0xB4EDDC19532BFB85 0x4E6D875B b323<, (ulong)B4EDDC19532BFB85); }
        internal static void ANIMPOSTFX_STOP_AND_DO_UNK_(char* effectName) { NativeInvoker.Invoke(0xD2209BE128B5418C, (ulong)effectName); }
    }

    internal static unsafe class HUD
    {
        internal static void BEGIN_TEXT_COMMAND_BUSYSPINNER_ON(char* @string) { NativeInvoker.Invoke(0xABA17D7CE615ADBF, (ulong)@string); }
        internal static void END_TEXT_COMMAND_BUSYSPINNER_ON(int busySpinnerType) { NativeInvoker.Invoke(0xBD12F8228410D9B4, (ulong)busySpinnerType); }
        internal static void BUSYSPINNER_OFF() { NativeInvoker.Invoke(0x10D373323E5B9C0D); } // 0x10D373323E5B9C0D 0x94119534 b323<, (ulong)10D373323E5B9C0D); }
        internal static void PRELOAD_BUSYSPINNER() { NativeInvoker.Invoke(0xC65AB383CD91DF98); } // 0xC65AB383CD91DF98 0x71077FBD b323<, (ulong)C65AB383CD91DF98); }
        internal static BOOL BUSYSPINNER_IS_ON() { return NativeInvoker.Invoke<BOOL>(0xD422FCC5F239A915); } // 0xD422FCC5F239A915 0xB8B3A5D0 b323, (ulong)D422FCC5F239A915); }
        internal static BOOL BUSYSPINNER_IS_DISPLAYING() { return NativeInvoker.Invoke<BOOL>(0xB2A592B04648A9CB); } // 0xB2A592B04648A9CB 0x3AF34DEF b323, (ulong)B2A592B04648A9CB); }
        internal static void N_0x9245E81072704B8A(BOOL p0) { NativeInvoker.Invoke(0x9245E81072704B8A, (ulong)p0); }
        internal static void SET_MOUSE_CURSOR_ACTIVE_THIS_FRAME_() { NativeInvoker.Invoke(0xAAE7CE1D63167423); } // 0xAAE7CE1D63167423 b323<, (ulong)AAE7CE1D63167423); }
        internal static void SET_MOUSE_CURSOR_SPRITE_(int spriteId) { NativeInvoker.Invoke(0x8DB8CFFD58B62552, (ulong)spriteId); }
        internal static void SET_MOUSE_CURSOR_VISIBLE_IN_MENUS_(BOOL toggle) { NativeInvoker.Invoke(0x98215325A695E78A, (ulong)toggle); }
        internal static Any N_0x3D9ACB1EB139E702() { return NativeInvoker.Invoke<Any>(0x3D9ACB1EB139E702); } // 0x3D9ACB1EB139E702 b323, (ulong)3D9ACB1EB139E702); }
        internal static BOOL N_0x632B2940C67F4EA9(int scaleformHandle, Any* p1, Any* p2, Any* p3) { return NativeInvoker.Invoke<BOOL>(0x632B2940C67F4EA9, (ulong)scaleformHandle, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void THEFEED_ONLY_SHOW_TOOLTIPS(BOOL toggle) { NativeInvoker.Invoke(0x6F1554B0CC2089FA, (ulong)toggle); }
        internal static void THEFEED_SET_SCRIPTED_MENU_HEIGHT(float pos) { NativeInvoker.Invoke(0x55598D21339CB998, *(uint*)&pos); }
        internal static void THEFEED_DISABLE_LOADING_SCREEN_TIPS_() { NativeInvoker.Invoke(0x32888337579A5970); } // 0x32888337579A5970 b463<, (ulong)32888337579A5970); }
        internal static void THEFEED_HIDE_THIS_FRAME() { NativeInvoker.Invoke(0x25F87B30C382FCA7); } // 0x25F87B30C382FCA7 0x1E63088A b323<, (ulong)25F87B30C382FCA7); }
        internal static void THEFEED_DISPLAY_LOADING_SCREEN_TIPS_() { NativeInvoker.Invoke(0x15CFA549788D35EF); } // 0x15CFA549788D35EF b463<, (ulong)15CFA549788D35EF); }
        internal static void THEFEED_FLUSH_QUEUE() { NativeInvoker.Invoke(0xA8FDB297A8D25FBA); } // 0xA8FDB297A8D25FBA 0x5205C6F5 b323<, (ulong)A8FDB297A8D25FBA); }
        internal static void THEFEED_REMOVE_ITEM(int notificationId) { NativeInvoker.Invoke(0xBE4390CB40B3E627, (ulong)notificationId); }
        internal static void THEFEED_FORCE_RENDER_ON() { NativeInvoker.Invoke(0xA13C11E1B5C06BFC); } // 0xA13C11E1B5C06BFC 0x520FCB6D b323<, (ulong)A13C11E1B5C06BFC); }
        internal static void THEFEED_FORCE_RENDER_OFF() { NativeInvoker.Invoke(0x583049884A2EEE3C); } // 0x583049884A2EEE3C 0xC8BAB2F2 b323<, (ulong)583049884A2EEE3C); }
        internal static void THEFEED_PAUSE() { NativeInvoker.Invoke(0xFDB423997FA30340); } // 0xFDB423997FA30340 0x4D0449C6 b323<, (ulong)FDB423997FA30340); }
        internal static void THEFEED_RESUME() { NativeInvoker.Invoke(0xE1CD1E48E025E661); } // 0xE1CD1E48E025E661 0xD3F40140 b323<, (ulong)E1CD1E48E025E661); }
        internal static BOOL THEFEED_IS_PAUSED() { return NativeInvoker.Invoke<BOOL>(0xA9CBFD40B3FA3010); } // 0xA9CBFD40B3FA3010 0xC5223796 b323, (ulong)A9CBFD40B3FA3010); }
        internal static void THEFEED_SPS_EXTEND_WIDESCREEN_ON() { NativeInvoker.Invoke(0xD4438C0564490E63); } // 0xD4438C0564490E63 0x709B4BCB b323<, (ulong)D4438C0564490E63); }
        internal static void THEFEED_SPS_EXTEND_WIDESCREEN_OFF() { NativeInvoker.Invoke(0xB695E2CD0A2DA9EE); } // 0xB695E2CD0A2DA9EE 0x4A4A40A4 b323<, (ulong)B695E2CD0A2DA9EE); }
        internal static int THEFEED_GET_FIRST_VISIBLE_DELETE_REMAINING() { return NativeInvoker.Invoke<int>(0x82352748437638CA); } // 0x82352748437638CA 0x294405D4 b323, (ulong)82352748437638CA); }
        internal static void THEFEED_COMMENT_TELEPORT_POOL_ON() { NativeInvoker.Invoke(0x56C8B608CFD49854); } // 0x56C8B608CFD49854 0xF881AB87 b323<, (ulong)56C8B608CFD49854); }
        internal static void THEFEED_COMMENT_TELEPORT_POOL_OFF() { NativeInvoker.Invoke(0xADED7F5748ACAFE6); } // 0xADED7F5748ACAFE6 0x1D6859CA b323<, (ulong)ADED7F5748ACAFE6); }
        internal static void THEFEED_SET_NEXT_POST_BACKGROUND_COLOR_(int hudColorIndex) { NativeInvoker.Invoke(0x92F0DA1E27DB96DC, (ulong)hudColorIndex); }
        internal static void THEFEED_SET_ANIMPOSTFX_COLOR_(int red, int green, int blue, int alpha) { NativeInvoker.Invoke(0x17430B918701C342, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha); }
        internal static void THEFEED_SET_ANIMPOSTFX_COUNT_(int count) { NativeInvoker.Invoke(0x17AD8C9706BDD88A, (ulong)count); }
        internal static void THEFEED_SET_ANIMPOSTFX_SOUND_(BOOL toggle) { NativeInvoker.Invoke(0x4A0C7C9BB10ABB36, (ulong)toggle); }
        internal static void THEFEED_RESET_ALL_PARAMETERS() { NativeInvoker.Invoke(0xFDD85225B2DEA55E); } // 0xFDD85225B2DEA55E 0xA4524B23 b323<, (ulong)FDD85225B2DEA55E); }
        internal static void THEFEED_FREEZE_NEXT_POST() { NativeInvoker.Invoke(0xFDEC055AB549E328); } // 0xFDEC055AB549E328 0xAFA1148B b323<, (ulong)FDEC055AB549E328); }
        internal static void THEFEED_CLEAR_FROZEN_POST() { NativeInvoker.Invoke(0x80FE4F3AB4E1B62A); } // 0x80FE4F3AB4E1B62A 0x3CD4307C b323<, (ulong)80FE4F3AB4E1B62A); }
        internal static void THEFEED_SET_FLUSH_ANIMPOSTFX_(BOOL p0) { NativeInvoker.Invoke(0xBAE4F9B97CD43B30, (ulong)p0); }
        internal static void THEFEED_ADD_TXD_REF_(Any* p0, Any* p1, Any* p2, Any* p3) { NativeInvoker.Invoke(0x317EBA71D7543F52, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void BEGIN_TEXT_COMMAND_THEFEED_POST(char* text) { NativeInvoker.Invoke(0x202709F4C58A0424, (ulong)text); }
        internal static int END_TEXT_COMMAND_THEFEED_POST_STATS(char* statTitle, int iconEnum, BOOL stepVal, int barValue, BOOL isImportant, char* pictureTextureDict, char* pictureTextureName) { return NativeInvoker.Invoke<int>(0x2B7E9A4EAAA93C89, (ulong)statTitle, (ulong)iconEnum, (ulong)stepVal, (ulong)barValue, (ulong)isImportant, (ulong)pictureTextureDict, (ulong)pictureTextureName); }
        internal static int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT(char* txdName, char* textureName, BOOL flash, int iconType, char* sender, char* subject) { return NativeInvoker.Invoke<int>(0x1CCD9A37359072CF, (ulong)txdName, (ulong)textureName, (ulong)flash, (ulong)iconType, (ulong)sender, (ulong)subject); }
        internal static int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_GXT_ENTRY_(char* txdName, char* textureName, BOOL flash, int iconType, char* sender, char* subject) { return NativeInvoker.Invoke<int>(0xC6F580E4C94926AC, (ulong)txdName, (ulong)textureName, (ulong)flash, (ulong)iconType, (ulong)sender, (ulong)subject); }
        internal static int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU(char* txdName, char* textureName, BOOL flash, int iconType, char* sender, char* subject, float duration) { return NativeInvoker.Invoke<int>(0x1E6611149DB3DB6B, (ulong)txdName, (ulong)textureName, (ulong)flash, (ulong)iconType, (ulong)sender, (ulong)subject, *(uint*)&duration); }
        internal static int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_WITH_CREW_TAG(char* txdName, char* textureName, BOOL flash, int iconType, char* sender, char* subject, float duration, char* clanTag) { return NativeInvoker.Invoke<int>(0x5CBF7BADE20DB93E, (ulong)txdName, (ulong)textureName, (ulong)flash, (ulong)iconType, (ulong)sender, (ulong)subject, *(uint*)&duration, (ulong)clanTag); }
        internal static int END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_WITH_CREW_TAG_AND_ADDITIONAL_ICON(char* txdName, char* textureName, BOOL flash, int iconType1, char* sender, char* subject, float duration, char* clanTag, int iconType2, int p9) { return NativeInvoker.Invoke<int>(0x531B84E7DA981FB6, (ulong)txdName, (ulong)textureName, (ulong)flash, (ulong)iconType1, (ulong)sender, (ulong)subject, *(uint*)&duration, (ulong)clanTag, (ulong)iconType2, (ulong)p9); }
        internal static int END_TEXT_COMMAND_THEFEED_POST_TICKER(BOOL blink, BOOL p1) { return NativeInvoker.Invoke<int>(0x2ED7843F8F801023, (ulong)blink, (ulong)p1); }
        internal static int END_TEXT_COMMAND_THEFEED_POST_TICKER_FORCED(BOOL blink, BOOL p1) { return NativeInvoker.Invoke<int>(0x44FA03975424A0EE, (ulong)blink, (ulong)p1); }
        internal static int END_TEXT_COMMAND_THEFEED_POST_TICKER_WITH_TOKENS(BOOL blink, BOOL p1) { return NativeInvoker.Invoke<int>(0x378E809BF61EC840, (ulong)blink, (ulong)p1); }
        internal static int END_TEXT_COMMAND_THEFEED_POST_AWARD(char* textureDict, char* textureName, int rpBonus, int colorOverlay, char* titleLabel) { return NativeInvoker.Invoke<int>(0xAA295B6F28BD587D, (ulong)textureDict, (ulong)textureName, (ulong)rpBonus, (ulong)colorOverlay, (ulong)titleLabel); }
        internal static int END_TEXT_COMMAND_THEFEED_POST_CREWTAG(BOOL p0, BOOL p1, int* p2, int p3, BOOL isLeader, BOOL unk0, int clanDesc, int R, int G, int B) { return NativeInvoker.Invoke<int>(0x97C9E4E7024A8F2C, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)isLeader, (ulong)unk0, (ulong)clanDesc, (ulong)R, (ulong)G, (ulong)B); }
        internal static int END_TEXT_COMMAND_THEFEED_POST_CREWTAG_WITH_GAME_NAME(BOOL p0, BOOL p1, int* p2, int p3, BOOL isLeader, BOOL unk0, int clanDesc, char* playerName, int R, int G, int B) { return NativeInvoker.Invoke<int>(0x137BC35589E34E1E, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)isLeader, (ulong)unk0, (ulong)clanDesc, (ulong)playerName, (ulong)R, (ulong)G, (ulong)B); }
        internal static Any END_TEXT_COMMAND_THEFEED_POST_UNLOCK(Any p0, Any p1, Any p2) { return NativeInvoker.Invoke<Any>(0x33EE12743CCD6343, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static Any END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU(Any p0, Any p1, Any p2, Any p3) { return NativeInvoker.Invoke<Any>(0xC8F3AAF93D0600BF, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static Any END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU_WITH_COLOR(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { return NativeInvoker.Invoke<Any>(0x7AE0589093A2E088, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static int END_TEXT_COMMAND_THEFEED_POST_MPTICKER(BOOL blink, BOOL p1) { return NativeInvoker.Invoke<int>(0xF020C96915705B3A, (ulong)blink, (ulong)p1); }
        internal static int END_TEXT_COMMAND_THEFEED_POST_CREW_RANKUP(char* p0, char* p1, char* p2, BOOL p3, BOOL p4) { return NativeInvoker.Invoke<int>(0x8EFCCF6EC66D85E4, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static Any END_TEXT_COMMAND_THEFEED_POST_VERSUS_TU(Any* p0, Any* p1, Any p2, Any* p3, Any* p4, Any p5, Any p6, Any p7) { return NativeInvoker.Invoke<Any>(0xB6871B0555B02996, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7); }
        internal static int END_TEXT_COMMAND_THEFEED_POST_REPLAY_ICON_(int type, int image, char* text) { return NativeInvoker.Invoke<int>(0xD202B92CBF1D816F, (ulong)type, (ulong)image, (ulong)text); }
        internal static int END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT_(int type, char* button, char* text) { return NativeInvoker.Invoke<int>(0xDD6CB2CCE7C2735C, (ulong)type, (ulong)button, (ulong)text); }
        internal static void BEGIN_TEXT_COMMAND_PRINT(char* GxtEntry) { NativeInvoker.Invoke(0xB87A37EEB7FAA67D, (ulong)GxtEntry); }
        internal static void END_TEXT_COMMAND_PRINT(int duration, BOOL drawImmediately) { NativeInvoker.Invoke(0x9D77056A530643F6, (ulong)duration, (ulong)drawImmediately); }
        internal static void BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED(char* text) { NativeInvoker.Invoke(0x853648FD1063A213, (ulong)text); }
        internal static BOOL END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED() { return NativeInvoker.Invoke<BOOL>(0x8A9BA1AB3E237613); } // 0x8A9BA1AB3E237613 0x672EFB45 b323, (ulong)8A9BA1AB3E237613); }
        internal static void BEGIN_TEXT_COMMAND_DISPLAY_TEXT(char* text) { NativeInvoker.Invoke(0x25FBB336DF1804CB, (ulong)text); }
        internal static void END_TEXT_COMMAND_DISPLAY_TEXT(float x, float y, int p2) { NativeInvoker.Invoke(0xCD015E5BB0D96A57, *(uint*)&x, *(uint*)&y, (ulong)p2); }
        internal static void BEGIN_TEXT_COMMAND_GET_WIDTH_(char* text) { NativeInvoker.Invoke(0x54CE8AC98E120CAB, (ulong)text); }
        internal static float END_TEXT_COMMAND_GET_WIDTH_(BOOL p0) { return NativeInvoker.Invoke<float>(0x85F061DA64ED2F67, (ulong)p0); }
        internal static void BEGIN_TEXT_COMMAND_LINE_COUNT_(char* entry) { NativeInvoker.Invoke(0x521FB041D93DD0E4, (ulong)entry); }
        internal static int END_TEXT_COMMAND_LINE_COUNT_(float x, float y) { return NativeInvoker.Invoke<int>(0x9040DFB09BE75706, *(uint*)&x, *(uint*)&y); }
        internal static void BEGIN_TEXT_COMMAND_DISPLAY_HELP(char* inputType) { NativeInvoker.Invoke(0x8509B634FBE7DA11, (ulong)inputType); }
        internal static void END_TEXT_COMMAND_DISPLAY_HELP(int p0, BOOL loop, BOOL beep, int shape) { NativeInvoker.Invoke(0x238FFE5C7B0498A6, (ulong)p0, (ulong)loop, (ulong)beep, (ulong)shape); }
        internal static void BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(char* labelName) { NativeInvoker.Invoke(0x0A24DA3A41B718F5, (ulong)labelName); }
        internal static BOOL END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(int p0) { return NativeInvoker.Invoke<BOOL>(0x10BDDBFC529428DD, (ulong)p0); }
        internal static void BEGIN_TEXT_COMMAND_SET_BLIP_NAME(char* textLabel) { NativeInvoker.Invoke(0xF9113A30DE5C6670, (ulong)textLabel); }
        internal static void END_TEXT_COMMAND_SET_BLIP_NAME(Blip blip) { NativeInvoker.Invoke(0xBC38B49BCB83BC9B, (ulong)blip); }
        internal static void BEGIN_TEXT_COMMAND_OBJECTIVE_(char* p0) { NativeInvoker.Invoke(0x23D69E0465570028, (ulong)p0); }
        internal static void END_TEXT_COMMAND_OBJECTIVE_(BOOL p0) { NativeInvoker.Invoke(0xCFDBDF5AE59BA0F4, (ulong)p0); }
        internal static void BEGIN_TEXT_COMMAND_CLEAR_PRINT(char* text) { NativeInvoker.Invoke(0xE124FA80A759019C, (ulong)text); }
        internal static void END_TEXT_COMMAND_CLEAR_PRINT() { NativeInvoker.Invoke(0xFCC75460ABA29378); } // 0xFCC75460ABA29378 0x67785AF2 b323<, (ulong)FCC75460ABA29378); }
        internal static void BEGIN_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT(char* gxtEntry) { NativeInvoker.Invoke(0x8F9EE5687F8EECCD, (ulong)gxtEntry); }
        internal static void END_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT(int p0) { NativeInvoker.Invoke(0xA86911979638106F, (ulong)p0); }
        internal static void ADD_TEXT_COMPONENT_INTEGER(int value) { NativeInvoker.Invoke(0x03B504CF259931BC, (ulong)value); }
        internal static void ADD_TEXT_COMPONENT_FLOAT(float value, int decimalPlaces) { NativeInvoker.Invoke(0xE7DCB5B874BCD96E, *(uint*)&value, (ulong)decimalPlaces); }
        internal static void ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(char* labelName) { NativeInvoker.Invoke(0xC63CD5D2920ACBE7, (ulong)labelName); }
        internal static void ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY(Hash gxtEntryHash) { NativeInvoker.Invoke(0x17299B63C7683A2B, (ulong)gxtEntryHash); }
        internal static void ADD_TEXT_COMPONENT_SUBSTRING_BLIP_NAME(Blip blip) { NativeInvoker.Invoke(0x80EAD8E2E1D5D52E, (ulong)blip); }
        internal static void ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(char* text) { NativeInvoker.Invoke(0x6C188BE134E074AA, (ulong)text); }
        internal static void ADD_TEXT_COMPONENT_SUBSTRING_TIME(int timestamp, int flags) { NativeInvoker.Invoke(0x1115F16B8AB9E8BF, (ulong)timestamp, (ulong)flags); }
        internal static void ADD_TEXT_COMPONENT_FORMATTED_INTEGER(int value, BOOL commaSeparated) { NativeInvoker.Invoke(0x0E4C749FF9DE9CC4, (ulong)value, (ulong)commaSeparated); }
        internal static void ADD_TEXT_COMPONENT_SUBSTRING_PHONE_NUMBER(char* p0, int p1) { NativeInvoker.Invoke(0x761B77454205A61D, (ulong)p0, (ulong)p1); }
        internal static void ADD_TEXT_COMPONENT_SUBSTRING_WEBSITE(char* website) { NativeInvoker.Invoke(0x94CF4AC034C9C986, (ulong)website); }
        internal static void ADD_TEXT_COMPONENT_SUBSTRING_KEYBOARD_DISPLAY(char* @string) { NativeInvoker.Invoke(0x5F68520888E69014, (ulong)@string); }
        internal static void SET_COLOUR_OF_NEXT_TEXT_COMPONENT(int hudColor) { NativeInvoker.Invoke(0x39BBF623FC803EAC, (ulong)hudColor); }
        internal static char* GET_TEXT_SUBSTRING_(char* text, int position, int length) { return (char*)NativeInvoker.Invoke<IntPtr>(0x169BD9382084C8C0, (ulong)text, (ulong)position, (ulong)length); }
        internal static char* GET_TEXT_SUBSTRING_SAFE_(char* text, int position, int length, int maxLength) { return (char*)NativeInvoker.Invoke<IntPtr>(0xB2798643312205C5, (ulong)text, (ulong)position, (ulong)length, (ulong)maxLength); }
        internal static char* GET_TEXT_SUBSTRING_SLICE_(char* text, int startPosition, int endPosition) { return (char*)NativeInvoker.Invoke<IntPtr>(0xCE94AEBA5D82908A, (ulong)text, (ulong)startPosition, (ulong)endPosition); }
        internal static char* GET_LABEL_TEXT_(char* labelName) { return (char*)NativeInvoker.Invoke<IntPtr>(0x7B5280EBA9840C72, (ulong)labelName); }
        internal static void CLEAR_PRINTS() { NativeInvoker.Invoke(0xCC33FA791322B9D9); } // 0xCC33FA791322B9D9 0x216CB1C5 b323<, (ulong)CC33FA791322B9D9); }
        internal static void CLEAR_BRIEF() { NativeInvoker.Invoke(0x9D292F73ADBD9313); } // 0x9D292F73ADBD9313 0x9F75A929 b323<, (ulong)9D292F73ADBD9313); }
        internal static void CLEAR_ALL_HELP_MESSAGES() { NativeInvoker.Invoke(0x6178F68A87A4D3A0); } // 0x6178F68A87A4D3A0 0x9E5D9198 b323<, (ulong)6178F68A87A4D3A0); }
        internal static void CLEAR_THIS_PRINT(char* p0) { NativeInvoker.Invoke(0xCF708001E1E536DD, (ulong)p0); }
        internal static void CLEAR_SMALL_PRINTS() { NativeInvoker.Invoke(0x2CEA2839313C09AC); } // 0x2CEA2839313C09AC 0xA869A238 b323<, (ulong)2CEA2839313C09AC); }
        internal static BOOL DOES_TEXT_BLOCK_EXIST(char* gxt) { return NativeInvoker.Invoke<BOOL>(0x1C7302E725259789, (ulong)gxt); }
        internal static void REQUEST_ADDITIONAL_TEXT(char* gxt, int slot) { NativeInvoker.Invoke(0x71A78003C8E71424, (ulong)gxt, (ulong)slot); }
        internal static void REQUEST_ADDITIONAL_TEXT_FOR_DLC(char* gxt, int slot) { NativeInvoker.Invoke(0x6009F9F1AE90D8A6, (ulong)gxt, (ulong)slot); }
        internal static BOOL HAS_ADDITIONAL_TEXT_LOADED(int slot) { return NativeInvoker.Invoke<BOOL>(0x02245FE4BED318B8, (ulong)slot); }
        internal static void CLEAR_ADDITIONAL_TEXT(int p0, BOOL p1) { NativeInvoker.Invoke(0x2A179DF17CCF04CD, (ulong)p0, (ulong)p1); }
        internal static BOOL IS_STREAMING_ADDITIONAL_TEXT(int p0) { return NativeInvoker.Invoke<BOOL>(0x8B6817B71B85EBF0, (ulong)p0); }
        internal static BOOL HAS_THIS_ADDITIONAL_TEXT_LOADED(char* gxt, int slot) { return NativeInvoker.Invoke<BOOL>(0xADBF060E2B30C5BC, (ulong)gxt, (ulong)slot); }
        internal static BOOL IS_MESSAGE_BEING_DISPLAYED() { return NativeInvoker.Invoke<BOOL>(0x7984C03AA5CC2F41); } // 0x7984C03AA5CC2F41 0x6A77FE8D b323, (ulong)7984C03AA5CC2F41); }
        internal static BOOL DOES_TEXT_LABEL_EXIST(char* gxt) { return NativeInvoker.Invoke<BOOL>(0xAC09CA973C564252, (ulong)gxt); }
        internal static char* N_0x98C3CF913D895111(char* @string, int length) { return (char*)NativeInvoker.Invoke<IntPtr>(0x98C3CF913D895111, (ulong)@string, (ulong)length); }
        internal static int GET_LENGTH_OF_STRING_WITH_THIS_TEXT_LABEL(char* gxt) { return NativeInvoker.Invoke<int>(0x801BD273D3A23F74, (ulong)gxt); }
        internal static int GET_LENGTH_OF_LITERAL_STRING(char* @string) { return NativeInvoker.Invoke<int>(0xF030907CCBB8A9FD, (ulong)@string); }
        internal static int GET_LENGTH_OF_LITERAL_STRING_IN_BYTES(char* @string) { return NativeInvoker.Invoke<int>(0x43E4111189E54F0E, (ulong)@string); }
        internal static char* GET_STREET_NAME_FROM_HASH_KEY(Hash hash) { return (char*)NativeInvoker.Invoke<IntPtr>(0xD0EF8A959B8A4CB9, (ulong)hash); }
        internal static BOOL IS_HUD_PREFERENCE_SWITCHED_ON() { return NativeInvoker.Invoke<BOOL>(0x1930DFA731813EC4); } // 0x1930DFA731813EC4 0xC3BC1B4F b323, (ulong)1930DFA731813EC4); }
        internal static BOOL IS_RADAR_PREFERENCE_SWITCHED_ON() { return NativeInvoker.Invoke<BOOL>(0x9EB6522EA68F22FE); } // 0x9EB6522EA68F22FE 0x14AEAA28 b323, (ulong)9EB6522EA68F22FE); }
        internal static BOOL IS_SUBTITLE_PREFERENCE_SWITCHED_ON() { return NativeInvoker.Invoke<BOOL>(0xAD6DACA4BA53E0A4); } // 0xAD6DACA4BA53E0A4 0x63BA19F5 b323, (ulong)AD6DACA4BA53E0A4); }
        internal static void DISPLAY_HUD(BOOL toggle) { NativeInvoker.Invoke(0xA6294919E56FF02A, (ulong)toggle); }
        internal static void DISPLAY_HUD_WHEN_DEAD_THIS_FRAME_() { NativeInvoker.Invoke(0x7669F9E39DC17063); } // 0x7669F9E39DC17063 0xC380AC85 b323<, (ulong)7669F9E39DC17063); }
        internal static void DISPLAY_HUD_WHEN_PAUSED_THIS_FRAME() { NativeInvoker.Invoke(0x402F9ED62087E898); } // 0x402F9ED62087E898 0xC47AB1B0 b323<, (ulong)402F9ED62087E898); }
        internal static void DISPLAY_RADAR(BOOL toggle) { NativeInvoker.Invoke(0xA0EBB943C300E693, (ulong)toggle); }
        internal static void N_0xCD74233600C4EA6B(BOOL toggle) { NativeInvoker.Invoke(0xCD74233600C4EA6B, (ulong)toggle); }
        internal static BOOL N_0xC2D2AD9EAAE265B8() { return NativeInvoker.Invoke<BOOL>(0xC2D2AD9EAAE265B8); } // 0xC2D2AD9EAAE265B8 b505, (ulong)C2D2AD9EAAE265B8); }
        internal static BOOL IS_HUD_HIDDEN() { return NativeInvoker.Invoke<BOOL>(0xA86478C6958735C5); } // 0xA86478C6958735C5 0x40BADA1D b323, (ulong)A86478C6958735C5); }
        internal static BOOL IS_RADAR_HIDDEN() { return NativeInvoker.Invoke<BOOL>(0x157F93B036700462); } // 0x157F93B036700462 0x1AB3B954 b323, (ulong)157F93B036700462); }
        internal static BOOL IS_MINIMAP_RENDERING() { return NativeInvoker.Invoke<BOOL>(0xAF754F20EB5CD51A); } // 0xAF754F20EB5CD51A 0x9CD18314 b323, (ulong)AF754F20EB5CD51A); }
        internal static void N_0x0C698D8F099174C7(Any p0) { NativeInvoker.Invoke(0x0C698D8F099174C7, (ulong)p0); }
        internal static void N_0xE4C3B169876D33D7(Any p0) { NativeInvoker.Invoke(0xE4C3B169876D33D7, (ulong)p0); }
        internal static void N_0xEB81A3DADD503187() { NativeInvoker.Invoke(0xEB81A3DADD503187); } // 0xEB81A3DADD503187 b1290<, (ulong)EB81A3DADD503187); }
        internal static void SET_BLIP_ROUTE(Blip blip, BOOL enabled) { NativeInvoker.Invoke(0x4F7D8A9BFB0B43E9, (ulong)blip, (ulong)enabled); }
        internal static void CLEAR_ALL_BLIP_ROUTES_() { NativeInvoker.Invoke(0xD12882D3FF82BF11); } // 0xD12882D3FF82BF11 b877<, (ulong)D12882D3FF82BF11); }
        internal static void SET_BLIP_ROUTE_COLOUR(Blip blip, int colour) { NativeInvoker.Invoke(0x837155CD2F63DA09, (ulong)blip, (ulong)colour); }
        internal static void N_0x2790F4B17D098E26(BOOL toggle) { NativeInvoker.Invoke(0x2790F4B17D098E26, (ulong)toggle); }
        internal static void N_0x6CDD58146A436083(Any p0) { NativeInvoker.Invoke(0x6CDD58146A436083, (ulong)p0); }
        internal static void N_0xD1942374085C8469(Any p0) { NativeInvoker.Invoke(0xD1942374085C8469, (ulong)p0); }
        internal static void ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS(BOOL p0) { NativeInvoker.Invoke(0x60296AF4BA14ABC5, (ulong)p0); }
        internal static void N_0x57D760D55F54E071(int p0) { NativeInvoker.Invoke(0x57D760D55F54E071, (ulong)p0); }
        internal static void SET_RADAR_ZOOM_PRECISE(float zoom) { NativeInvoker.Invoke(0xBD12C5EEE184C337, *(uint*)&zoom); }
        internal static void SET_RADAR_ZOOM(int zoomLevel) { NativeInvoker.Invoke(0x096EF57A0C999BBA, (ulong)zoomLevel); }
        internal static void SET_RADAR_ZOOM_TO_BLIP(Blip blip, float zoom) { NativeInvoker.Invoke(0xF98E4B3E56AFC7B1, (ulong)blip, *(uint*)&zoom); }
        internal static void SET_RADAR_ZOOM_TO_DISTANCE(float zoom) { NativeInvoker.Invoke(0xCB7CC0D58405AD41, *(uint*)&zoom); }
        internal static void N_0xD2049635DEB9C375() { NativeInvoker.Invoke(0xD2049635DEB9C375); } // 0xD2049635DEB9C375 0xE8D3A910 b323<, (ulong)D2049635DEB9C375); }
        internal static void GET_HUD_COLOUR(int hudColorIndex, int* r, int* g, int* b, int* a) { NativeInvoker.Invoke(0x7C9C91AB74A0360F, (ulong)hudColorIndex, (ulong)r, (ulong)g, (ulong)b, (ulong)a); }
        internal static void SET_SCRIPT_VARIABLE_HUD_COLOUR(int r, int g, int b, int a) { NativeInvoker.Invoke(0xD68A5FF8A3A89874, (ulong)r, (ulong)g, (ulong)b, (ulong)a); }
        internal static void SET_SCRIPT_VARIABLE_2_HUD_COLOUR_(int r, int g, int b, int a) { NativeInvoker.Invoke(0x16A304E6CB2BFAB9, (ulong)r, (ulong)g, (ulong)b, (ulong)a); }
        internal static void REPLACE_HUD_COLOUR(int hudColorIndex, int hudColorIndex2) { NativeInvoker.Invoke(0x1CCC708F0F850613, (ulong)hudColorIndex, (ulong)hudColorIndex2); }
        internal static void REPLACE_HUD_COLOUR_WITH_RGBA(int hudColorIndex, int r, int g, int b, int a) { NativeInvoker.Invoke(0xF314CF4F0211894E, (ulong)hudColorIndex, (ulong)r, (ulong)g, (ulong)b, (ulong)a); }
        internal static void SET_ABILITY_BAR_VISIBILITY_IN_MULTIPLAYER_(BOOL visible) { NativeInvoker.Invoke(0x1DFEDD15019315A9, (ulong)visible); }
        internal static void SET_ALLOW_ABILITY_BAR_IN_MULTIPLAYER_(BOOL toggle) { NativeInvoker.Invoke(0x889329C80FE5963C, (ulong)toggle); }
        internal static void FLASH_ABILITY_BAR(int millisecondsToFlash) { NativeInvoker.Invoke(0x02CFBA0C9E9275CE, (ulong)millisecondsToFlash); }
        internal static void SET_ABILITY_BAR_VALUE(float p0, float p1) { NativeInvoker.Invoke(0x9969599CCFF5D85E, *(uint*)&p0, *(uint*)&p1); }
        internal static void FLASH_WANTED_DISPLAY(BOOL p0) { NativeInvoker.Invoke(0xA18AFB39081B6A1F, (ulong)p0); }
        internal static void N_0xBA8D65C1C65702E5(BOOL toggle) { NativeInvoker.Invoke(0xBA8D65C1C65702E5, (ulong)toggle); }
        internal static float GET_RENDERED_CHARACTER_HEIGHT(float size, int font) { return NativeInvoker.Invoke<float>(0xDB88A37483346780, *(uint*)&size, (ulong)font); }
        internal static void SET_TEXT_SCALE(float scale, float size) { NativeInvoker.Invoke(0x07C837F9A01C34C9, *(uint*)&scale, *(uint*)&size); }
        internal static void SET_TEXT_COLOUR(int red, int green, int blue, int alpha) { NativeInvoker.Invoke(0xBE6B23FFA53FB442, (ulong)red, (ulong)green, (ulong)blue, (ulong)alpha); }
        internal static void SET_TEXT_CENTRE(BOOL align) { NativeInvoker.Invoke(0xC02F4DBFB51D988B, (ulong)align); }
        internal static void SET_TEXT_RIGHT_JUSTIFY(BOOL toggle) { NativeInvoker.Invoke(0x6B3C4650BC8BEE47, (ulong)toggle); }
        internal static void SET_TEXT_JUSTIFICATION(int justifyType) { NativeInvoker.Invoke(0x4E096588B13FFECA, (ulong)justifyType); }
        internal static void SET_TEXT_WRAP(float start, float end) { NativeInvoker.Invoke(0x63145D9C883A1A70, *(uint*)&start, *(uint*)&end); }
        internal static void SET_TEXT_LEADING(int p0) { NativeInvoker.Invoke(0xA50ABC31E3CDFAFF, (ulong)p0); }
        internal static void SET_TEXT_PROPORTIONAL(BOOL p0) { NativeInvoker.Invoke(0x038C1F517D7FDCF8, (ulong)p0); }
        internal static void SET_TEXT_FONT(int fontType) { NativeInvoker.Invoke(0x66E0276CC5F6B9DA, (ulong)fontType); }
        internal static void SET_TEXT_DROP_SHADOW() { NativeInvoker.Invoke(0x1CA3E9EAC9D93E5E); } // 0x1CA3E9EAC9D93E5E 0xE2A11511 b323<, (ulong)1CA3E9EAC9D93E5E); }
        internal static void SET_TEXT_DROPSHADOW(int distance, int r, int g, int b, int a) { NativeInvoker.Invoke(0x465C84BC39F1C351, (ulong)distance, (ulong)r, (ulong)g, (ulong)b, (ulong)a); }
        internal static void SET_TEXT_OUTLINE() { NativeInvoker.Invoke(0x2513DFB0FB8400FE); } // 0x2513DFB0FB8400FE 0xC753412F b323<, (ulong)2513DFB0FB8400FE); }
        internal static void SET_TEXT_EDGE(int p0, int r, int g, int b, int a) { NativeInvoker.Invoke(0x441603240D202FA6, (ulong)p0, (ulong)r, (ulong)g, (ulong)b, (ulong)a); }
        internal static void SET_TEXT_RENDER_ID(int renderId) { NativeInvoker.Invoke(0x5F15302936E07111, (ulong)renderId); }
        internal static int GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID() { return NativeInvoker.Invoke<int>(0x52F0982D7FD156B6); } // 0x52F0982D7FD156B6 0x8188935F b323, (ulong)52F0982D7FD156B6); }
        internal static BOOL REGISTER_NAMED_RENDERTARGET(char* name, BOOL p1) { return NativeInvoker.Invoke<BOOL>(0x57D9C12635E25CE3, (ulong)name, (ulong)p1); }
        internal static BOOL IS_NAMED_RENDERTARGET_REGISTERED(char* name) { return NativeInvoker.Invoke<BOOL>(0x78DCDC15C9F116B4, (ulong)name); }
        internal static BOOL RELEASE_NAMED_RENDERTARGET(char* name) { return NativeInvoker.Invoke<BOOL>(0xE9F6FFE837354DD4, (ulong)name); }
        internal static void LINK_NAMED_RENDERTARGET(Hash modelHash) { NativeInvoker.Invoke(0xF6C09E276AEB3F2D, (ulong)modelHash); }
        internal static int GET_NAMED_RENDERTARGET_RENDER_ID(char* name) { return NativeInvoker.Invoke<int>(0x1A6478B61C6BDC3B, (ulong)name); }
        internal static BOOL IS_NAMED_RENDERTARGET_LINKED(Hash modelHash) { return NativeInvoker.Invoke<BOOL>(0x113750538FA31298, (ulong)modelHash); }
        internal static void CLEAR_HELP(BOOL toggle) { NativeInvoker.Invoke(0x8DFCED7A656F8802, (ulong)toggle); }
        internal static BOOL IS_HELP_MESSAGE_ON_SCREEN() { return NativeInvoker.Invoke<BOOL>(0xDAD37F45428801AE); } // 0xDAD37F45428801AE 0x4B3C9CA9 b323, (ulong)DAD37F45428801AE); }
        internal static BOOL N_0x214CD562A939246A() { return NativeInvoker.Invoke<BOOL>(0x214CD562A939246A); } // 0x214CD562A939246A 0x812CBE0E b323, (ulong)214CD562A939246A); }
        internal static BOOL IS_HELP_MESSAGE_BEING_DISPLAYED() { return NativeInvoker.Invoke<BOOL>(0x4D79439A6B55AC67); } // 0x4D79439A6B55AC67 0xA65F262A b323, (ulong)4D79439A6B55AC67); }
        internal static BOOL IS_HELP_MESSAGE_FADING_OUT() { return NativeInvoker.Invoke<BOOL>(0x327EDEEEAC55C369); } // 0x327EDEEEAC55C369 0x3E50AE92 b323, (ulong)327EDEEEAC55C369); }
        internal static void SET_HELP_MESSAGE_TEXT_STYLE_(int style, int hudColor, int alpha, int p3, int p4) { NativeInvoker.Invoke(0xB9C362BABECDDC7A, (ulong)style, (ulong)hudColor, (ulong)alpha, (ulong)p3, (ulong)p4); }
        internal static BOOL GET_STANDARD_BLIP_ENUM_ID() { return NativeInvoker.Invoke<BOOL>(0x4A9923385BDB9DAD); } // 0x4A9923385BDB9DAD 0x87871CE0 b323, (ulong)4A9923385BDB9DAD); }
        internal static int GET_WAYPOINT_BLIP_ENUM_ID() { return NativeInvoker.Invoke<int>(0x186E5D252FA50E7D); } // 0x186E5D252FA50E7D 0xB9827942 b323, (ulong)186E5D252FA50E7D); }
        internal static int GET_NUMBER_OF_ACTIVE_BLIPS() { return NativeInvoker.Invoke<int>(0x9A3FF3DE163034E8); } // 0x9A3FF3DE163034E8 0x144020FA b323, (ulong)9A3FF3DE163034E8); }
        internal static Blip GET_NEXT_BLIP_INFO_ID(int blipSprite) { return NativeInvoker.Invoke<Blip>(0x14F96AA50D6FBEA7, (ulong)blipSprite); }
        internal static Blip GET_FIRST_BLIP_INFO_ID(int blipSprite) { return NativeInvoker.Invoke<Blip>(0x1BEDE233E6CD2A1F, (ulong)blipSprite); }
        internal static Blip GET_CLOSEST_BLIP_OF_TYPE_(int blipSprite) { return NativeInvoker.Invoke<Blip>(0xD484BF71050CA1EE, (ulong)blipSprite); }
        internal static Vector3 GET_BLIP_INFO_ID_COORD(Blip blip) { return NativeInvoker.Invoke<Vector3>(0xFA7C7F0AADF25D09, (ulong)blip); }
        internal static int GET_BLIP_INFO_ID_DISPLAY(Blip blip) { return NativeInvoker.Invoke<int>(0x1E314167F701DC3B, (ulong)blip); }
        internal static int GET_BLIP_INFO_ID_TYPE(Blip blip) { return NativeInvoker.Invoke<int>(0xBE9B0959FFD0779B, (ulong)blip); }
        internal static Entity GET_BLIP_INFO_ID_ENTITY_INDEX(Blip blip) { return NativeInvoker.Invoke<Entity>(0x4BA4E2553AFEDC2C, (ulong)blip); }
        internal static Pickup GET_BLIP_INFO_ID_PICKUP_INDEX(Blip blip) { return NativeInvoker.Invoke<Pickup>(0x9B6786E4C03DD382, (ulong)blip); }
        internal static Blip GET_BLIP_FROM_ENTITY(Entity entity) { return NativeInvoker.Invoke<Blip>(0xBC8DBDCA2436F7E8, (ulong)entity); }
        internal static Blip ADD_BLIP_FOR_RADIUS(float posX, float posY, float posZ, float radius) { return NativeInvoker.Invoke<Blip>(0x46818D79B1F7499A, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, *(uint*)&radius); }
        internal static Blip ADD_BLIP_FOR_AREA_(float x, float y, float z, float width, float height) { return NativeInvoker.Invoke<Blip>(0xCE5D0E5E315DB238, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&width, *(uint*)&height); }
        internal static Blip ADD_BLIP_FOR_ENTITY(Entity entity) { return NativeInvoker.Invoke<Blip>(0x5CDE92C702A8FCE7, (ulong)entity); }
        internal static Blip ADD_BLIP_FOR_PICKUP(Pickup pickup) { return NativeInvoker.Invoke<Blip>(0xBE339365C863BD36, (ulong)pickup); }
        internal static Blip ADD_BLIP_FOR_COORD(float x, float y, float z) { return NativeInvoker.Invoke<Blip>(0x5A039BB0BCA604B6, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void TRIGGER_SONAR_BLIP(float posX, float posY, float posZ, float radius, int p4) { NativeInvoker.Invoke(0x72DD432F3CDFC0EE, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, *(uint*)&radius, (ulong)p4); }
        internal static void ALLOW_SONAR_BLIPS(BOOL toggle) { NativeInvoker.Invoke(0x60734CC207C9833C, (ulong)toggle); }
        internal static void SET_BLIP_COORDS(Blip blip, float posX, float posY, float posZ) { NativeInvoker.Invoke(0xAE2AF67E9D9AF65D, (ulong)blip, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ); }
        internal static Vector3 GET_BLIP_COORDS(Blip blip) { return NativeInvoker.Invoke<Vector3>(0x586AFE3FF72D996E, (ulong)blip); }
        internal static void SET_BLIP_SPRITE(Blip blip, int spriteId) { NativeInvoker.Invoke(0xDF735600A4696DAF, (ulong)blip, (ulong)spriteId); }
        internal static int GET_BLIP_SPRITE(Blip blip) { return NativeInvoker.Invoke<int>(0x1FC877464A04FC4F, (ulong)blip); }
        internal static void N_0x9FCB3CBFB3EAD69A(int p0, float p1) { NativeInvoker.Invoke(0x9FCB3CBFB3EAD69A, (ulong)p0, *(uint*)&p1); }
        internal static void N_0xB7B873520C84C118() { NativeInvoker.Invoke(0xB7B873520C84C118); } // 0xB7B873520C84C118 b1734<, (ulong)B7B873520C84C118); }
        internal static void SET_BLIP_NAME_FROM_TEXT_FILE(Blip blip, char* gxtEntry) { NativeInvoker.Invoke(0xEAA0FFE120D92784, (ulong)blip, (ulong)gxtEntry); }
        internal static void SET_BLIP_NAME_TO_PLAYER_NAME(Blip blip, Player player) { NativeInvoker.Invoke(0x127DE7B20C60A6A3, (ulong)blip, (ulong)player); }
        internal static void SET_BLIP_ALPHA(Blip blip, int alpha) { NativeInvoker.Invoke(0x45FF974EEE1C8734, (ulong)blip, (ulong)alpha); }
        internal static int GET_BLIP_ALPHA(Blip blip) { return NativeInvoker.Invoke<int>(0x970F608F0EE6C885, (ulong)blip); }
        internal static void SET_BLIP_FADE(Blip blip, int opacity, int duration) { NativeInvoker.Invoke(0x2AEE8F8390D2298C, (ulong)blip, (ulong)opacity, (ulong)duration); }
        internal static int N_0x2C173AE2BDB9385E(Blip blip) { return NativeInvoker.Invoke<int>(0x2C173AE2BDB9385E, (ulong)blip); }
        internal static void SET_BLIP_ROTATION(Blip blip, int rotation) { NativeInvoker.Invoke(0xF87683CDF73C3F6E, (ulong)blip, (ulong)rotation); }
        internal static void SET_BLIP_SQUARED_ROTATION_(Blip blip, float heading) { NativeInvoker.Invoke(0xA8B6AFDAC320AC87, (ulong)blip, *(uint*)&heading); }
        internal static int GET_BLIP_ROTATION_(Blip blip) { return NativeInvoker.Invoke<int>(0x003E92BA477F9D7F, (ulong)blip); }
        internal static void SET_BLIP_FLASH_TIMER(Blip blip, int duration) { NativeInvoker.Invoke(0xD3CD6FD297AE87CC, (ulong)blip, (ulong)duration); }
        internal static void SET_BLIP_FLASH_INTERVAL(Blip blip, Any p1) { NativeInvoker.Invoke(0xAA51DB313C010A7E, (ulong)blip, (ulong)p1); }
        internal static void SET_BLIP_COLOUR(Blip blip, int color) { NativeInvoker.Invoke(0x03D7FB09E75D6B7E, (ulong)blip, (ulong)color); }
        internal static void SET_BLIP_SECONDARY_COLOUR(Blip blip, int r, int g, int b) { NativeInvoker.Invoke(0x14892474891E09EB, (ulong)blip, (ulong)r, (ulong)g, (ulong)b); }
        internal static int GET_BLIP_COLOUR(Blip blip) { return NativeInvoker.Invoke<int>(0xDF729E8D20CF7327, (ulong)blip); }
        internal static int GET_BLIP_HUD_COLOUR(Blip blip) { return NativeInvoker.Invoke<int>(0x729B5F1EFBC0AAEE, (ulong)blip); }
        internal static BOOL IS_BLIP_SHORT_RANGE(Blip blip) { return NativeInvoker.Invoke<BOOL>(0xDA5F8727EB75B926, (ulong)blip); }
        internal static BOOL IS_BLIP_ON_MINIMAP(Blip blip) { return NativeInvoker.Invoke<BOOL>(0xE41CA53051197A27, (ulong)blip); }
        internal static BOOL DOES_BLIP_HAVE_GPS_ROUTE(Blip blip) { return NativeInvoker.Invoke<BOOL>(0xDD2238F57B977751, (ulong)blip); }
        internal static void SET_BLIP_HIDDEN_ON_LEGEND(Blip blip, BOOL toggle) { NativeInvoker.Invoke(0x54318C915D27E4CE, (ulong)blip, (ulong)toggle); }
        internal static void SET_BLIP_HIGH_DETAIL(Blip blip, BOOL toggle) { NativeInvoker.Invoke(0xE2590BC29220CEBB, (ulong)blip, (ulong)toggle); }
        internal static void SET_BLIP_AS_MISSION_CREATOR_BLIP(Blip blip, BOOL toggle) { NativeInvoker.Invoke(0x24AC0137444F9FD5, (ulong)blip, (ulong)toggle); }
        internal static BOOL IS_MISSION_CREATOR_BLIP(Blip blip) { return NativeInvoker.Invoke<BOOL>(0x26F49BF3381D933D, (ulong)blip); }
        internal static Blip GET_NEW_SELECTED_MISSION_CREATOR_BLIP() { return NativeInvoker.Invoke<Blip>(0x5C90988E7C8E1AF4); } // 0x5C90988E7C8E1AF4 0xFFD7476C b323, (ulong)5C90988E7C8E1AF4); }
        internal static BOOL IS_HOVERING_OVER_MISSION_CREATOR_BLIP() { return NativeInvoker.Invoke<BOOL>(0x4167EFE0527D706E); } // 0x4167EFE0527D706E 0xC5EB849A b323, (ulong)4167EFE0527D706E); }
        internal static void SHOW_START_MISSION_INSTRUCTIONAL_BUTTON(BOOL p0) { NativeInvoker.Invoke(0xF1A6C18B35BCADE6, (ulong)p0); }
        internal static void N_0x2916A928514C9827() { NativeInvoker.Invoke(0x2916A928514C9827); } // 0x2916A928514C9827 b573<, (ulong)2916A928514C9827); }
        internal static void N_0xB552929B85FC27EC(Any p0, Any p1) { NativeInvoker.Invoke(0xB552929B85FC27EC, (ulong)p0, (ulong)p1); }
        internal static void SET_BLIP_FLASHES(Blip blip, BOOL toggle) { NativeInvoker.Invoke(0xB14552383D39CE3E, (ulong)blip, (ulong)toggle); }
        internal static void SET_BLIP_FLASHES_ALTERNATE(Blip blip, BOOL toggle) { NativeInvoker.Invoke(0x2E8D9498C56DD0D1, (ulong)blip, (ulong)toggle); }
        internal static BOOL IS_BLIP_FLASHING(Blip blip) { return NativeInvoker.Invoke<BOOL>(0xA5E41FD83AD6CEF0, (ulong)blip); }
        internal static void SET_BLIP_AS_SHORT_RANGE(Blip blip, BOOL toggle) { NativeInvoker.Invoke(0xBE8BE4FE60E27B72, (ulong)blip, (ulong)toggle); }
        internal static void SET_BLIP_SCALE(Blip blip, float scale) { NativeInvoker.Invoke(0xD38744167B2FA257, (ulong)blip, *(uint*)&scale); }
        internal static void SET_BLIP_SCALE_TRANSFORMATION_(Blip blip, float xScale, float yScale) { NativeInvoker.Invoke(0xCD6524439909C979, (ulong)blip, *(uint*)&xScale, *(uint*)&yScale); }
        internal static void SET_BLIP_PRIORITY(Blip blip, int priority) { NativeInvoker.Invoke(0xAE9FC9EF6A9FAC79, (ulong)blip, (ulong)priority); }
        internal static void SET_BLIP_DISPLAY(Blip blip, int displayId) { NativeInvoker.Invoke(0x9029B2F3DA924928, (ulong)blip, (ulong)displayId); }
        internal static void SET_BLIP_CATEGORY(Blip blip, int index) { NativeInvoker.Invoke(0x234CDD44D996FD9A, (ulong)blip, (ulong)index); }
        internal static void REMOVE_BLIP(Blip* blip) { NativeInvoker.Invoke(0x86A652570E5F25DD, (ulong)blip); }
        internal static void SET_BLIP_AS_FRIENDLY(Blip blip, BOOL toggle) { NativeInvoker.Invoke(0x6F6F290102C02AB4, (ulong)blip, (ulong)toggle); }
        internal static void PULSE_BLIP(Blip blip) { NativeInvoker.Invoke(0x742D6FD43115AF73, (ulong)blip); }
        internal static void SHOW_NUMBER_ON_BLIP(Blip blip, int number) { NativeInvoker.Invoke(0xA3C0B359DCB848B6, (ulong)blip, (ulong)number); }
        internal static void HIDE_NUMBER_ON_BLIP(Blip blip) { NativeInvoker.Invoke(0x532CFF637EF80148, (ulong)blip); }
        internal static void SHOW_HEIGHT_ON_BLIP(Blip blip, BOOL toggle) { NativeInvoker.Invoke(0x75A16C3DA34F1245, (ulong)blip, (ulong)toggle); }
        internal static void SHOW_TICK_ON_BLIP(Blip blip, BOOL toggle) { NativeInvoker.Invoke(0x74513EA3E505181E, (ulong)blip, (ulong)toggle); }
        internal static void SHOW_HEADING_INDICATOR_ON_BLIP(Blip blip, BOOL toggle) { NativeInvoker.Invoke(0x5FBCA48327B914DF, (ulong)blip, (ulong)toggle); }
        internal static void SHOW_OUTLINE_INDICATOR_ON_BLIP(Blip blip, BOOL toggle) { NativeInvoker.Invoke(0xB81656BC81FE24D1, (ulong)blip, (ulong)toggle); }
        internal static void SHOW_FRIEND_INDICATOR_ON_BLIP(Blip blip, BOOL toggle) { NativeInvoker.Invoke(0x23C3EB807312F01A, (ulong)blip, (ulong)toggle); }
        internal static void SHOW_CREW_INDICATOR_ON_BLIP(Blip blip, BOOL toggle) { NativeInvoker.Invoke(0xDCFB5D4DB8BF367E, (ulong)blip, (ulong)toggle); }
        internal static void SET_BLIP_DISPLAY_INDICATOR_ON_BLIP_(Blip blip, BOOL toggle) { NativeInvoker.Invoke(0xC4278F70131BAA6D, (ulong)blip, (ulong)toggle); }
        internal static void N_0x4B5B620C9B59ED34(Any p0, Any p1) { NativeInvoker.Invoke(0x4B5B620C9B59ED34, (ulong)p0, (ulong)p1); }
        internal static void N_0x2C9F302398E13141(Any p0, Any p1) { NativeInvoker.Invoke(0x2C9F302398E13141, (ulong)p0, (ulong)p1); }
        internal static void SET_BLIP_AS_MINIMAL_ON_EDGE(Blip blip, BOOL toggle) { NativeInvoker.Invoke(0x2B6D467DAB714E8D, (ulong)blip, (ulong)toggle); }
        internal static void SET_RADIUS_BLIP_EDGE(Blip blip, BOOL toggle) { NativeInvoker.Invoke(0x25615540D894B814, (ulong)blip, (ulong)toggle); }
        internal static BOOL DOES_BLIP_EXIST(Blip blip) { return NativeInvoker.Invoke<BOOL>(0xA6DB27D19ECBB7DA, (ulong)blip); }
        internal static void SET_WAYPOINT_OFF() { NativeInvoker.Invoke(0xA7E4E2D361C2627F); } // 0xA7E4E2D361C2627F 0xB3496E1B b323<, (ulong)A7E4E2D361C2627F); }
        internal static void DELETE_WAYPOINT_() { NativeInvoker.Invoke(0xD8E694757BCEA8E9); } // 0xD8E694757BCEA8E9 0x62BABF2C b323<, (ulong)D8E694757BCEA8E9); }
        internal static void REFRESH_WAYPOINT() { NativeInvoker.Invoke(0x81FA173F170560D1); } // 0x81FA173F170560D1 0xB395D753 b323<, (ulong)81FA173F170560D1); }
        internal static BOOL IS_WAYPOINT_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0x1DD1F58F493F1DA5); } // 0x1DD1F58F493F1DA5 0x5E4DF47B b323, (ulong)1DD1F58F493F1DA5); }
        internal static void SET_NEW_WAYPOINT(float x, float y) { NativeInvoker.Invoke(0xFE43368D2AA4F2FC, *(uint*)&x, *(uint*)&y); }
        internal static void SET_BLIP_BRIGHT(Blip blip, BOOL toggle) { NativeInvoker.Invoke(0xB203913733F27884, (ulong)blip, (ulong)toggle); }
        internal static void SET_BLIP_SHOW_CONE(Blip blip, BOOL toggle, Any p2) { NativeInvoker.Invoke(0x13127EC3665E8EE1, (ulong)blip, (ulong)toggle, (ulong)p2); }
        internal static void N_0xC594B315EDF2D4AF(Ped ped) { NativeInvoker.Invoke(0xC594B315EDF2D4AF, (ulong)ped); }
        internal static void N_0xF83D0FEBE75E62C9(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8) { NativeInvoker.Invoke(0xF83D0FEBE75E62C9, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8); }
        internal static void N_0x35A3CD97B2C0A6D2(Blip blip) { NativeInvoker.Invoke(0x35A3CD97B2C0A6D2, (ulong)blip); }
        internal static void N_0x8410C5E0CD847B9D() { NativeInvoker.Invoke(0x8410C5E0CD847B9D); } // 0x8410C5E0CD847B9D b1290<, (ulong)8410C5E0CD847B9D); }
        internal static Any SET_MINIMAP_COMPONENT(int componentId, BOOL toggle, int @overrideColor) { return NativeInvoker.Invoke<Any>(0x75A9A10948D1DEA6, (ulong)componentId, (ulong)toggle, (ulong)@overrideColor); }
        internal static void SET_MINIMAP_SONAR_ENABLED_(BOOL toggle) { NativeInvoker.Invoke(0x6B50FC8749632EC1, (ulong)toggle); }
        internal static void SHOW_SIGNIN_UI_() { NativeInvoker.Invoke(0x60E892BA4F5BDCA4); } // 0x60E892BA4F5BDCA4 b323<, (ulong)60E892BA4F5BDCA4); }
        internal static Blip GET_MAIN_PLAYER_BLIP_ID() { return NativeInvoker.Invoke<Blip>(0xDCD4EC3F419D02FA); } // 0xDCD4EC3F419D02FA 0xAB93F020 b323, (ulong)DCD4EC3F419D02FA); }
        internal static void N_0x41350B4FC28E3941(BOOL p0) { NativeInvoker.Invoke(0x41350B4FC28E3941, (ulong)p0); }
        internal static void HIDE_LOADING_ON_FADE_THIS_FRAME() { NativeInvoker.Invoke(0x4B0311D3CDC4648F); } // 0x4B0311D3CDC4648F 0x35087963 b323<, (ulong)4B0311D3CDC4648F); }
        internal static void SET_RADAR_AS_INTERIOR_THIS_FRAME(Hash interior, float x, float y, int z, int zoom) { NativeInvoker.Invoke(0x59E727A1C9D3E31A, (ulong)interior, *(uint*)&x, *(uint*)&y, (ulong)z, (ulong)zoom); }
        internal static void SET_INTERIOR_ZOOM_LEVEL_INCREASED_(BOOL toggle) { NativeInvoker.Invoke(0x504DFE62A1692296, (ulong)toggle); }
        internal static void SET_INTERIOR_ZOOM_LEVEL_DECREASED_(BOOL toggle) { NativeInvoker.Invoke(0x7EC8ABA5E74B3D7A, (ulong)toggle); }
        internal static void SET_RADAR_AS_EXTERIOR_THIS_FRAME() { NativeInvoker.Invoke(0xE81B7D2A3DAB2D81); } // 0xE81B7D2A3DAB2D81 0x39ABB10E b323<, (ulong)E81B7D2A3DAB2D81); }
        internal static void SET_PLAYER_BLIP_POSITION_THIS_FRAME_(float x, float y) { NativeInvoker.Invoke(0x77E2DD177910E1CF, *(uint*)&x, *(uint*)&y); }
        internal static void N_0xA17784FCA9548D15(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0xA17784FCA9548D15, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL IS_MINIMAP_IN_INTERIOR_() { return NativeInvoker.Invoke<BOOL>(0x9049FE339D5F6F6F); } // 0x9049FE339D5F6F6F 0x199DED14 b323, (ulong)9049FE339D5F6F6F); }
        internal static void HIDE_MINIMAP_EXTERIOR_MAP_THIS_FRAME() { NativeInvoker.Invoke(0x5FBAE526203990C9); } // 0x5FBAE526203990C9 0x1A4318F7 b323<, (ulong)5FBAE526203990C9); }
        internal static void HIDE_MINIMAP_INTERIOR_MAP_THIS_FRAME() { NativeInvoker.Invoke(0x20FE7FDFEEAD38C0); } // 0x20FE7FDFEEAD38C0 0xCE36E3FE b323<, (ulong)20FE7FDFEEAD38C0); }
        internal static void SET_TOGGLE_MINIMAP_HEIST_ISLAND_(BOOL toggle) { NativeInvoker.Invoke(0x5E1460624D194A38, (ulong)toggle); }
        internal static void DONT_TILT_MINIMAP_THIS_FRAME() { NativeInvoker.Invoke(0x6D14BFDC33B34F55); } // 0x6D14BFDC33B34F55 0x334EFD46 b323<, (ulong)6D14BFDC33B34F55); }
        internal static void N_0x55F5A5F07134DE60() { NativeInvoker.Invoke(0x55F5A5F07134DE60); } // 0x55F5A5F07134DE60 b1180<, (ulong)55F5A5F07134DE60); }
        internal static void SET_WIDESCREEN_FORMAT(Any p0) { NativeInvoker.Invoke(0xC3B07BA00A83B0F1, (ulong)p0); }
        internal static void DISPLAY_AREA_NAME(BOOL toggle) { NativeInvoker.Invoke(0x276B6CE369C33678, (ulong)toggle); }
        internal static void DISPLAY_CASH(BOOL toggle) { NativeInvoker.Invoke(0x96DEC8D5430208B7, (ulong)toggle); }
        internal static void N_0x170F541E1CADD1DE(BOOL p0) { NativeInvoker.Invoke(0x170F541E1CADD1DE, (ulong)p0); }
        internal static void SET_PLAYER_CASH_CHANGE_(int cash, int bank) { NativeInvoker.Invoke(0x0772DF77852C2E30, (ulong)cash, (ulong)bank); }
        internal static void DISPLAY_AMMO_THIS_FRAME(BOOL display) { NativeInvoker.Invoke(0xA5E78BA2B1331C55, (ulong)display); }
        internal static void DISPLAY_SNIPER_SCOPE_THIS_FRAME() { NativeInvoker.Invoke(0x73115226F4814E62); } // 0x73115226F4814E62 0xBC6C73CB b323<, (ulong)73115226F4814E62); }
        internal static void HIDE_HUD_AND_RADAR_THIS_FRAME() { NativeInvoker.Invoke(0x719FF505F097FD20); } // 0x719FF505F097FD20 0xB75D4AD2 b323<, (ulong)719FF505F097FD20); }
        internal static void N_0xE67C6DFD386EA5E7(BOOL p0) { NativeInvoker.Invoke(0xE67C6DFD386EA5E7, (ulong)p0); }
        internal static void SET_MULTIPLAYER_WALLET_CASH() { NativeInvoker.Invoke(0xC2D15BEF167E27BC); } // 0xC2D15BEF167E27BC 0xF4F3C796 b323<, (ulong)C2D15BEF167E27BC); }
        internal static void REMOVE_MULTIPLAYER_WALLET_CASH() { NativeInvoker.Invoke(0x95CF81BD06EE1887); } // 0x95CF81BD06EE1887 0x7BFFE82F b323<, (ulong)95CF81BD06EE1887); }
        internal static void SET_MULTIPLAYER_BANK_CASH() { NativeInvoker.Invoke(0xDD21B55DF695CD0A); } // 0xDD21B55DF695CD0A 0x2C842D03 b323<, (ulong)DD21B55DF695CD0A); }
        internal static void REMOVE_MULTIPLAYER_BANK_CASH() { NativeInvoker.Invoke(0xC7C6789AA1CFEDD0); } // 0xC7C6789AA1CFEDD0 0x728B4EF4 b323<, (ulong)C7C6789AA1CFEDD0); }
        internal static void SET_MULTIPLAYER_HUD_CASH(int p0, int p1) { NativeInvoker.Invoke(0xFD1D220394BCB824, (ulong)p0, (ulong)p1); }
        internal static void REMOVE_MULTIPLAYER_HUD_CASH() { NativeInvoker.Invoke(0x968F270E39141ECA); } // 0x968F270E39141ECA 0x07BF4A7D b323<, (ulong)968F270E39141ECA); }
        internal static void HIDE_HELP_TEXT_THIS_FRAME() { NativeInvoker.Invoke(0xD46923FC481CA285); } // 0xD46923FC481CA285 0xF3807BED b323<, (ulong)D46923FC481CA285); }
        internal static BOOL N_0x801879A9B4F4B2FB() { return NativeInvoker.Invoke<BOOL>(0x801879A9B4F4B2FB); } // 0x801879A9B4F4B2FB b372, (ulong)801879A9B4F4B2FB); }
        internal static void DISPLAY_HELP_TEXT_THIS_FRAME(char* message, BOOL p1) { NativeInvoker.Invoke(0x960C9FF8F616E41C, (ulong)message, (ulong)p1); }
        internal static void HUD_FORCE_WEAPON_WHEEL(BOOL show) { NativeInvoker.Invoke(0xEB354E5376BC81A7, (ulong)show); }
        internal static void HUD_DISPLAY_LOADING_SCREEN_TIPS_() { NativeInvoker.Invoke(0x488043841BBE156F); } // 0x488043841BBE156F b1011<, (ulong)488043841BBE156F); }
        internal static void HUD_WEAPON_WHEEL_IGNORE_SELECTION_() { NativeInvoker.Invoke(0x0AFC4AF510774B47); } // 0x0AFC4AF510774B47 0xB26FED2B b323<, (ulong)0AFC4AF510774B47); }
        internal static Hash HUD_WEAPON_WHEEL_GET_SELECTED_HASH_() { return NativeInvoker.Invoke<Hash>(0xA48931185F0536FE); } // 0xA48931185F0536FE 0x22E9F555 b323, (ulong)A48931185F0536FE); }
        internal static void HUD_SET_WEAPON_WHEEL_TOP_SLOT(Hash weaponHash) { NativeInvoker.Invoke(0x72C1056D678BB7D8, (ulong)weaponHash); }
        internal static Hash HUD_WEAPON_WHEEL_GET_SLOT_HASH_(int weaponTypeIndex) { return NativeInvoker.Invoke<Hash>(0xA13E93403F26C812, (ulong)weaponTypeIndex); }
        internal static void HUD_WEAPON_WHEEL_IGNORE_CONTROL_INPUT_(BOOL toggle) { NativeInvoker.Invoke(0x14C9FDCC41F81F63, (ulong)toggle); }
        internal static void SET_GPS_FLAGS(int p0, float p1) { NativeInvoker.Invoke(0x5B440763A4C8D15B, (ulong)p0, *(uint*)&p1); }
        internal static void CLEAR_GPS_FLAGS() { NativeInvoker.Invoke(0x21986729D6A3A830); } // 0x21986729D6A3A830 0x056AFCE6 b323<, (ulong)21986729D6A3A830); }
        internal static void SET_RACE_TRACK_RENDER(BOOL toggle) { NativeInvoker.Invoke(0x1EAC5F91BCBC5073, (ulong)toggle); }
        internal static void CLEAR_GPS_RACE_TRACK() { NativeInvoker.Invoke(0x7AA5B4CE533C858B); } // 0x7AA5B4CE533C858B 0x40C59829 b323<, (ulong)7AA5B4CE533C858B); }
        internal static void START_GPS_CUSTOM_ROUTE(int hudColor, BOOL displayOnFoot, BOOL followPlayer) { NativeInvoker.Invoke(0xDB34E8D56FC13B08, (ulong)hudColor, (ulong)displayOnFoot, (ulong)followPlayer); }
        internal static void ADD_POINT_TO_GPS_CUSTOM_ROUTE(float x, float y, float z) { NativeInvoker.Invoke(0x311438A071DD9B1A, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void SET_GPS_CUSTOM_ROUTE_RENDER(BOOL toggle, int radarThickness, int mapThickness) { NativeInvoker.Invoke(0x900086F371220B6F, (ulong)toggle, (ulong)radarThickness, (ulong)mapThickness); }
        internal static void CLEAR_GPS_CUSTOM_ROUTE() { NativeInvoker.Invoke(0xE6DE0561D9232A64); } // 0xE6DE0561D9232A64 0xCF2E3E24 b323<, (ulong)E6DE0561D9232A64); }
        internal static void START_GPS_MULTI_ROUTE(int hudColor, BOOL routeFromPlayer, BOOL displayOnFoot) { NativeInvoker.Invoke(0x3D3D15AF7BCAAF83, (ulong)hudColor, (ulong)routeFromPlayer, (ulong)displayOnFoot); }
        internal static void ADD_POINT_TO_GPS_MULTI_ROUTE(float x, float y, float z) { NativeInvoker.Invoke(0xA905192A6781C41B, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void SET_GPS_MULTI_ROUTE_RENDER(BOOL toggle) { NativeInvoker.Invoke(0x3DDA37128DD1ACA8, (ulong)toggle); }
        internal static void CLEAR_GPS_MULTI_ROUTE() { NativeInvoker.Invoke(0x67EEDEA1B9BAFD94); } // 0x67EEDEA1B9BAFD94 0x0D9969E4 b323<, (ulong)67EEDEA1B9BAFD94); }
        internal static void CLEAR_GPS_PLAYER_WAYPOINT() { NativeInvoker.Invoke(0xFF4FB7C8CDFA3DA7); } // 0xFF4FB7C8CDFA3DA7 0x0B9C7FC2 b323<, (ulong)FF4FB7C8CDFA3DA7); }
        internal static void SET_GPS_FLASHES(BOOL toggle) { NativeInvoker.Invoke(0x320D0E0D936A0E9B, (ulong)toggle); }
        internal static void SET_MAIN_PLAYER_BLIP_COLOUR_(int color) { NativeInvoker.Invoke(0x7B21E0BB01E8224A, (ulong)color); }
        internal static void FLASH_MINIMAP_DISPLAY() { NativeInvoker.Invoke(0xF2DD778C22B15BDA); } // 0xF2DD778C22B15BDA 0xB8359952 b323<, (ulong)F2DD778C22B15BDA); }
        internal static void FLASH_MINIMAP_DISPLAY_WITH_COLOR(int hudColorIndex) { NativeInvoker.Invoke(0x6B1DE27EE78E6A19, (ulong)hudColorIndex); }
        internal static void TOGGLE_STEALTH_RADAR(BOOL toggle) { NativeInvoker.Invoke(0x6AFDFB93754950C7, (ulong)toggle); }
        internal static void SET_MINIMAP_IN_SPECTATOR_MODE(BOOL toggle, Ped ped) { NativeInvoker.Invoke(0x1A5CD7752DD28CD3, (ulong)toggle, (ulong)ped); }
        internal static void SET_MISSION_NAME(BOOL p0, char* name) { NativeInvoker.Invoke(0x5F28ECF5FC84772F, (ulong)p0, (ulong)name); }
        internal static void SET_MISSION_NAME_2_(BOOL p0, char* name) { NativeInvoker.Invoke(0xE45087D85F468BC2, (ulong)p0, (ulong)name); }
        internal static void N_0x817B86108EB94E51(BOOL p0, Any* p1, Any* p2, Any* p3, Any* p4, Any* p5, Any* p6, Any* p7, Any* p8) { NativeInvoker.Invoke(0x817B86108EB94E51, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8); }
        internal static void SET_MINIMAP_BLOCK_WAYPOINT(BOOL toggle) { NativeInvoker.Invoke(0x58FADDED207897DC, (ulong)toggle); }
        internal static void SET_MINIMAP_IN_PROLOGUE(BOOL toggle) { NativeInvoker.Invoke(0x9133955F1A2DA957, (ulong)toggle); }
        internal static void SET_MINIMAP_HIDE_FOW(BOOL toggle) { NativeInvoker.Invoke(0xF8DEE0A5600CBB93, (ulong)toggle); }
        internal static float GET_MINIMAP_FOW_DISCOVERY_RATIO() { return NativeInvoker.Invoke<float>(0xE0130B41D3CF4574); } // 0xE0130B41D3CF4574 0xA4098ACC b323, (ulong)E0130B41D3CF4574); }
        internal static BOOL GET_MINIMAP_FOW_COORDINATE_IS_REVEALED(float x, float y, float z) { return NativeInvoker.Invoke<BOOL>(0x6E31B91145873922, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void N_0x62E849B7EB28E770(BOOL p0) { NativeInvoker.Invoke(0x62E849B7EB28E770, (ulong)p0); }
        internal static void SET_MINIMAP_FOW_REVEAL_COORDINATE(float x, float y, float z) { NativeInvoker.Invoke(0x0923DBF87DFF735E, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void SET_MINIMAP_GOLF_COURSE(int hole) { NativeInvoker.Invoke(0x71BDB63DBAF8DA59, (ulong)hole); }
        internal static void SET_MINIMAP_GOLF_COURSE_OFF() { NativeInvoker.Invoke(0x35EDD5B2E3FF01C0); } // 0x35EDD5B2E3FF01C0 0x20FD3E87 b323<, (ulong)35EDD5B2E3FF01C0); }
        internal static void LOCK_MINIMAP_ANGLE(int angle) { NativeInvoker.Invoke(0x299FAEBB108AE05B, (ulong)angle); }
        internal static void UNLOCK_MINIMAP_ANGLE() { NativeInvoker.Invoke(0x8183455E16C42E3A); } // 0x8183455E16C42E3A 0x742043F9 b323<, (ulong)8183455E16C42E3A); }
        internal static void LOCK_MINIMAP_POSITION(float x, float y) { NativeInvoker.Invoke(0x1279E861A329E73F, *(uint*)&x, *(uint*)&y); }
        internal static void UNLOCK_MINIMAP_POSITION() { NativeInvoker.Invoke(0x3E93E06DB8EF1F30); } // 0x3E93E06DB8EF1F30 0x5E8E6F54 b323<, (ulong)3E93E06DB8EF1F30); }
        internal static void SET_MINIMAP_ALTITUDE_INDICATOR_LEVEL_(float altitude, BOOL p1, Any p2) { NativeInvoker.Invoke(0xD201F3FF917A506D, *(uint*)&altitude, (ulong)p1, (ulong)p2); }
        internal static void SET_HEALTH_HUD_DISPLAY_VALUES(int health, int capacity, BOOL wasAdded) { NativeInvoker.Invoke(0x3F5CC444DCAAA8F2, (ulong)health, (ulong)capacity, (ulong)wasAdded); }
        internal static void SET_MAX_HEALTH_HUD_DISPLAY(int maximumValue) { NativeInvoker.Invoke(0x975D66A0BC17064C, (ulong)maximumValue); }
        internal static void SET_MAX_ARMOUR_HUD_DISPLAY(int maximumValue) { NativeInvoker.Invoke(0x06A320535F5F0248, (ulong)maximumValue); }
        internal static void SET_BIGMAP_ACTIVE(BOOL toggleBigMap, BOOL showFullMap) { NativeInvoker.Invoke(0x231C8F89D0539D8F, (ulong)toggleBigMap, (ulong)showFullMap); }
        internal static BOOL IS_HUD_COMPONENT_ACTIVE(int id) { return NativeInvoker.Invoke<BOOL>(0xBC4C9EA5391ECC0D, (ulong)id); }
        internal static BOOL IS_SCRIPTED_HUD_COMPONENT_ACTIVE(int id) { return NativeInvoker.Invoke<BOOL>(0xDD100EB17A94FF65, (ulong)id); }
        internal static void HIDE_SCRIPTED_HUD_COMPONENT_THIS_FRAME(int id) { NativeInvoker.Invoke(0xE374C498D8BADC14, (ulong)id); }
        internal static void SHOW_SCRIPTED_HUD_COMPONENT_THIS_FRAME_(int id) { NativeInvoker.Invoke(0x4F38DCA127DAAEA2, (ulong)id); }
        internal static BOOL IS_SCRIPTED_HUD_COMPONENT_HIDDEN_THIS_FRAME(int id) { return NativeInvoker.Invoke<BOOL>(0x09C0403ED9A751C2, (ulong)id); }
        internal static void HIDE_HUD_COMPONENT_THIS_FRAME(int id) { NativeInvoker.Invoke(0x6806C51AD12B83B8, (ulong)id); }
        internal static void SHOW_HUD_COMPONENT_THIS_FRAME(int id) { NativeInvoker.Invoke(0x0B4DF1FA60C0E664, (ulong)id); }
        internal static void HIDE_AREA_AND_VEHICLE_NAME_THIS_FRAME_() { NativeInvoker.Invoke(0xA4DEDE28B1814289); } // 0xA4DEDE28B1814289 0x52746FE1 b323<, (ulong)A4DEDE28B1814289); }
        internal static void RESET_RETICULE_VALUES() { NativeInvoker.Invoke(0x12782CE0A636E9F0); } // 0x12782CE0A636E9F0 0xBE27AA3F b323<, (ulong)12782CE0A636E9F0); }
        internal static void RESET_HUD_COMPONENT_VALUES(int id) { NativeInvoker.Invoke(0x450930E616475D0D, (ulong)id); }
        internal static void SET_HUD_COMPONENT_POSITION(int id, float x, float y) { NativeInvoker.Invoke(0xAABB1F56E2A17CED, (ulong)id, *(uint*)&x, *(uint*)&y); }
        internal static Vector3 GET_HUD_COMPONENT_POSITION(int id) { return NativeInvoker.Invoke<Vector3>(0x223CA69A8C4417FD, (ulong)id); }
        internal static void CLEAR_REMINDER_MESSAGE() { NativeInvoker.Invoke(0xB57D8DD645CFA2CF); } // 0xB57D8DD645CFA2CF 0x5BBCC934 b323<, (ulong)B57D8DD645CFA2CF); }
        internal static BOOL GET_HUD_SCREEN_POSITION_FROM_WORLD_POSITION(float worldX, float worldY, float worldZ, float* screenX, float* screenY) { return NativeInvoker.Invoke<BOOL>(0xF9904D11F1ACBEC3, *(uint*)&worldX, *(uint*)&worldY, *(uint*)&worldZ, (ulong)screenX, (ulong)screenY); }
        internal static void OPEN_REPORTUGC_MENU() { NativeInvoker.Invoke(0x523A590C1A3CC0D3); } // 0x523A590C1A3CC0D3 0x10DE5150 b323<, (ulong)523A590C1A3CC0D3); }
        internal static void FORCE_CLOSE_REPORTUGC_MENU() { NativeInvoker.Invoke(0xEE4C0E6DBC6F2C6F); } // 0xEE4C0E6DBC6F2C6F 0x67649EE0 b323<, (ulong)EE4C0E6DBC6F2C6F); }
        internal static BOOL IS_REPORTUGC_MENU_OPEN() { return NativeInvoker.Invoke<BOOL>(0x9135584D09A3437E); } // 0x9135584D09A3437E 0x9D2C94FA b323, (ulong)9135584D09A3437E); }
        internal static BOOL IS_FLOATING_HELP_TEXT_ON_SCREEN(int hudIndex) { return NativeInvoker.Invoke<BOOL>(0x2432784ACA090DA4, (ulong)hudIndex); }
        internal static void SET_FLOATING_HELP_TEXT_SCREEN_POSITION(int hudIndex, float x, float y) { NativeInvoker.Invoke(0x7679CC1BCEBE3D4C, (ulong)hudIndex, *(uint*)&x, *(uint*)&y); }
        internal static void SET_FLOATING_HELP_TEXT_WORLD_POSITION(int hudIndex, float x, float y, float z) { NativeInvoker.Invoke(0x784BA7E0ECEB4178, (ulong)hudIndex, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void SET_FLOATING_HELP_TEXT_TO_ENTITY(int hudIndex, Entity entity, float offsetX, float offsetY) { NativeInvoker.Invoke(0xB094BC1DB4018240, (ulong)hudIndex, (ulong)entity, *(uint*)&offsetX, *(uint*)&offsetY); }
        internal static void SET_FLOATING_HELP_TEXT_STYLE(int hudIndex, int p1, int p2, int p3, int p4, int p5) { NativeInvoker.Invoke(0x788E7FD431BD67F1, (ulong)hudIndex, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static void CLEAR_FLOATING_HELP(int hudIndex, BOOL p1) { NativeInvoker.Invoke(0x50085246ABD3FEFA, (ulong)hudIndex, (ulong)p1); }
        internal static void CREATE_MP_GAMER_TAG_WITH_CREW_COLOR(Player player, char* username, BOOL pointedClanTag, BOOL isRockstarClan, char* clanTag, int clanFlag, int r, int g, int b) { NativeInvoker.Invoke(0x6DD05E9D83EFA4C9, (ulong)player, (ulong)username, (ulong)pointedClanTag, (ulong)isRockstarClan, (ulong)clanTag, (ulong)clanFlag, (ulong)r, (ulong)g, (ulong)b); }
        internal static BOOL IS_MP_GAMER_TAG_MOVIE_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0x6E0EB3EB47C8D7AA); } // 0x6E0EB3EB47C8D7AA 0xEFD2564A b323, (ulong)6E0EB3EB47C8D7AA); }
        internal static int CREATE_FAKE_MP_GAMER_TAG(Ped ped, char* username, BOOL pointedClanTag, BOOL isRockstarClan, char* clanTag, int clanFlag) { return NativeInvoker.Invoke<int>(0xBFEFE3321A3F5015, (ulong)ped, (ulong)username, (ulong)pointedClanTag, (ulong)isRockstarClan, (ulong)clanTag, (ulong)clanFlag); }
        internal static void REMOVE_MP_GAMER_TAG(int gamerTagId) { NativeInvoker.Invoke(0x31698AA80E0223F8, (ulong)gamerTagId); }
        internal static BOOL IS_MP_GAMER_TAG_ACTIVE(int gamerTagId) { return NativeInvoker.Invoke<BOOL>(0x4E929E7A5796FD26, (ulong)gamerTagId); }
        internal static BOOL IS_MP_GAMER_TAG_FREE(int gamerTagId) { return NativeInvoker.Invoke<BOOL>(0x595B5178E412E199, (ulong)gamerTagId); }
        internal static void SET_MP_GAMER_TAG_VISIBILITY(int gamerTagId, int component, BOOL toggle, Any p3) { NativeInvoker.Invoke(0x63BB75ABEDC1F6A0, (ulong)gamerTagId, (ulong)component, (ulong)toggle, (ulong)p3); }
        internal static void SET_MP_GAMER_TAG_ENABLED_(int gamerTagId, BOOL toggle) { NativeInvoker.Invoke(0xEE76FF7E6A0166B0, (ulong)gamerTagId, (ulong)toggle); }
        internal static void SET_MP_GAMER_TAG_ICONS_(int gamerTagId, BOOL toggle) { NativeInvoker.Invoke(0xA67F9C46D612B6F1, (ulong)gamerTagId, (ulong)toggle); }
        internal static void SET_MP_GAMER_HEALTH_BAR_DISPLAY_(int gamerTagId, BOOL toggle) { NativeInvoker.Invoke(0xD29EC58C2F6B5014, (ulong)gamerTagId, (ulong)toggle); }
        internal static void SET_MP_GAMER_HEALTH_BAR_MAX_(int gamerTagId, int value, int maximumValue) { NativeInvoker.Invoke(0x1563FE35E9928E67, (ulong)gamerTagId, (ulong)value, (ulong)maximumValue); }
        internal static void SET_MP_GAMER_TAG_COLOUR(int gamerTagId, int component, int hudColorIndex) { NativeInvoker.Invoke(0x613ED644950626AE, (ulong)gamerTagId, (ulong)component, (ulong)hudColorIndex); }
        internal static void SET_MP_GAMER_TAG_HEALTH_BAR_COLOUR(int gamerTagId, int hudColorIndex) { NativeInvoker.Invoke(0x3158C77A7E888AB4, (ulong)gamerTagId, (ulong)hudColorIndex); }
        internal static void SET_MP_GAMER_TAG_ALPHA(int gamerTagId, int component, int alpha) { NativeInvoker.Invoke(0xD48FE545CD46F857, (ulong)gamerTagId, (ulong)component, (ulong)alpha); }
        internal static void SET_MP_GAMER_TAG_WANTED_LEVEL(int gamerTagId, int wantedlvl) { NativeInvoker.Invoke(0xCF228E2AA03099C3, (ulong)gamerTagId, (ulong)wantedlvl); }
        internal static void SET_MP_GAMER_TAG_UNK_(int gamerTagId, int p1) { NativeInvoker.Invoke(0x9C16459B2324B2CF, (ulong)gamerTagId, (ulong)p1); }
        internal static void SET_MP_GAMER_TAG_NAME(int gamerTagId, char* @string) { NativeInvoker.Invoke(0xDEA2B8283BAA3944, (ulong)gamerTagId, (ulong)@string); }
        internal static BOOL IS_VALID_MP_GAMER_TAG_MOVIE_(int gamerTagId) { return NativeInvoker.Invoke<BOOL>(0xEB709A36958ABE0D, (ulong)gamerTagId); }
        internal static void SET_MP_GAMER_TAG_BIG_TEXT(int gamerTagId, char* @string) { NativeInvoker.Invoke(0x7B7723747CCB55B6, (ulong)gamerTagId, (ulong)@string); }
        internal static int GET_CURRENT_WEBPAGE_ID() { return NativeInvoker.Invoke<int>(0x01A358D9128B7A86); } // 0x01A358D9128B7A86 0xAB5B7C18 b323, (ulong)01A358D9128B7A86); }
        internal static int GET_CURRENT_WEBSITE_ID() { return NativeInvoker.Invoke<int>(0x97D47996FC48CBAD); } // 0x97D47996FC48CBAD 0x42A55B14 b323, (ulong)97D47996FC48CBAD); }
        internal static int GET_GLOBAL_ACTIONSCRIPT_FLAG(int flagIndex) { return NativeInvoker.Invoke<int>(0xE3B05614DCE1D014, (ulong)flagIndex); }
        internal static void RESET_GLOBAL_ACTIONSCRIPT_FLAG(int flagIndex) { NativeInvoker.Invoke(0xB99C4E4D9499DF29, (ulong)flagIndex); }
        internal static BOOL IS_WARNING_MESSAGE_ACTIVE_2_() { return NativeInvoker.Invoke<BOOL>(0xAF42195A42C63BBA); } // 0xAF42195A42C63BBA b323, (ulong)AF42195A42C63BBA); }
        internal static void SET_WARNING_MESSAGE(char* titleMsg, int flags, char* promptMsg, BOOL p3, int p4, char* p5, char* p6, BOOL showBackground, Any p8) { NativeInvoker.Invoke(0x7B1776B3B53F8D74, (ulong)titleMsg, (ulong)flags, (ulong)promptMsg, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)showBackground, (ulong)p8); }
        internal static void SET_WARNING_MESSAGE_WITH_HEADER(char* entryHeader, char* entryLine1, int instructionalKey, char* entryLine2, BOOL p4, Any p5, Any* showBackground, Any* p7, BOOL p8, Any p9) { NativeInvoker.Invoke(0xDC38CC1E35B6A5D7, (ulong)entryHeader, (ulong)entryLine1, (ulong)instructionalKey, (ulong)entryLine2, (ulong)p4, (ulong)p5, (ulong)showBackground, (ulong)p7, (ulong)p8, (ulong)p9); }
        internal static void SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS(char* entryHeader, char* entryLine1, int instructionalKey, char* entryLine2, BOOL p4, Any p5, Any additionalIntInfo, char* additionalTextInfoLine1, char* additionalTextInfoLine2, BOOL showBackground, int errorCode) { NativeInvoker.Invoke(0x701919482C74B5AB, (ulong)entryHeader, (ulong)entryLine1, (ulong)instructionalKey, (ulong)entryLine2, (ulong)p4, (ulong)p5, (ulong)additionalIntInfo, (ulong)additionalTextInfoLine1, (ulong)additionalTextInfoLine2, (ulong)showBackground, (ulong)errorCode); }
        internal static void SET_WARNING_MESSAGE_WITH_HEADER_UNK_(char* entryHeader, char* entryLine1, int flags, char* entryLine2, BOOL p4, Any p5, Any* p6, Any* p7, BOOL showBg, Any p9, Any p10) { NativeInvoker.Invoke(0x38B55259C2E078ED, (ulong)entryHeader, (ulong)entryLine1, (ulong)flags, (ulong)entryLine2, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)showBg, (ulong)p9, (ulong)p10); }
        internal static void SET_WARNING_MESSAGE_WITH_ALERT_(char* labelTitle, char* labelMessage, int p2, int p3, char* labelMessage2, BOOL p5, int p6, int p7, char* p8, char* p9, BOOL background, int errorCode) { NativeInvoker.Invoke(0x15803FEC3B9A872B, (ulong)labelTitle, (ulong)labelMessage, (ulong)p2, (ulong)p3, (ulong)labelMessage2, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9, (ulong)background, (ulong)errorCode); }
        internal static Hash GET_WARNING_MESSAGE_TITLE_HASH_() { return NativeInvoker.Invoke<Hash>(0x81DF9ABA6C83DFF9); } // 0x81DF9ABA6C83DFF9 b1290, (ulong)81DF9ABA6C83DFF9); }
        internal static BOOL SET_WARNING_MESSAGE_LIST_ROW_(int index, char* name, int cash, int rp, int lvl, int colour) { return NativeInvoker.Invoke<BOOL>(0x0C5A80A9E096D529, (ulong)index, (ulong)name, (ulong)cash, (ulong)rp, (ulong)lvl, (ulong)colour); }
        internal static BOOL N_0xDAF87174BE7454FF(Any p0) { return NativeInvoker.Invoke<BOOL>(0xDAF87174BE7454FF, (ulong)p0); }
        internal static void REMOVE_WARNING_MESSAGE_LIST_ITEMS_() { NativeInvoker.Invoke(0x6EF54AB721DC6242); } // 0x6EF54AB721DC6242 b323<, (ulong)6EF54AB721DC6242); }
        internal static BOOL IS_WARNING_MESSAGE_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0xE18B138FABC53103); } // 0xE18B138FABC53103 0x94C834AD b323, (ulong)E18B138FABC53103); }
        internal static void CLEAR_DYNAMIC_PAUSE_MENU_ERROR_MESSAGE() { NativeInvoker.Invoke(0x7792424AA0EAC32E); } // 0x7792424AA0EAC32E 0x2F9A309C b323<, (ulong)7792424AA0EAC32E); }
        internal static void RACE_GALLERY_FULLSCREEN_(BOOL toggle) { NativeInvoker.Invoke(0x5354C5BA2EA868A4, (ulong)toggle); }
        internal static void RACE_GALLERY_NEXT_BLIP_SPRITE_(int spriteId) { NativeInvoker.Invoke(0x1EAE6DD17B7A5EFA, (ulong)spriteId); }
        internal static Any RACE_GALLERY_ADD_BLIP_(float x, float y, float z) { return NativeInvoker.Invoke<Any>(0x551DF99658DB6EE8, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void CLEAR_RACE_GALLERY_BLIPS_() { NativeInvoker.Invoke(0x2708FC083123F9FF); } // 0x2708FC083123F9FF 0xCBEC9369 b323<, (ulong)2708FC083123F9FF); }
        internal static Any FORCE_SONAR_BLIPS_THIS_FRAME() { return NativeInvoker.Invoke<Any>(0x1121BFA1A1A522A8); } // 0x1121BFA1A1A522A8 0x3F4AFB13 b323, (ulong)1121BFA1A1A522A8); }
        internal static Blip GET_NORTH_RADAR_BLIP_() { return NativeInvoker.Invoke<Blip>(0x3F0CF9CB7E589B88); } // 0x3F0CF9CB7E589B88 b463, (ulong)3F0CF9CB7E589B88); }
        internal static void DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS(BOOL toggle) { NativeInvoker.Invoke(0x82CEDC33687E1F50, (ulong)toggle); }
        internal static void N_0x211C4EF450086857() { NativeInvoker.Invoke(0x211C4EF450086857); } // 0x211C4EF450086857 0x801D0D86 b323<, (ulong)211C4EF450086857); }
        internal static void N_0xBF4F34A85CA2970C() { NativeInvoker.Invoke(0xBF4F34A85CA2970C); } // 0xBF4F34A85CA2970C 0x317775DF b323<, (ulong)BF4F34A85CA2970C); }
        internal static void ACTIVATE_FRONTEND_MENU(Hash menuhash, BOOL togglePause, int component) { NativeInvoker.Invoke(0xEF01D36B9C9D0C7B, (ulong)menuhash, (ulong)togglePause, (ulong)component); }
        internal static void RESTART_FRONTEND_MENU(Hash menuHash, int p1) { NativeInvoker.Invoke(0x10706DC6AD2D49C0, (ulong)menuHash, (ulong)p1); }
        internal static Hash GET_CURRENT_FRONTEND_MENU_VERSION() { return NativeInvoker.Invoke<Hash>(0x2309595AD6145265); } // 0x2309595AD6145265 0x33D6868F b323, (ulong)2309595AD6145265); }
        internal static void SET_PAUSE_MENU_ACTIVE(BOOL toggle) { NativeInvoker.Invoke(0xDF47FC56C71569CF, (ulong)toggle); }
        internal static void DISABLE_FRONTEND_THIS_FRAME() { NativeInvoker.Invoke(0x6D3465A73092F0E6); } // 0x6D3465A73092F0E6 0xD86A029E b323<, (ulong)6D3465A73092F0E6); }
        internal static void SUPPRESS_FRONTEND_RENDERING_THIS_FRAME() { NativeInvoker.Invoke(0xBA751764F0821256); } // 0xBA751764F0821256 0x7F349900 b323<, (ulong)BA751764F0821256); }
        internal static void ALLOW_PAUSE_MENU_WHEN_DEAD_THIS_FRAME_() { NativeInvoker.Invoke(0xCC3FDDED67BCFC63); } // 0xCC3FDDED67BCFC63 0x630CD8EE b323<, (ulong)CC3FDDED67BCFC63); }
        internal static void SET_FRONTEND_ACTIVE(BOOL active) { NativeInvoker.Invoke(0x745711A75AB09277, (ulong)active); }
        internal static BOOL IS_PAUSE_MENU_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0xB0034A223497FFCB); } // 0xB0034A223497FFCB 0xD3600591 b323, (ulong)B0034A223497FFCB); }
        internal static BOOL N_0x2F057596F2BD0061() { return NativeInvoker.Invoke<BOOL>(0x2F057596F2BD0061); } // 0x2F057596F2BD0061 0xC85C4487 b323, (ulong)2F057596F2BD0061); }
        internal static int GET_PAUSE_MENU_STATE() { return NativeInvoker.Invoke<int>(0x272ACD84970869C5); } // 0x272ACD84970869C5 0x92F50134 b323, (ulong)272ACD84970869C5); }
        internal static Vector3 N_0x5BFF36D6ED83E0AE() { return NativeInvoker.Invoke<Vector3>(0x5BFF36D6ED83E0AE); } // 0x5BFF36D6ED83E0AE b323, (ulong)5BFF36D6ED83E0AE); }
        internal static BOOL IS_PAUSE_MENU_RESTARTING() { return NativeInvoker.Invoke<BOOL>(0x1C491717107431C7); } // 0x1C491717107431C7 0x3C4CF4D9 b323, (ulong)1C491717107431C7); }
        internal static void LOG_DEBUG_INFO_(char* p0) { NativeInvoker.Invoke(0x2162C446DFDF38FD, (ulong)p0); }
        internal static void N_0x77F16B447824DA6C(Any p0) { NativeInvoker.Invoke(0x77F16B447824DA6C, (ulong)p0); }
        internal static void N_0xCDCA26E80FAECB8F() { NativeInvoker.Invoke(0xCDCA26E80FAECB8F); } // 0xCDCA26E80FAECB8F 0xC84BE309 b323<, (ulong)CDCA26E80FAECB8F); }
        internal static void N_0x2DE6C5E2E996F178(Any p0) { NativeInvoker.Invoke(0x2DE6C5E2E996F178, (ulong)p0); }
        internal static void PAUSE_MENU_ACTIVATE_CONTEXT(Hash contextHash) { NativeInvoker.Invoke(0xDD564BDD0472C936, (ulong)contextHash); }
        internal static void PAUSE_MENU_DEACTIVATE_CONTEXT(Hash contextHash) { NativeInvoker.Invoke(0x444D8CF241EC25C5, (ulong)contextHash); }
        internal static BOOL PAUSE_MENU_IS_CONTEXT_ACTIVE(Hash contextHash) { return NativeInvoker.Invoke<BOOL>(0x84698AB38D0C6636, (ulong)contextHash); }
        internal static BOOL PAUSE_MENU_IS_CONTEXT_MENU_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0x2A25ADC48F87841F); } // 0x2A25ADC48F87841F 0x016D7AF9 b323, (ulong)2A25ADC48F87841F); }
        internal static int N_0xDE03620F8703A9DF() { return NativeInvoker.Invoke<int>(0xDE03620F8703A9DF); } // 0xDE03620F8703A9DF b323, (ulong)DE03620F8703A9DF); }
        internal static int N_0x359AF31A4B52F5ED() { return NativeInvoker.Invoke<int>(0x359AF31A4B52F5ED); } // 0x359AF31A4B52F5ED b323, (ulong)359AF31A4B52F5ED); }
        internal static int N_0x13C4B962653A5280() { return NativeInvoker.Invoke<int>(0x13C4B962653A5280); } // 0x13C4B962653A5280 b323, (ulong)13C4B962653A5280); }
        internal static BOOL N_0xC8E1071177A23BE5(Any* p0, Any* p1, Any* p2) { return NativeInvoker.Invoke<BOOL>(0xC8E1071177A23BE5, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0x4895BDEA16E7C080(int p0) { NativeInvoker.Invoke(0x4895BDEA16E7C080, (ulong)p0); }
        internal static void PAUSE_MENU_SET_BUSY_SPINNER(BOOL p0, int p1, Any p2) { NativeInvoker.Invoke(0xC78E239AC5B2DDB9, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0xF06EBB91A81E09E3(BOOL p0) { NativeInvoker.Invoke(0xF06EBB91A81E09E3, (ulong)p0); }
        internal static BOOL IS_FRONTEND_READY_FOR_CONTROL() { return NativeInvoker.Invoke<BOOL>(0x3BAB9A4E4F2FF5C7); } // 0x3BAB9A4E4F2FF5C7 0xD3BF3ABD b323, (ulong)3BAB9A4E4F2FF5C7); }
        internal static void TAKE_CONTROL_OF_FRONTEND() { NativeInvoker.Invoke(0xEC9264727EEC0F28); } // 0xEC9264727EEC0F28 0xC06B763D b323<, (ulong)EC9264727EEC0F28); }
        internal static void RELEASE_CONTROL_OF_FRONTEND() { NativeInvoker.Invoke(0x14621BB1DF14E2B2); } // 0x14621BB1DF14E2B2 0xB9392CE7 b323<, (ulong)14621BB1DF14E2B2); }
        internal static BOOL N_0x66E7CB63C97B7D20() { return NativeInvoker.Invoke<BOOL>(0x66E7CB63C97B7D20); } // 0x66E7CB63C97B7D20 0x92DAFA78 b323, (ulong)66E7CB63C97B7D20); }
        internal static int N_0x593FEAE1F73392D4() { return NativeInvoker.Invoke<int>(0x593FEAE1F73392D4); } // 0x593FEAE1F73392D4 0x22CA9F2A b323, (ulong)593FEAE1F73392D4); }
        internal static BOOL IS_NAVIGATING_MENU_CONTENT() { return NativeInvoker.Invoke<BOOL>(0x4E3CD0EF8A489541); } // 0x4E3CD0EF8A489541 0xDA7951A2 b323, (ulong)4E3CD0EF8A489541); }
        internal static BOOL N_0xF284AC67940C6812() { return NativeInvoker.Invoke<BOOL>(0xF284AC67940C6812); } // 0xF284AC67940C6812 0x7D95AFFF b323, (ulong)F284AC67940C6812); }
        internal static BOOL N_0x2E22FEFA0100275E() { return NativeInvoker.Invoke<BOOL>(0x2E22FEFA0100275E); } // 0x2E22FEFA0100275E 0x96863460 b323, (ulong)2E22FEFA0100275E); }
        internal static void N_0x0CF54F20DE43879C(Any p0) { NativeInvoker.Invoke(0x0CF54F20DE43879C, (ulong)p0); }
        internal static void GET_PAUSE_MENU_SELECTION_(int* lastItemMenuId, int* selectedItemUniqueId) { NativeInvoker.Invoke(0x36C1451A88A09630, (ulong)lastItemMenuId, (ulong)selectedItemUniqueId); }
        internal static void GET_PAUSE_MENU_SELECTION_DATA_(int* lastItemMenuId, int* selectedItemMenuId, int* selectedItemUniqueId) { NativeInvoker.Invoke(0x7E17BE53E1AAABAF, (ulong)lastItemMenuId, (ulong)selectedItemMenuId, (ulong)selectedItemUniqueId); }
        internal static BOOL N_0xA238192F33110615(int* p0, int* p1, int* p2) { return NativeInvoker.Invoke<BOOL>(0xA238192F33110615, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL GET_MENU_PED_INT_STAT(Any p0, Any* p1) { return NativeInvoker.Invoke<BOOL>(0xEF4CED81CEBEDC6D, (ulong)p0, (ulong)p1); }
        internal static BOOL N_0xCA6B2F7CE32AB653(Any p0, Any* p1, Any p2) { return NativeInvoker.Invoke<BOOL>(0xCA6B2F7CE32AB653, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL GET_MENU_PED_MASKED_INT_STAT(Hash p0, Any* p1, Any p2, int p3) { return NativeInvoker.Invoke<BOOL>(0x90A6526CF0381030, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static BOOL N_0x24A49BEAF468DC90(Any p0, Any* p1, Any p2, Any p3, Any p4) { return NativeInvoker.Invoke<BOOL>(0x24A49BEAF468DC90, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static BOOL GET_MENU_PED_FLOAT_STAT(Any p0, float* p1) { return NativeInvoker.Invoke<BOOL>(0x5FBD7095FE7AE57F, (ulong)p0, (ulong)p1); }
        internal static BOOL N_0x8F08017F9D7C47BD(Any p0, Any* p1, Any p2) { return NativeInvoker.Invoke<BOOL>(0x8F08017F9D7C47BD, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL GET_MENU_PED_BOOL_STAT(Hash p0, Any* p1) { return NativeInvoker.Invoke<BOOL>(0x052991E59076E4E4, (ulong)p0, (ulong)p1); }
        internal static void CLEAR_PED_IN_PAUSE_MENU() { NativeInvoker.Invoke(0x5E62BE5DC58E9E06); } // 0x5E62BE5DC58E9E06 0x28058ACF b323<, (ulong)5E62BE5DC58E9E06); }
        internal static void GIVE_PED_TO_PAUSE_MENU(Ped ped, int p1) { NativeInvoker.Invoke(0xAC0BFBDC3BE00E14, (ulong)ped, (ulong)p1); }
        internal static void SET_PAUSE_MENU_PED_LIGHTING(BOOL state) { NativeInvoker.Invoke(0x3CA6050692BC61B0, (ulong)state); }
        internal static void SET_PAUSE_MENU_PED_SLEEP_STATE(BOOL state) { NativeInvoker.Invoke(0xECF128344E9FF9F1, (ulong)state); }
        internal static void OPEN_ONLINE_POLICIES_MENU() { NativeInvoker.Invoke(0x805D7CBB36FD6C4C); } // 0x805D7CBB36FD6C4C 0x19FCBBB2 b323<, (ulong)805D7CBB36FD6C4C); }
        internal static BOOL N_0xF13FE2A80C05C561() { return NativeInvoker.Invoke<BOOL>(0xF13FE2A80C05C561); } // 0xF13FE2A80C05C561 0x850690FF b323, (ulong)F13FE2A80C05C561); }
        internal static BOOL IS_ONLINE_POLICIES_MENU_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0x6F72CD94F7B5B68C); } // 0x6F72CD94F7B5B68C 0x9D4934F4 b323, (ulong)6F72CD94F7B5B68C); }
        internal static void OPEN_SOCIAL_CLUB_MENU() { NativeInvoker.Invoke(0x75D3691713C3B05A); } // 0x75D3691713C3B05A 0x57218529 b323<, (ulong)75D3691713C3B05A); }
        internal static void CLOSE_SOCIAL_CLUB_MENU() { NativeInvoker.Invoke(0xD2B32BE3FC1626C6); } // 0xD2B32BE3FC1626C6 0x5F86AA39 b323<, (ulong)D2B32BE3FC1626C6); }
        internal static void SET_SOCIAL_CLUB_TOUR(char* name) { NativeInvoker.Invoke(0x9E778248D6685FE0, (ulong)name); }
        internal static BOOL IS_SOCIAL_CLUB_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0xC406BE343FC4B9AF); } // 0xC406BE343FC4B9AF 0xD4DA14EF b323, (ulong)C406BE343FC4B9AF); }
        internal static void N_0x1185A8087587322C(BOOL p0) { NativeInvoker.Invoke(0x1185A8087587322C, (ulong)p0); }
        internal static void FORCE_CLOSE_TEXT_INPUT_BOX_() { NativeInvoker.Invoke(0x8817605C2BA76200); } // 0x8817605C2BA76200 b323<, (ulong)8817605C2BA76200); }
        internal static void N_0x577599CCED639CA2(Any p0) { NativeInvoker.Invoke(0x577599CCED639CA2, (ulong)p0); }
        internal static void OVERRIDE_MULTIPLAYER_CHAT_PREFIX_(Hash gxtEntryHash) { NativeInvoker.Invoke(0x6A1738B4323FE2D9, (ulong)gxtEntryHash); }
        internal static BOOL IS_MULTIPLAYER_CHAT_ACTIVE_() { return NativeInvoker.Invoke<BOOL>(0xB118AF58B5F332A1); } // 0xB118AF58B5F332A1 b323, (ulong)B118AF58B5F332A1); }
        internal static void CLOSE_MULTIPLAYER_CHAT_() { NativeInvoker.Invoke(0x1AC8F4AD40E22127); } // 0x1AC8F4AD40E22127 b323<, (ulong)1AC8F4AD40E22127); }
        internal static void N_0x7C226D5346D4D10A(Any p0) { NativeInvoker.Invoke(0x7C226D5346D4D10A, (ulong)p0); }
        internal static void OVERRIDE_MULTIPLAYER_CHAT_COLOUR_(int p0, int hudColor) { NativeInvoker.Invoke(0xF47E567B3630DD12, (ulong)p0, (ulong)hudColor); }
        internal static void SET_TEXT_CHAT_UNK_(BOOL p0) { NativeInvoker.Invoke(0x1DB21A44B09E8BA3, (ulong)p0); }
        internal static void FLAG_PLAYER_CONTEXT_IN_TOURNAMENT(BOOL toggle) { NativeInvoker.Invoke(0xCEF214315D276FD1, (ulong)toggle); }
        internal static void SET_PED_HAS_AI_BLIP(Ped ped, BOOL hasCone) { NativeInvoker.Invoke(0xD30C50DF888D58B5, (ulong)ped, (ulong)hasCone); }
        internal static void SET_PED_HAS_AI_BLIP_WITH_COLOR_(Ped ped, BOOL hasCone, int color) { NativeInvoker.Invoke(0xB13DCB4C6FAAD238, (ulong)ped, (ulong)hasCone, (ulong)color); }
        internal static BOOL DOES_PED_HAVE_AI_BLIP(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x15B8ECF844EE67ED, (ulong)ped); }
        internal static void SET_PED_AI_BLIP_GANG_ID(Ped ped, int gangId) { NativeInvoker.Invoke(0xE52B8E7F85D39A08, (ulong)ped, (ulong)gangId); }
        internal static void SET_PED_AI_BLIP_HAS_CONE(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x3EED80DFF7325CAA, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_AI_BLIP_FORCED_ON(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x0C4BBF625CA98C4E, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_AI_BLIP_NOTICE_RANGE(Ped ped, float range) { NativeInvoker.Invoke(0x97C65887D4B37FA9, (ulong)ped, *(uint*)&range); }
        internal static void SET_PED_AI_BLIP_SPRITE_(Ped ped, int spriteId) { NativeInvoker.Invoke(0xFCFACD0DB9D7A57D, (ulong)ped, (ulong)spriteId); }
        internal static Blip GET_AI_BLIP_2_(Ped ped) { return NativeInvoker.Invoke<Blip>(0x7CD934010E115C2C, (ulong)ped); }
        internal static Blip GET_AI_BLIP_(Ped ped) { return NativeInvoker.Invoke<Blip>(0x56176892826A4FE8, (ulong)ped); }
        internal static BOOL HAS_DIRECTOR_MODE_BEEN_TRIGGERED_() { return NativeInvoker.Invoke<BOOL>(0xA277800A9EAE340E); } // 0xA277800A9EAE340E b323, (ulong)A277800A9EAE340E); }
        internal static void SET_DIRECTOR_MODE_CLEAR_TRIGGERED_FLAG_() { NativeInvoker.Invoke(0x2632482FD6B9AB87); } // 0x2632482FD6B9AB87 b323<, (ulong)2632482FD6B9AB87); }
        internal static void SET_PLAYER_IS_IN_DIRECTOR_MODE_(BOOL toggle) { NativeInvoker.Invoke(0x808519373FD336A3, (ulong)toggle); }
        internal static void N_0x04655F9D075D0AE5(BOOL toggle) { NativeInvoker.Invoke(0x04655F9D075D0AE5, (ulong)toggle); }
        internal static void N_0x243296A510B562B6() { NativeInvoker.Invoke(0x243296A510B562B6); } // 0x243296A510B562B6 b2060<, (ulong)243296A510B562B6); }
    }

    internal static unsafe class INTERIOR
    {
        internal static float GET_INTERIOR_HEADING_(Interior interior) { return NativeInvoker.Invoke<float>(0xF49B58631D9E22D9, (ulong)interior); }
        internal static void GET_INTERIOR_INFO_(Interior interior, Vector3* position, Hash* nameHash) { NativeInvoker.Invoke(0x252BDC06B73FA6EA, (ulong)interior, (ulong)position, (ulong)nameHash); }
        internal static int GET_INTERIOR_GROUP_ID(Interior interior) { return NativeInvoker.Invoke<int>(0xE4A84ABF135EF91A, (ulong)interior); }
        internal static Vector3 GET_OFFSET_FROM_INTERIOR_IN_WORLD_COORDS(Interior interior, float x, float y, float z) { return NativeInvoker.Invoke<Vector3>(0x9E3B3E6D66F6E22F, (ulong)interior, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static BOOL IS_INTERIOR_SCENE() { return NativeInvoker.Invoke<BOOL>(0xBC72B5D7A1CBD54D); } // 0xBC72B5D7A1CBD54D 0x55226C13 b323, (ulong)BC72B5D7A1CBD54D); }
        internal static BOOL IS_VALID_INTERIOR(Interior interior) { return NativeInvoker.Invoke<BOOL>(0x26B0E73D7EAAF4D3, (ulong)interior); }
        internal static void CLEAR_ROOM_FOR_ENTITY(Entity entity) { NativeInvoker.Invoke(0xB365FC0C4E27FFA7, (ulong)entity); }
        internal static void FORCE_ROOM_FOR_ENTITY(Entity entity, Interior interior, Hash roomHashKey) { NativeInvoker.Invoke(0x52923C4710DD9907, (ulong)entity, (ulong)interior, (ulong)roomHashKey); }
        internal static Hash GET_ROOM_KEY_FROM_ENTITY(Entity entity) { return NativeInvoker.Invoke<Hash>(0x47C2A06D4F5F424B, (ulong)entity); }
        internal static Hash GET_KEY_FOR_ENTITY_IN_ROOM(Entity entity) { return NativeInvoker.Invoke<Hash>(0x399685DB942336BC, (ulong)entity); }
        internal static Interior GET_INTERIOR_FROM_ENTITY(Entity entity) { return NativeInvoker.Invoke<Interior>(0x2107BA504071A6BB, (ulong)entity); }
        internal static void N_0x82EBB79E258FA2B7(Entity entity, Interior interior) { NativeInvoker.Invoke(0x82EBB79E258FA2B7, (ulong)entity, (ulong)interior); }
        internal static void CLEAR_INTERIOR_FOR_ENTITY_(Entity entity) { NativeInvoker.Invoke(0x85D5422B2039A70D, (ulong)entity); }
        internal static void N_0x38C1CB1CB119A016(Any p0, Any p1) { NativeInvoker.Invoke(0x38C1CB1CB119A016, (ulong)p0, (ulong)p1); }
        internal static void FORCE_ROOM_FOR_GAME_VIEWPORT(int interiorID, Hash roomHashKey) { NativeInvoker.Invoke(0x920D853F3E17F1DA, (ulong)interiorID, (ulong)roomHashKey); }
        internal static void N_0xAF348AFCB575A441(char* roomName) { NativeInvoker.Invoke(0xAF348AFCB575A441, (ulong)roomName); }
        internal static void N_0x405DC2AEF6AF95B9(Hash roomHashKey) { NativeInvoker.Invoke(0x405DC2AEF6AF95B9, (ulong)roomHashKey); }
        internal static Hash GET_ROOM_KEY_FOR_GAME_VIEWPORT() { return NativeInvoker.Invoke<Hash>(0xA6575914D2A0B450); } // 0xA6575914D2A0B450 0x4FF3D3F5 b323, (ulong)A6575914D2A0B450); }
        internal static void CLEAR_ROOM_FOR_GAME_VIEWPORT() { NativeInvoker.Invoke(0x23B59D8912F94246); } // 0x23B59D8912F94246 0x617DC75D b323<, (ulong)23B59D8912F94246); }
        internal static Interior GET_INTERIOR_FROM_GAMEPLAY_CAM_() { return NativeInvoker.Invoke<Interior>(0xE7D267EC6CA966C3); } // 0xE7D267EC6CA966C3 b1604, (ulong)E7D267EC6CA966C3); }
        internal static Interior GET_INTERIOR_AT_COORDS(float x, float y, float z) { return NativeInvoker.Invoke<Interior>(0xB0F7F8663821D9C3, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void ADD_PICKUP_TO_INTERIOR_ROOM_BY_NAME(Pickup pickup, char* roomName) { NativeInvoker.Invoke(0x3F6167F351168730, (ulong)pickup, (ulong)roomName); }
        internal static void PIN_INTERIOR_IN_MEMORY(Interior interior) { NativeInvoker.Invoke(0x2CA429C029CCF247, (ulong)interior); }
        internal static void UNPIN_INTERIOR(Interior interior) { NativeInvoker.Invoke(0x261CCE7EED010641, (ulong)interior); }
        internal static BOOL IS_INTERIOR_READY(Interior interior) { return NativeInvoker.Invoke<BOOL>(0x6726BDCCC1932F0E, (ulong)interior); }
        internal static Any N_0x4C2330E61D3DEB56(Interior interior) { return NativeInvoker.Invoke<Any>(0x4C2330E61D3DEB56, (ulong)interior); }
        internal static Interior GET_INTERIOR_AT_COORDS_WITH_TYPE(float x, float y, float z, char* interiorType) { return NativeInvoker.Invoke<Interior>(0x05B7A89BD78797FC, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)interiorType); }
        internal static Interior GET_INTERIOR_AT_COORDS_WITH_TYPEHASH(float x, float y, float z, Hash typeHash) { return NativeInvoker.Invoke<Interior>(0xF0F77ADB9F67E79D, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)typeHash); }
        internal static void N_0x483ACA1176CA93F1() { NativeInvoker.Invoke(0x483ACA1176CA93F1); } // 0x483ACA1176CA93F1 b1103<, (ulong)483ACA1176CA93F1); }
        internal static BOOL IS_COLLISION_MARKED_OUTSIDE(float x, float y, float z) { return NativeInvoker.Invoke<BOOL>(0xEEA5AC2EDA7C33E8, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static int GET_INTERIOR_FROM_COLLISION(float x, float y, float z) { return NativeInvoker.Invoke<int>(0xEC4CF9FCB29A4424, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void N_0x7ECDF98587E92DEC(Any p0) { NativeInvoker.Invoke(0x7ECDF98587E92DEC, (ulong)p0); }
        internal static void ACTIVATE_INTERIOR_ENTITY_SET(Interior interior, char* entitySetName) { NativeInvoker.Invoke(0x55E86AF2712B36A1, (ulong)interior, (ulong)entitySetName); }
        internal static void DEACTIVATE_INTERIOR_ENTITY_SET(Interior interior, char* entitySetName) { NativeInvoker.Invoke(0x420BD37289EEE162, (ulong)interior, (ulong)entitySetName); }
        internal static BOOL IS_INTERIOR_ENTITY_SET_ACTIVE(Interior interior, char* entitySetName) { return NativeInvoker.Invoke<BOOL>(0x35F7DD45E8C0A16D, (ulong)interior, (ulong)entitySetName); }
        internal static void SET_INTERIOR_ENTITY_SET_COLOR_(Interior interior, char* entitySetName, int color) { NativeInvoker.Invoke(0xC1F1920BAF281317, (ulong)interior, (ulong)entitySetName, (ulong)color); }
        internal static void REFRESH_INTERIOR(Interior interior) { NativeInvoker.Invoke(0x41F37C3427C75AE0, (ulong)interior); }
        internal static void ENABLE_EXTERIOR_CULL_MODEL_THIS_FRAME(Hash mapObjectHash) { NativeInvoker.Invoke(0xA97F257D0151A6AB, (ulong)mapObjectHash); }
        internal static void ENABLE_SCRIPT_CULL_MODEL_THIS_FRAME_(Hash mapObjectHash) { NativeInvoker.Invoke(0x50C375537449F369, (ulong)mapObjectHash); }
        internal static void DISABLE_INTERIOR(Interior interior, BOOL toggle) { NativeInvoker.Invoke(0x6170941419D7D8EC, (ulong)interior, (ulong)toggle); }
        internal static BOOL IS_INTERIOR_DISABLED(Interior interior) { return NativeInvoker.Invoke<BOOL>(0xBC5115A5A939DD15, (ulong)interior); }
        internal static void CAP_INTERIOR(Interior interior, BOOL toggle) { NativeInvoker.Invoke(0xD9175F941610DB54, (ulong)interior, (ulong)toggle); }
        internal static BOOL IS_INTERIOR_CAPPED(Interior interior) { return NativeInvoker.Invoke<BOOL>(0x92BAC8ACF88CEC26, (ulong)interior); }
        internal static void N_0x9E6542F0CE8E70A3(BOOL toggle) { NativeInvoker.Invoke(0x9E6542F0CE8E70A3, (ulong)toggle); }
        internal static void N_0x7241CCB7D020DB69(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0x7241CCB7D020DB69, (ulong)entity, (ulong)toggle); }
    }

    internal static unsafe class ITEMSET
    {
        internal static Vehicle CREATE_ITEMSET(BOOL p0) { return NativeInvoker.Invoke<Vehicle>(0x35AD299F50D91B24, (ulong)p0); }
        internal static void DESTROY_ITEMSET(Any p0) { NativeInvoker.Invoke(0xDE18220B1C183EDA, (ulong)p0); }
        internal static BOOL IS_ITEMSET_VALID(Any p0) { return NativeInvoker.Invoke<BOOL>(0xB1B1EA596344DFAB, (ulong)p0); }
        internal static BOOL ADD_TO_ITEMSET(Any p0, Any p1) { return NativeInvoker.Invoke<BOOL>(0xE3945201F14637DD, (ulong)p0, (ulong)p1); }
        internal static void REMOVE_FROM_ITEMSET(Any p0, Any p1) { NativeInvoker.Invoke(0x25E68244B0177686, (ulong)p0, (ulong)p1); }
        internal static Any GET_ITEMSET_SIZE(ScrHandle x) { return NativeInvoker.Invoke<Any>(0xD9127E83ABF7C631, (ulong)x); }
        internal static Any GET_INDEXED_ITEM_IN_ITEMSET(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0x7A197E2521EE2BAB, (ulong)p0, (ulong)p1); }
        internal static BOOL IS_IN_ITEMSET(Any p0, Any p1) { return NativeInvoker.Invoke<BOOL>(0x2D0FC594D1E9C107, (ulong)p0, (ulong)p1); }
        internal static void CLEAN_ITEMSET(Any p0) { NativeInvoker.Invoke(0x41BC0D722FC04221, (ulong)p0); }
    }

    internal static unsafe class LOADINGSCREEN
    {
        internal static int N_0xF2CA003F167E21D2() { return NativeInvoker.Invoke<int>(0xF2CA003F167E21D2); } // 0xF2CA003F167E21D2 0x106C8317 b323, (ulong)F2CA003F167E21D2); }
        internal static BOOL LOADINGSCREEN_GET_LOAD_FREEMODE_() { return NativeInvoker.Invoke<BOOL>(0xEF7D17BC6C85264C); } // 0xEF7D17BC6C85264C 0xD87F3A9E b323, (ulong)EF7D17BC6C85264C); }
        internal static void LOADINGSCREEN_SET_LOAD_FREEMODE_(BOOL toggle) { NativeInvoker.Invoke(0xB0C56BD3D808D863, (ulong)toggle); }
        internal static BOOL LOADINGSCREEN_GET_LOAD_FREEMODE_WITH_EVENT_NAME_() { return NativeInvoker.Invoke<BOOL>(0x8AA464D4E0F6ACCD); } // 0x8AA464D4E0F6ACCD 0x94BCAC7C b323, (ulong)8AA464D4E0F6ACCD); }
        internal static void LOADINGSCREEN_SET_LOAD_FREEMODE_WITH_EVENT_NAME_(BOOL toggle) { NativeInvoker.Invoke(0xFC309E94546FCDB5, (ulong)toggle); }
        internal static BOOL LOADINGSCREEN_IS_LOADING_FREEMODE_() { return NativeInvoker.Invoke<BOOL>(0xC6DC823253FBB366); } // 0xC6DC823253FBB366 0x734CFEDA b323, (ulong)C6DC823253FBB366); }
        internal static void LOADINGSCREEN_SET_IS_LOADING_FREEMODE_(BOOL toggle) { NativeInvoker.Invoke(0xC7E7181C09F33B69, (ulong)toggle); }
        internal static void N_0xFA1E0E893D915215(BOOL toggle) { NativeInvoker.Invoke(0xFA1E0E893D915215, (ulong)toggle); }
    }

    internal static unsafe class LOCALIZATION
    {
        internal static int LOCALIZATION_GET_SYSTEM_LANGUAGE_() { return NativeInvoker.Invoke<int>(0x497420E022796B3F); } // 0x497420E022796B3F b877, (ulong)497420E022796B3F); }
        internal static int GET_CURRENT_LANGUAGE() { return NativeInvoker.Invoke<int>(0x2BDD44CC428A7EAE); } // 0x2BDD44CC428A7EAE 0x761BE00B b323, (ulong)2BDD44CC428A7EAE); }
        internal static int LOCALIZATION_GET_SYSTEM_DATE_FORMAT_() { return NativeInvoker.Invoke<int>(0xA8AE43AEC1A61314); } // 0xA8AE43AEC1A61314 b323, (ulong)A8AE43AEC1A61314); }
    }

    internal static unsafe class MISC
    {
        internal static int GET_ALLOCATED_STACK_SIZE() { return NativeInvoker.Invoke<int>(0x8B3CA62B1EF19B62); } // 0x8B3CA62B1EF19B62 0x4E9CA30A b323, (ulong)8B3CA62B1EF19B62); }
        internal static int GET_NUMBER_OF_FREE_STACKS_OF_THIS_SIZE(int stackSize) { return NativeInvoker.Invoke<int>(0xFEAD16FC8F9DFC0F, (ulong)stackSize); }
        internal static void SET_RANDOM_SEED(int seed) { NativeInvoker.Invoke(0x444D98F98C11F3EC, (ulong)seed); }
        internal static void SET_TIME_SCALE(float timeScale) { NativeInvoker.Invoke(0x1D408577D440E81E, *(uint*)&timeScale); }
        internal static void SET_MISSION_FLAG(BOOL toggle) { NativeInvoker.Invoke(0xC4301E5121A0ED73, (ulong)toggle); }
        internal static BOOL GET_MISSION_FLAG() { return NativeInvoker.Invoke<BOOL>(0xA33CDCCDA663159E); } // 0xA33CDCCDA663159E 0x95115F97 b323, (ulong)A33CDCCDA663159E); }
        internal static void SET_RANDOM_EVENT_FLAG(BOOL toggle) { NativeInvoker.Invoke(0x971927086CFD2158, (ulong)toggle); }
        internal static BOOL GET_RANDOM_EVENT_FLAG() { return NativeInvoker.Invoke<BOOL>(0xD2D57F1D764117B1); } // 0xD2D57F1D764117B1 0x794CC92C b323, (ulong)D2D57F1D764117B1); }
        internal static char* GET_GLOBAL_CHAR_BUFFER_() { return (char*)NativeInvoker.Invoke<IntPtr>(0x24DA7D7667FD7B09); } // 0x24DA7D7667FD7B09 b323, (ulong)24DA7D7667FD7B09); }
        internal static void N_0x4DCDF92BF64236CD(char* p0, char* p1) { NativeInvoker.Invoke(0x4DCDF92BF64236CD, (ulong)p0, (ulong)p1); }
        internal static void N_0x31125FD509D9043F(char* p0) { NativeInvoker.Invoke(0x31125FD509D9043F, (ulong)p0); }
        internal static void N_0xEBD3205A207939ED(char* p0) { NativeInvoker.Invoke(0xEBD3205A207939ED, (ulong)p0); }
        internal static void N_0x97E7E2C04245115B(Any p0) { NativeInvoker.Invoke(0x97E7E2C04245115B, (ulong)p0); }
        internal static void N_0x916CA67D26FD1E37(char* p0) { NativeInvoker.Invoke(0x916CA67D26FD1E37, (ulong)p0); }
        internal static void N_0xEB078CA2B5E82ADD(char* p0, char* p1) { NativeInvoker.Invoke(0xEB078CA2B5E82ADD, (ulong)p0, (ulong)p1); }
        internal static void N_0x703CC7F60CBB2B57(char* p0) { NativeInvoker.Invoke(0x703CC7F60CBB2B57, (ulong)p0); }
        internal static void N_0x8951EB9C6906D3C8() { NativeInvoker.Invoke(0x8951EB9C6906D3C8); } // 0x8951EB9C6906D3C8 b323<, (ulong)8951EB9C6906D3C8); }
        internal static void N_0xBA4B8D83BDC75551(char* p0) { NativeInvoker.Invoke(0xBA4B8D83BDC75551, (ulong)p0); }
        internal static BOOL HAS_RESUMED_FROM_SUSPEND_() { return NativeInvoker.Invoke<BOOL>(0xE8B9C0EC9E183F35); } // 0xE8B9C0EC9E183F35 b323, (ulong)E8B9C0EC9E183F35); }
        internal static void N_0x65D2EBB47E1CEC21(BOOL toggle) { NativeInvoker.Invoke(0x65D2EBB47E1CEC21, (ulong)toggle); }
        internal static void N_0x6F2135B6129620C1(BOOL toggle) { NativeInvoker.Invoke(0x6F2135B6129620C1, (ulong)toggle); }
        internal static void N_0x8D74E26F54B4E5C3(char* p0) { NativeInvoker.Invoke(0x8D74E26F54B4E5C3, (ulong)p0); }
        internal static BOOL GET_BASE_ELEMENT_METADATA_(Any* p0, Any* p1, Any p2, BOOL p3) { return NativeInvoker.Invoke<BOOL>(0xB335F761606DB47C, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static Hash GET_PREV_WEATHER_TYPE_HASH_NAME() { return NativeInvoker.Invoke<Hash>(0x564B884A05EC45A3); } // 0x564B884A05EC45A3 0xA8171E9E b323, (ulong)564B884A05EC45A3); }
        internal static Hash GET_NEXT_WEATHER_TYPE_HASH_NAME() { return NativeInvoker.Invoke<Hash>(0x711327CD09C8F162); } // 0x711327CD09C8F162 0x353E8056 b323, (ulong)711327CD09C8F162); }
        internal static BOOL IS_PREV_WEATHER_TYPE(char* weatherType) { return NativeInvoker.Invoke<BOOL>(0x44F28F86433B10A9, (ulong)weatherType); }
        internal static BOOL IS_NEXT_WEATHER_TYPE(char* weatherType) { return NativeInvoker.Invoke<BOOL>(0x2FAA3A30BEC0F25D, (ulong)weatherType); }
        internal static void SET_WEATHER_TYPE_PERSIST(char* weatherType) { NativeInvoker.Invoke(0x704983DF373B198F, (ulong)weatherType); }
        internal static void SET_WEATHER_TYPE_NOW_PERSIST(char* weatherType) { NativeInvoker.Invoke(0xED712CA327900C8A, (ulong)weatherType); }
        internal static void SET_WEATHER_TYPE_NOW(char* weatherType) { NativeInvoker.Invoke(0x29B487C359E19889, (ulong)weatherType); }
        internal static void SET_WEATHER_TYPE_OVERTIME_PERSIST(char* weatherType, float time) { NativeInvoker.Invoke(0xFB5045B7C42B75BF, (ulong)weatherType, *(uint*)&time); }
        internal static void SET_RANDOM_WEATHER_TYPE() { NativeInvoker.Invoke(0x8B05F884CF7E8020); } // 0x8B05F884CF7E8020 0xE7AA1BC9 b323<, (ulong)8B05F884CF7E8020); }
        internal static void CLEAR_WEATHER_TYPE_PERSIST() { NativeInvoker.Invoke(0xCCC39339BEF76CF5); } // 0xCCC39339BEF76CF5 0x6AB757D8 b323<, (ulong)CCC39339BEF76CF5); }
        internal static void N_0x0CF97F497FE7D048(float p0) { NativeInvoker.Invoke(0x0CF97F497FE7D048, *(uint*)&p0); }
        internal static void GET_WEATHER_TYPE_TRANSITION_(Hash* weatherType1, Hash* weatherType2, float* percentWeather2) { NativeInvoker.Invoke(0xF3BBE884A14BB413, (ulong)weatherType1, (ulong)weatherType2, (ulong)percentWeather2); }
        internal static void SET_WEATHER_TYPE_TRANSITION_(Hash weatherType1, Hash weatherType2, float percentWeather2) { NativeInvoker.Invoke(0x578C752848ECFA0C, (ulong)weatherType1, (ulong)weatherType2, *(uint*)&percentWeather2); }
        internal static void SET_OVERRIDE_WEATHER(char* weatherType) { NativeInvoker.Invoke(0xA43D5C6FE51ADBEF, (ulong)weatherType); }
        internal static void N_0x1178E104409FE58C(Any p0, Any p1) { NativeInvoker.Invoke(0x1178E104409FE58C, (ulong)p0, (ulong)p1); }
        internal static void CLEAR_OVERRIDE_WEATHER() { NativeInvoker.Invoke(0x338D2E3477711050); } // 0x338D2E3477711050 0x7740EA4E b323<, (ulong)338D2E3477711050); }
        internal static void WATER_OVERRIDE_SET_SHOREWAVEAMPLITUDE(float amplitude) { NativeInvoker.Invoke(0xB8F87EAD7533B176, *(uint*)&amplitude); }
        internal static void WATER_OVERRIDE_SET_SHOREWAVEMINAMPLITUDE(float minAmplitude) { NativeInvoker.Invoke(0xC3EAD29AB273ECE8, *(uint*)&minAmplitude); }
        internal static void WATER_OVERRIDE_SET_SHOREWAVEMAXAMPLITUDE(float maxAmplitude) { NativeInvoker.Invoke(0xA7A1127490312C36, *(uint*)&maxAmplitude); }
        internal static void WATER_OVERRIDE_SET_OCEANNOISEMINAMPLITUDE(float minAmplitude) { NativeInvoker.Invoke(0x31727907B2C43C55, *(uint*)&minAmplitude); }
        internal static void WATER_OVERRIDE_SET_OCEANWAVEAMPLITUDE(float amplitude) { NativeInvoker.Invoke(0x405591EC8FD9096D, *(uint*)&amplitude); }
        internal static void WATER_OVERRIDE_SET_OCEANWAVEMINAMPLITUDE(float minAmplitude) { NativeInvoker.Invoke(0xF751B16FB32ABC1D, *(uint*)&minAmplitude); }
        internal static void WATER_OVERRIDE_SET_OCEANWAVEMAXAMPLITUDE(float maxAmplitude) { NativeInvoker.Invoke(0xB3E6360DDE733E82, *(uint*)&maxAmplitude); }
        internal static void WATER_OVERRIDE_SET_RIPPLEBUMPINESS(float bumpiness) { NativeInvoker.Invoke(0x7C9C0B1EEB1F9072, *(uint*)&bumpiness); }
        internal static void WATER_OVERRIDE_SET_RIPPLEMINBUMPINESS(float minBumpiness) { NativeInvoker.Invoke(0x6216B116083A7CB4, *(uint*)&minBumpiness); }
        internal static void WATER_OVERRIDE_SET_RIPPLEMAXBUMPINESS(float maxBumpiness) { NativeInvoker.Invoke(0x9F5E6BB6B34540DA, *(uint*)&maxBumpiness); }
        internal static void WATER_OVERRIDE_SET_RIPPLEDISTURB(float disturb) { NativeInvoker.Invoke(0xB9854DFDE0D833D6, *(uint*)&disturb); }
        internal static void WATER_OVERRIDE_SET_STRENGTH(float strength) { NativeInvoker.Invoke(0xC54A08C85AE4D410, *(uint*)&strength); }
        internal static void WATER_OVERRIDE_FADE_IN(float p0) { NativeInvoker.Invoke(0xA8434F1DFF41D6E7, *(uint*)&p0); }
        internal static void WATER_OVERRIDE_FADE_OUT(float p0) { NativeInvoker.Invoke(0xC3C221ADDDE31A11, *(uint*)&p0); }
        internal static void SET_WIND(float speed) { NativeInvoker.Invoke(0xAC3A74E8384A9919, *(uint*)&speed); }
        internal static void SET_WIND_SPEED(float speed) { NativeInvoker.Invoke(0xEE09ECEDBABE47FC, *(uint*)&speed); }
        internal static float GET_WIND_SPEED() { return NativeInvoker.Invoke<float>(0xA8CF1CC0AFCD3F12); } // 0xA8CF1CC0AFCD3F12 0x098F0F3C b323, (ulong)A8CF1CC0AFCD3F12); }
        internal static void SET_WIND_DIRECTION(float direction) { NativeInvoker.Invoke(0xEB0F4468467B4528, *(uint*)&direction); }
        internal static Vector3 GET_WIND_DIRECTION() { return NativeInvoker.Invoke<Vector3>(0x1F400FEF721170DA); } // 0x1F400FEF721170DA 0x89499A0D b323, (ulong)1F400FEF721170DA); }
        internal static void SET_RAIN_LEVEL_(float intensity) { NativeInvoker.Invoke(0x643E26EA6E024D92, *(uint*)&intensity); }
        internal static float GET_RAIN_LEVEL() { return NativeInvoker.Invoke<float>(0x96695E368AD855F3); } // 0x96695E368AD855F3 0xC9F67F28 b323, (ulong)96695E368AD855F3); }
        internal static void SET_SNOW_LEVEL_(float level) { NativeInvoker.Invoke(0x7F06937B0CDCBC1A, *(uint*)&level); }
        internal static float GET_SNOW_LEVEL() { return NativeInvoker.Invoke<float>(0xC5868A966E5BE3AE); } // 0xC5868A966E5BE3AE 0x1B09184F b323, (ulong)C5868A966E5BE3AE); }
        internal static void FORCE_LIGHTNING_FLASH() { NativeInvoker.Invoke(0xF6062E089251C898); } // 0xF6062E089251C898 0xDF38165E b323<, (ulong)F6062E089251C898); }
        internal static void N_0x02DEAAC8F8EA7FE7(char* p0) { NativeInvoker.Invoke(0x02DEAAC8F8EA7FE7, (ulong)p0); }
        internal static void PRELOAD_CLOUD_HAT(char* name) { NativeInvoker.Invoke(0x11B56FBBF7224868, (ulong)name); }
        internal static void LOAD_CLOUD_HAT(char* name, float transitionTime) { NativeInvoker.Invoke(0xFC4842A34657BFCB, (ulong)name, *(uint*)&transitionTime); }
        internal static void UNLOAD_CLOUD_HAT(char* name, float p1) { NativeInvoker.Invoke(0xA74802FB8D0B7814, (ulong)name, *(uint*)&p1); }
        internal static void CLEAR_CLOUD_HAT_() { NativeInvoker.Invoke(0x957E790EA1727B64); } // 0x957E790EA1727B64 0x2D7787BC b323<, (ulong)957E790EA1727B64); }
        internal static void SET_CLOUD_HAT_OPACITY_(float opacity) { NativeInvoker.Invoke(0xF36199225D6D8C86, *(uint*)&opacity); }
        internal static float GET_CLOUD_HAT_OPACITY_() { return NativeInvoker.Invoke<float>(0x20AC25E781AE4A84); } // 0x20AC25E781AE4A84 b323, (ulong)20AC25E781AE4A84); }
        internal static int GET_GAME_TIMER() { return NativeInvoker.Invoke<int>(0x9CD27B0045628463); } // 0x9CD27B0045628463 0xA4EA0691 b323, (ulong)9CD27B0045628463); }
        internal static float GET_FRAME_TIME() { return NativeInvoker.Invoke<float>(0x15C40837039FFAF7); } // 0x15C40837039FFAF7 0x96374262 b323, (ulong)15C40837039FFAF7); }
        internal static float GET_BENCHMARK_TIME_() { return NativeInvoker.Invoke<float>(0xE599A503B3837E1B); } // 0xE599A503B3837E1B b323, (ulong)E599A503B3837E1B); }
        internal static int GET_FRAME_COUNT() { return NativeInvoker.Invoke<int>(0xFC8202EFC642E6F2); } // 0xFC8202EFC642E6F2 0xB477A015 b323, (ulong)FC8202EFC642E6F2); }
        internal static float GET_RANDOM_FLOAT_IN_RANGE(float startRange, float endRange) { return NativeInvoker.Invoke<float>(0x313CE5879CEB6FCD, *(uint*)&startRange, *(uint*)&endRange); }
        internal static int GET_RANDOM_INT_IN_RANGE(int startRange, int endRange) { return NativeInvoker.Invoke<int>(0xD53343AA4FB7DD28, (ulong)startRange, (ulong)endRange); }
        internal static int GET_RANDOM_INT_IN_RANGE_2_(int startRange, int endRange) { return NativeInvoker.Invoke<int>(0xF2D49816A804D134, (ulong)startRange, (ulong)endRange); }
        internal static BOOL GET_GROUND_Z_FOR_3D_COORD(float x, float y, float z, float* groundZ, BOOL ignoreWater, BOOL p5) { return NativeInvoker.Invoke<BOOL>(0xC906A7DAB05C8D2B, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)groundZ, (ulong)ignoreWater, (ulong)p5); }
        internal static BOOL GET_GROUND_Z_AND_NORMAL_FOR_3D_COORD(float x, float y, float z, float* groundZ, Vector3* normal) { return NativeInvoker.Invoke<BOOL>(0x8BDC7BFC57A81E76, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)groundZ, (ulong)normal); }
        internal static BOOL GET_GROUND_Z_FOR_3D_COORD_2_(float x, float y, float z, float* groundZ, BOOL p4, BOOL p5) { return NativeInvoker.Invoke<BOOL>(0x9E82F0F362881B29, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)groundZ, (ulong)p4, (ulong)p5); }
        internal static float ASIN(float p0) { return NativeInvoker.Invoke<float>(0xC843060B5765DCE7, *(uint*)&p0); }
        internal static float ACOS(float p0) { return NativeInvoker.Invoke<float>(0x1D08B970013C34B6, *(uint*)&p0); }
        internal static float TAN(float p0) { return NativeInvoker.Invoke<float>(0x632106CC96E82E91, *(uint*)&p0); }
        internal static float ATAN(float p0) { return NativeInvoker.Invoke<float>(0xA9D1795CD5043663, *(uint*)&p0); }
        internal static float ATAN2(float p0, float p1) { return NativeInvoker.Invoke<float>(0x8927CBF9D22261A4, *(uint*)&p0, *(uint*)&p1); }
        internal static float GET_DISTANCE_BETWEEN_COORDS(float x1, float y1, float z1, float x2, float y2, float z2, BOOL useZ) { return NativeInvoker.Invoke<float>(0xF1B760881820C952, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)useZ); }
        internal static float GET_ANGLE_BETWEEN_2D_VECTORS(float x1, float y1, float x2, float y2) { return NativeInvoker.Invoke<float>(0x186FC4BE848E1C92, *(uint*)&x1, *(uint*)&y1, *(uint*)&x2, *(uint*)&y2); }
        internal static float GET_HEADING_FROM_VECTOR_2D(float dx, float dy) { return NativeInvoker.Invoke<float>(0x2FFB6B224F4B2926, *(uint*)&dx, *(uint*)&dy); }
        internal static float N_0x7F8F6405F4777AF6(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, BOOL p9) { return NativeInvoker.Invoke<float>(0x7F8F6405F4777AF6, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, *(uint*)&p7, *(uint*)&p8, (ulong)p9); }
        internal static Vector3 N_0x21C235BC64831E5A(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, BOOL p9) { return NativeInvoker.Invoke<Vector3>(0x21C235BC64831E5A, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, *(uint*)&p7, *(uint*)&p8, (ulong)p9); }
        internal static BOOL N_0xF56DFB7B61BE7276(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float* p12) { return NativeInvoker.Invoke<BOOL>(0xF56DFB7B61BE7276, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, *(uint*)&p7, *(uint*)&p8, *(uint*)&p9, *(uint*)&p10, *(uint*)&p11, (ulong)p12); }
        internal static Any N_0xA0AD167E4B39D9A2(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9, Any p10, Any p11, Any p12, Any p13) { return NativeInvoker.Invoke<Any>(0xA0AD167E4B39D9A2, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9, (ulong)p10, (ulong)p11, (ulong)p12, (ulong)p13); }
        internal static void SET_BIT(int* address, int offset) { NativeInvoker.Invoke(0x933D6A9EEC1BACD0, (ulong)address, (ulong)offset); }
        internal static void CLEAR_BIT(int* address, int offset) { NativeInvoker.Invoke(0xE80492A9AC099A93, (ulong)address, (ulong)offset); }
        internal static Hash GET_HASH_KEY(char* @string) { return NativeInvoker.Invoke<Hash>(0xD24D37CC275948CC, (ulong)@string); }
        internal static void SLERP_NEAR_QUATERNION(float t, float x, float y, float z, float w, float x1, float y1, float z1, float w1, float* outX, float* outY, float* outZ, float* outW) { NativeInvoker.Invoke(0xF2F6A2FA49278625, *(uint*)&t, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&w, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&w1, (ulong)outX, (ulong)outY, (ulong)outZ, (ulong)outW); }
        internal static BOOL IS_AREA_OCCUPIED(float p0, float p1, float p2, float p3, float p4, float p5, BOOL p6, BOOL p7, BOOL p8, BOOL p9, BOOL p10, Any p11, BOOL p12) { return NativeInvoker.Invoke<BOOL>(0xA61B4DF533DCB56E, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9, (ulong)p10, (ulong)p11, (ulong)p12); }
        internal static Any N_0x39455BF4F4F55186(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9, Any p10, Any p11, Any p12) { return NativeInvoker.Invoke<Any>(0x39455BF4F4F55186, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9, (ulong)p10, (ulong)p11, (ulong)p12); }
        internal static BOOL IS_POSITION_OCCUPIED(float x, float y, float z, float range, BOOL p4, BOOL checkVehicles, BOOL checkPeds, BOOL p7, BOOL p8, Entity ignoreEntity, BOOL p10) { return NativeInvoker.Invoke<BOOL>(0xADCDE75E1C60F32D, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&range, (ulong)p4, (ulong)checkVehicles, (ulong)checkPeds, (ulong)p7, (ulong)p8, (ulong)ignoreEntity, (ulong)p10); }
        internal static BOOL IS_POINT_OBSCURED_BY_A_MISSION_ENTITY(float p0, float p1, float p2, float p3, float p4, float p5, Any p6) { return NativeInvoker.Invoke<BOOL>(0xE54E209C35FFA18D, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, (ulong)p6); }
        internal static void CLEAR_AREA(float X, float Y, float Z, float radius, BOOL p4, BOOL ignoreCopCars, BOOL ignoreObjects, BOOL p7) { NativeInvoker.Invoke(0xA56F01F3765B93A0, *(uint*)&X, *(uint*)&Y, *(uint*)&Z, *(uint*)&radius, (ulong)p4, (ulong)ignoreCopCars, (ulong)ignoreObjects, (ulong)p7); }
        internal static void CLEAR_AREA_LEAVE_VEHICLE_HEALTH(float x, float y, float z, float radius, BOOL p4, BOOL p5, BOOL p6, BOOL p7) { NativeInvoker.Invoke(0x957838AAF91BD12D, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7); }
        internal static void CLEAR_AREA_OF_VEHICLES(float x, float y, float z, float radius, BOOL p4, BOOL p5, BOOL p6, BOOL p7, BOOL p8, BOOL p9) { NativeInvoker.Invoke(0x01C7B9B38428AEB6, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9); }
        internal static void CLEAR_ANGLED_AREA_OF_VEHICLES(float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL p7, BOOL p8, BOOL p9, BOOL p10, BOOL p11, Any p12) { NativeInvoker.Invoke(0x11DB3500F042A8AA, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&width, (ulong)p7, (ulong)p8, (ulong)p9, (ulong)p10, (ulong)p11, (ulong)p12); }
        internal static void CLEAR_AREA_OF_OBJECTS(float x, float y, float z, float radius, int flags) { NativeInvoker.Invoke(0xDD9B9B385AAC7F5B, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)flags); }
        internal static void CLEAR_AREA_OF_PEDS(float x, float y, float z, float radius, int flags) { NativeInvoker.Invoke(0xBE31FD6CE464AC59, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)flags); }
        internal static void CLEAR_AREA_OF_COPS(float x, float y, float z, float radius, int flags) { NativeInvoker.Invoke(0x04F8FC8FCF58F88D, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)flags); }
        internal static void CLEAR_AREA_OF_PROJECTILES(float x, float y, float z, float radius, int flags) { NativeInvoker.Invoke(0x0A1CB9094635D1A6, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)flags); }
        internal static void N_0x7EC6F9A478A6A512() { NativeInvoker.Invoke(0x7EC6F9A478A6A512); } // 0x7EC6F9A478A6A512 b323<, (ulong)7EC6F9A478A6A512); }
        internal static void SET_SAVE_MENU_ACTIVE(BOOL ignoreVehicle) { NativeInvoker.Invoke(0xC9BF75D28165FF77, (ulong)ignoreVehicle); }
        internal static int N_0x397BAA01068BAA96() { return NativeInvoker.Invoke<int>(0x397BAA01068BAA96); } // 0x397BAA01068BAA96 0x39771F21 b323, (ulong)397BAA01068BAA96); }
        internal static void SET_CREDITS_ACTIVE(BOOL toggle) { NativeInvoker.Invoke(0xB938B7E6D3C0620C, (ulong)toggle); }
        internal static void N_0xB51B9AB9EF81868C(BOOL toggle) { NativeInvoker.Invoke(0xB51B9AB9EF81868C, (ulong)toggle); }
        internal static BOOL HAVE_CREDITS_REACHED_END() { return NativeInvoker.Invoke<BOOL>(0x075F1D57402C93BA); } // 0x075F1D57402C93BA 0x2569C9A7 b323, (ulong)075F1D57402C93BA); }
        internal static void TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME(char* scriptName) { NativeInvoker.Invoke(0x9DC711BC69C548DF, (ulong)scriptName); }
        internal static void NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME() { NativeInvoker.Invoke(0x9243BAC96D64C050); } // 0x9243BAC96D64C050 0x878486CE b323<, (ulong)9243BAC96D64C050); }
        internal static int ADD_HOSPITAL_RESTART(float x, float y, float z, float p3, Any p4) { return NativeInvoker.Invoke<int>(0x1F464EF988465A81, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&p3, (ulong)p4); }
        internal static void DISABLE_HOSPITAL_RESTART(int hospitalIndex, BOOL toggle) { NativeInvoker.Invoke(0xC8535819C450EBA8, (ulong)hospitalIndex, (ulong)toggle); }
        internal static Any ADD_POLICE_RESTART(float p0, float p1, float p2, float p3, Any p4) { return NativeInvoker.Invoke<Any>(0x452736765B31FC4B, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, (ulong)p4); }
        internal static void DISABLE_POLICE_RESTART(int policeIndex, BOOL toggle) { NativeInvoker.Invoke(0x23285DED6EBD7EA3, (ulong)policeIndex, (ulong)toggle); }
        internal static void SET_RESTART_CUSTOM_POSITION_(float x, float y, float z, float heading) { NativeInvoker.Invoke(0x706B5EDCAA7FA663, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&heading); }
        internal static void CLEAR_RESTART_CUSTOM_POSITION_() { NativeInvoker.Invoke(0xA2716D40842EAF79); } // 0xA2716D40842EAF79 b323<, (ulong)A2716D40842EAF79); }
        internal static void PAUSE_DEATH_ARREST_RESTART(BOOL toggle) { NativeInvoker.Invoke(0x2C2B3493FBF51C71, (ulong)toggle); }
        internal static void IGNORE_NEXT_RESTART(BOOL toggle) { NativeInvoker.Invoke(0x21FFB63D8C615361, (ulong)toggle); }
        internal static void SET_FADE_OUT_AFTER_DEATH(BOOL toggle) { NativeInvoker.Invoke(0x4A18E01DF2C87B86, (ulong)toggle); }
        internal static void SET_FADE_OUT_AFTER_ARREST(BOOL toggle) { NativeInvoker.Invoke(0x1E0B4DC0D990A4E7, (ulong)toggle); }
        internal static void SET_FADE_IN_AFTER_DEATH_ARREST(BOOL toggle) { NativeInvoker.Invoke(0xDA66D2796BA33F12, (ulong)toggle); }
        internal static void SET_FADE_IN_AFTER_LOAD(BOOL toggle) { NativeInvoker.Invoke(0xF3D78F59DFE18D79, (ulong)toggle); }
        internal static Any REGISTER_SAVE_HOUSE(float p0, float p1, float p2, float p3, Any* p4, Any p5, Any p6) { return NativeInvoker.Invoke<Any>(0xC0714D0A7EEECA54, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static void SET_SAVE_HOUSE(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x4F548CABEAE553BC, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL OVERRIDE_SAVE_HOUSE(BOOL p0, float p1, float p2, float p3, float p4, BOOL p5, float p6, float p7) { return NativeInvoker.Invoke<BOOL>(0x1162EA8AE9D24EEA, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, (ulong)p5, *(uint*)&p6, *(uint*)&p7); }
        internal static BOOL N_0xA4A0065E39C9F25C(Vector3* p0, float* p1, BOOL* fadeInAfterLoad, BOOL* p3) { return NativeInvoker.Invoke<BOOL>(0xA4A0065E39C9F25C, (ulong)p0, (ulong)p1, (ulong)fadeInAfterLoad, (ulong)p3); }
        internal static void DO_AUTO_SAVE() { NativeInvoker.Invoke(0x50EEAAD86232EE55); } // 0x50EEAAD86232EE55 0x54C44B1A b323<, (ulong)50EEAAD86232EE55); }
        internal static BOOL GET_IS_AUTO_SAVE_OFF() { return NativeInvoker.Invoke<BOOL>(0x6E04F06094C87047); } // 0x6E04F06094C87047 0xA8546914 b323, (ulong)6E04F06094C87047); }
        internal static BOOL IS_AUTO_SAVE_IN_PROGRESS() { return NativeInvoker.Invoke<BOOL>(0x69240733738C19A0); } // 0x69240733738C19A0 0x36F75399 b323, (ulong)69240733738C19A0); }
        internal static BOOL HAS_CODE_REQUESTED_AUTOSAVE() { return NativeInvoker.Invoke<BOOL>(0x2107A3773771186D); } // 0x2107A3773771186D 0x78350773 b323, (ulong)2107A3773771186D); }
        internal static void CLEAR_CODE_REQUESTED_AUTOSAVE() { NativeInvoker.Invoke(0x06462A961E94B67C); } // 0x06462A961E94B67C 0x5A45B11A b323<, (ulong)06462A961E94B67C); }
        internal static void BEGIN_REPLAY_STATS(Any p0, Any p1) { NativeInvoker.Invoke(0xE0E500246FF73D66, (ulong)p0, (ulong)p1); }
        internal static void ADD_REPLAY_STAT_VALUE(Any value) { NativeInvoker.Invoke(0x69FE6DC87BD2A5E9, (ulong)value); }
        internal static void END_REPLAY_STATS() { NativeInvoker.Invoke(0xA23E821FBDF8A5F2); } // 0xA23E821FBDF8A5F2 0xCB570185 b323<, (ulong)A23E821FBDF8A5F2); }
        internal static Any HAVE_REPLAY_STATS_BEEN_STORED() { return NativeInvoker.Invoke<Any>(0xD642319C54AADEB6); } // 0xD642319C54AADEB6 0xC58250F1 b323, (ulong)D642319C54AADEB6); }
        internal static Any GET_REPLAY_STAT_MISSION_ID() { return NativeInvoker.Invoke<Any>(0x5B1F2E327B6B6FE1); } // 0x5B1F2E327B6B6FE1 0x50C39926 b323, (ulong)5B1F2E327B6B6FE1); }
        internal static int GET_REPLAY_STAT_MISSION_TYPE() { return NativeInvoker.Invoke<int>(0x2B626A0150E4D449); } // 0x2B626A0150E4D449 0x710E5D1E b323, (ulong)2B626A0150E4D449); }
        internal static int GET_REPLAY_STAT_COUNT() { return NativeInvoker.Invoke<int>(0xDC9274A7EF6B2867); } // 0xDC9274A7EF6B2867 0xC7BD1AF0 b323, (ulong)DC9274A7EF6B2867); }
        internal static int GET_REPLAY_STAT_AT_INDEX(int index) { return NativeInvoker.Invoke<int>(0x8098C8D6597AAE18, (ulong)index); }
        internal static void CLEAR_REPLAY_STATS() { NativeInvoker.Invoke(0x1B1AB132A16FDA55); } // 0x1B1AB132A16FDA55 0xC47DFF02 b323<, (ulong)1B1AB132A16FDA55); }
        internal static BOOL QUEUE_MISSION_REPEAT_LOAD() { return NativeInvoker.Invoke<BOOL>(0x72DE52178C291CB5); } // 0x72DE52178C291CB5 0xF62B3C48 b323, (ulong)72DE52178C291CB5); }
        internal static BOOL QUEUE_MISSION_REPEAT_SAVE() { return NativeInvoker.Invoke<BOOL>(0x44A0BDC559B35F6E); } // 0x44A0BDC559B35F6E 0x3589452B b323, (ulong)44A0BDC559B35F6E); }
        internal static Any N_0xEB2104E905C6F2E9() { return NativeInvoker.Invoke<Any>(0xEB2104E905C6F2E9); } // 0xEB2104E905C6F2E9 b323, (ulong)EB2104E905C6F2E9); }
        internal static int GET_STATUS_OF_MISSION_REPEAT_SAVE() { return NativeInvoker.Invoke<int>(0x2B5E102E4A42F2BF); } // 0x2B5E102E4A42F2BF 0x144AAF22 b323, (ulong)2B5E102E4A42F2BF); }
        internal static BOOL IS_MEMORY_CARD_IN_USE() { return NativeInvoker.Invoke<BOOL>(0x8A75CE2956274ADD); } // 0x8A75CE2956274ADD 0x40CE4DFD b323, (ulong)8A75CE2956274ADD); }
        internal static void SHOOT_SINGLE_BULLET_BETWEEN_COORDS(float x1, float y1, float z1, float x2, float y2, float z2, int damage, BOOL p7, Hash weaponHash, Ped ownerPed, BOOL isAudible, BOOL isInvisible, float speed) { NativeInvoker.Invoke(0x867654CBC7606F2C, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)damage, (ulong)p7, (ulong)weaponHash, (ulong)ownerPed, (ulong)isAudible, (ulong)isInvisible, *(uint*)&speed); }
        internal static void SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(float x1, float y1, float z1, float x2, float y2, float z2, int damage, BOOL p7, Hash weaponHash, Ped ownerPed, BOOL isAudible, BOOL isInvisible, float speed, Entity entity, Any p14) { NativeInvoker.Invoke(0xE3A7742E0B7A2F8B, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)damage, (ulong)p7, (ulong)weaponHash, (ulong)ownerPed, (ulong)isAudible, (ulong)isInvisible, *(uint*)&speed, (ulong)entity, (ulong)p14); }
        internal static void SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY_NEW(float x1, float y1, float z1, float x2, float y2, float z2, int damage, BOOL p7, Hash weaponHash, Ped ownerPed, BOOL isAudible, BOOL isInvisible, float speed, Entity entity, BOOL p14, BOOL p15, BOOL p16, BOOL p17, Any p18, Any p19, Any p20) { NativeInvoker.Invoke(0xBFE5756E7407064A, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)damage, (ulong)p7, (ulong)weaponHash, (ulong)ownerPed, (ulong)isAudible, (ulong)isInvisible, *(uint*)&speed, (ulong)entity, (ulong)p14, (ulong)p15, (ulong)p16, (ulong)p17, (ulong)p18, (ulong)p19, (ulong)p20); }
        internal static void GET_MODEL_DIMENSIONS(Hash modelHash, Vector3* minimum, Vector3* maximum) { NativeInvoker.Invoke(0x03E8D3D5F549087A, (ulong)modelHash, (ulong)minimum, (ulong)maximum); }
        internal static void SET_FAKE_WANTED_LEVEL(int fakeWantedLevel) { NativeInvoker.Invoke(0x1454F2448DE30163, (ulong)fakeWantedLevel); }
        internal static int GET_FAKE_WANTED_LEVEL() { return NativeInvoker.Invoke<int>(0x4C9296CBCD1B971E); } // 0x4C9296CBCD1B971E 0x0022A430 b323, (ulong)4C9296CBCD1B971E); }
        internal static BOOL IS_BIT_SET(int address, int offset) { return NativeInvoker.Invoke<BOOL>(0xA921AA820C25702F, (ulong)address, (ulong)offset); }
        internal static void USING_MISSION_CREATOR(BOOL toggle) { NativeInvoker.Invoke(0xF14878FC50BEC6EE, (ulong)toggle); }
        internal static void ALLOW_MISSION_CREATOR_WARP(BOOL toggle) { NativeInvoker.Invoke(0xDEA36202FC3382DF, (ulong)toggle); }
        internal static void SET_MINIGAME_IN_PROGRESS(BOOL toggle) { NativeInvoker.Invoke(0x19E00D7322C6F85B, (ulong)toggle); }
        internal static BOOL IS_MINIGAME_IN_PROGRESS() { return NativeInvoker.Invoke<BOOL>(0x2B4A15E44DE0F478); } // 0x2B4A15E44DE0F478 0x53A95E13 b323, (ulong)2B4A15E44DE0F478); }
        internal static BOOL IS_THIS_A_MINIGAME_SCRIPT() { return NativeInvoker.Invoke<BOOL>(0x7B30F65D7B710098); } // 0x7B30F65D7B710098 0x7605EF6F b323, (ulong)7B30F65D7B710098); }
        internal static BOOL IS_SNIPER_INVERTED() { return NativeInvoker.Invoke<BOOL>(0x61A23B7EDA9BDA24); } // 0x61A23B7EDA9BDA24 0x5C3BF51B b323, (ulong)61A23B7EDA9BDA24); }
        internal static BOOL SHOULD_USE_METRIC_MEASUREMENTS() { return NativeInvoker.Invoke<BOOL>(0xD3D15555431AB793); } // 0xD3D15555431AB793 0xBAF17315 b323, (ulong)D3D15555431AB793); }
        internal static int GET_PROFILE_SETTING(int profileSetting) { return NativeInvoker.Invoke<int>(0xC488FF2356EA7791, (ulong)profileSetting); }
        internal static BOOL ARE_STRINGS_EQUAL(char* @string1, char* @string2) { return NativeInvoker.Invoke<BOOL>(0x0C515FAB3FF9EA92, (ulong)@string1, (ulong)@string2); }
        internal static int COMPARE_STRINGS(char* str1, char* str2, BOOL matchCase, int maxLength) { return NativeInvoker.Invoke<int>(0x1E34710ECD4AB0EB, (ulong)str1, (ulong)str2, (ulong)matchCase, (ulong)maxLength); }
        internal static int ABSI(int value) { return NativeInvoker.Invoke<int>(0xF0D31AD191A74F87, (ulong)value); }
        internal static float ABSF(float value) { return NativeInvoker.Invoke<float>(0x73D57CFFDD12C355, *(uint*)&value); }
        internal static BOOL IS_SNIPER_BULLET_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2) { return NativeInvoker.Invoke<BOOL>(0xFEFCF11B01287125, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2); }
        internal static BOOL IS_PROJECTILE_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL ownedByPlayer) { return NativeInvoker.Invoke<BOOL>(0x5270A8FBC098C3F8, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)ownedByPlayer); }
        internal static BOOL IS_PROJECTILE_TYPE_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, int type, BOOL ownedByPlayer) { return NativeInvoker.Invoke<BOOL>(0x2E0DC353342C4A6D, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)type, (ulong)ownedByPlayer); }
        internal static BOOL IS_PROJECTILE_TYPE_IN_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float width, Any p7, BOOL ownedByPlayer) { return NativeInvoker.Invoke<BOOL>(0xF0BC12401061DEA0, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&width, (ulong)p7, (ulong)ownedByPlayer); }
        internal static BOOL IS_PROJECTILE_TYPE_WITHIN_DISTANCE(float x, float y, float z, Hash projectileHash, float radius, BOOL ownedByPlayer) { return NativeInvoker.Invoke<BOOL>(0x34318593248C8FB2, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)projectileHash, *(uint*)&radius, (ulong)ownedByPlayer); }
        internal static BOOL GET_COORDS_OF_PROJECTILE_TYPE_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, Hash projectileHash, Vector3* projectilePos, BOOL ownedByPlayer) { return NativeInvoker.Invoke<BOOL>(0x8D7A43EC6A5FEA45, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)projectileHash, (ulong)projectilePos, (ulong)ownedByPlayer); }
        internal static BOOL GET_COORDS_OF_PROJECTILE_TYPE_WITHIN_DISTANCE(Ped ped, Hash weaponHash, float distance, Vector3* outCoords, BOOL p4) { return NativeInvoker.Invoke<BOOL>(0xDFB4138EEFED7B81, (ulong)ped, (ulong)weaponHash, *(uint*)&distance, (ulong)outCoords, (ulong)p4); }
        internal static BOOL GET_PROJECTILE_NEAR_PED_(Ped ped, Hash weaponHash, float distance, Vector3* outCoords, Object* outProjectile, BOOL p5) { return NativeInvoker.Invoke<BOOL>(0x82FDE6A57EE4EE44, (ulong)ped, (ulong)weaponHash, *(uint*)&distance, (ulong)outCoords, (ulong)outProjectile, (ulong)p5); }
        internal static BOOL IS_BULLET_IN_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL ownedByPlayer) { return NativeInvoker.Invoke<BOOL>(0x1A8B5F3C01E2B477, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&width, (ulong)ownedByPlayer); }
        internal static BOOL IS_BULLET_IN_AREA(float x, float y, float z, float radius, BOOL ownedByPlayer) { return NativeInvoker.Invoke<BOOL>(0x3F2023999AD51C1F, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)ownedByPlayer); }
        internal static BOOL IS_BULLET_IN_BOX(float x1, float y1, float z1, float x2, float y2, float z2, BOOL ownedByPlayer) { return NativeInvoker.Invoke<BOOL>(0xDE0F6D7450D37351, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)ownedByPlayer); }
        internal static BOOL HAS_BULLET_IMPACTED_IN_AREA(float x, float y, float z, float p3, BOOL p4, BOOL p5) { return NativeInvoker.Invoke<BOOL>(0x9870ACFB89A90995, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&p3, (ulong)p4, (ulong)p5); }
        internal static BOOL HAS_BULLET_IMPACTED_IN_BOX(float p0, float p1, float p2, float p3, float p4, float p5, BOOL p6, BOOL p7) { return NativeInvoker.Invoke<BOOL>(0xDC8C5D7CFEAB8394, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, (ulong)p6, (ulong)p7); }
        internal static BOOL IS_ORBIS_VERSION() { return NativeInvoker.Invoke<BOOL>(0xA72BC0B675B1519E); } // 0xA72BC0B675B1519E 0x40282018 b323, (ulong)A72BC0B675B1519E); }
        internal static BOOL IS_DURANGO_VERSION() { return NativeInvoker.Invoke<BOOL>(0x4D982ADB1978442D); } // 0x4D982ADB1978442D 0x46FB06A5 b323, (ulong)4D982ADB1978442D); }
        internal static BOOL IS_XBOX360_VERSION() { return NativeInvoker.Invoke<BOOL>(0xF6201B4DAF662A9D); } // 0xF6201B4DAF662A9D 0x24005CC8 b323, (ulong)F6201B4DAF662A9D); }
        internal static BOOL IS_PS3_VERSION() { return NativeInvoker.Invoke<BOOL>(0xCCA1072C29D096C2); } // 0xCCA1072C29D096C2 0x4C0D5303 b323, (ulong)CCA1072C29D096C2); }
        internal static BOOL IS_PC_VERSION() { return NativeInvoker.Invoke<BOOL>(0x48AF36444B965238); } // 0x48AF36444B965238 0x4D5D9EE3 b323, (ulong)48AF36444B965238); }
        internal static BOOL IS_AUSSIE_VERSION() { return NativeInvoker.Invoke<BOOL>(0x9F1935CA1F724008); } // 0x9F1935CA1F724008 0x944BA1DC b323, (ulong)9F1935CA1F724008); }
        internal static BOOL IS_STRING_NULL(char* @string) { return NativeInvoker.Invoke<BOOL>(0xF22B6C47C6EAB066, (ulong)@string); }
        internal static BOOL IS_STRING_NULL_OR_EMPTY(char* @string) { return NativeInvoker.Invoke<BOOL>(0xCA042B6957743895, (ulong)@string); }
        internal static BOOL STRING_TO_INT(char* @string, int* outInteger) { return NativeInvoker.Invoke<BOOL>(0x5A5F40FE637EB584, (ulong)@string, (ulong)outInteger); }
        internal static void SET_BITS_IN_RANGE(int* var, int rangeStart, int rangeEnd, int p3) { NativeInvoker.Invoke(0x8EF07E15701D61ED, (ulong)var, (ulong)rangeStart, (ulong)rangeEnd, (ulong)p3); }
        internal static int GET_BITS_IN_RANGE(int var, int rangeStart, int rangeEnd) { return NativeInvoker.Invoke<int>(0x53158863FCC0893A, (ulong)var, (ulong)rangeStart, (ulong)rangeEnd); }
        internal static int ADD_STUNT_JUMP(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3, float x4, float y4, float z4, float camX, float camY, float camZ, int p15, int p16, int p17) { return NativeInvoker.Invoke<int>(0x1A992DA297A4630C, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&x3, *(uint*)&y3, *(uint*)&z3, *(uint*)&x4, *(uint*)&y4, *(uint*)&z4, *(uint*)&camX, *(uint*)&camY, *(uint*)&camZ, (ulong)p15, (ulong)p16, (ulong)p17); }
        internal static int ADD_STUNT_JUMP_ANGLED(float x1, float y1, float z1, float x2, float y2, float z2, float radius1, float x3, float y3, float z3, float x4, float y4, float z4, float radius2, float camX, float camY, float camZ, int p17, int p18, int p19) { return NativeInvoker.Invoke<int>(0xBBE5D803A5360CBF, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&radius1, *(uint*)&x3, *(uint*)&y3, *(uint*)&z3, *(uint*)&x4, *(uint*)&y4, *(uint*)&z4, *(uint*)&radius2, *(uint*)&camX, *(uint*)&camY, *(uint*)&camZ, (ulong)p17, (ulong)p18, (ulong)p19); }
        internal static void N_0xFB80AB299D2EE1BD(BOOL toggle) { NativeInvoker.Invoke(0xFB80AB299D2EE1BD, (ulong)toggle); }
        internal static void DELETE_STUNT_JUMP(int p0) { NativeInvoker.Invoke(0xDC518000E39DAE1F, (ulong)p0); }
        internal static void ENABLE_STUNT_JUMP_SET(int p0) { NativeInvoker.Invoke(0xE369A5783B866016, (ulong)p0); }
        internal static void DISABLE_STUNT_JUMP_SET(int p0) { NativeInvoker.Invoke(0xA5272EBEDD4747F6, (ulong)p0); }
        internal static void SET_STUNT_JUMPS_CAN_TRIGGER(BOOL toggle) { NativeInvoker.Invoke(0xD79185689F8FD5DF, (ulong)toggle); }
        internal static BOOL IS_STUNT_JUMP_IN_PROGRESS() { return NativeInvoker.Invoke<BOOL>(0x7A3F19700A4D0525); } // 0x7A3F19700A4D0525 0xF477D0B1 b323, (ulong)7A3F19700A4D0525); }
        internal static BOOL IS_STUNT_JUMP_MESSAGE_SHOWING() { return NativeInvoker.Invoke<BOOL>(0x2272B0A1343129F4); } // 0x2272B0A1343129F4 0x021636EE b323, (ulong)2272B0A1343129F4); }
        internal static int GET_NUM_SUCCESSFUL_STUNT_JUMPS() { return NativeInvoker.Invoke<int>(0x996DD1E1E02F1008); } // 0x996DD1E1E02F1008 0x006F9BA2 b323, (ulong)996DD1E1E02F1008); }
        internal static int GET_TOTAL_SUCCESSFUL_STUNT_JUMPS() { return NativeInvoker.Invoke<int>(0x6856EC3D35C81EA4); } // 0x6856EC3D35C81EA4 0x495BE324 b323, (ulong)6856EC3D35C81EA4); }
        internal static void CANCEL_STUNT_JUMP() { NativeInvoker.Invoke(0xE6B7B0ACD4E4B75E); } // 0xE6B7B0ACD4E4B75E 0xF43D9821 b323<, (ulong)E6B7B0ACD4E4B75E); }
        internal static void SET_GAME_PAUSED(BOOL toggle) { NativeInvoker.Invoke(0x577D1284D6873711, (ulong)toggle); }
        internal static void SET_THIS_SCRIPT_CAN_BE_PAUSED(BOOL toggle) { NativeInvoker.Invoke(0xAA391C728106F7AF, (ulong)toggle); }
        internal static void SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT(BOOL toggle) { NativeInvoker.Invoke(0xB98236CAAECEF897, (ulong)toggle); }
        internal static BOOL HAS_BUTTON_COMBINATION_JUST_BEEN_ENTERED_(Hash hash, int amount) { return NativeInvoker.Invoke<BOOL>(0x071E2A839DE82D90, (ulong)hash, (ulong)amount); }
        internal static BOOL HAS_CHEAT_STRING_JUST_BEEN_ENTERED_(Hash hash) { return NativeInvoker.Invoke<BOOL>(0x557E43C447E700A8, (ulong)hash); }
        internal static void N_0xFA3FFB0EEBC288A3(BOOL p0) { NativeInvoker.Invoke(0xFA3FFB0EEBC288A3, (ulong)p0); }
        internal static void SET_INSTANCE_PRIORITY_MODE(int p0) { NativeInvoker.Invoke(0x9BAE5AD2508DF078, (ulong)p0); }
        internal static void SET_INSTANCE_PRIORITY_HINT(int flag) { NativeInvoker.Invoke(0xC5F0A8EBD3F361CE, (ulong)flag); }
        internal static BOOL IS_FRONTEND_FADING() { return NativeInvoker.Invoke<BOOL>(0x7EA2B6AF97ECA6ED); } // 0x7EA2B6AF97ECA6ED 0x8FF6232C b323, (ulong)7EA2B6AF97ECA6ED); }
        internal static void POPULATE_NOW() { NativeInvoker.Invoke(0x7472BB270D7B4F3E); } // 0x7472BB270D7B4F3E 0x72C20700 b323<, (ulong)7472BB270D7B4F3E); }
        internal static int GET_INDEX_OF_CURRENT_LEVEL() { return NativeInvoker.Invoke<int>(0xCBAD6729F7B1F4FC); } // 0xCBAD6729F7B1F4FC 0x6F203C6E b323, (ulong)CBAD6729F7B1F4FC); }
        internal static void SET_GRAVITY_LEVEL(int level) { NativeInvoker.Invoke(0x740E14FAD5842351, (ulong)level); }
        internal static void START_SAVE_DATA(Any* p0, Any p1, BOOL p2) { NativeInvoker.Invoke(0xA9575F812C6A7997, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void STOP_SAVE_DATA() { NativeInvoker.Invoke(0x74E20C9145FB66FD); } // 0x74E20C9145FB66FD 0x3B1C07C8 b323<, (ulong)74E20C9145FB66FD); }
        internal static int GET_SIZE_OF_SAVE_DATA(BOOL p0) { return NativeInvoker.Invoke<int>(0xA09F896CE912481F, (ulong)p0); }
        internal static void REGISTER_INT_TO_SAVE(Any* p0, char* name) { NativeInvoker.Invoke(0x34C9EE5986258415, (ulong)p0, (ulong)name); }
        internal static void REGISTER_INT64_TO_SAVE_(Any* p0, char* name) { NativeInvoker.Invoke(0xA735353C77334EA0, (ulong)p0, (ulong)name); }
        internal static void REGISTER_ENUM_TO_SAVE(Any* p0, char* name) { NativeInvoker.Invoke(0x10C2FA78D0E128A1, (ulong)p0, (ulong)name); }
        internal static void REGISTER_FLOAT_TO_SAVE(Any* p0, char* name) { NativeInvoker.Invoke(0x7CAEC29ECB5DFEBB, (ulong)p0, (ulong)name); }
        internal static void REGISTER_BOOL_TO_SAVE(Any* p0, char* name) { NativeInvoker.Invoke(0xC8F4131414C835A1, (ulong)p0, (ulong)name); }
        internal static void REGISTER_TEXT_LABEL_TO_SAVE(Any* p0, char* name) { NativeInvoker.Invoke(0xEDB1232C5BEAE62F, (ulong)p0, (ulong)name); }
        internal static void REGISTER_TEXT_LABEL_TO_SAVE_2_(Any* p0, char* name) { NativeInvoker.Invoke(0x6F7794F28C6B2535, (ulong)p0, (ulong)name); }
        internal static void N_0x48F069265A0E4BEC(Any* p0, char* name) { NativeInvoker.Invoke(0x48F069265A0E4BEC, (ulong)p0, (ulong)name); }
        internal static void N_0x8269816F6CFD40F8(Any* p0, char* name) { NativeInvoker.Invoke(0x8269816F6CFD40F8, (ulong)p0, (ulong)name); }
        internal static void N_0xFAA457EF263E8763(Any* p0, char* name) { NativeInvoker.Invoke(0xFAA457EF263E8763, (ulong)p0, (ulong)name); }
        internal static void START_SAVE_STRUCT_WITH_SIZE(Any* p0, int size, char* structName) { NativeInvoker.Invoke(0xBF737600CDDBEADD, (ulong)p0, (ulong)size, (ulong)structName); }
        internal static void STOP_SAVE_STRUCT() { NativeInvoker.Invoke(0xEB1774DF12BB9F12); } // 0xEB1774DF12BB9F12 0xC2624A28 b323<, (ulong)EB1774DF12BB9F12); }
        internal static void START_SAVE_ARRAY_WITH_SIZE(Any* p0, int size, char* arrayName) { NativeInvoker.Invoke(0x60FE567DF1B1AF9D, (ulong)p0, (ulong)size, (ulong)arrayName); }
        internal static void STOP_SAVE_ARRAY() { NativeInvoker.Invoke(0x04456F95153C6BE4); } // 0x04456F95153C6BE4 0x0CAD8217 b323<, (ulong)04456F95153C6BE4); }
        internal static void COPY_MEMORY_(Any* dst, Any* src, int size) { NativeInvoker.Invoke(0x213AEB2B90CBA7AC, (ulong)dst, (ulong)src, (ulong)size); }
        internal static void ENABLE_DISPATCH_SERVICE(int dispatchService, BOOL toggle) { NativeInvoker.Invoke(0xDC0F817884CDD856, (ulong)dispatchService, (ulong)toggle); }
        internal static void BLOCK_DISPATCH_SERVICE_RESOURCE_CREATION(int dispatchService, BOOL toggle) { NativeInvoker.Invoke(0x9B2BD3773123EA2F, (ulong)dispatchService, (ulong)toggle); }
        internal static int GET_NUM_DISPATCHED_UNITS_FOR_PLAYER_(int dispatchService) { return NativeInvoker.Invoke<int>(0xEB4A0C2D56441717, (ulong)dispatchService); }
        internal static BOOL CREATE_INCIDENT(int dispatchService, float x, float y, float z, int numUnits, float radius, int* outIncidentID, Any p7, Any p8) { return NativeInvoker.Invoke<BOOL>(0x3F892CAF67444AE7, (ulong)dispatchService, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)numUnits, *(uint*)&radius, (ulong)outIncidentID, (ulong)p7, (ulong)p8); }
        internal static BOOL CREATE_INCIDENT_WITH_ENTITY(int dispatchService, Ped ped, int numUnits, float radius, int* outIncidentID, Any p5, Any p6) { return NativeInvoker.Invoke<BOOL>(0x05983472F0494E60, (ulong)dispatchService, (ulong)ped, (ulong)numUnits, *(uint*)&radius, (ulong)outIncidentID, (ulong)p5, (ulong)p6); }
        internal static void DELETE_INCIDENT(int incidentId) { NativeInvoker.Invoke(0x556C1AA270D5A207, (ulong)incidentId); }
        internal static BOOL IS_INCIDENT_VALID(int incidentId) { return NativeInvoker.Invoke<BOOL>(0xC8BC6461E629BEAA, (ulong)incidentId); }
        internal static void SET_INCIDENT_REQUESTED_UNITS(int incidentId, int dispatchService, int numUnits) { NativeInvoker.Invoke(0xB08B85D860E7BA3C, (ulong)incidentId, (ulong)dispatchService, (ulong)numUnits); }
        internal static void SET_INCIDENT_UNK_(int incidentId, float p1) { NativeInvoker.Invoke(0xD261BA3E7E998072, (ulong)incidentId, *(uint*)&p1); }
        internal static BOOL FIND_SPAWN_POINT_IN_DIRECTION(float x1, float y1, float z1, float x2, float y2, float z2, float distance, Vector3* spawnPoint) { return NativeInvoker.Invoke<BOOL>(0x6874E2190B0C1972, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&distance, (ulong)spawnPoint); }
        internal static int ADD_POP_MULTIPLIER_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float p6, float p7, BOOL p8, BOOL p9) { return NativeInvoker.Invoke<int>(0x67F6413D3220E18D, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&p6, *(uint*)&p7, (ulong)p8, (ulong)p9); }
        internal static BOOL DOES_POP_MULTIPLIER_AREA_EXIST(int id) { return NativeInvoker.Invoke<BOOL>(0x1327E2FE9746BAEE, (ulong)id); }
        internal static void REMOVE_POP_MULTIPLIER_AREA(int id, BOOL p1) { NativeInvoker.Invoke(0xB129E447A2EDA4BF, (ulong)id, (ulong)p1); }
        internal static BOOL IS_POP_MULTIPLIER_AREA_UNK_(int id) { return NativeInvoker.Invoke<BOOL>(0x1312F4B242609CE3, (ulong)id); }
        internal static int ADD_POP_MULTIPLIER_SPHERE(float x, float y, float z, float radius, float pedMultiplier, float vehicleMultiplier, BOOL p6, BOOL p7) { return NativeInvoker.Invoke<int>(0x32C7A7E8C43A1F80, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, *(uint*)&pedMultiplier, *(uint*)&vehicleMultiplier, (ulong)p6, (ulong)p7); }
        internal static BOOL DOES_POP_MULTIPLIER_SPHERE_EXIST(int id) { return NativeInvoker.Invoke<BOOL>(0x171BAFB3C60389F4, (ulong)id); }
        internal static void REMOVE_POP_MULTIPLIER_SPHERE(int id, BOOL p1) { NativeInvoker.Invoke(0xE6869BECDD8F2403, (ulong)id, (ulong)p1); }
        internal static void ENABLE_TENNIS_MODE(Ped ped, BOOL toggle, BOOL p2) { NativeInvoker.Invoke(0x28A04B411933F8A6, (ulong)ped, (ulong)toggle, (ulong)p2); }
        internal static BOOL IS_TENNIS_MODE(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x5D5479D115290C3F, (ulong)ped); }
        internal static void PLAY_TENNIS_SWING_ANIM(Ped ped, char* animDict, char* animName, float p3, float p4, BOOL p5) { NativeInvoker.Invoke(0xE266ED23311F24D4, (ulong)ped, (ulong)animDict, (ulong)animName, *(uint*)&p3, *(uint*)&p4, (ulong)p5); }
        internal static BOOL GET_TENNIS_SWING_ANIM_COMPLETE(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x17DF68D720AA77F8, (ulong)ped); }
        internal static BOOL N_0x19BFED045C647C49(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x19BFED045C647C49, (ulong)ped); }
        internal static BOOL N_0xE95B0C7D5BA3B96B(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xE95B0C7D5BA3B96B, (ulong)ped); }
        internal static void PLAY_TENNIS_DIVE_ANIM(Ped ped, int p1, float p2, float p3, float p4, BOOL p5) { NativeInvoker.Invoke(0x8FA9C42FC5D7C64B, (ulong)ped, (ulong)p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, (ulong)p5); }
        internal static void N_0x54F157E0336A3822(Ped ped, char* p1, float p2) { NativeInvoker.Invoke(0x54F157E0336A3822, (ulong)ped, (ulong)p1, *(uint*)&p2); }
        internal static void RESET_DISPATCH_SPAWN_LOCATION_() { NativeInvoker.Invoke(0x5896F2BD5683A4E1); } // 0x5896F2BD5683A4E1 b1868<, (ulong)5896F2BD5683A4E1); }
        internal static void SET_DISPATCH_SPAWN_LOCATION(float x, float y, float z) { NativeInvoker.Invoke(0xD10F442036302D50, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void RESET_DISPATCH_IDEAL_SPAWN_DISTANCE() { NativeInvoker.Invoke(0x77A84429DD9F0A15); } // 0x77A84429DD9F0A15 0xDA65ECAA b323<, (ulong)77A84429DD9F0A15); }
        internal static void SET_DISPATCH_IDEAL_SPAWN_DISTANCE(float p0) { NativeInvoker.Invoke(0x6FE601A64180D423, *(uint*)&p0); }
        internal static void RESET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS(Any p0) { NativeInvoker.Invoke(0xEB2DB0CAD13154B3, (ulong)p0); }
        internal static void SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS(Any p0, float p1) { NativeInvoker.Invoke(0x44F7CBC1BEB3327D, (ulong)p0, *(uint*)&p1); }
        internal static void SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS_MULTIPLIER(Any p0, float p1) { NativeInvoker.Invoke(0x48838ED9937A15D1, (ulong)p0, *(uint*)&p1); }
        internal static Any ADD_DISPATCH_SPAWN_BLOCKING_ANGLED_AREA_(float x1, float y1, float z1, float x2, float y2, float z2, float width) { return NativeInvoker.Invoke<Any>(0x918C7B2D2FF3928B, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&width); }
        internal static Any ADD_DISPATCH_SPAWN_BLOCKING_AREA_(float x1, float y1, float x2, float y2) { return NativeInvoker.Invoke<Any>(0x2D4259F1FEB81DA9, *(uint*)&x1, *(uint*)&y1, *(uint*)&x2, *(uint*)&y2); }
        internal static void REMOVE_DISPATCH_SPAWN_BLOCKING_AREA(Any p0) { NativeInvoker.Invoke(0x264AC28B01B353A5, (ulong)p0); }
        internal static void RESET_DISPATCH_SPAWN_BLOCKING_AREAS() { NativeInvoker.Invoke(0xAC7BFD5C1D83EA75); } // 0xAC7BFD5C1D83EA75 0x9A17F835 b323<, (ulong)AC7BFD5C1D83EA75); }
        internal static void N_0xD9F692D349249528() { NativeInvoker.Invoke(0xD9F692D349249528); } // 0xD9F692D349249528 0xE0C9307E b323<, (ulong)D9F692D349249528); }
        internal static void N_0xE532EC1A63231B4F(int p0, int p1) { NativeInvoker.Invoke(0xE532EC1A63231B4F, (ulong)p0, (ulong)p1); }
        internal static void ADD_TACTICAL_ANALYSIS_POINT_(float x, float y, float z) { NativeInvoker.Invoke(0xB8721407EE9C3FF6, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void CLEAR_TACTICAL_ANALYSIS_POINTS_() { NativeInvoker.Invoke(0xB3CD58CCA6CDA852); } // 0xB3CD58CCA6CDA852 0x66C3C59C b323<, (ulong)B3CD58CCA6CDA852); }
        internal static void SET_RIOT_MODE_ENABLED(BOOL toggle) { NativeInvoker.Invoke(0x2587A48BC88DFADF, (ulong)toggle); }
        internal static void DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING(int p0, char* windowTitle, Any* p2, char* defaultText, char* defaultConcat1, char* defaultConcat2, char* defaultConcat3, char* defaultConcat4, char* defaultConcat5, char* defaultConcat6, char* defaultConcat7, int maxInputLength) { NativeInvoker.Invoke(0xCA78CFA0366592FE, (ulong)p0, (ulong)windowTitle, (ulong)p2, (ulong)defaultText, (ulong)defaultConcat1, (ulong)defaultConcat2, (ulong)defaultConcat3, (ulong)defaultConcat4, (ulong)defaultConcat5, (ulong)defaultConcat6, (ulong)defaultConcat7, (ulong)maxInputLength); }
        internal static void DISPLAY_ONSCREEN_KEYBOARD(int p0, char* windowTitle, char* p2, char* defaultText, char* defaultConcat1, char* defaultConcat2, char* defaultConcat3, int maxInputLength) { NativeInvoker.Invoke(0x00DC833F2568DBF6, (ulong)p0, (ulong)windowTitle, (ulong)p2, (ulong)defaultText, (ulong)defaultConcat1, (ulong)defaultConcat2, (ulong)defaultConcat3, (ulong)maxInputLength); }
        internal static int UPDATE_ONSCREEN_KEYBOARD() { return NativeInvoker.Invoke<int>(0x0CF2B696BBF945AE); } // 0x0CF2B696BBF945AE 0x23D0A1CE b323, (ulong)0CF2B696BBF945AE); }
        internal static char* GET_ONSCREEN_KEYBOARD_RESULT() { return (char*)NativeInvoker.Invoke<IntPtr>(0x8362B09B91893647); } // 0x8362B09B91893647 0x44828FB3 b323, (ulong)8362B09B91893647); }
        internal static void CANCEL_ONSCREEN_KEYBOARD_() { NativeInvoker.Invoke(0x58A39BE597CE99CD); } // 0x58A39BE597CE99CD 0x196444BB b757<, (ulong)58A39BE597CE99CD); }
        internal static void NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(int p0) { NativeInvoker.Invoke(0x3ED1438C1F5C6612, (ulong)p0); }
        internal static void REMOVE_STEALTH_KILL_(Hash hash, BOOL p1) { NativeInvoker.Invoke(0xA6A12939F16D85BE, (ulong)hash, (ulong)p1); }
        internal static void N_0x1EAE0A6E978894A2(int p0, BOOL p1) { NativeInvoker.Invoke(0x1EAE0A6E978894A2, (ulong)p0, (ulong)p1); }
        internal static void SET_EXPLOSIVE_AMMO_THIS_FRAME(Player player) { NativeInvoker.Invoke(0xA66C71C98D5F2CFB, (ulong)player); }
        internal static void SET_FIRE_AMMO_THIS_FRAME(Player player) { NativeInvoker.Invoke(0x11879CDD803D30F4, (ulong)player); }
        internal static void SET_EXPLOSIVE_MELEE_THIS_FRAME(Player player) { NativeInvoker.Invoke(0xFF1BED81BFDC0FE0, (ulong)player); }
        internal static void SET_SUPER_JUMP_THIS_FRAME(Player player) { NativeInvoker.Invoke(0x57FFF03E423A4C0B, (ulong)player); }
        internal static void SET_BEAST_MODE_ACTIVE_(Player player) { NativeInvoker.Invoke(0x438822C279B73B93, (ulong)player); }
        internal static void SET_FORCE_PLAYER_TO_JUMP_(Player player) { NativeInvoker.Invoke(0xA1183BCFEE0F93D1, (ulong)player); }
        internal static BOOL N_0x6FDDF453C0C756EC() { return NativeInvoker.Invoke<BOOL>(0x6FDDF453C0C756EC); } // 0x6FDDF453C0C756EC 0xC3C10FCC b323, (ulong)6FDDF453C0C756EC); }
        internal static void N_0xFB00CA71DA386228() { NativeInvoker.Invoke(0xFB00CA71DA386228); } // 0xFB00CA71DA386228 0x054EC103 b323<, (ulong)FB00CA71DA386228); }
        internal static BOOL ARE_PROFILE_SETTINGS_VALID() { return NativeInvoker.Invoke<BOOL>(0x5AA3BEFA29F03AD4); } // 0x5AA3BEFA29F03AD4 0x46B5A15C b323, (ulong)5AA3BEFA29F03AD4); }
        internal static void N_0xE3D969D2785FFB5E() { NativeInvoker.Invoke(0xE3D969D2785FFB5E); } // 0xE3D969D2785FFB5E b323<, (ulong)E3D969D2785FFB5E); }
        internal static void FORCE_GAME_STATE_PLAYING() { NativeInvoker.Invoke(0xC0AA53F866B3134D); } // 0xC0AA53F866B3134D 0x5D209F25 b323<, (ulong)C0AA53F866B3134D); }
        internal static void SCRIPT_RACE_INIT(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x0A60017F841A54F2, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void SCRIPT_RACE_SHUTDOWN() { NativeInvoker.Invoke(0x1FF6BF9A63E5757F); } // 0x1FF6BF9A63E5757F 0xDF99925C b323<, (ulong)1FF6BF9A63E5757F); }
        internal static void N_0x1BB299305C3E8C13(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x1BB299305C3E8C13, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static BOOL SCRIPT_RACE_GET_PLAYER_SPLIT_TIME(Player player, int* p1, int* p2) { return NativeInvoker.Invoke<BOOL>(0x8EF5573A1F801A5C, (ulong)player, (ulong)p1, (ulong)p2); }
        internal static void START_BENCHMARK_RECORDING_() { NativeInvoker.Invoke(0x92790862E36C2ADA); } // 0x92790862E36C2ADA b323<, (ulong)92790862E36C2ADA); }
        internal static void STOP_BENCHMARK_RECORDING_() { NativeInvoker.Invoke(0xC7DB36C24634F52B); } // 0xC7DB36C24634F52B b323<, (ulong)C7DB36C24634F52B); }
        internal static void RESET_BENCHMARK_RECORDING_() { NativeInvoker.Invoke(0x437138B6A830166A); } // 0x437138B6A830166A b323<, (ulong)437138B6A830166A); }
        internal static void SAVE_BENCHMARK_RECORDING_() { NativeInvoker.Invoke(0x37DEB0AA183FB6D8); } // 0x37DEB0AA183FB6D8 b323<, (ulong)37DEB0AA183FB6D8); }
        internal static BOOL UI_IS_SINGLEPLAYER_PAUSE_MENU_ACTIVE_() { return NativeInvoker.Invoke<BOOL>(0xEA2F2061875EED90); } // 0xEA2F2061875EED90 b323, (ulong)EA2F2061875EED90); }
        internal static BOOL LANDING_MENU_IS_ACTIVE_() { return NativeInvoker.Invoke<BOOL>(0x3BBBD13E5041A79E); } // 0x3BBBD13E5041A79E b323, (ulong)3BBBD13E5041A79E); }
        internal static BOOL IS_COMMAND_LINE_BENCHMARK_VALUE_SET_() { return NativeInvoker.Invoke<BOOL>(0xA049A5BE0F04F2F8); } // 0xA049A5BE0F04F2F8 b323, (ulong)A049A5BE0F04F2F8); }
        internal static int GET_BENCHMARK_ITERATIONS_FROM_COMMAND_LINE_() { return NativeInvoker.Invoke<int>(0x4750FC27570311EC); } // 0x4750FC27570311EC b323, (ulong)4750FC27570311EC); }
        internal static int GET_BENCHMARK_PASS_FROM_COMMAND_LINE_() { return NativeInvoker.Invoke<int>(0x1B2366C3F2A5C8DF); } // 0x1B2366C3F2A5C8DF b323, (ulong)1B2366C3F2A5C8DF); }
        internal static void RESTART_GAME_() { NativeInvoker.Invoke(0xE574A662ACAEFBB1); } // 0xE574A662ACAEFBB1 b372<, (ulong)E574A662ACAEFBB1); }
        internal static void FORCE_SOCIAL_CLUB_UPDATE_() { NativeInvoker.Invoke(0xEB6891F03362FB12); } // 0xEB6891F03362FB12 b323<, (ulong)EB6891F03362FB12); }
        internal static BOOL HAS_ASYNC_INSTALL_FINISHED_() { return NativeInvoker.Invoke<BOOL>(0x14832BF2ABA53FC5); } // 0x14832BF2ABA53FC5 b323, (ulong)14832BF2ABA53FC5); }
        internal static void CLEANUP_ASYNC_INSTALL_() { NativeInvoker.Invoke(0xC79AE21974B01FB2); } // 0xC79AE21974B01FB2 b323<, (ulong)C79AE21974B01FB2); }
        internal static BOOL IS_IN_POWER_SAVING_MODE_() { return NativeInvoker.Invoke<BOOL>(0x684A41975F077262); } // 0x684A41975F077262 b323, (ulong)684A41975F077262); }
        internal static int GET_POWER_SAVING_MODE_DURATION_() { return NativeInvoker.Invoke<int>(0xABB2FA71C83A1B72); } // 0xABB2FA71C83A1B72 b323, (ulong)ABB2FA71C83A1B72); }
        internal static void SET_PLAYER_IS_IN_ANIMAL_FORM_(BOOL toggle) { NativeInvoker.Invoke(0x4EBB7E87AA0DBED4, (ulong)toggle); }
        internal static BOOL GET_IS_PLAYER_IN_ANIMAL_FORM() { return NativeInvoker.Invoke<BOOL>(0x9689123E3F213AA5); } // 0x9689123E3F213AA5 b323, (ulong)9689123E3F213AA5); }
        internal static void SET_PLAYER_ROCKSTAR_EDITOR_DISABLED_(BOOL toggle) { NativeInvoker.Invoke(0x9D8D44ADBBA61EF2, (ulong)toggle); }
        internal static void N_0x23227DF0B2115469() { NativeInvoker.Invoke(0x23227DF0B2115469); } // 0x23227DF0B2115469 b323<, (ulong)23227DF0B2115469); }
        internal static Any N_0xD10282B6E3751BA0() { return NativeInvoker.Invoke<Any>(0xD10282B6E3751BA0); } // 0xD10282B6E3751BA0 b323, (ulong)D10282B6E3751BA0); }
        internal static void N_0x693478ACBD7F18E7() { NativeInvoker.Invoke(0x693478ACBD7F18E7); } // 0x693478ACBD7F18E7 b1103<, (ulong)693478ACBD7F18E7); }
    }

    internal static unsafe class MOBILE
    {
        internal static void CREATE_MOBILE_PHONE(int phoneType) { NativeInvoker.Invoke(0xA4E8E696C532FBC7, (ulong)phoneType); }
        internal static void DESTROY_MOBILE_PHONE() { NativeInvoker.Invoke(0x3BC861DF703E5097); } // 0x3BC861DF703E5097 0x1A65037B b323<, (ulong)3BC861DF703E5097); }
        internal static void SET_MOBILE_PHONE_SCALE(float scale) { NativeInvoker.Invoke(0xCBDD322A73D6D932, *(uint*)&scale); }
        internal static void SET_MOBILE_PHONE_ROTATION(float rotX, float rotY, float rotZ, Any p3) { NativeInvoker.Invoke(0xBB779C0CA917E865, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, (ulong)p3); }
        internal static void GET_MOBILE_PHONE_ROTATION(Vector3* rotation, Vehicle p1) { NativeInvoker.Invoke(0x1CEFB61F193070AE, (ulong)rotation, (ulong)p1); }
        internal static void SET_MOBILE_PHONE_POSITION(float posX, float posY, float posZ) { NativeInvoker.Invoke(0x693A5C6D6734085B, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ); }
        internal static void GET_MOBILE_PHONE_POSITION(Vector3* position) { NativeInvoker.Invoke(0x584FDFDA48805B86, (ulong)position); }
        internal static void SCRIPT_IS_MOVING_MOBILE_PHONE_OFFSCREEN(BOOL toggle) { NativeInvoker.Invoke(0xF511F759238A5122, (ulong)toggle); }
        internal static BOOL CAN_PHONE_BE_SEEN_ON_SCREEN() { return NativeInvoker.Invoke<BOOL>(0xC4E2813898C97A4B); } // 0xC4E2813898C97A4B 0x5F978584 b323, (ulong)C4E2813898C97A4B); }
        internal static void SET_MOBILE_PHONE_UNK_(BOOL toggle) { NativeInvoker.Invoke(0x375A706A5C2FD084, (ulong)toggle); }
        internal static void CELL_CAM_MOVE_FINGER_(int direction) { NativeInvoker.Invoke(0x95C9E72F3D7DEC9B, (ulong)direction); }
        internal static void CELL_CAM_SET_LEAN_(BOOL toggle) { NativeInvoker.Invoke(0x44E44169EF70138E, (ulong)toggle); }
        internal static void CELL_CAM_ACTIVATE(BOOL p0, BOOL p1) { NativeInvoker.Invoke(0xFDE8F069C542D126, (ulong)p0, (ulong)p1); }
        internal static void CELL_CAM_DISABLE_THIS_FRAME_(BOOL toggle) { NativeInvoker.Invoke(0x015C49A93E3E086E, (ulong)toggle); }
        internal static void N_0xA2CCBE62CD4C91A4(int* toggle) { NativeInvoker.Invoke(0xA2CCBE62CD4C91A4, (ulong)toggle); }
        internal static void N_0x1B0B4AEED5B9B41C(float p0) { NativeInvoker.Invoke(0x1B0B4AEED5B9B41C, *(uint*)&p0); }
        internal static void N_0x53F4892D18EC90A4(float p0) { NativeInvoker.Invoke(0x53F4892D18EC90A4, *(uint*)&p0); }
        internal static void N_0x3117D84EFA60F77B(float p0) { NativeInvoker.Invoke(0x3117D84EFA60F77B, *(uint*)&p0); }
        internal static void N_0x15E69E2802C24B8D(float p0) { NativeInvoker.Invoke(0x15E69E2802C24B8D, *(uint*)&p0); }
        internal static void N_0xAC2890471901861C(float p0) { NativeInvoker.Invoke(0xAC2890471901861C, *(uint*)&p0); }
        internal static void N_0xD6ADE981781FCA09(float p0) { NativeInvoker.Invoke(0xD6ADE981781FCA09, *(uint*)&p0); }
        internal static void N_0xF1E22DC13F5EEBAD(float p0) { NativeInvoker.Invoke(0xF1E22DC13F5EEBAD, *(uint*)&p0); }
        internal static void N_0x466DA42C89865553(float p0) { NativeInvoker.Invoke(0x466DA42C89865553, *(uint*)&p0); }
        internal static BOOL CELL_CAM_IS_CHAR_VISIBLE_NO_FACE_CHECK(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x439E9BC95B7E7FBE, (ulong)entity); }
        internal static void GET_MOBILE_PHONE_RENDER_ID(int* renderId) { NativeInvoker.Invoke(0xB4A53E05F68B6FA1, (ulong)renderId); }
    }

    internal static unsafe class MONEY
    {
        internal static void NETWORK_INITIALIZE_CASH(int wallet, int bank) { NativeInvoker.Invoke(0x3DA5ECD1A56CBA6D, (ulong)wallet, (ulong)bank); }
        internal static void NETWORK_DELETE_CHARACTER(int characterSlot, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x05A50AF38947EB8D, (ulong)characterSlot, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_MANUAL_DELETE_CHARACTER_(int characterSlot) { NativeInvoker.Invoke(0x821418C727FCACD7, (ulong)characterSlot); }
        internal static BOOL NETWORK_GET_IS_HIGH_EARNER_() { return NativeInvoker.Invoke<BOOL>(0xFB2456B2040A6A67); } // 0xFB2456B2040A6A67 0x63F093A6 b323, (ulong)FB2456B2040A6A67); }
        internal static void NETWORK_CLEAR_CHARACTER_WALLET(int characterSlot) { NativeInvoker.Invoke(0xA921DED15FDF28F5, (ulong)characterSlot); }
        internal static void NETWORK_GIVE_PLAYER_JOBSHARE_CASH(int amount, Any* gamerHandle) { NativeInvoker.Invoke(0xFB18DF9CB95E0105, (ulong)amount, (ulong)gamerHandle); }
        internal static void NETWORK_RECEIVE_PLAYER_JOBSHARE_CASH(int value, Any* gamerHandle) { NativeInvoker.Invoke(0x56A3B51944C50598, (ulong)value, (ulong)gamerHandle); }
        internal static BOOL NETWORK_CAN_SHARE_JOB_CASH() { return NativeInvoker.Invoke<BOOL>(0x1C2473301B1C66BA); } // 0x1C2473301B1C66BA 0xA27B9FE8 b323, (ulong)1C2473301B1C66BA); }
        internal static void NETWORK_REFUND_CASH(int index, char* context, char* reason, BOOL unk) { NativeInvoker.Invoke(0xF9C812CD7C46E817, (ulong)index, (ulong)context, (ulong)reason, (ulong)unk); }
        internal static void NETWORK_DEDUCT_CASH_(int amount, char* p1, char* p2, BOOL p3, BOOL p4, BOOL p5) { NativeInvoker.Invoke(0x18B7AE224B087E26, (ulong)amount, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static BOOL NETWORK_MONEY_CAN_BET(int amount, BOOL p1, BOOL p2) { return NativeInvoker.Invoke<BOOL>(0x81404F3DC124FE5B, (ulong)amount, (ulong)p1, (ulong)p2); }
        internal static BOOL NETWORK_CAN_BET(int amount) { return NativeInvoker.Invoke<BOOL>(0x3A54E33660DED67F, (ulong)amount); }
        internal static BOOL NETWORK_CASINO_CAN_USE_GAMBLING_TYPE_(Hash hash) { return NativeInvoker.Invoke<BOOL>(0x158C16F5E4CF41F8, (ulong)hash); }
        internal static BOOL NETWORK_CASINO_CAN_PURCHASE_CHIPS_WITH_PVC_() { return NativeInvoker.Invoke<BOOL>(0x394DCDB9E836B7A9); } // 0x394DCDB9E836B7A9 b1734, (ulong)394DCDB9E836B7A9); }
        internal static BOOL NETWORK_CASINO_CAN_GAMBLE_(Any p0) { return NativeInvoker.Invoke<BOOL>(0xF62F6D9528358FE4, (ulong)p0); }
        internal static BOOL NETWORK_CASINO_CAN_PURCHASE_CHIPS_WITH_PVC_2_() { return NativeInvoker.Invoke<BOOL>(0x8968D4D8C6C40C11); } // 0x8968D4D8C6C40C11 b1734, (ulong)8968D4D8C6C40C11); }
        internal static BOOL NETWORK_CASINO_PURCHASE_CHIPS_(int p0, int p1) { return NativeInvoker.Invoke<BOOL>(0x3BD101471C7F9EEC, (ulong)p0, (ulong)p1); }
        internal static BOOL NETWORK_CASINO_SELL_CHIPS_(int p0, int p1) { return NativeInvoker.Invoke<BOOL>(0xED44897CB336F480, (ulong)p0, (ulong)p1); }
        internal static void N_0xCD0F5B5D932AE473() { NativeInvoker.Invoke(0xCD0F5B5D932AE473); } // 0xCD0F5B5D932AE473 0xC4CD928D b323<, (ulong)CD0F5B5D932AE473); }
        internal static BOOL CAN_PAY_GOON_(int p0, int p1, int amount, int* p3) { return NativeInvoker.Invoke<BOOL>(0x9777734DAD16992F, (ulong)p0, (ulong)p1, (ulong)amount, (ulong)p3); }
        internal static void NETWORK_EARN_FROM_CASHING_OUT_(int amount) { NativeInvoker.Invoke(0xEFE9C9A1651B81E6, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_PICKUP(int amount) { NativeInvoker.Invoke(0xED1517D3AF17C698, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_GANG_PICKUP_(int amount) { NativeInvoker.Invoke(0xA03D4ACE0A3284CE, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_ASSASSINATE_TARGET_KILLED_(int amount) { NativeInvoker.Invoke(0xFA700D8A9905F78A, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_ARMOUR_TRUCK_(int amount) { NativeInvoker.Invoke(0xF514621E8EA463D0, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_CRATE_DROP(int amount) { NativeInvoker.Invoke(0xB1CC1B9EC3007A2A, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_BETTING(int amount, char* p1) { NativeInvoker.Invoke(0x827A5BA1A44ACA6D, (ulong)amount, (ulong)p1); }
        internal static void NETWORK_EARN_FROM_JOB(int amount, char* p1) { NativeInvoker.Invoke(0xB2CC4836834E8A98, (ulong)amount, (ulong)p1); }
        internal static void NETWORK_EARN_FROM_JOB_X2_(int amount, char* p1) { NativeInvoker.Invoke(0xDEBBF584665411D0, (ulong)amount, (ulong)p1); }
        internal static void NETWORK_EARN_FROM_PREMIUM_JOB_(int amount, char* p1) { NativeInvoker.Invoke(0xC8407624CEF2354B, (ulong)amount, (ulong)p1); }
        internal static void NETWORK_EARN_FROM_BEND_JOB(int amount, char* heistHash) { NativeInvoker.Invoke(0x61326EE6DF15B0CA, (ulong)amount, (ulong)heistHash); }
        internal static void NETWORK_EARN_FROM_CHALLENGE_WIN(Any p0, Any* p1, BOOL p2) { NativeInvoker.Invoke(0x2B171E6B2F64D8DF, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_EARN_FROM_BOUNTY(int amount, Any* gamerHandle, Any* p2, Any p3) { NativeInvoker.Invoke(0x131BB5DA15453ACF, (ulong)amount, (ulong)gamerHandle, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_EARN_FROM_IMPORT_EXPORT(int amount, Hash modelHash) { NativeInvoker.Invoke(0xF92A014A634442D6, (ulong)amount, (ulong)modelHash); }
        internal static void NETWORK_EARN_FROM_HOLDUPS(int amount) { NativeInvoker.Invoke(0x45B8154E077D9E4D, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_PROPERTY(int amount, Hash propertyName) { NativeInvoker.Invoke(0x849648349D77F5C5, (ulong)amount, (ulong)propertyName); }
        internal static void NETWORK_EARN_FROM_AI_TARGET_KILL(Any p0, Any p1) { NativeInvoker.Invoke(0x515B4A22E4D3C6D7, (ulong)p0, (ulong)p1); }
        internal static void NETWORK_EARN_FROM_NOT_BADSPORT(int amount) { NativeInvoker.Invoke(0x4337511FA8221D36, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_ROCKSTAR(int amount) { NativeInvoker.Invoke(0x02CE1D6AC0FC73EA, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_VEHICLE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7) { NativeInvoker.Invoke(0xB539BD8A4C1EECF8, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7); }
        internal static void NETWORK_EARN_FROM_PERSONAL_VEHICLE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8) { NativeInvoker.Invoke(0x3F4D00167E41E0AD, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8); }
        internal static void NETWORK_EARN_FROM_DAILY_OBJECTIVES(int p0, char* p1, int p2) { NativeInvoker.Invoke(0x6EA318C91C1A8786, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_EARN_FROM_AMBIENT_JOB(int p0, char* p1, Any* p2) { NativeInvoker.Invoke(0xFB6DB092FBAE29E6, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_EARN_FROM_JOB_BONUS(Any p0, Any* p1, Any* p2) { NativeInvoker.Invoke(0x6816FB4416760775, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_EARN_FROM_CRIMINAL_MASTERMIND_BONUS_(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0xFA009A62990671D4, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_EARN_JOB_BONUS_HEIST_AWARD_(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x9D4FDBB035229669, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_EARN_JOB_BONUS_FIRST_TIME_BONUS_(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x11B0A20C493F7E36, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_EARN_GOON_(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0xCDA1C62BE2777802, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_EARN_BOSS_(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x08B0CA7A6AB3AC32, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_EARN_BOSS_AGENCY_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x0CB1BE0633C024A8, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_EARN_FROM_WAREHOUSE_(int amount, int id) { NativeInvoker.Invoke(0x3E4ADAFF1830F146, (ulong)amount, (ulong)id); }
        internal static void NETWORK_EARN_FROM_CONTRABAND_(int amount, Any p1) { NativeInvoker.Invoke(0xECA658CE2A4E5A72, (ulong)amount, (ulong)p1); }
        internal static void NETWORK_EARN_FROM_DESTROYING_CONTRABAND_(Any p0) { NativeInvoker.Invoke(0x84C0116D012E8FC2, (ulong)p0); }
        internal static void N_0x6B7E4FB50D5F3D65(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x6B7E4FB50D5F3D65, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void N_0x31BA138F6304FB9F(Any p0, Any p1) { NativeInvoker.Invoke(0x31BA138F6304FB9F, (ulong)p0, (ulong)p1); }
        internal static void N_0x55A1E095DB052FA5(Any p0, Any p1) { NativeInvoker.Invoke(0x55A1E095DB052FA5, (ulong)p0, (ulong)p1); }
        internal static void NETWORK_EARN_FROM_BUSINESS_PRODUCT_(int amount, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x8586789730B10CAF, (ulong)amount, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_EARN_FROM_VEHICLE_EXPORT_(int amount, Any p1, Any p2) { NativeInvoker.Invoke(0xEDEAD9A91EC768B3, (ulong)amount, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_EARN_FROM_SMUGGLING_(int amount, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xDEE612F2D71B0308, (ulong)amount, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_EARN_BOUNTY_HUNTER_REWARD_(Any p0) { NativeInvoker.Invoke(0xF6B170F9A02E9E87, (ulong)p0); }
        internal static void NETWORK_EARN_FROM_BUSINESS_BATTLE_(Any p0) { NativeInvoker.Invoke(0x42FCE14F50F27291, (ulong)p0); }
        internal static void NETWORK_EARN_FROM_CLUB_MANAGEMENT_PARTICIPATION_(Any p0) { NativeInvoker.Invoke(0xA75EAC69F59E96E7, (ulong)p0); }
        internal static void NETWORK_EARN_FROM_FMBB_PHONECALL_MISSION_(Any p0) { NativeInvoker.Invoke(0xC5156361F26E2212, (ulong)p0); }
        internal static void NETWORK_EARN_FROM_BUSINESS_HUB_SELL_(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x0B39CF0D53F1C883, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_EARN_FROM_FMBB_BOSS_WORK_(Any p0) { NativeInvoker.Invoke(0x1FDA0AA679C9919B, (ulong)p0); }
        internal static void NETWORK_EARN_FMBB_WAGE_BONUS_(Any p0) { NativeInvoker.Invoke(0xFFFBA1B1F7C0B6F4, (ulong)p0); }
        internal static BOOL NETWORK_CAN_SPEND_MONEY(Any p0, BOOL p1, BOOL p2, BOOL p3, Any p4, Any p5) { return NativeInvoker.Invoke<BOOL>(0xAB3CAA6B422164DA, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static BOOL NETWORK_CAN_SPEND_MONEY_2_(Any p0, BOOL p1, BOOL p2, BOOL p3, Any* p4, Any p5, Any p6) { return NativeInvoker.Invoke<BOOL>(0x7303E27CC6532080, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static void NETWORK_BUY_ITEM(int amount, Hash item, Any p2, Any p3, BOOL p4, char* item_name, Any p6, Any p7, Any p8, BOOL p9) { NativeInvoker.Invoke(0xF0077C797F66A355, (ulong)amount, (ulong)item, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)item_name, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9); }
        internal static void NETWORK_SPENT_TAXI(int amount, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x17C3A7D31EAE39F9, (ulong)amount, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_PAY_EMPLOYEE_WAGE(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x5FD5ED82CBBE9989, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_PAY_UTILITY_BILL(int amount, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xAFE08B35EC0C9EAE, (ulong)amount, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_PAY_MATCH_ENTRY_FEE(int amount, char* matchId, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0x9346E14F2AF74D46, (ulong)amount, (ulong)matchId, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_BETTING(int amount, int p1, char* matchId, BOOL p3, BOOL p4) { NativeInvoker.Invoke(0x1C436FD11FFA692F, (ulong)amount, (ulong)p1, (ulong)matchId, (ulong)p3, (ulong)p4); }
        internal static void NETWORK_SPENT_WAGER_(Any p0, Any p1, int amount) { NativeInvoker.Invoke(0xD99DB210089617FE, (ulong)p0, (ulong)p1, (ulong)amount); }
        internal static void NETWORK_SPENT_IN_STRIPCLUB(Any p0, BOOL p1, Any p2, BOOL p3) { NativeInvoker.Invoke(0xEE99784E4467689C, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_BUY_HEALTHCARE(int cost, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xD9B067E55253E3DD, (ulong)cost, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_BUY_AIRSTRIKE(int cost, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x763B4BD305338F19, (ulong)cost, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_BUY_BACKUP_GANG(int p0, int p1, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0xA3EDDAA42411D3B9, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_BUY_HELI_STRIKE(int cost, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x81AA4610E3FD3A69, (ulong)cost, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_AMMO_DROP(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xB162DC95C0A3317B, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_BUY_BOUNTY(int amount, Player victim, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0x7B718E197453F2D9, (ulong)amount, (ulong)victim, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_BUY_PROPERTY(int cost, Hash propertyName, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0x650A08A280870AF6, (ulong)cost, (ulong)propertyName, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_BUY_SMOKES(int p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x75AF80E61248EEBD, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_HELI_PICKUP(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x7BF1D73DB2ECA492, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_BOAT_PICKUP(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x524EE43A37232C00, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_BULL_SHARK(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xA6DD8458CE24012C, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_CASH_DROP(int amount, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x289016EC778D60E0, (ulong)amount, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_HIRE_MUGGER(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xE404BFB981665BF0, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_ROBBED_BY_MUGGER(int amount, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x995A65F15F581359, (ulong)amount, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_HIRE_MERCENARY(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xE7B80E2BF9D80BD6, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_BUY_WANTEDLEVEL(Any p0, Any* p1, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0xE1B13771A843C4F6, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_BUY_OFFTHERADAR(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xA628A745E2275C5D, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_BUY_REVEAL_PLAYERS(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x6E176F1B18BC0637, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_CARWASH(Any p0, Any p1, Any p2, BOOL p3, BOOL p4) { NativeInvoker.Invoke(0xEC03C719DB2F4306, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void NETWORK_SPENT_CINEMA(Any p0, Any p1, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0x6B38ECB05A63A685, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_TELESCOPE(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x7FE61782AD94CC09, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_HOLDUPS(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xD9B86B9872039763, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_BUY_PASSIVE_MODE(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x6D3A430D1A809179, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_BANK_INTEREST(int p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xCA230C9682556CF1, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_PROSTITUTES(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xB21B89501CFAC79E, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_ARREST_BAIL(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x812F5488B1B2A299, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_PAY_VEHICLE_INSURANCE_PREMIUM(int amount, Hash vehicleModel, Any* gamerHandle, BOOL notBankrupt, BOOL hasTheMoney) { NativeInvoker.Invoke(0x9FF28D88C766E3E8, (ulong)amount, (ulong)vehicleModel, (ulong)gamerHandle, (ulong)notBankrupt, (ulong)hasTheMoney); }
        internal static void NETWORK_SPENT_CALL_PLAYER(Any p0, Any* p1, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0xACDE7185B374177C, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_BOUNTY(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x29B260B84947DFCC, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_FROM_ROCKSTAR(int p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x6A445B64ED7ABEB5, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static Any N_0x9B5016A6433A68C5() { return NativeInvoker.Invoke<Any>(0x9B5016A6433A68C5); } // 0x9B5016A6433A68C5 0xBD64F1B7 b323, (ulong)9B5016A6433A68C5); }
        internal static char* PROCESS_CASH_GIFT(int* p0, int* p1, char* p2) { return (char*)NativeInvoker.Invoke<IntPtr>(0x20194D48EAEC9A41, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0xCD4D66B43B1DD28D(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0xCD4D66B43B1DD28D, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_PLAYER_HEALTHCARE(int p0, int p1, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0x7C99101F7FCE2EE5, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_NO_COPS(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xD5BB406F4E04019F, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_REQUEST_JOB(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x8204DA7934DF3155, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_REQUEST_HEIST(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x9D26502BB97BFE62, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_BUY_FAIRGROUND_RIDE(int amount, Any p1, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0x8A7B3952DD64D2B5, (ulong)amount, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static BOOL N_0x7C4FCCD2E4DEB394() { return NativeInvoker.Invoke<BOOL>(0x7C4FCCD2E4DEB394); } // 0x7C4FCCD2E4DEB394 0x468CC978 b323, (ulong)7C4FCCD2E4DEB394); }
        internal static void NETWORK_SPENT_JOB_SKIP_(int amount, char* matchId, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0x28F174A67B8D0C2F, (ulong)amount, (ulong)matchId, (ulong)p2, (ulong)p3); }
        internal static BOOL NETWORK_SPENT_BOSS_(int amount, BOOL p1, BOOL p2) { return NativeInvoker.Invoke<BOOL>(0xFFBE02CD385356BD, (ulong)amount, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_PAY_GOON_(int p0, int p1, int amount) { NativeInvoker.Invoke(0x08A1B82B91900682, (ulong)p0, (ulong)p1, (ulong)amount); }
        internal static void NETWORK_SPENT_PAY_BOSS_(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0xDBC966A01C02BCA7, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_MOVE_YACHT_(int amount, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xE7DF4E0545DFB56E, (ulong)amount, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_RENAME_ORGANIZATION_(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0xFC4EE00A7B3BFB76, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_BUY_CONTRABAND_(int p0, int p1, Hash p2, BOOL p3, BOOL p4) { NativeInvoker.Invoke(0x30FD873ECE50E9F6, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void NETWORK_SPENT_VIP_UTILITY_CHARGES_(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x5182A339A3474510, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0x112209CE0290C03A(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x112209CE0290C03A, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0xED5FD7AF10F5E262(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xED5FD7AF10F5E262, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x0D30EB83668E63C5(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x0D30EB83668E63C5, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_PA_SERVICE_DANCER_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xB49ECA122467D05F, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0xE23ADC6FCB1F29AE(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0xE23ADC6FCB1F29AE, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_PA_SERVICE_HELI_PICKUP_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x0FE8E1FCD2B86B33, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x69EF772B192614C1(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x69EF772B192614C1, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x8E243837643D9583(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x8E243837643D9583, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0xBD0EFB25CCA8F97A(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xBD0EFB25CCA8F97A, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0xA95F667A755725DA(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xA95F667A755725DA, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_PURCHASE_WAREHOUSE_(int amount, Any* data, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0x33981D6804E62F49, (ulong)amount, (ulong)data, (ulong)p2, (ulong)p3); }
        internal static void N_0x4128464231E3CA0B(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x4128464231E3CA0B, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x2FAB6614CE22E196(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x2FAB6614CE22E196, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_ORDER_WAREHOUSE_VEHICLE_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x05F04155A226FBBF, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_ORDER_BODYGUARD_VEHICLE_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xE8B0B270B6E7C76E, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_JUKEBOX_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x5BCDE0F640C773D2, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x998E18CEB44487FC(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x998E18CEB44487FC, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0xFA07759E6FDDD7CF(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xFA07759E6FDDD7CF, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x6FD97159FE3C971A(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x6FD97159FE3C971A, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x675D19C6067CAE08(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x675D19C6067CAE08, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0xA51B086B0B2C0F7A(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xA51B086B0B2C0F7A, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_BA_SERVICE_(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0xD7CCCBA28C4ECAF0, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void NETWORK_SPENT_BUSINESS_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x0035BB914316F1E3, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x5F456788B05FAEAC(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x5F456788B05FAEAC, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_VEHICLE_EXPORT_MODS_(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9) { NativeInvoker.Invoke(0xA75CCF58A60A5FD1, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9); }
        internal static void N_0xB4C2EC463672474E(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xB4C2EC463672474E, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x2AFC2D19B50797F2(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x2AFC2D19B50797F2, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_IMPORT_EXPORT_REPAIR_(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0xC1952F3773BA18FE, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_PURCHASE_HANGAR_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xCCB339CC970452DA, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_UPGRADE_HANGAR_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x615EB504B0788DAF, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_HANGAR_UTILITY_CHARGES_(int amount, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xB18AC2ECBB15CB6A, (ulong)amount, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_HANGAR_STAFF_CHARGES_(int amount, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xB1F1346FD57685D7, (ulong)amount, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_BUY_TRUCK_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xAC272C0AE01B4BD8, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_UPGRADE_TRUCK_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x365E877C61D6988B, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_BUY_BUNKER_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x12D148D26538D0F9, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_UPGRADE_BUNKER_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x0C82D21A77C22D49, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_EARN_FROM_SELL_BUNKER_(int amount, Hash bunkerHash) { NativeInvoker.Invoke(0x9251B6ABF2D0A5B4, (ulong)amount, (ulong)bunkerHash); }
        internal static void NETWORK_SPENT_BALLISTIC_EQUIPMENT_(int amount, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x5D97630A8A0EF123, (ulong)amount, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_EARN_FROM_RDR_BONUS_(int amount, Any p1) { NativeInvoker.Invoke(0x7A5349B773584675, (ulong)amount, (ulong)p1); }
        internal static void NETWORK_EARN_FROM_WAGE_PAYMENT_(int amount) { NativeInvoker.Invoke(0x35F8DA0E8A31EF1B, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_WAGE_PAYMENT_BONUS_(int amount) { NativeInvoker.Invoke(0x005ACA7100BD101D, (ulong)amount); }
        internal static void NETWORK_SPENT_BUY_BASE_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x4EA3F425C7744D21, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_UPGRADE_BASE_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x3DD3F33A5D55EA6F, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_BUY_TILTROTOR_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x0CCE73BC7A11E885, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_UPGRADE_TILTROTOR_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x165E135D6DFA2907, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_EMPLOY_ASSASSINS_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x5BBBD92186E1F1C5, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_GANGOPS_CANNON_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x771ADB0E7635B7BF, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_GANGOPS_START_MISSION_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xDA947AE8880D5C18, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_CASINO_HEIST_SKIP_MISSION_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x487009DD91D93429, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_EARN_FROM_SELL_BASE_(int amount, Hash @baseNameHash) { NativeInvoker.Invoke(0x0E1E2FF3F4EC11AA, (ulong)amount, (ulong)@baseNameHash); }
        internal static void NETWORK_EARN_FROM_TARGET_REFUND_(int amount, int p1) { NativeInvoker.Invoke(0x5B669CF2299A271F, (ulong)amount, (ulong)p1); }
        internal static void NETWORK_EARN_FROM_GANGOPS_WAGES_(int amount, int p1) { NativeInvoker.Invoke(0x2DCB19ABAB0380A8, (ulong)amount, (ulong)p1); }
        internal static void NETWORK_EARN_FROM_GANGOPS_WAGES_BONUS_(int amount, int p1) { NativeInvoker.Invoke(0x15BB2A5C757EB91F, (ulong)amount, (ulong)p1); }
        internal static void NETWORK_EARN_FROM_DAR_CHALLENGE_(int amount, Any p1) { NativeInvoker.Invoke(0xCAC672087B4A24AB, (ulong)amount, (ulong)p1); }
        internal static void NETWORK_EARN_FROM_DOOMSDAY_FINALE_BONUS_(int amount, Hash vehicleHash) { NativeInvoker.Invoke(0x128A747F4A230952, (ulong)amount, (ulong)vehicleHash); }
        internal static void NETWORK_EARN_FROM_GANGOPS_AWARDS_(int amount, char* unk, Any p2) { NativeInvoker.Invoke(0xA9A31475F530DFDA, (ulong)amount, (ulong)unk, (ulong)p2); }
        internal static void NETWORK_EARN_FROM_GANGOPS_ELITE_(int amount, char* unk, int actIndex) { NativeInvoker.Invoke(0x2597A0D4A4FC2C77, (ulong)amount, (ulong)unk, (ulong)actIndex); }
        internal static void NETWORK_RIVAL_DELIVERY_COMPLETED_(int earnedMoney) { NativeInvoker.Invoke(0x1B882107C23A9022, (ulong)earnedMoney); }
        internal static void NETWORK_SPENT_GANGOPS_START_STRAND_(int type, int amount, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0xA19EC0786E326E06, (ulong)type, (ulong)amount, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_GANGOPS_TRIP_SKIP_(int amount, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x5ECE6FD7B4EC8D6A, (ulong)amount, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_EARN_FROM_GANGOPS_JOBS_PREP_PARTICIPATION_(int amount) { NativeInvoker.Invoke(0xED26584F6BDCBBFD, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_GANGOPS_JOBS_SETUP_(int amount, char* unk) { NativeInvoker.Invoke(0xA9160796D47A2CF8, (ulong)amount, (ulong)unk); }
        internal static void NETWORK_EARN_FROM_GANGOPS_JOBS_FINALE_(int amount, char* unk) { NativeInvoker.Invoke(0x1C121FC9545E0D52, (ulong)amount, (ulong)unk); }
        internal static void N_0x2A7CEC72C3443BCC(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x2A7CEC72C3443BCC, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0xE0F82D68C7039158(Any p0) { NativeInvoker.Invoke(0xE0F82D68C7039158, (ulong)p0); }
        internal static void N_0xB4DEAE67F35E2ACD(Any p0) { NativeInvoker.Invoke(0xB4DEAE67F35E2ACD, (ulong)p0); }
        internal static void NETWORK_EARN_FROM_BB_EVENT_BONUS_(int amount) { NativeInvoker.Invoke(0xFDD8D2440DAF1590, (ulong)amount); }
        internal static void N_0x2A93C46AAB1EACC9(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x2A93C46AAB1EACC9, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x226C284C830D0CA8(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x226C284C830D0CA8, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_EARN_FROM_HACKER_TRUCK_MISSION_(Any p0, int amount, Any p2, Any p3) { NativeInvoker.Invoke(0xE8815FE993896AD3, (ulong)p0, (ulong)amount, (ulong)p2, (ulong)p3); }
        internal static void N_0xED76D195E6E3BF7F(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xED76D195E6E3BF7F, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x1DC9B749E7AE282B(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x1DC9B749E7AE282B, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0xC6E74CF8C884C880(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { NativeInvoker.Invoke(0xC6E74CF8C884C880, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static void N_0x65482BFD0923C8A1(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { NativeInvoker.Invoke(0x65482BFD0923C8A1, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static void NETWORK_SPENT_RDRHATCHET_BONUS_(int amount, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xE284D46FFDB82E36, (ulong)amount, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_NIGHTCLUB_ENTRY_FEE_(Player player, int amount, Any p1, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0x876056684281655D, (ulong)player, (ulong)amount, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_NIGHTCLUB_BAR_DRINK_(int amount, Any p1, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0xDD21B016E4289465, (ulong)amount, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_BOUNTY_HUNTER_MISSION_(int amount, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x1BEA0CD93470BB1F, (ulong)amount, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_REHIRE_DJ_(int amount, Any p1, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0xF6C8A544E4CF14FC, (ulong)amount, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_ARENA_JOIN_SPECTATOR_(int amount, Any p1, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0x14EAEA58F93B55AF, (ulong)amount, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_EARN_FROM_ARENA_SKILL_LEVEL_PROGRESSION_(int amount, Any p1) { NativeInvoker.Invoke(0xE08256F972C7BB2C, (ulong)amount, (ulong)p1); }
        internal static void NETWORK_EARN_FROM_ARENA_CAREER_PROGRESSION_(int amount, Any p1) { NativeInvoker.Invoke(0x0F99F70C61F14619, (ulong)amount, (ulong)p1); }
        internal static void NETWORK_SPENT_MAKE_IT_RAIN_(int amount, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xE5F5A060439C2F5D, (ulong)amount, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SPENT_BUY_ARENA_(int amount, BOOL p1, BOOL p2, char* p3) { NativeInvoker.Invoke(0x40D5DA9550B7CB46, (ulong)amount, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_UPGRADE_ARENA_(int amount, BOOL p1, BOOL p2, char* p3) { NativeInvoker.Invoke(0x037ABB06825D7AB1, (ulong)amount, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_ARENA_SPECTATOR_BOX_(int amount, Any p1, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0x7049BF858601DC0F, (ulong)amount, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_SPIN_THE_WHEEL_PAYMENT_(int amount, Any p1, BOOL p2) { NativeInvoker.Invoke(0x9A5BD1D0000B339C, (ulong)amount, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_EARN_FROM_SPIN_THE_WHEEL_CASH_(int amount) { NativeInvoker.Invoke(0x676C48776CACBB5A, (ulong)amount); }
        internal static void NETWORK_SPENT_ARENA_PREMIUM_(int amount, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x619496D837EFD920, (ulong)amount, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_EARN_FROM_ARENA_WAR_(int amount, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x631F1CB8FB4130AA, (ulong)amount, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_EARN_FROM_ASSASSINATE_TARGET_KILLED_2_(int amount) { NativeInvoker.Invoke(0x5E7AE8AABE8B7C0D, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_BB_EVENT_CARGO_(int amount) { NativeInvoker.Invoke(0xA82959062361B259, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_RC_TIME_TRIAL_(int amount) { NativeInvoker.Invoke(0xDFF49EE984E7AAE8, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_DAILY_OBJECTIVE_EVENT_(int amount) { NativeInvoker.Invoke(0x5128DF14A5BB86FC, (ulong)amount); }
        internal static void NETWORK_SPENT_CASINO_MEMBERSHIP_(int amount, BOOL p1, BOOL p2, int p3) { NativeInvoker.Invoke(0xFBBE0570EDF39D46, (ulong)amount, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_BUY_CASINO_(int amount, BOOL p1, BOOL p2, Any* data) { NativeInvoker.Invoke(0x34A6FC4D06C4DA0F, (ulong)amount, (ulong)p1, (ulong)p2, (ulong)data); }
        internal static void NETWORK_SPENT_UPGRADE_CASINO_(int amount, BOOL p1, BOOL p2, Any* data) { NativeInvoker.Invoke(0x4740D62BC1B4EBEA, (ulong)amount, (ulong)p1, (ulong)p2, (ulong)data); }
        internal static void NETWORK_SPENT_CASINO_GENERIC_(int amount, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x88BF9B612B84D3C3, (ulong)amount, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void NETWORK_EARN_FROM_TIME_TRIAL_WIN_(int amount) { NativeInvoker.Invoke(0x0819DB99FD2FBBD8, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_COLLECTABLES_ACTION_FIGURES_(int amount) { NativeInvoker.Invoke(0x5517F90043466049, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_COMPLETE_COLLECTION_(int amount) { NativeInvoker.Invoke(0x83AD64F53F4E9483, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_SELLING_VEHICLE_(int amount, Any p1, Any p2) { NativeInvoker.Invoke(0x8BCB27A057DF7B7F, (ulong)amount, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_EARN_FROM_CASINO_MISSION_REWARD_(int amount) { NativeInvoker.Invoke(0x566FD402B25787DE, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_CASINO_STORY_MISSION_REWARD_(int amount) { NativeInvoker.Invoke(0xAC95ED552157E092, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_CASINO_MISSION_PARTICIPATION_(int amount) { NativeInvoker.Invoke(0x09E8F18641BE2575, (ulong)amount); }
        internal static void NETWORK_EARN_FROM_CASINO_AWARD_(int amount, Hash hash) { NativeInvoker.Invoke(0x973A9781A34F8DEB, (ulong)amount, (ulong)hash); }
        internal static void N_0x870289A558348378(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x870289A558348378, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x5574637681911FDA(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x5574637681911FDA, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_CASINO_HEIST_(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9, Any p10) { NativeInvoker.Invoke(0xD30E8392F407C328, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9, (ulong)p10); }
        internal static void N_0xB5B58E24868CB09E(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0xB5B58E24868CB09E, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void NETWORK_SPENT_ARCADE_GAME_(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0xEAD3D81F2C3A1458, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void NETWORK_SPENT_ARCADE_GENERIC_(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x43AA7FAC4E6D6687, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void NETWORK_EARN_CASINO_HEIST_(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { NativeInvoker.Invoke(0x72E7C7B9615FA3C3, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static void N_0x4C3B75694F7E0D9C(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x4C3B75694F7E0D9C, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0xD29334ED1A256DBF(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0xD29334ED1A256DBF, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void N_0xA95CFB4E02390842(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0xA95CFB4E02390842, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0x0DD362F14F18942A(int amount, Any p1, Any p2) { NativeInvoker.Invoke(0x0DD362F14F18942A, (ulong)amount, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_EARN_CASINO_HEIST_BONUS_(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x3EC7471E6909798A, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void NETWORK_EARN_FROM_COLLECTION_ITEM_(int amount, Any p1) { NativeInvoker.Invoke(0x84FF63BD4966F33D, (ulong)amount, (ulong)p1); }
        internal static void NETWORK_EARN_COLLECTABLE_COMPLETED_COLLECTION_(int amount, Any p1) { NativeInvoker.Invoke(0x5C9B198AF5A54FA6, (ulong)amount, (ulong)p1); }
        internal static void N_0xDE68E30D89F97132(int amount, Any p1) { NativeInvoker.Invoke(0xDE68E30D89F97132, (ulong)amount, (ulong)p1); }
        internal static void N_0xE2E244AB823B4483(int amount, Any p1) { NativeInvoker.Invoke(0xE2E244AB823B4483, (ulong)amount, (ulong)p1); }
        internal static void NETWORK_SPENT_BEACH_PARTY_GENERIC_(Any p0) { NativeInvoker.Invoke(0x54ABA22FA6371249, (ulong)p0); }
        internal static void NETWORK_SPENT_SUBMARINE_(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { NativeInvoker.Invoke(0x6C8BC1488527AAAB, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static void NETWORK_SPENT_CASINO_CLUB_GENERIC_(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8) { NativeInvoker.Invoke(0xC991C255AA6D90B2, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8); }
        internal static void N_0x90CD7C6871FBF1B4(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x90CD7C6871FBF1B4, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_UPGRADE_SUB_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x89049A84065CE68E, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_ISLAND_HEIST_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xE86689E5F82DE429, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_EARN_ISLAND_HEIST_(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { NativeInvoker.Invoke(0xD21D111C46BA9F15, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static void N_0xA51338E0DCCD4065(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0xA51338E0DCCD4065, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0xE2BB399D90942091(Any p0, Any p1) { NativeInvoker.Invoke(0xE2BB399D90942091, (ulong)p0, (ulong)p1); }
        internal static void NETWORK_SPENT_AUTOSHOP_PROPERTY_UTILITY_FEE_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xB40F96D6D252839B, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_CARCLUB_MEMBERSHIP_(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x1464E17207CD36E2, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void NETWORK_SPENT_CARCLUB_(Any p0, BOOL p1, BOOL p2, Any p3) { NativeInvoker.Invoke(0x925227803A0EAA1B, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_AUTOSHOP_MODIFICATIONS_(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x9BEA350D7C48061B, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void NETWORK_SPENT_CARCLUB_TAKEOVER_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xD1E46824E6FB92B5, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_BUY_AUTOSHOP_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xEEB7E5D1FEB20869, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_UPGRADE_AUTOSHOP_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xDD829AA198FDC46C, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_EARN_FROM_AUTOSHOP_BUSINESS_(Any p0, Any p1) { NativeInvoker.Invoke(0x36A7FD5A7194B03E, (ulong)p0, (ulong)p1); }
        internal static void NETWORK_EARN_FROM_AUTOSHOP_INCOME_(Any p0) { NativeInvoker.Invoke(0xC66D1CF99ED7FE25, (ulong)p0); }
        internal static void NETWORK_EARN_FROM_CARCLUB_MEMBERSHIP_(Any p0) { NativeInvoker.Invoke(0xBC6227792A188E2E, (ulong)p0); }
        internal static void NETWORK_EARN_FROM_VEHICLE_AUTOSHOP_(Any p0, Any p1) { NativeInvoker.Invoke(0x533073E8A596008C, (ulong)p0, (ulong)p1); }
        internal static void NETWORK_EARN_FROM_VEHICLE_AUTOSHOP_BONUS_(Any p0) { NativeInvoker.Invoke(0xFE65AFE7308E32B2, (ulong)p0); }
        internal static void NETWORK_EARN_FROM_TUNER_AWARD_(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0xB846F547D3792DF6, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_EARN_FROM_TUNER_FINALE_(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0xBCB266247193AC61, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void NETWORK_EARN_FROM_UPGRADE_AUTOSHOP_LOCATION_(Any p0, Any p1) { NativeInvoker.Invoke(0xC10322A8D3E061EE, (ulong)p0, (ulong)p1); }
        internal static void NETWORK_SPENT_IM_ABILITY_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x93AA4165CB67E925, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SPENT_FROM_BANK_(Any p0, Any p1, Any p2, BOOL p3) { NativeInvoker.Invoke(0xB9F7A469460E7A4A, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static int NETWORK_GET_VC_BANK_BALANCE() { return NativeInvoker.Invoke<int>(0x76EF28DA05EA395A); } // 0x76EF28DA05EA395A 0x16184FB5 b323, (ulong)76EF28DA05EA395A); }
        internal static int NETWORK_GET_VC_WALLET_BALANCE(int characterSlot) { return NativeInvoker.Invoke<int>(0xA40F9C2623F6A8B5, (ulong)characterSlot); }
        internal static int NETWORK_GET_VC_BALANCE() { return NativeInvoker.Invoke<int>(0x5CBAD97E059E1B94); } // 0x5CBAD97E059E1B94 0xADF8F882 b323, (ulong)5CBAD97E059E1B94); }
        internal static int NETWORK_GET_EVC_BALANCE() { return NativeInvoker.Invoke<int>(0x5D1E75F91C07DEE5); } // 0x5D1E75F91C07DEE5 0xF1EDB7F4 b323, (ulong)5D1E75F91C07DEE5); }
        internal static int NETWORK_GET_PVC_BALANCE() { return NativeInvoker.Invoke<int>(0x4F54F3B6C202FB4E); } // 0x4F54F3B6C202FB4E 0x56485B56 b323, (ulong)4F54F3B6C202FB4E); }
        internal static char* NETWORK_GET_STRING_WALLET_BALANCE(int characterSlot) { return (char*)NativeInvoker.Invoke<IntPtr>(0xF9B10B529DCFB33B, (ulong)characterSlot); }
        internal static char* NETWORK_GET_STRING_BANK_BALANCE() { return (char*)NativeInvoker.Invoke<IntPtr>(0xA6FA3979BED01B81); } // 0xA6FA3979BED01B81 0xAA7EA3BD b323, (ulong)A6FA3979BED01B81); }
        internal static char* NETWORK_GET_STRING_BANK_WALLET_BALANCE() { return (char*)NativeInvoker.Invoke<IntPtr>(0x700AF71AE615E6DD); } // 0x700AF71AE615E6DD 0x7D4FD28C b323, (ulong)700AF71AE615E6DD); }
        internal static BOOL NETWORK_GET_VC_WALLET_BALANCE_IS_NOT_LESS_THAN_(int amount, int characterSlot) { return NativeInvoker.Invoke<BOOL>(0xED5AB8860415BABA, (ulong)amount, (ulong)characterSlot); }
        internal static BOOL NETWORK_GET_VC_BANK_BALANCE_IS_NOT_LESS_THAN_(int amount) { return NativeInvoker.Invoke<BOOL>(0xA31FD6A0865B6D14, (ulong)amount); }
        internal static BOOL NETWORK_GET_VC_BANK_WALLET_BALANCE_IS_NOT_LESS_THAN_(int amount, int characterSlot) { return NativeInvoker.Invoke<BOOL>(0xDC18531D7019A535, (ulong)amount, (ulong)characterSlot); }
        internal static int NETWORK_GET_PVC_TRANSFER_BALANCE() { return NativeInvoker.Invoke<int>(0x13A8DE2FD77D04F3); } // 0x13A8DE2FD77D04F3 0xC670C814 b323, (ulong)13A8DE2FD77D04F3); }
        internal static BOOL N_0x08E8EEADFD0DC4A0(int amount) { return NativeInvoker.Invoke<BOOL>(0x08E8EEADFD0DC4A0, (ulong)amount); }
        internal static BOOL NETWORK_CAN_RECEIVE_PLAYER_CASH(Any p0, Any p1, Any p2, Any p3) { return NativeInvoker.Invoke<BOOL>(0x5D17BE59D2123284, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static int NETWORK_GET_REMAINING_TRANSFER_BALANCE() { return NativeInvoker.Invoke<int>(0xEA560AC9EEB1E19B); } // 0xEA560AC9EEB1E19B 0xA9021211 b323, (ulong)EA560AC9EEB1E19B); }
        internal static int WITHDRAW_VC(int amount) { return NativeInvoker.Invoke<int>(0xF70EFA14FE091429, (ulong)amount); }
        internal static BOOL DEPOSIT_VC(int amount) { return NativeInvoker.Invoke<BOOL>(0xE260E0BB9CD995AC, (ulong)amount); }
        internal static BOOL N_0xE154B48B68EF72BC(Any p0) { return NativeInvoker.Invoke<BOOL>(0xE154B48B68EF72BC, (ulong)p0); }
        internal static BOOL N_0x6FCF8DDEA146C45B(Any p0) { return NativeInvoker.Invoke<BOOL>(0x6FCF8DDEA146C45B, (ulong)p0); }
    }

    internal static unsafe class NETSHOPPING
    {
        internal static BOOL NET_GAMESERVER_USE_SERVER_TRANSACTIONS_() { return NativeInvoker.Invoke<BOOL>(0x7D2708796355B20B); } // 0x7D2708796355B20B b1290, (ulong)7D2708796355B20B); }
        internal static BOOL NET_GAMESERVER_CATALOG_ITEM_EXISTS_(char* name) { return NativeInvoker.Invoke<BOOL>(0xBD4D7EAF8A30F637, (ulong)name); }
        internal static BOOL NET_GAMESERVER_CATALOG_ITEM_EXISTS_HASH_(Hash hash) { return NativeInvoker.Invoke<BOOL>(0x247F0F73A182EA0B, (ulong)hash); }
        internal static int NET_GAMESERVER_GET_PRICE(Hash itemHash, Hash categoryHash, BOOL p2) { return NativeInvoker.Invoke<int>(0xC27009422FCCA88D, (ulong)itemHash, (ulong)categoryHash, (ulong)p2); }
        internal static BOOL NET_GAMESERVER_CATALOG_IS_READY_() { return NativeInvoker.Invoke<BOOL>(0x3C4487461E9B0DCB); } // 0x3C4487461E9B0DCB b323, (ulong)3C4487461E9B0DCB); }
        internal static BOOL NET_GAMESERVER_IS_CATALOG_VALID_() { return NativeInvoker.Invoke<BOOL>(0x2B949A1E6AEC8F6A); } // 0x2B949A1E6AEC8F6A b323, (ulong)2B949A1E6AEC8F6A); }
        internal static Any N_0x85F6C9ABA1DE2BCF() { return NativeInvoker.Invoke<Any>(0x85F6C9ABA1DE2BCF); } // 0x85F6C9ABA1DE2BCF b323, (ulong)85F6C9ABA1DE2BCF); }
        internal static Any N_0x357B152EF96C30B6() { return NativeInvoker.Invoke<Any>(0x357B152EF96C30B6); } // 0x357B152EF96C30B6 b323, (ulong)357B152EF96C30B6); }
        internal static BOOL NET_GAMESERVER_GET_CATALOG_STATE_(int* state) { return NativeInvoker.Invoke<BOOL>(0xCF38DAFBB49EDE5E, (ulong)state); }
        internal static Any N_0xE3E5A7C64CA2C6ED() { return NativeInvoker.Invoke<Any>(0xE3E5A7C64CA2C6ED); } // 0xE3E5A7C64CA2C6ED b323, (ulong)E3E5A7C64CA2C6ED); }
        internal static BOOL N_0x0395CB47B022E62C(int* p0) { return NativeInvoker.Invoke<BOOL>(0x0395CB47B022E62C, (ulong)p0); }
        internal static BOOL NET_GAMESERVER_START_SESSION(int charSlot) { return NativeInvoker.Invoke<BOOL>(0xA135AC892A58FC07, (ulong)charSlot); }
        internal static BOOL N_0x72EB7BA9B69BF6AB() { return NativeInvoker.Invoke<BOOL>(0x72EB7BA9B69BF6AB); } // 0x72EB7BA9B69BF6AB b323, (ulong)72EB7BA9B69BF6AB); }
        internal static BOOL N_0x170910093218C8B9(int* p0) { return NativeInvoker.Invoke<BOOL>(0x170910093218C8B9, (ulong)p0); }
        internal static BOOL N_0xC13C38E47EA5DF31(int* p0) { return NativeInvoker.Invoke<BOOL>(0xC13C38E47EA5DF31, (ulong)p0); }
        internal static BOOL NET_GAMESERVER_IS_SESSION_VALID(int charSlot) { return NativeInvoker.Invoke<BOOL>(0xB24F0944DA203D9E, (ulong)charSlot); }
        internal static int N_0x74A0FD0688F1EE45(int p0) { return NativeInvoker.Invoke<int>(0x74A0FD0688F1EE45, (ulong)p0); }
        internal static BOOL NET_GAMESERVER_SESSION_APPLY_RECEIVED_DATA(int charSlot) { return NativeInvoker.Invoke<BOOL>(0x2F41D51BA3BCD1F1, (ulong)charSlot); }
        internal static BOOL NET_GAMESERVER_IS_SESSION_REFRESH_PENDING() { return NativeInvoker.Invoke<BOOL>(0x810E8431C0614BF9); } // 0x810E8431C0614BF9 b323, (ulong)810E8431C0614BF9); }
        internal static BOOL NET_GAMESERVER_GET_BALANCE_(BOOL inventory, BOOL playerbalance) { return NativeInvoker.Invoke<BOOL>(0x35A1B3E1D1315CFA, (ulong)inventory, (ulong)playerbalance); }
        internal static BOOL N_0x613F125BA3BD2EB9() { return NativeInvoker.Invoke<BOOL>(0x613F125BA3BD2EB9); } // 0x613F125BA3BD2EB9 b372, (ulong)613F125BA3BD2EB9); }
        internal static BOOL NET_GAMESERVER_GET_TRANSACTION_MANAGER_DATA_(int* p0, BOOL* p1) { return NativeInvoker.Invoke<BOOL>(0x897433D292B44130, (ulong)p0, (ulong)p1); }
        internal static BOOL NET_GAMESERVER_BASKET_START(int* transactionId, Hash categoryHash, Hash actionHash, int flags) { return NativeInvoker.Invoke<BOOL>(0x279F08B1A4B29B7E, (ulong)transactionId, (ulong)categoryHash, (ulong)actionHash, (ulong)flags); }
        internal static BOOL NET_GAMESERVER_BASKET_DELETE_() { return NativeInvoker.Invoke<BOOL>(0xFA336E7F40C0A0D0); } // 0xFA336E7F40C0A0D0 b372, (ulong)FA336E7F40C0A0D0); }
        internal static BOOL NET_GAMESERVER_BASKET_END() { return NativeInvoker.Invoke<BOOL>(0xA65568121DF2EA26); } // 0xA65568121DF2EA26 b323, (ulong)A65568121DF2EA26); }
        internal static BOOL NET_GAMESERVER_BASKET_ADD_ITEM(Any* itemData, int quantity) { return NativeInvoker.Invoke<BOOL>(0xF30980718C8ED876, (ulong)itemData, (ulong)quantity); }
        internal static BOOL NET_GAMESERVER_BASKET_IS_FULL() { return NativeInvoker.Invoke<BOOL>(0x27F76CC6C55AD30E); } // 0x27F76CC6C55AD30E b323, (ulong)27F76CC6C55AD30E); }
        internal static BOOL NET_GAMESERVER_BASKET_APPLY_SERVER_DATA(Any p0, Any* p1) { return NativeInvoker.Invoke<BOOL>(0xE1A0450ED46A7812, (ulong)p0, (ulong)p1); }
        internal static BOOL NET_GAMESERVER_CHECKOUT_START(int transactionId) { return NativeInvoker.Invoke<BOOL>(0x39BE7CEA8D9CC8E6, (ulong)transactionId); }
        internal static BOOL NET_GAMESERVER_BEGIN_SERVICE(int* transactionId, Hash categoryHash, Hash itemHash, Hash actionTypeHash, int value, int flags) { return NativeInvoker.Invoke<BOOL>(0x3C5FD37B5499582E, (ulong)transactionId, (ulong)categoryHash, (ulong)itemHash, (ulong)actionTypeHash, (ulong)value, (ulong)flags); }
        internal static BOOL NET_GAMESERVER_END_SERVICE(int transactionId) { return NativeInvoker.Invoke<BOOL>(0xE2A99A9B524BEFFF, (ulong)transactionId); }
        internal static BOOL NET_GAMESERVER_DELETE_CHARACTER_SLOT_(int slot, BOOL transfer, Hash reason) { return NativeInvoker.Invoke<BOOL>(0x51F1A8E48C3D2F6D, (ulong)slot, (ulong)transfer, (ulong)reason); }
        internal static int NET_GAMESERVER_DELETE_CHARACTER_SLOT_GET_STATUS_() { return NativeInvoker.Invoke<int>(0x0A6D923DFFC9BD89); } // 0x0A6D923DFFC9BD89 b323, (ulong)0A6D923DFFC9BD89); }
        internal static BOOL NET_GAMESERVER_DELETE_SET_TELEMETRY_NONCE_SEED() { return NativeInvoker.Invoke<BOOL>(0x112CEF1615A1139F); } // 0x112CEF1615A1139F b323, (ulong)112CEF1615A1139F); }
        internal static BOOL NET_GAMESERVER_TRANSFER_BANK_TO_WALLET_(int charSlot, int amount) { return NativeInvoker.Invoke<BOOL>(0xD47A2C1BA117471D, (ulong)charSlot, (ulong)amount); }
        internal static BOOL NET_GAMESERVER_TRANSFER_WALLET_TO_BANK_(int charSlot, int amount) { return NativeInvoker.Invoke<BOOL>(0xC2F7FE5309181C7D, (ulong)charSlot, (ulong)amount); }
        internal static int NET_GAMESERVER_TRANSFER_CASH_GET_STATUS_() { return NativeInvoker.Invoke<int>(0x23789E777D14CE44); } // 0x23789E777D14CE44 b323, (ulong)23789E777D14CE44); }
        internal static int NET_GAMESERVER_TRANSFER_CASH_GET_STATUS_2_() { return NativeInvoker.Invoke<int>(0x350AA5EBC03D3BD2); } // 0x350AA5EBC03D3BD2 b323, (ulong)350AA5EBC03D3BD2); }
        internal static BOOL NET_GAMESERVER_TRANSFER_CASH_SET_TELEMETRY_NONCE_SEED_() { return NativeInvoker.Invoke<BOOL>(0x498C1E05CE5F7877); } // 0x498C1E05CE5F7877 b323, (ulong)498C1E05CE5F7877); }
        internal static BOOL NET_GAMESERVER_SET_TELEMETRY_NONCE_SEED(int p0) { return NativeInvoker.Invoke<BOOL>(0x9507D4271988E1AE, (ulong)p0); }
    }

    internal static unsafe class NETWORK
    {
        internal static char* GET_ONLINE_VERSION_() { return (char*)NativeInvoker.Invoke<IntPtr>(0xFCA9373EF340AC0A); } // 0xFCA9373EF340AC0A b323, (ulong)FCA9373EF340AC0A); }
        internal static BOOL NETWORK_IS_SIGNED_IN() { return NativeInvoker.Invoke<BOOL>(0x054354A99211EB96); } // 0x054354A99211EB96 0xADD0B40F b323, (ulong)054354A99211EB96); }
        internal static BOOL NETWORK_IS_SIGNED_ONLINE() { return NativeInvoker.Invoke<BOOL>(0x1077788E268557C2); } // 0x1077788E268557C2 0x6E5BDCE2 b323, (ulong)1077788E268557C2); }
        internal static BOOL N_0xBD545D44CCE70597() { return NativeInvoker.Invoke<BOOL>(0xBD545D44CCE70597); } // 0xBD545D44CCE70597 b323, (ulong)BD545D44CCE70597); }
        internal static Any N_0xEBCAB9E5048434F4() { return NativeInvoker.Invoke<Any>(0xEBCAB9E5048434F4); } // 0xEBCAB9E5048434F4 b323, (ulong)EBCAB9E5048434F4); }
        internal static int N_0x74FB3E29E6D10FA9() { return NativeInvoker.Invoke<int>(0x74FB3E29E6D10FA9); } // 0x74FB3E29E6D10FA9 b323, (ulong)74FB3E29E6D10FA9); }
        internal static Any N_0x7808619F31FF22DB() { return NativeInvoker.Invoke<Any>(0x7808619F31FF22DB); } // 0x7808619F31FF22DB b323, (ulong)7808619F31FF22DB); }
        internal static Any N_0xA0FA4EC6A05DA44E() { return NativeInvoker.Invoke<Any>(0xA0FA4EC6A05DA44E); } // 0xA0FA4EC6A05DA44E b323, (ulong)A0FA4EC6A05DA44E); }
        internal static BOOL NETWORK_HAS_VALID_ROS_CREDENTIALS() { return NativeInvoker.Invoke<BOOL>(0x85443FF4C328F53B); } // 0x85443FF4C328F53B 0x3FB40673 b323, (ulong)85443FF4C328F53B); }
        internal static BOOL N_0x8D11E61A4ABF49CC() { return NativeInvoker.Invoke<BOOL>(0x8D11E61A4ABF49CC); } // 0x8D11E61A4ABF49CC 0xBDC8F63E b323, (ulong)8D11E61A4ABF49CC); }
        internal static BOOL NETWORK_IS_CLOUD_AVAILABLE() { return NativeInvoker.Invoke<BOOL>(0x9A4CF4F48AD77302); } // 0x9A4CF4F48AD77302 0xC7FF5AFC b323, (ulong)9A4CF4F48AD77302); }
        internal static BOOL NETWORK_HAS_SOCIAL_CLUB_ACCOUNT() { return NativeInvoker.Invoke<BOOL>(0x67A5589628E0CFF6); } // 0x67A5589628E0CFF6 0x66EC713F b323, (ulong)67A5589628E0CFF6); }
        internal static BOOL NETWORK_ARE_SOCIAL_CLUB_POLICIES_CURRENT() { return NativeInvoker.Invoke<BOOL>(0xBA9775570DB788CF); } // 0xBA9775570DB788CF 0x358D1D77 b323, (ulong)BA9775570DB788CF); }
        internal static BOOL NETWORK_IS_HOST() { return NativeInvoker.Invoke<BOOL>(0x8DB296B814EDDA07); } // 0x8DB296B814EDDA07 0xE46AC10F b323, (ulong)8DB296B814EDDA07); }
        internal static BOOL N_0x4237E822315D8BA9() { return NativeInvoker.Invoke<BOOL>(0x4237E822315D8BA9); } // 0x4237E822315D8BA9 b323, (ulong)4237E822315D8BA9); }
        internal static BOOL NETWORK_HAVE_ONLINE_PRIVILEGES() { return NativeInvoker.Invoke<BOOL>(0x25CB5A9F37BFD063); } // 0x25CB5A9F37BFD063 0xEF63BFDF b323, (ulong)25CB5A9F37BFD063); }
        internal static BOOL NETWORK_HAS_AGE_RESTRICTED_PROFILE_() { return NativeInvoker.Invoke<BOOL>(0x1353F87E89946207); } // 0x1353F87E89946207 b323, (ulong)1353F87E89946207); }
        internal static BOOL NETWORK_HAVE_USER_CONTENT_PRIVILEGES(int p0) { return NativeInvoker.Invoke<BOOL>(0x72D918C99BCACC54, (ulong)p0); }
        internal static BOOL NETWORK_HAVE_COMMUNICATION_PRIVILEGES(int p0, Player player) { return NativeInvoker.Invoke<BOOL>(0xAEEF48CDF5B6CE7C, (ulong)p0, (ulong)player); }
        internal static BOOL N_0x78321BEA235FD8CD(Any p0, BOOL p1) { return NativeInvoker.Invoke<BOOL>(0x78321BEA235FD8CD, (ulong)p0, (ulong)p1); }
        internal static BOOL NETWORK_CHECK_USER_CONTENT_PRIVILEGES(int p0, int p1, BOOL p2) { return NativeInvoker.Invoke<BOOL>(0x595F028698072DD9, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL NETWORK_CHECK_COMMUNICATION_PRIVILEGES(int p0, int p1, BOOL p2) { return NativeInvoker.Invoke<BOOL>(0x83F28CE49FBBFFBA, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static Any N_0x07EAB372C8841D99(Any p0, Any p1, Any p2) { return NativeInvoker.Invoke<Any>(0x07EAB372C8841D99, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static Any N_0x906CA41A4B74ECA4() { return NativeInvoker.Invoke<Any>(0x906CA41A4B74ECA4); } // 0x906CA41A4B74ECA4 b1493, (ulong)906CA41A4B74ECA4); }
        internal static Any N_0x023ACAB2DC9DC4A4() { return NativeInvoker.Invoke<Any>(0x023ACAB2DC9DC4A4); } // 0x023ACAB2DC9DC4A4 b1493, (ulong)023ACAB2DC9DC4A4); }
        internal static BOOL NETWORK_HAS_SOCIAL_NETWORKING_SHARING_PRIV() { return NativeInvoker.Invoke<BOOL>(0x76BF03FADBF154F5); } // 0x76BF03FADBF154F5 0xEB864288 b323, (ulong)76BF03FADBF154F5); }
        internal static int NETWORK_GET_AGE_GROUP() { return NativeInvoker.Invoke<int>(0x9614B71F8ADB982B); } // 0x9614B71F8ADB982B 0xAB07CBBE b323, (ulong)9614B71F8ADB982B); }
        internal static Any N_0x0CF6CC51AA18F0F8(Any p0, Any p1, Any p2) { return NativeInvoker.Invoke<Any>(0x0CF6CC51AA18F0F8, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL N_0x64E5C4CC82847B73() { return NativeInvoker.Invoke<BOOL>(0x64E5C4CC82847B73); } // 0x64E5C4CC82847B73 b1734, (ulong)64E5C4CC82847B73); }
        internal static void N_0x1F7BC3539F9E0224() { NativeInvoker.Invoke(0x1F7BC3539F9E0224); } // 0x1F7BC3539F9E0224 b1180<, (ulong)1F7BC3539F9E0224); }
        internal static BOOL NETWORK_HAVE_ONLINE_PRIVILEGE_2_() { return NativeInvoker.Invoke<BOOL>(0x5EA784D197556507); } // 0x5EA784D197556507 b323, (ulong)5EA784D197556507); }
        internal static Any N_0xA8ACB6459542A8C8() { return NativeInvoker.Invoke<Any>(0xA8ACB6459542A8C8); } // 0xA8ACB6459542A8C8 b323, (ulong)A8ACB6459542A8C8); }
        internal static void N_0x83FE8D7229593017() { NativeInvoker.Invoke(0x83FE8D7229593017); } // 0x83FE8D7229593017 b323<, (ulong)83FE8D7229593017); }
        internal static Any N_0x53C10C8BD774F2C9() { return NativeInvoker.Invoke<Any>(0x53C10C8BD774F2C9); } // 0x53C10C8BD774F2C9 b1011, (ulong)53C10C8BD774F2C9); }
        internal static BOOL NETWORK_CAN_BAIL() { return NativeInvoker.Invoke<BOOL>(0x580CE4438479CC61); } // 0x580CE4438479CC61 0x60E1FEDF b323, (ulong)580CE4438479CC61); }
        internal static void NETWORK_BAIL(int p0, int p1, int p2) { NativeInvoker.Invoke(0x95914459A87EBA28, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0x283B6062A2C01E9B() { NativeInvoker.Invoke(0x283B6062A2C01E9B); } // 0x283B6062A2C01E9B 0x96E28FE2 b323<, (ulong)283B6062A2C01E9B); }
        internal static Any N_0x8B4FFC790CA131EF(Any p0, Any p1, Any p2, Any p3) { return NativeInvoker.Invoke<Any>(0x8B4FFC790CA131EF, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_TRANSITION_TRACK_(Hash hash, int p1, int p2, int state, int p4) { NativeInvoker.Invoke(0xC3BFED92026A2AAD, (ulong)hash, (ulong)p1, (ulong)p2, (ulong)state, (ulong)p4); }
        internal static Any N_0x04918A41BC9B8157(Any p0, Any p1, Any p2) { return NativeInvoker.Invoke<Any>(0x04918A41BC9B8157, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL NETWORK_CAN_ACCESS_MULTIPLAYER(int* loadingState) { return NativeInvoker.Invoke<BOOL>(0xAF50DA1A3F8B1BA4, (ulong)loadingState); }
        internal static BOOL NETWORK_IS_MULTIPLAYER_DISABLED() { return NativeInvoker.Invoke<BOOL>(0x9747292807126EDA); } // 0x9747292807126EDA 0x05518C0F b323, (ulong)9747292807126EDA); }
        internal static BOOL NETWORK_CAN_ENTER_MULTIPLAYER() { return NativeInvoker.Invoke<BOOL>(0x7E782A910C362C25); } // 0x7E782A910C362C25 0x4A23B9C9 b323, (ulong)7E782A910C362C25); }
        internal static Any NETWORK_SESSION_ENTER(Any p0, Any p1, Any p2, int maxPlayers, Any p4, Any p5) { return NativeInvoker.Invoke<Any>(0x330ED4D05491934F, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)maxPlayers, (ulong)p4, (ulong)p5); }
        internal static BOOL NETWORK_SESSION_FRIEND_MATCHMAKING(int p0, int p1, int maxPlayers, BOOL p3) { return NativeInvoker.Invoke<BOOL>(0x2CFC76E0D087C994, (ulong)p0, (ulong)p1, (ulong)maxPlayers, (ulong)p3); }
        internal static BOOL NETWORK_SESSION_CREW_MATCHMAKING(int p0, int p1, int p2, int maxPlayers, BOOL p4) { return NativeInvoker.Invoke<BOOL>(0x94BC51E9449D917F, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)maxPlayers, (ulong)p4); }
        internal static BOOL NETWORK_SESSION_ACTIVITY_QUICKMATCH(Any p0, Any p1, Any p2, Any p3) { return NativeInvoker.Invoke<BOOL>(0xBE3E347A87ACEB82, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static BOOL NETWORK_SESSION_HOST(int p0, int maxPlayers, BOOL p2) { return NativeInvoker.Invoke<BOOL>(0x6F3D4ED9BEE4E61D, (ulong)p0, (ulong)maxPlayers, (ulong)p2); }
        internal static BOOL NETWORK_SESSION_HOST_CLOSED(int p0, int maxPlayers) { return NativeInvoker.Invoke<BOOL>(0xED34C0C02C098BB7, (ulong)p0, (ulong)maxPlayers); }
        internal static BOOL NETWORK_SESSION_HOST_FRIENDS_ONLY(int p0, int maxPlayers) { return NativeInvoker.Invoke<BOOL>(0xB9CFD27A5D578D83, (ulong)p0, (ulong)maxPlayers); }
        internal static BOOL NETWORK_SESSION_IS_CLOSED_FRIENDS() { return NativeInvoker.Invoke<BOOL>(0xFBCFA2EA2E206890); } // 0xFBCFA2EA2E206890 0x56E75FE4 b323, (ulong)FBCFA2EA2E206890); }
        internal static BOOL NETWORK_SESSION_IS_CLOSED_CREW() { return NativeInvoker.Invoke<BOOL>(0x74732C6CA90DA2B4); } // 0x74732C6CA90DA2B4 0xA95299B9 b323, (ulong)74732C6CA90DA2B4); }
        internal static BOOL NETWORK_SESSION_IS_SOLO() { return NativeInvoker.Invoke<BOOL>(0xF3929C2379B60CCE); } // 0xF3929C2379B60CCE 0x3D2C1916 b323, (ulong)F3929C2379B60CCE); }
        internal static BOOL NETWORK_SESSION_IS_PRIVATE() { return NativeInvoker.Invoke<BOOL>(0xCEF70AA5B3F89BA1); } // 0xCEF70AA5B3F89BA1 0xDB67785D b323, (ulong)CEF70AA5B3F89BA1); }
        internal static BOOL NETWORK_SESSION_END(BOOL p0, BOOL p1) { return NativeInvoker.Invoke<BOOL>(0xA02E59562D711006, (ulong)p0, (ulong)p1); }
        internal static Any N_0xB9351A07A0D458B1(Any p0) { return NativeInvoker.Invoke<Any>(0xB9351A07A0D458B1, (ulong)p0); }
        internal static void NETWORK_SESSION_KICK_PLAYER(Player player) { NativeInvoker.Invoke(0xFA8904DC5F304220, (ulong)player); }
        internal static BOOL NETWORK_SESSION_GET_KICK_VOTE(Player player) { return NativeInvoker.Invoke<BOOL>(0xD6D09A6F32F49EF1, (ulong)player); }
        internal static Any N_0x041C7F2A6C9894E6(Any p0, Any p1, Any p2) { return NativeInvoker.Invoke<Any>(0x041C7F2A6C9894E6, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL NETWORK_JOIN_PREVIOUSLY_FAILED_SESSION() { return NativeInvoker.Invoke<BOOL>(0x59DF79317F85A7E0); } // 0x59DF79317F85A7E0 0x6CDAA7D2 b323, (ulong)59DF79317F85A7E0); }
        internal static BOOL NETWORK_JOIN_PREVIOUSLY_FAILED_TRANSITION() { return NativeInvoker.Invoke<BOOL>(0xFFE1E5B792D92B34); } // 0xFFE1E5B792D92B34 0xBF21818E b323, (ulong)FFE1E5B792D92B34); }
        internal static void NETWORK_SESSION_SET_MATCHMAKING_GROUP(int matchmakingGroup) { NativeInvoker.Invoke(0x49EC8030F5015F8B, (ulong)matchmakingGroup); }
        internal static void NETWORK_SESSION_SET_MATCHMAKING_GROUP_MAX(int playerType, int playerCount) { NativeInvoker.Invoke(0x8B6A4DD0AF9CE215, (ulong)playerType, (ulong)playerCount); }
        internal static int NETWORK_SESSION_GET_MATCHMAKING_GROUP_FREE(int p0) { return NativeInvoker.Invoke<int>(0x56CE820830EF040B, (ulong)p0); }
        internal static void NETWORK_SESSION_ADD_ACTIVE_MATCHMAKING_GROUP(int groupId) { NativeInvoker.Invoke(0xCAE55F48D3D7875C, (ulong)groupId); }
        internal static void N_0xF49ABC20D8552257(Any p0) { NativeInvoker.Invoke(0xF49ABC20D8552257, (ulong)p0); }
        internal static void N_0x4811BBAC21C5FCD5(Any p0) { NativeInvoker.Invoke(0x4811BBAC21C5FCD5, (ulong)p0); }
        internal static void N_0x5539C3EBF104A53A(BOOL p0) { NativeInvoker.Invoke(0x5539C3EBF104A53A, (ulong)p0); }
        internal static void N_0x702BC4D605522539(Any p0) { NativeInvoker.Invoke(0x702BC4D605522539, (ulong)p0); }
        internal static void NETWORK_SESSION_SET_MATCHMAKING_PROPERTY_ID(BOOL p0) { NativeInvoker.Invoke(0x3F52E880AAF6C8CA, (ulong)p0); }
        internal static void NETWORK_SESSION_SET_MATCHMAKING_MENTAL_STATE(Any p0) { NativeInvoker.Invoke(0xF1EEA2DDA9FFA69D, (ulong)p0); }
        internal static void N_0x5ECD378EE64450AB(Any p0) { NativeInvoker.Invoke(0x5ECD378EE64450AB, (ulong)p0); }
        internal static void N_0x59D421683D31835A(Any p0) { NativeInvoker.Invoke(0x59D421683D31835A, (ulong)p0); }
        internal static void N_0x1153FA02A659051C() { NativeInvoker.Invoke(0x1153FA02A659051C); } // 0x1153FA02A659051C 0x57F9BC83 b323<, (ulong)1153FA02A659051C); }
        internal static void NETWORK_SESSION_VALIDATE_JOIN(BOOL p0) { NativeInvoker.Invoke(0xC19F6C8E7865A6FF, (ulong)p0); }
        internal static void NETWORK_ADD_FOLLOWERS(int* p0, int p1) { NativeInvoker.Invoke(0x236406F60CF216D6, (ulong)p0, (ulong)p1); }
        internal static void NETWORK_CLEAR_FOLLOWERS() { NativeInvoker.Invoke(0x058F43EC59A8631A); } // 0x058F43EC59A8631A 0x5E557307 b323<, (ulong)058F43EC59A8631A); }
        internal static void NETWORK_GET_GLOBAL_MULTIPLAYER_CLOCK(int* hours, int* minutes, int* seconds) { NativeInvoker.Invoke(0x6D03BFBD643B2A02, (ulong)hours, (ulong)minutes, (ulong)seconds); }
        internal static void N_0x600F8CB31C7AAB6E(Any p0) { NativeInvoker.Invoke(0x600F8CB31C7AAB6E, (ulong)p0); }
        internal static int NETWORK_GET_TARGETING_MODE_() { return NativeInvoker.Invoke<int>(0xDFFA5BE8381C3314); } // 0xDFFA5BE8381C3314 b463, (ulong)DFFA5BE8381C3314); }
        internal static BOOL NETWORK_FIND_GAMERS_IN_CREW(Any p0) { return NativeInvoker.Invoke<BOOL>(0xE532D6811B3A4D2A, (ulong)p0); }
        internal static BOOL NETWORK_FIND_MATCHED_GAMERS(Any p0, float p1, float p2, float p3) { return NativeInvoker.Invoke<BOOL>(0xF7B2CFDE5C9F700D, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3); }
        internal static BOOL NETWORK_IS_FINDING_GAMERS() { return NativeInvoker.Invoke<BOOL>(0xDDDF64C91BFCF0AA); } // 0xDDDF64C91BFCF0AA 0xA6DAA79F b323, (ulong)DDDF64C91BFCF0AA); }
        internal static BOOL NETWORK_DID_FIND_GAMERS_SUCCEED() { return NativeInvoker.Invoke<BOOL>(0xF9B83B77929D8863); } // 0xF9B83B77929D8863 0xBEDC4503 b323, (ulong)F9B83B77929D8863); }
        internal static int NETWORK_GET_NUM_FOUND_GAMERS() { return NativeInvoker.Invoke<int>(0xA1B043EE79A916FB); } // 0xA1B043EE79A916FB 0xF4B80C7E b323, (ulong)A1B043EE79A916FB); }
        internal static BOOL NETWORK_GET_FOUND_GAMER(Any* p0, Any p1) { return NativeInvoker.Invoke<BOOL>(0x9DCFF2AFB68B3476, (ulong)p0, (ulong)p1); }
        internal static void NETWORK_CLEAR_FOUND_GAMERS() { NativeInvoker.Invoke(0x6D14CCEE1B40381A); } // 0x6D14CCEE1B40381A 0x6AA9A154 b323<, (ulong)6D14CCEE1B40381A); }
        internal static BOOL NETWORK_QUEUE_GAMER_FOR_STATUS(Any* p0) { return NativeInvoker.Invoke<BOOL>(0x85A0EF54A500882C, (ulong)p0); }
        internal static BOOL NETWORK_GET_GAMER_STATUS_FROM_QUEUE() { return NativeInvoker.Invoke<BOOL>(0x2CC848A861D01493); } // 0x2CC848A861D01493 0xBEB98840 b323, (ulong)2CC848A861D01493); }
        internal static BOOL NETWORK_IS_GETTING_GAMER_STATUS() { return NativeInvoker.Invoke<BOOL>(0x94A8394D150B013A); } // 0x94A8394D150B013A 0x08029970 b323, (ulong)94A8394D150B013A); }
        internal static BOOL NETWORK_DID_GET_GAMER_STATUS_SUCCEED() { return NativeInvoker.Invoke<BOOL>(0x5AE17C6B0134B7F1); } // 0x5AE17C6B0134B7F1 0xC871E745 b323, (ulong)5AE17C6B0134B7F1); }
        internal static BOOL NETWORK_GET_GAMER_STATUS_RESULT(Any* p0, Any p1) { return NativeInvoker.Invoke<BOOL>(0x02A8BEC6FD9AF660, (ulong)p0, (ulong)p1); }
        internal static void NETWORK_CLEAR_GET_GAMER_STATUS() { NativeInvoker.Invoke(0x86E0660E4F5C956D); } // 0x86E0660E4F5C956D 0x3F7EDBBD b323<, (ulong)86E0660E4F5C956D); }
        internal static void NETWORK_SESSION_JOIN_INVITE() { NativeInvoker.Invoke(0xC6F8AB8A4189CF3A); } // 0xC6F8AB8A4189CF3A 0x3D6360B5 b323<, (ulong)C6F8AB8A4189CF3A); }
        internal static void NETWORK_SESSION_CANCEL_INVITE() { NativeInvoker.Invoke(0x2FBF47B1B36D36F9); } // 0x2FBF47B1B36D36F9 0x20317535 b323<, (ulong)2FBF47B1B36D36F9); }
        internal static void NETWORK_SESSION_FORCE_CANCEL_INVITE() { NativeInvoker.Invoke(0xA29177F7703B5644); } // 0xA29177F7703B5644 0x3FD49D3B b323<, (ulong)A29177F7703B5644); }
        internal static BOOL NETWORK_HAS_PENDING_INVITE() { return NativeInvoker.Invoke<BOOL>(0xAC8C7B9B88C4A668); } // 0xAC8C7B9B88C4A668 0x0C207D6E b323, (ulong)AC8C7B9B88C4A668); }
        internal static BOOL N_0xC42DD763159F3461() { return NativeInvoker.Invoke<BOOL>(0xC42DD763159F3461); } // 0xC42DD763159F3461 0xFBBAC350 b323, (ulong)C42DD763159F3461); }
        internal static BOOL NETWORK_ACCEPT_INVITE_() { return NativeInvoker.Invoke<BOOL>(0x62A0296C1BB1CEB3); } // 0x62A0296C1BB1CEB3 0x0907A6BF b323, (ulong)62A0296C1BB1CEB3); }
        internal static BOOL NETWORK_SESSION_WAS_INVITED() { return NativeInvoker.Invoke<BOOL>(0x23DFB504655D0CE4); } // 0x23DFB504655D0CE4 0x6A0BEA60 b323, (ulong)23DFB504655D0CE4); }
        internal static void NETWORK_SESSION_GET_INVITER(Any* gamerHandle) { NativeInvoker.Invoke(0xE57397B4A3429DD0, (ulong)gamerHandle); }
        internal static BOOL N_0xD313DE83394AF134() { return NativeInvoker.Invoke<BOOL>(0xD313DE83394AF134); } // 0xD313DE83394AF134 0x3EA9D44C b323, (ulong)D313DE83394AF134); }
        internal static BOOL N_0xBDB6F89C729CF388() { return NativeInvoker.Invoke<BOOL>(0xBDB6F89C729CF388); } // 0xBDB6F89C729CF388 0x9374523F b323, (ulong)BDB6F89C729CF388); }
        internal static void NETWORK_SUPPRESS_INVITE(BOOL toggle) { NativeInvoker.Invoke(0xA0682D67EF1FBA3D, (ulong)toggle); }
        internal static void NETWORK_BLOCK_INVITES(BOOL toggle) { NativeInvoker.Invoke(0x34F9E9049454A7A0, (ulong)toggle); }
        internal static void NETWORK_BLOCK_JOIN_QUEUE_INVITES(BOOL toggle) { NativeInvoker.Invoke(0xCFEB8AF24FC1D0BB, (ulong)toggle); }
        internal static void N_0xF814FEC6A19FD6E0() { NativeInvoker.Invoke(0xF814FEC6A19FD6E0); } // 0xF814FEC6A19FD6E0 0x32B7A076 b323<, (ulong)F814FEC6A19FD6E0); }
        internal static void NETWORK_BLOCK_KICKED_PLAYERS_(BOOL p0) { NativeInvoker.Invoke(0x6B07B9CE4D390375, (ulong)p0); }
        internal static void NETWORK_SET_SCRIPT_READY_FOR_EVENTS(BOOL toggle) { NativeInvoker.Invoke(0x7AC752103856FB20, (ulong)toggle); }
        internal static BOOL NETWORK_IS_OFFLINE_INVITE_PENDING() { return NativeInvoker.Invoke<BOOL>(0x74698374C45701D2); } // 0x74698374C45701D2 0x70ED476A b323, (ulong)74698374C45701D2); }
        internal static void NETWORK_CLEAR_OFFLINE_INVITE_PENDING() { NativeInvoker.Invoke(0x140E6A44870A11CE); } // 0x140E6A44870A11CE 0x50507BED b323<, (ulong)140E6A44870A11CE); }
        internal static void NETWORK_SESSION_HOST_SINGLE_PLAYER(int p0) { NativeInvoker.Invoke(0xC74C33FCA52856D5, (ulong)p0); }
        internal static void NETWORK_SESSION_LEAVE_SINGLE_PLAYER() { NativeInvoker.Invoke(0x3442775428FD2DAA); } // 0x3442775428FD2DAA 0xC692F86A b323<, (ulong)3442775428FD2DAA); }
        internal static BOOL NETWORK_IS_GAME_IN_PROGRESS() { return NativeInvoker.Invoke<BOOL>(0x10FAB35428CCC9D7); } // 0x10FAB35428CCC9D7 0x09B88E3E b323, (ulong)10FAB35428CCC9D7); }
        internal static BOOL NETWORK_IS_SESSION_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0xD83C2B94E7508980); } // 0xD83C2B94E7508980 0x715CB8C4 b323, (ulong)D83C2B94E7508980); }
        internal static BOOL NETWORK_IS_IN_SESSION() { return NativeInvoker.Invoke<BOOL>(0xCA97246103B63917); } // 0xCA97246103B63917 0x4BC4105E b323, (ulong)CA97246103B63917); }
        internal static BOOL NETWORK_IS_SESSION_STARTED() { return NativeInvoker.Invoke<BOOL>(0x9DE624D2FC4B603F); } // 0x9DE624D2FC4B603F 0x9D854A37 b323, (ulong)9DE624D2FC4B603F); }
        internal static BOOL NETWORK_IS_SESSION_BUSY() { return NativeInvoker.Invoke<BOOL>(0xF4435D66A8E2905E); } // 0xF4435D66A8E2905E 0x8592152D b323, (ulong)F4435D66A8E2905E); }
        internal static BOOL NETWORK_CAN_SESSION_END() { return NativeInvoker.Invoke<BOOL>(0x4EEBC3694E49C572); } // 0x4EEBC3694E49C572 0xE1FCCDBA b323, (ulong)4EEBC3694E49C572); }
        internal static Any N_0x4C9034162368E206() { return NativeInvoker.Invoke<Any>(0x4C9034162368E206); } // 0x4C9034162368E206 b2060, (ulong)4C9034162368E206); }
        internal static void NETWORK_SESSION_MARK_VISIBLE(BOOL toggle) { NativeInvoker.Invoke(0x271CC6AB59EBF9A5, (ulong)toggle); }
        internal static BOOL NETWORK_SESSION_IS_VISIBLE() { return NativeInvoker.Invoke<BOOL>(0xBA416D68C631496A); } // 0xBA416D68C631496A 0x4977AC28 b323, (ulong)BA416D68C631496A); }
        internal static void NETWORK_SESSION_BLOCK_JOIN_REQUESTS(BOOL toggle) { NativeInvoker.Invoke(0xA73667484D7037C3, (ulong)toggle); }
        internal static void NETWORK_SESSION_CHANGE_SLOTS(int p0, BOOL p1) { NativeInvoker.Invoke(0xB4AB419E0D86ACAE, (ulong)p0, (ulong)p1); }
        internal static int NETWORK_SESSION_GET_PRIVATE_SLOTS() { return NativeInvoker.Invoke<int>(0x53AFD64C6758F2F9); } // 0x53AFD64C6758F2F9 0xE642F2FD b323, (ulong)53AFD64C6758F2F9); }
        internal static void NETWORK_SESSION_VOICE_HOST() { NativeInvoker.Invoke(0x9C1556705F864230); } // 0x9C1556705F864230 0x345C2980 b323<, (ulong)9C1556705F864230); }
        internal static void NETWORK_SESSION_VOICE_LEAVE() { NativeInvoker.Invoke(0x6793E42BE02B575D); } // 0x6793E42BE02B575D 0xE566C7DA b323<, (ulong)6793E42BE02B575D); }
        internal static void NETWORK_SESSION_VOICE_CONNECT_TO_PLAYER(Any* p0) { NativeInvoker.Invoke(0xABD5E88B8A2D3DB2, (ulong)p0); }
        internal static void NETWORK_SESSION_VOICE_RESPOND_TO_REQUEST(BOOL p0, int p1) { NativeInvoker.Invoke(0x7F8413B7FC2AA6B9, (ulong)p0, (ulong)p1); }
        internal static void NETWORK_SESSION_VOICE_SET_TIMEOUT(int timeout) { NativeInvoker.Invoke(0x5B8ED3DB018927B1, (ulong)timeout); }
        internal static BOOL NETWORK_SESSION_IS_IN_VOICE_SESSION() { return NativeInvoker.Invoke<BOOL>(0x855BC38818F6F684); } // 0x855BC38818F6F684 0x60AA4AA1 b323, (ulong)855BC38818F6F684); }
        internal static Any N_0xB5D3453C98456528() { return NativeInvoker.Invoke<Any>(0xB5D3453C98456528); } // 0xB5D3453C98456528 b323, (ulong)B5D3453C98456528); }
        internal static BOOL NETWORK_SESSION_IS_VOICE_SESSION_BUSY() { return NativeInvoker.Invoke<BOOL>(0xEF0912DDF7C4CB4B); } // 0xEF0912DDF7C4CB4B 0x132CA01E b323, (ulong)EF0912DDF7C4CB4B); }
        internal static BOOL NETWORK_SEND_TEXT_MESSAGE(char* message, Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0x3A214F2EC889B100, (ulong)message, (ulong)gamerHandle); }
        internal static void NETWORK_SET_ACTIVITY_SPECTATOR(BOOL toggle) { NativeInvoker.Invoke(0x75138790B4359A74, (ulong)toggle); }
        internal static BOOL NETWORK_IS_ACTIVITY_SPECTATOR() { return NativeInvoker.Invoke<BOOL>(0x12103B9E0C9F92FB); } // 0x12103B9E0C9F92FB 0xAF329720 b323, (ulong)12103B9E0C9F92FB); }
        internal static void N_0x0E4F77F7B9D74D84(Any p0) { NativeInvoker.Invoke(0x0E4F77F7B9D74D84, (ulong)p0); }
        internal static void NETWORK_SET_ACTIVITY_SPECTATOR_MAX(int maxSpectators) { NativeInvoker.Invoke(0x9D277B76D1D12222, (ulong)maxSpectators); }
        internal static int NETWORK_GET_ACTIVITY_PLAYER_NUM(BOOL p0) { return NativeInvoker.Invoke<int>(0x73E2B500410DA5A2, (ulong)p0); }
        internal static BOOL NETWORK_IS_ACTIVITY_SPECTATOR_FROM_HANDLE(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0x2763BBAA72A7BCB9, (ulong)gamerHandle); }
        internal static BOOL NETWORK_HOST_TRANSITION(int p0, int p1, int p2, int p3, Any p4, BOOL p5, BOOL p6, int p7, Any p8, int p9) { return NativeInvoker.Invoke<BOOL>(0xA60BB5CE242BB254, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9); }
        internal static BOOL NETWORK_DO_TRANSITION_QUICKMATCH(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { return NativeInvoker.Invoke<BOOL>(0x71FB0EBCD4915D56, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static BOOL NETWORK_DO_TRANSITION_QUICKMATCH_ASYNC(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { return NativeInvoker.Invoke<BOOL>(0xA091A5E44F0072E5, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static BOOL NETWORK_DO_TRANSITION_QUICKMATCH_WITH_GROUP(Any p0, Any p1, Any p2, Any p3, Any* p4, Any p5, Any p6, Any p7) { return NativeInvoker.Invoke<BOOL>(0x9C4AB58491FDC98A, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7); }
        internal static Any NETWORK_JOIN_GROUP_ACTIVITY() { return NativeInvoker.Invoke<Any>(0xA06509A691D12BE4); } // 0xA06509A691D12BE4 0x0D7E5CF9 b323, (ulong)A06509A691D12BE4); }
        internal static void N_0x1888694923EF4591() { NativeInvoker.Invoke(0x1888694923EF4591); } // 0x1888694923EF4591 b393<, (ulong)1888694923EF4591); }
        internal static void N_0xB13E88E655E5A3BC() { NativeInvoker.Invoke(0xB13E88E655E5A3BC); } // 0xB13E88E655E5A3BC 0x36A5F2DA b323<, (ulong)B13E88E655E5A3BC); }
        internal static BOOL NETWORK_IS_TRANSITION_CLOSED_FRIENDS() { return NativeInvoker.Invoke<BOOL>(0x6512765E3BE78C50); } // 0x6512765E3BE78C50 0x95FFACF8 b323, (ulong)6512765E3BE78C50); }
        internal static BOOL NETWORK_IS_TRANSITION_CLOSED_CREW() { return NativeInvoker.Invoke<BOOL>(0x0DBD5D7E3C5BEC3B); } // 0x0DBD5D7E3C5BEC3B 0xB97A966B b323, (ulong)0DBD5D7E3C5BEC3B); }
        internal static BOOL NETWORK_IS_TRANSITION_SOLO() { return NativeInvoker.Invoke<BOOL>(0x5DC577201723960A); } // 0x5DC577201723960A 0x063DC4A5 b323, (ulong)5DC577201723960A); }
        internal static BOOL NETWORK_IS_TRANSITION_PRIVATE() { return NativeInvoker.Invoke<BOOL>(0x5A6AA44FF8E931E6); } // 0x5A6AA44FF8E931E6 0x104DDE8D b323, (ulong)5A6AA44FF8E931E6); }
        internal static int N_0x617F49C2668E6155() { return NativeInvoker.Invoke<int>(0x617F49C2668E6155); } // 0x617F49C2668E6155 b757, (ulong)617F49C2668E6155); }
        internal static void N_0x261E97AD7BCF3D40(BOOL p0) { NativeInvoker.Invoke(0x261E97AD7BCF3D40, (ulong)p0); }
        internal static void N_0x39917E1B4CB0F911(BOOL p0) { NativeInvoker.Invoke(0x39917E1B4CB0F911, (ulong)p0); }
        internal static void N_0x2CE9D95E4051AECD(Any p0) { NativeInvoker.Invoke(0x2CE9D95E4051AECD, (ulong)p0); }
        internal static void NETWORK_SET_TRANSITION_CREATOR_HANDLE(Any* p0) { NativeInvoker.Invoke(0xEF26739BCD9907D5, (ulong)p0); }
        internal static void NETWORK_CLEAR_TRANSITION_CREATOR_HANDLE() { NativeInvoker.Invoke(0xFB3272229A82C759); } // 0xFB3272229A82C759 0x8BB336F7 b323<, (ulong)FB3272229A82C759); }
        internal static BOOL NETWORK_INVITE_GAMERS_TO_TRANSITION(Any* p0, Any p1) { return NativeInvoker.Invoke<BOOL>(0x4A595C32F77DFF76, (ulong)p0, (ulong)p1); }
        internal static void NETWORK_SET_GAMER_INVITED_TO_TRANSITION(Any* gamerHandle) { NativeInvoker.Invoke(0xCA2C8073411ECDB6, (ulong)gamerHandle); }
        internal static BOOL NETWORK_LEAVE_TRANSITION() { return NativeInvoker.Invoke<BOOL>(0xD23A1A815D21DB19); } // 0xD23A1A815D21DB19 0x3A3599B7 b323, (ulong)D23A1A815D21DB19); }
        internal static BOOL NETWORK_LAUNCH_TRANSITION() { return NativeInvoker.Invoke<BOOL>(0x2DCF46CB1A4F0884); } // 0x2DCF46CB1A4F0884 0xE3570BA2 b323, (ulong)2DCF46CB1A4F0884); }
        internal static void N_0xA2E9C1AB8A92E8CD(BOOL toggle) { NativeInvoker.Invoke(0xA2E9C1AB8A92E8CD, (ulong)toggle); }
        internal static void NETWORK_BAIL_TRANSITION(int p0, int p1, int p2) { NativeInvoker.Invoke(0xEAA572036990CD1B, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL NETWORK_DO_TRANSITION_TO_GAME(BOOL p0, int maxPlayers) { return NativeInvoker.Invoke<BOOL>(0x3E9BB38102A589B0, (ulong)p0, (ulong)maxPlayers); }
        internal static BOOL NETWORK_DO_TRANSITION_TO_NEW_GAME(BOOL p0, int maxPlayers, BOOL p2) { return NativeInvoker.Invoke<BOOL>(0x4665F51EFED00034, (ulong)p0, (ulong)maxPlayers, (ulong)p2); }
        internal static BOOL NETWORK_DO_TRANSITION_TO_FREEMODE(Any* p0, Any p1, BOOL p2, int players, BOOL p4) { return NativeInvoker.Invoke<BOOL>(0x3AAD8B2FCA1E289F, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)players, (ulong)p4); }
        internal static BOOL NETWORK_DO_TRANSITION_TO_NEW_FREEMODE(Any* p0, Any* p1, int players, BOOL p3, BOOL p4, BOOL p5) { return NativeInvoker.Invoke<BOOL>(0x9E80A5BA8109F974, (ulong)p0, (ulong)p1, (ulong)players, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static BOOL NETWORK_IS_TRANSITION_TO_GAME() { return NativeInvoker.Invoke<BOOL>(0x9D7696D8F4FA6CB7); } // 0x9D7696D8F4FA6CB7 0x17146B2B b323, (ulong)9D7696D8F4FA6CB7); }
        internal static int NETWORK_GET_TRANSITION_MEMBERS(Any* data, int dataCount) { return NativeInvoker.Invoke<int>(0x73B000F7FBC55829, (ulong)data, (ulong)dataCount); }
        internal static void NETWORK_APPLY_TRANSITION_PARAMETER(int p0, int p1) { NativeInvoker.Invoke(0x521638ADA1BA0D18, (ulong)p0, (ulong)p1); }
        internal static void NETWORK_APPLY_TRANSITION_PARAMETER_STRING(int p0, char* @string, BOOL p2) { NativeInvoker.Invoke(0xEBEFC2E77084F599, (ulong)p0, (ulong)@string, (ulong)p2); }
        internal static BOOL NETWORK_SEND_TRANSITION_GAMER_INSTRUCTION(Any* gamerHandle, char* p1, int p2, int p3, BOOL p4) { return NativeInvoker.Invoke<BOOL>(0x31D1D2B858D25E6B, (ulong)gamerHandle, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static BOOL NETWORK_MARK_TRANSITION_GAMER_AS_FULLY_JOINED(Any* p0) { return NativeInvoker.Invoke<BOOL>(0x5728BB6D63E3FF1D, (ulong)p0); }
        internal static BOOL NETWORK_IS_TRANSITION_HOST() { return NativeInvoker.Invoke<BOOL>(0x0B824797C9BF2159); } // 0x0B824797C9BF2159 0x0C0900BC b323, (ulong)0B824797C9BF2159); }
        internal static BOOL NETWORK_IS_TRANSITION_HOST_FROM_HANDLE(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0x6B5C83BA3EFE6A10, (ulong)gamerHandle); }
        internal static BOOL NETWORK_GET_TRANSITION_HOST(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0x65042B9774C4435E, (ulong)gamerHandle); }
        internal static BOOL NETWORK_IS_IN_TRANSITION() { return NativeInvoker.Invoke<BOOL>(0x68049AEFF83D8F0A); } // 0x68049AEFF83D8F0A 0xC3CDB626 b323, (ulong)68049AEFF83D8F0A); }
        internal static BOOL NETWORK_IS_TRANSITION_STARTED() { return NativeInvoker.Invoke<BOOL>(0x53FA83401D9C07FE); } // 0x53FA83401D9C07FE 0x7917E111 b323, (ulong)53FA83401D9C07FE); }
        internal static BOOL NETWORK_IS_TRANSITION_BUSY() { return NativeInvoker.Invoke<BOOL>(0x520F3282A53D26B7); } // 0x520F3282A53D26B7 0xA357A2C6 b323, (ulong)520F3282A53D26B7); }
        internal static BOOL NETWORK_IS_TRANSITION_MATCHMAKING() { return NativeInvoker.Invoke<BOOL>(0x292564C735375EDF); } // 0x292564C735375EDF 0x8262C70E b323, (ulong)292564C735375EDF); }
        internal static BOOL N_0xC571D0E77D8BBC29() { return NativeInvoker.Invoke<BOOL>(0xC571D0E77D8BBC29); } // 0xC571D0E77D8BBC29 0x4F4BB300 b323, (ulong)C571D0E77D8BBC29); }
        internal static void N_0x1398582B7F72B3ED(Any p0) { NativeInvoker.Invoke(0x1398582B7F72B3ED, (ulong)p0); }
        internal static void N_0x1F8E00FB18239600(Any p0) { NativeInvoker.Invoke(0x1F8E00FB18239600, (ulong)p0); }
        internal static void N_0xF6F4383B7C92F11A(Any p0) { NativeInvoker.Invoke(0xF6F4383B7C92F11A, (ulong)p0); }
        internal static void NETWORK_OPEN_TRANSITION_MATCHMAKING() { NativeInvoker.Invoke(0x2B3A8F7CA3A38FDE); } // 0x2B3A8F7CA3A38FDE 0xC71E607B b323<, (ulong)2B3A8F7CA3A38FDE); }
        internal static void NETWORK_CLOSE_TRANSITION_MATCHMAKING() { NativeInvoker.Invoke(0x43F4DBA69710E01E); } // 0x43F4DBA69710E01E 0x82D32D07 b323<, (ulong)43F4DBA69710E01E); }
        internal static BOOL NETWORK_IS_TRANSITION_OPEN_TO_MATCHMAKING() { return NativeInvoker.Invoke<BOOL>(0x37A4494483B9F5C9); } // 0x37A4494483B9F5C9 0xC901AA9F b323, (ulong)37A4494483B9F5C9); }
        internal static void NETWORK_SET_TRANSITION_VISIBILITY_LOCK(BOOL p0, BOOL p1) { NativeInvoker.Invoke(0x0C978FDA19692C2C, (ulong)p0, (ulong)p1); }
        internal static BOOL NETWORK_IS_TRANSITION_VISIBILITY_LOCKED() { return NativeInvoker.Invoke<BOOL>(0xD0A484CB2F829FBE); } // 0xD0A484CB2F829FBE 0xF637166E b323, (ulong)D0A484CB2F829FBE); }
        internal static void NETWORK_SET_TRANSITION_ACTIVITY_ID(Any p0) { NativeInvoker.Invoke(0x30DE938B516F0AD2, (ulong)p0); }
        internal static void NETWORK_CHANGE_TRANSITION_SLOTS(Any p0, Any p1) { NativeInvoker.Invoke(0xEEEDA5E6D7080987, (ulong)p0, (ulong)p1); }
        internal static void N_0x973D76AA760A6CB6(BOOL p0) { NativeInvoker.Invoke(0x973D76AA760A6CB6, (ulong)p0); }
        internal static BOOL NETWORK_HAS_PLAYER_STARTED_TRANSITION(Player player) { return NativeInvoker.Invoke<BOOL>(0x9AC9CCBFA8C29795, (ulong)player); }
        internal static BOOL NETWORK_ARE_TRANSITION_DETAILS_VALID(Any p0) { return NativeInvoker.Invoke<BOOL>(0x2615AA2A695930C1, (ulong)p0); }
        internal static BOOL NETWORK_JOIN_TRANSITION(Player player) { return NativeInvoker.Invoke<BOOL>(0x9D060B08CD63321A, (ulong)player); }
        internal static BOOL NETWORK_HAS_INVITED_GAMER_TO_TRANSITION(Any* p0) { return NativeInvoker.Invoke<BOOL>(0x7284A47B3540E6CF, (ulong)p0); }
        internal static BOOL N_0x3F9990BF5F22759C(Any* p0) { return NativeInvoker.Invoke<BOOL>(0x3F9990BF5F22759C, (ulong)p0); }
        internal static BOOL NETWORK_IS_ACTIVITY_SESSION() { return NativeInvoker.Invoke<BOOL>(0x05095437424397FA); } // 0x05095437424397FA 0x577DAA8A b323, (ulong)05095437424397FA); }
        internal static void N_0x4A9FDE3A5A6D0437(BOOL toggle) { NativeInvoker.Invoke(0x4A9FDE3A5A6D0437, (ulong)toggle); }
        internal static BOOL NETWORK_SEND_INVITE_VIA_PRESENCE(Any* gamerHandle, Any* p1, Any p2, Any p3) { return NativeInvoker.Invoke<BOOL>(0xC3C7A6AFDB244624, (ulong)gamerHandle, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static BOOL NETWORK_SEND_PRESENCE_TRANSITION_INVITE_(Any* p0, Any* p1, Any p2, Any p3) { return NativeInvoker.Invoke<BOOL>(0xC116FF9B4D488291, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static BOOL N_0x1171A97A3D3981B6(Any* p0, Any* p1, Any p2, Any p3) { return NativeInvoker.Invoke<BOOL>(0x1171A97A3D3981B6, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static Any N_0x742B58F723233ED9(Any p0) { return NativeInvoker.Invoke<Any>(0x742B58F723233ED9, (ulong)p0); }
        internal static int NETWORK_GET_NUM_PRESENCE_INVITES() { return NativeInvoker.Invoke<int>(0xCEFA968912D0F78D); } // 0xCEFA968912D0F78D 0x3FDA00F3 b323, (ulong)CEFA968912D0F78D); }
        internal static BOOL NETWORK_ACCEPT_PRESENCE_INVITE(Any p0) { return NativeInvoker.Invoke<BOOL>(0xFA91550DF9318B22, (ulong)p0); }
        internal static BOOL NETWORK_REMOVE_PRESENCE_INVITE(Any p0) { return NativeInvoker.Invoke<BOOL>(0xF0210268DB0974B1, (ulong)p0); }
        internal static Any NETWORK_GET_PRESENCE_INVITE_ID(Any p0) { return NativeInvoker.Invoke<Any>(0xDFF09646E12EC386, (ulong)p0); }
        internal static Any NETWORK_GET_PRESENCE_INVITE_INVITER(Any p0) { return NativeInvoker.Invoke<Any>(0x4962CC4AA2F345B7, (ulong)p0); }
        internal static BOOL NETWORK_GET_PRESENCE_INVITE_HANDLE(Any p0, Any* p1) { return NativeInvoker.Invoke<BOOL>(0x38D5B0FEBB086F75, (ulong)p0, (ulong)p1); }
        internal static Any NETWORK_GET_PRESENCE_INVITE_SESSION_ID(Any p0) { return NativeInvoker.Invoke<Any>(0x26E1CD96B0903D60, (ulong)p0); }
        internal static Any NETWORK_GET_PRESENCE_INVITE_CONTENT_ID(Any p0) { return NativeInvoker.Invoke<Any>(0x24409FC4C55CB22D, (ulong)p0); }
        internal static Any NETWORK_GET_PRESENCE_INVITE_PLAYLIST_LENGTH(Any p0) { return NativeInvoker.Invoke<Any>(0xD39B3FFF8FFDD5BF, (ulong)p0); }
        internal static Any NETWORK_GET_PRESENCE_INVITE_PLAYLIST_CURRENT(Any p0) { return NativeInvoker.Invoke<Any>(0x728C4CC7920CD102, (ulong)p0); }
        internal static BOOL NETWORK_GET_PRESENCE_INVITE_FROM_ADMIN(Any p0) { return NativeInvoker.Invoke<BOOL>(0x3DBF2DF0AEB7D289, (ulong)p0); }
        internal static BOOL NETWORK_GET_PRESENCE_INVITE_IS_TOURNAMENT(Any p0) { return NativeInvoker.Invoke<BOOL>(0x8806CEBFABD3CE05, (ulong)p0); }
        internal static BOOL NETWORK_HAS_FOLLOW_INVITE() { return NativeInvoker.Invoke<BOOL>(0x76D9B976C4C09FDE); } // 0x76D9B976C4C09FDE 0xE96CFE7D b323, (ulong)76D9B976C4C09FDE); }
        internal static Any NETWORK_ACTION_FOLLOW_INVITE() { return NativeInvoker.Invoke<Any>(0xC88156EBB786F8D5); } // 0xC88156EBB786F8D5 0xAB969F00 b323, (ulong)C88156EBB786F8D5); }
        internal static Any NETWORK_CLEAR_FOLLOW_INVITE() { return NativeInvoker.Invoke<Any>(0x439BFDE3CD0610F6); } // 0x439BFDE3CD0610F6 0x3242F952 b323, (ulong)439BFDE3CD0610F6); }
        internal static void N_0xEBF8284D8CADEB53() { NativeInvoker.Invoke(0xEBF8284D8CADEB53); } // 0xEBF8284D8CADEB53 0x9773F36A b323<, (ulong)EBF8284D8CADEB53); }
        internal static void NETWORK_REMOVE_TRANSITION_INVITE(Any* p0) { NativeInvoker.Invoke(0x7524B431B2E6F7EE, (ulong)p0); }
        internal static void NETWORK_REMOVE_ALL_TRANSITION_INVITE() { NativeInvoker.Invoke(0x726E0375C7A26368); } // 0x726E0375C7A26368 0xF7134E73 b323<, (ulong)726E0375C7A26368); }
        internal static void N_0xF083835B70BA9BFE() { NativeInvoker.Invoke(0xF083835B70BA9BFE); } // 0xF083835B70BA9BFE 0xC47352E7 b323<, (ulong)F083835B70BA9BFE); }
        internal static BOOL NETWORK_INVITE_GAMERS(Any* p0, Any p1, Any* p2, Any* p3) { return NativeInvoker.Invoke<BOOL>(0x9D80CD1D0E6327DE, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static BOOL NETWORK_HAS_INVITED_GAMER(Any* p0) { return NativeInvoker.Invoke<BOOL>(0x4D86CD31E8976ECE, (ulong)p0); }
        internal static BOOL N_0x71DC455F5CD1C2B1(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0x71DC455F5CD1C2B1, (ulong)gamerHandle); }
        internal static Any N_0x3855FB5EB2C5E8B2(Any p0) { return NativeInvoker.Invoke<Any>(0x3855FB5EB2C5E8B2, (ulong)p0); }
        internal static BOOL NETWORK_GET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU(Any* p0) { return NativeInvoker.Invoke<BOOL>(0x74881E6BCAE2327C, (ulong)p0); }
        internal static BOOL NETWORK_SET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU(Any* p0) { return NativeInvoker.Invoke<BOOL>(0x7206F674F2A3B1BB, (ulong)p0); }
        internal static void NETWORK_SET_INVITE_ON_CALL_FOR_INVITE_MENU(Any* p0) { NativeInvoker.Invoke(0x66F010A4B031A331, (ulong)p0); }
        internal static BOOL NETWORK_CHECK_DATA_MANAGER_SUCCEEDED_FOR_HANDLE(Any p0, Any* p1) { return NativeInvoker.Invoke<BOOL>(0x44B37CDCAE765AAE, (ulong)p0, (ulong)p1); }
        internal static Any N_0x4AD490AE1536933B(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0x4AD490AE1536933B, (ulong)p0, (ulong)p1); }
        internal static void N_0x0D77A82DC2D0DA59(Any* p0, Any* p1) { NativeInvoker.Invoke(0x0D77A82DC2D0DA59, (ulong)p0, (ulong)p1); }
        internal static BOOL FILLOUT_PM_PLAYER_LIST(Any* gamerHandle, Any p1, Any p2) { return NativeInvoker.Invoke<BOOL>(0xCBBD7C4991B64809, (ulong)gamerHandle, (ulong)p1, (ulong)p2); }
        internal static BOOL FILLOUT_PM_PLAYER_LIST_WITH_NAMES(Any* p0, Any* p1, Any p2, Any p3) { return NativeInvoker.Invoke<BOOL>(0x716B6DB9D1886106, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static BOOL REFRESH_PLAYER_LIST_STATS(int p0) { return NativeInvoker.Invoke<BOOL>(0xE26CCFF8094D8C74, (ulong)p0); }
        internal static BOOL NETWORK_SET_CURRENT_DATA_MANAGER_HANDLE(Any* p0) { return NativeInvoker.Invoke<BOOL>(0x796A87B3B68D1F3D, (ulong)p0); }
        internal static BOOL NETWORK_IS_IN_PLATFORM_PARTY() { return NativeInvoker.Invoke<BOOL>(0x2FC5650B0271CB57); } // 0x2FC5650B0271CB57 0xA812B6CB b323, (ulong)2FC5650B0271CB57); }
        internal static int NETWORK_GET_PLATFORM_PARTY_UNK_() { return NativeInvoker.Invoke<int>(0x01ABCE5E7CBDA196); } // 0x01ABCE5E7CBDA196 b323, (ulong)01ABCE5E7CBDA196); }
        internal static int NETWORK_GET_PLATFORM_PARTY_MEMBERS(Any* data, int dataSize) { return NativeInvoker.Invoke<int>(0x120364DE2845DAF8, (ulong)data, (ulong)dataSize); }
        internal static BOOL NETWORK_IS_IN_PLATFORM_PARTY_CHAT() { return NativeInvoker.Invoke<BOOL>(0xFD8B834A8BA05048); } // 0xFD8B834A8BA05048 0xC6609191 b323, (ulong)FD8B834A8BA05048); }
        internal static BOOL NETWORK_IS_CHATTING_IN_PLATFORM_PARTY(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0x8DE9945BCC9AEC52, (ulong)gamerHandle); }
        internal static Any N_0x2BF66D2E7414F686() { return NativeInvoker.Invoke<Any>(0x2BF66D2E7414F686); } // 0x2BF66D2E7414F686 0x9156EFC0 b323, (ulong)2BF66D2E7414F686); }
        internal static BOOL N_0x14922ED3E38761F0() { return NativeInvoker.Invoke<BOOL>(0x14922ED3E38761F0); } // 0x14922ED3E38761F0 0x8FA6EE0E b323, (ulong)14922ED3E38761F0); }
        internal static void N_0x6CE50E47F5543D0C() { NativeInvoker.Invoke(0x6CE50E47F5543D0C); } // 0x6CE50E47F5543D0C b573<, (ulong)6CE50E47F5543D0C); }
        internal static void N_0xFA2888E3833C8E96() { NativeInvoker.Invoke(0xFA2888E3833C8E96); } // 0xFA2888E3833C8E96 0x7F70C15A b323<, (ulong)FA2888E3833C8E96); }
        internal static void N_0x25D990F8E0E3F13C() { NativeInvoker.Invoke(0x25D990F8E0E3F13C); } // 0x25D990F8E0E3F13C b323<, (ulong)25D990F8E0E3F13C); }
        internal static void NETWORK_SEED_RANDOM_NUMBER_GENERATOR(int seed) { NativeInvoker.Invoke(0xF1B84178F8674195, (ulong)seed); }
        internal static int NETWORK_GET_RANDOM_INT() { return NativeInvoker.Invoke<int>(0x599E4FA1F87EB5FF); } // 0x599E4FA1F87EB5FF 0x208DD848 b323, (ulong)599E4FA1F87EB5FF); }
        internal static int NETWORK_GET_RANDOM_INT_RANGED(int rangeStart, int rangeEnd) { return NativeInvoker.Invoke<int>(0xE30CF56F1EFA5F43, (ulong)rangeStart, (ulong)rangeEnd); }
        internal static BOOL NETWORK_PLAYER_IS_CHEATER() { return NativeInvoker.Invoke<BOOL>(0x655B91F1495A9090); } // 0x655B91F1495A9090 0xA51DC214 b323, (ulong)655B91F1495A9090); }
        internal static int NETWORK_PLAYER_GET_CHEATER_REASON() { return NativeInvoker.Invoke<int>(0x172F75B6EE2233BA); } // 0x172F75B6EE2233BA 0x1720ABA6 b323, (ulong)172F75B6EE2233BA); }
        internal static BOOL NETWORK_PLAYER_IS_BADSPORT() { return NativeInvoker.Invoke<BOOL>(0x19D8DA0E5A68045A); } // 0x19D8DA0E5A68045A 0xA19708E3 b323, (ulong)19D8DA0E5A68045A); }
        internal static BOOL TRIGGER_SCRIPT_CRC_CHECK_ON_PLAYER_(Player player, int p1, Hash scriptHash) { return NativeInvoker.Invoke<BOOL>(0x46FB3ED415C7641C, (ulong)player, (ulong)p1, (ulong)scriptHash); }
        internal static Any N_0xA12D3A5A3753CC23() { return NativeInvoker.Invoke<Any>(0xA12D3A5A3753CC23); } // 0xA12D3A5A3753CC23 b1103, (ulong)A12D3A5A3753CC23); }
        internal static Any N_0xF287F506767CC8A9() { return NativeInvoker.Invoke<Any>(0xF287F506767CC8A9); } // 0xF287F506767CC8A9 b1103, (ulong)F287F506767CC8A9); }
        internal static BOOL REMOTE_CHEAT_DETECTED_(Player player, int a, int b) { return NativeInvoker.Invoke<BOOL>(0x472841A026D26D8B, (ulong)player, (ulong)a, (ulong)b); }
        internal static BOOL BAD_SPORT_PLAYER_LEFT_DETECTED(Any* gamerHandle, int @event, int amountReceived) { return NativeInvoker.Invoke<BOOL>(0xEC5E3AF5289DCA81, (ulong)gamerHandle, (ulong)@event, (ulong)amountReceived); }
        internal static void NETWORK_APPLY_PED_SCAR_DATA(Ped ped, int p1) { NativeInvoker.Invoke(0xE66C690248F11150, (ulong)ped, (ulong)p1); }
        internal static void NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT(int maxNumMissionParticipants, BOOL p1, int instanceId) { NativeInvoker.Invoke(0x1CA59E306ECB80A5, (ulong)maxNumMissionParticipants, (ulong)p1, (ulong)instanceId); }
        internal static BOOL NETWORK_IS_THIS_SCRIPT_MARKED_(Any p0, BOOL p1, Any p2) { return NativeInvoker.Invoke<BOOL>(0xD1110739EEADB592, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT() { return NativeInvoker.Invoke<BOOL>(0x2910669969E9535E); } // 0x2910669969E9535E 0xD9BF6549 b323, (ulong)2910669969E9535E); }
        internal static int NETWORK_GET_MAX_NUM_PARTICIPANTS() { return NativeInvoker.Invoke<int>(0xA6C90FBC38E395EE); } // 0xA6C90FBC38E395EE 0xCCD8C02D b323, (ulong)A6C90FBC38E395EE); }
        internal static int NETWORK_GET_NUM_PARTICIPANTS() { return NativeInvoker.Invoke<int>(0x18D0456E86604654); } // 0x18D0456E86604654 0x3E25A3C5 b323, (ulong)18D0456E86604654); }
        internal static int NETWORK_GET_SCRIPT_STATUS() { return NativeInvoker.Invoke<int>(0x57D158647A6BFABF); } // 0x57D158647A6BFABF 0x2BE9235A b323, (ulong)57D158647A6BFABF); }
        internal static void NETWORK_REGISTER_HOST_BROADCAST_VARIABLES(int* vars, int numVars) { NativeInvoker.Invoke(0x3E9B2F01C50DF595, (ulong)vars, (ulong)numVars); }
        internal static void NETWORK_REGISTER_PLAYER_BROADCAST_VARIABLES(int* vars, int numVars) { NativeInvoker.Invoke(0x3364AA97340CA215, (ulong)vars, (ulong)numVars); }
        internal static void N_0xEA8C0DDB10E2822A(Any p0, Any p1) { NativeInvoker.Invoke(0xEA8C0DDB10E2822A, (ulong)p0, (ulong)p1); }
        internal static void N_0xD6D7478CA62B8D41(Any p0, Any p1) { NativeInvoker.Invoke(0xD6D7478CA62B8D41, (ulong)p0, (ulong)p1); }
        internal static void NETWORK_FINISH_BROADCASTING_DATA() { NativeInvoker.Invoke(0x64F62AFB081E260D); } // 0x64F62AFB081E260D 0xA71A1D2A b323<, (ulong)64F62AFB081E260D); }
        internal static BOOL NETWORK_HAS_RECEIVED_HOST_BROADCAST_DATA() { return NativeInvoker.Invoke<BOOL>(0x5D10B3795F3FC886); } // 0x5D10B3795F3FC886 0x0B739F53 b323, (ulong)5D10B3795F3FC886); }
        internal static int NETWORK_GET_PLAYER_INDEX(Player player) { return NativeInvoker.Invoke<int>(0x24FB80D107371267, (ulong)player); }
        internal static int NETWORK_GET_PARTICIPANT_INDEX(int index) { return NativeInvoker.Invoke<int>(0x1B84DF6AF2A46938, (ulong)index); }
        internal static Player NETWORK_GET_PLAYER_INDEX_FROM_PED(Ped ped) { return NativeInvoker.Invoke<Player>(0x6C0E2E0125610278, (ulong)ped); }
        internal static int NETWORK_GET_NUM_CONNECTED_PLAYERS() { return NativeInvoker.Invoke<int>(0xA4A79DD2D9600654); } // 0xA4A79DD2D9600654 0xF7952E62 b323, (ulong)A4A79DD2D9600654); }
        internal static BOOL NETWORK_IS_PLAYER_CONNECTED(Player player) { return NativeInvoker.Invoke<BOOL>(0x93DC1BE4E1ABE9D1, (ulong)player); }
        internal static int NETWORK_GET_TOTAL_NUM_PLAYERS() { return NativeInvoker.Invoke<int>(0xCF61D4B4702EE9EB); } // 0xCF61D4B4702EE9EB 0xF4F13B06 b323, (ulong)CF61D4B4702EE9EB); }
        internal static BOOL NETWORK_IS_PARTICIPANT_ACTIVE(int p0) { return NativeInvoker.Invoke<BOOL>(0x6FF8FF40B6357D45, (ulong)p0); }
        internal static BOOL NETWORK_IS_PLAYER_ACTIVE(Player player) { return NativeInvoker.Invoke<BOOL>(0xB8DFD30D6973E135, (ulong)player); }
        internal static BOOL NETWORK_IS_PLAYER_A_PARTICIPANT(Player player) { return NativeInvoker.Invoke<BOOL>(0x3CA58F6CB7CBD784, (ulong)player); }
        internal static BOOL NETWORK_IS_HOST_OF_THIS_SCRIPT() { return NativeInvoker.Invoke<BOOL>(0x83CD99A1E6061AB5); } // 0x83CD99A1E6061AB5 0x6970BA94 b323, (ulong)83CD99A1E6061AB5); }
        internal static Player NETWORK_GET_HOST_OF_THIS_SCRIPT() { return NativeInvoker.Invoke<Player>(0xC7B4D79B01FA7A5C); } // 0xC7B4D79B01FA7A5C 0x89EA7B54 b323, (ulong)C7B4D79B01FA7A5C); }
        internal static Player NETWORK_GET_HOST_OF_SCRIPT(char* scriptName, int p1, int p2) { return NativeInvoker.Invoke<Player>(0x1D6A14F1F9A736FC, (ulong)scriptName, (ulong)p1, (ulong)p2); }
        internal static void NETWORK_SET_MISSION_FINISHED() { NativeInvoker.Invoke(0x3B3D11CD9FFCDFC9); } // 0x3B3D11CD9FFCDFC9 0x3083FAD7 b323<, (ulong)3B3D11CD9FFCDFC9); }
        internal static BOOL NETWORK_IS_SCRIPT_ACTIVE(char* scriptName, Player player, BOOL p2, Any p3) { return NativeInvoker.Invoke<BOOL>(0x9D40DF90FAD26098, (ulong)scriptName, (ulong)player, (ulong)p2, (ulong)p3); }
        internal static BOOL NETWORK_IS_SCRIPT_ACTIVE_BY_HASH(Hash scriptHash, int p1, BOOL p2, int p3) { return NativeInvoker.Invoke<BOOL>(0xDA7DE67F5FE5EE13, (ulong)scriptHash, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static Any N_0x560B423D73015E77(Any p0) { return NativeInvoker.Invoke<Any>(0x560B423D73015E77, (ulong)p0); }
        internal static int NETWORK_GET_NUM_SCRIPT_PARTICIPANTS(Any* p0, Any p1, Any p2) { return NativeInvoker.Invoke<int>(0x3658E8CD94FC121A, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static int NETWORK_GET_INSTANCE_ID_OF_THIS_SCRIPT() { return NativeInvoker.Invoke<int>(0x638A3A81733086DB); } // 0x638A3A81733086DB 0xDB8B5D71 b323, (ulong)638A3A81733086DB); }
        internal static Hash NETWORK_GET_POSITION_HASH_OF_THIS_SCRIPT_() { return NativeInvoker.Invoke<Hash>(0x257ED0FADF750BCF); } // 0x257ED0FADF750BCF b2372, (ulong)257ED0FADF750BCF); }
        internal static BOOL NETWORK_IS_PLAYER_A_PARTICIPANT_ON_SCRIPT(Player player1, char* script, Player player2) { return NativeInvoker.Invoke<BOOL>(0x1AD5B71586B94820, (ulong)player1, (ulong)script, (ulong)player2); }
        internal static void N_0x2302C0264EA58D31() { NativeInvoker.Invoke(0x2302C0264EA58D31); } // 0x2302C0264EA58D31 0x8DCFE77D b323<, (ulong)2302C0264EA58D31); }
        internal static void N_0x741A3D8380319A81() { NativeInvoker.Invoke(0x741A3D8380319A81); } // 0x741A3D8380319A81 0x331D9A27 b323<, (ulong)741A3D8380319A81); }
        internal static Player PARTICIPANT_ID() { return NativeInvoker.Invoke<Player>(0x90986E8876CE0A83); } // 0x90986E8876CE0A83 0x9C35A221 b323, (ulong)90986E8876CE0A83); }
        internal static int PARTICIPANT_ID_TO_INT() { return NativeInvoker.Invoke<int>(0x57A3BDDAD8E5AA0A); } // 0x57A3BDDAD8E5AA0A 0x907498B0 b323, (ulong)57A3BDDAD8E5AA0A); }
        internal static Any N_0x2DA41ED6E1FCD7A5(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0x2DA41ED6E1FCD7A5, (ulong)p0, (ulong)p1); }
        internal static int NETWORK_GET_DESTROYER_OF_NETWORK_ID(int netId, Hash* weaponHash) { return NativeInvoker.Invoke<int>(0x7A1ADEEF01740A24, (ulong)netId, (ulong)weaponHash); }
        internal static Any N_0xC434133D9BA52777(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0xC434133D9BA52777, (ulong)p0, (ulong)p1); }
        internal static Any N_0x83660B734994124D(Any p0, Any p1, Any p2) { return NativeInvoker.Invoke<Any>(0x83660B734994124D, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL NETWORK_GET_DESTROYER_OF_ENTITY_(Any p0, Any p1, Hash* weaponHash) { return NativeInvoker.Invoke<BOOL>(0x4CACA84440FA26F6, (ulong)p0, (ulong)p1, (ulong)weaponHash); }
        internal static Entity NETWORK_GET_ENTITY_KILLER_OF_PLAYER(Player player, Hash* weaponHash) { return NativeInvoker.Invoke<Entity>(0x42B2DAA6B596F5F8, (ulong)player, (ulong)weaponHash); }
        internal static void NETWORK_RESURRECT_LOCAL_PLAYER(float x, float y, float z, float heading, BOOL unk, BOOL changetime, Any p6) { NativeInvoker.Invoke(0xEA23C49EAA83ACFB, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&heading, (ulong)unk, (ulong)changetime, (ulong)p6); }
        internal static void NETWORK_SET_LOCAL_PLAYER_INVINCIBLE_TIME(int time) { NativeInvoker.Invoke(0x2D95C7E2D7E07307, (ulong)time); }
        internal static BOOL NETWORK_IS_LOCAL_PLAYER_INVINCIBLE() { return NativeInvoker.Invoke<BOOL>(0x8A8694B48715B000); } // 0x8A8694B48715B000 0x8DE13B36 b323, (ulong)8A8694B48715B000); }
        internal static void NETWORK_DISABLE_INVINCIBLE_FLASHING(Player player, BOOL toggle) { NativeInvoker.Invoke(0x9DD368BF06983221, (ulong)player, (ulong)toggle); }
        internal static void NETWORK_PED_FORCE_GAME_STATE_UPDATE_(Ped ped) { NativeInvoker.Invoke(0xF0BC9BCD24A511D5, (ulong)ped); }
        internal static void NETWORK_SET_LOCAL_PLAYER_SYNC_LOOK_AT(BOOL toggle) { NativeInvoker.Invoke(0x524FF0AEFF9C3973, (ulong)toggle); }
        internal static BOOL NETWORK_HAS_ENTITY_BEEN_REGISTERED_WITH_THIS_THREAD(Entity entity) { return NativeInvoker.Invoke<BOOL>(0xB07D3185E11657A5, (ulong)entity); }
        internal static int NETWORK_GET_NETWORK_ID_FROM_ENTITY(Entity entity) { return NativeInvoker.Invoke<int>(0xA11700682F3AD45C, (ulong)entity); }
        internal static Entity NETWORK_GET_ENTITY_FROM_NETWORK_ID(int netId) { return NativeInvoker.Invoke<Entity>(0xCE4E5D9B0A4FF560, (ulong)netId); }
        internal static BOOL NETWORK_GET_ENTITY_IS_NETWORKED(Entity entity) { return NativeInvoker.Invoke<BOOL>(0xC7827959479DCC78, (ulong)entity); }
        internal static BOOL NETWORK_GET_ENTITY_IS_LOCAL(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x0991549DE4D64762, (ulong)entity); }
        internal static void NETWORK_REGISTER_ENTITY_AS_NETWORKED(Entity entity) { NativeInvoker.Invoke(0x06FAACD625D80CAA, (ulong)entity); }
        internal static void NETWORK_UNREGISTER_NETWORKED_ENTITY(Entity entity) { NativeInvoker.Invoke(0x7368E683BB9038D6, (ulong)entity); }
        internal static BOOL NETWORK_DOES_NETWORK_ID_EXIST(int netId) { return NativeInvoker.Invoke<BOOL>(0x38CE16C96BD11344, (ulong)netId); }
        internal static BOOL NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(int netId) { return NativeInvoker.Invoke<BOOL>(0x18A47D074708FD68, (ulong)netId); }
        internal static BOOL NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(int netId) { return NativeInvoker.Invoke<BOOL>(0xA670B3662FAFFBD0, (ulong)netId); }
        internal static BOOL NETWORK_HAS_CONTROL_OF_NETWORK_ID(int netId) { return NativeInvoker.Invoke<BOOL>(0x4D36070FE0215186, (ulong)netId); }
        internal static BOOL NETWORK_IS_NETWORK_ID_A_CLONE_(int netId) { return NativeInvoker.Invoke<BOOL>(0x7242F8B741CE1086, (ulong)netId); }
        internal static BOOL NETWORK_REQUEST_CONTROL_OF_ENTITY(Entity entity) { return NativeInvoker.Invoke<BOOL>(0xB69317BF5E782347, (ulong)entity); }
        internal static BOOL NETWORK_REQUEST_CONTROL_OF_DOOR(int doorID) { return NativeInvoker.Invoke<BOOL>(0x870DDFD5A4A796E4, (ulong)doorID); }
        internal static BOOL NETWORK_HAS_CONTROL_OF_ENTITY(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x01BF60A500E28887, (ulong)entity); }
        internal static BOOL NETWORK_HAS_CONTROL_OF_PICKUP(Pickup pickup) { return NativeInvoker.Invoke<BOOL>(0x5BC9495F0B3B6FA6, (ulong)pickup); }
        internal static BOOL NETWORK_HAS_CONTROL_OF_DOOR(Hash doorHash) { return NativeInvoker.Invoke<BOOL>(0xCB3C68ADB06195DF, (ulong)doorHash); }
        internal static BOOL NETWORK_IS_DOOR_NETWORKED(Hash doorHash) { return NativeInvoker.Invoke<BOOL>(0xC01E93FAC20C3346, (ulong)doorHash); }
        internal static int VEH_TO_NET(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0xB4C94523F023419C, (ulong)vehicle); }
        internal static int PED_TO_NET(Ped ped) { return NativeInvoker.Invoke<int>(0x0EDEC3C276198689, (ulong)ped); }
        internal static int OBJ_TO_NET(Object @object) { return NativeInvoker.Invoke<int>(0x99BFDC94A603E541, (ulong)@object); }
        internal static Vehicle NET_TO_VEH(int netHandle) { return NativeInvoker.Invoke<Vehicle>(0x367B936610BA360C, (ulong)netHandle); }
        internal static Ped NET_TO_PED(int netHandle) { return NativeInvoker.Invoke<Ped>(0xBDCD95FC216A8B3E, (ulong)netHandle); }
        internal static Object NET_TO_OBJ(int netHandle) { return NativeInvoker.Invoke<Object>(0xD8515F5FEA14CB3F, (ulong)netHandle); }
        internal static Entity NET_TO_ENT(int netHandle) { return NativeInvoker.Invoke<Entity>(0xBFFEAB45A9A9094A, (ulong)netHandle); }
        internal static void NETWORK_GET_LOCAL_HANDLE(Any* gamerHandle, int gamerHandleSize) { NativeInvoker.Invoke(0xE86051786B66CD8E, (ulong)gamerHandle, (ulong)gamerHandleSize); }
        internal static void NETWORK_HANDLE_FROM_USER_ID(char* userId, Any* gamerHandle, int gamerHandleSize) { NativeInvoker.Invoke(0xDCD51DD8F87AEC5C, (ulong)userId, (ulong)gamerHandle, (ulong)gamerHandleSize); }
        internal static void NETWORK_HANDLE_FROM_MEMBER_ID(char* memberId, Any* gamerHandle, int gamerHandleSize) { NativeInvoker.Invoke(0xA0FD21BED61E5C4C, (ulong)memberId, (ulong)gamerHandle, (ulong)gamerHandleSize); }
        internal static void NETWORK_HANDLE_FROM_PLAYER(Player player, Any* gamerHandle, int gamerHandleSize) { NativeInvoker.Invoke(0x388EB2B86C73B6B3, (ulong)player, (ulong)gamerHandle, (ulong)gamerHandleSize); }
        internal static Hash NETWORK_HASH_FROM_PLAYER_HANDLE(Player player) { return NativeInvoker.Invoke<Hash>(0xBC1D768F2F5D6C05, (ulong)player); }
        internal static Hash NETWORK_HASH_FROM_GAMER_HANDLE(Any* gamerHandle) { return NativeInvoker.Invoke<Hash>(0x58575AC3CF2CA8EC, (ulong)gamerHandle); }
        internal static void NETWORK_HANDLE_FROM_FRIEND(int friendIndex, Any* gamerHandle, int gamerHandleSize) { NativeInvoker.Invoke(0xD45CB817D7E177D2, (ulong)friendIndex, (ulong)gamerHandle, (ulong)gamerHandleSize); }
        internal static BOOL NETWORK_GAMERTAG_FROM_HANDLE_START(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0x9F0C0A981D73FA56, (ulong)gamerHandle); }
        internal static BOOL NETWORK_GAMERTAG_FROM_HANDLE_PENDING() { return NativeInvoker.Invoke<BOOL>(0xB071E27958EF4CF0); } // 0xB071E27958EF4CF0 0xF000828E b323, (ulong)B071E27958EF4CF0); }
        internal static BOOL NETWORK_GAMERTAG_FROM_HANDLE_SUCCEEDED() { return NativeInvoker.Invoke<BOOL>(0xFD00798DBA7523DD); } // 0xFD00798DBA7523DD 0x89C2B5EA b323, (ulong)FD00798DBA7523DD); }
        internal static char* NETWORK_GET_GAMERTAG_FROM_HANDLE(Any* gamerHandle) { return (char*)NativeInvoker.Invoke<IntPtr>(0x426141162EBE5CDB, (ulong)gamerHandle); }
        internal static int NETWORK_DISPLAYNAMES_FROM_HANDLES_START(Any* p0, Any p1) { return NativeInvoker.Invoke<int>(0xD66C9E72B3CC4982, (ulong)p0, (ulong)p1); }
        internal static int NETWORK_GET_DISPLAYNAMES_FROM_HANDLES(Any p0, Any p1, Any p2) { return NativeInvoker.Invoke<int>(0x58CC181719256197, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL NETWORK_ARE_HANDLES_THE_SAME(Any* gamerHandle1, Any* gamerHandle2) { return NativeInvoker.Invoke<BOOL>(0x57DBA049E110F217, (ulong)gamerHandle1, (ulong)gamerHandle2); }
        internal static BOOL NETWORK_IS_HANDLE_VALID(Any* gamerHandle, int gamerHandleSize) { return NativeInvoker.Invoke<BOOL>(0x6F79B93B0A8E4133, (ulong)gamerHandle, (ulong)gamerHandleSize); }
        internal static Player NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(Any* gamerHandle) { return NativeInvoker.Invoke<Player>(0xCE5F689CF5A0A49D, (ulong)gamerHandle); }
        internal static char* NETWORK_MEMBER_ID_FROM_GAMER_HANDLE(Any* gamerHandle) { return (char*)NativeInvoker.Invoke<IntPtr>(0xC82630132081BB6F, (ulong)gamerHandle); }
        internal static BOOL NETWORK_IS_GAMER_IN_MY_SESSION(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0x0F10B05DDF8D16E9, (ulong)gamerHandle); }
        internal static void NETWORK_SHOW_PROFILE_UI(Any* gamerHandle) { NativeInvoker.Invoke(0x859ED1CEA343FCA8, (ulong)gamerHandle); }
        internal static char* NETWORK_PLAYER_GET_NAME(Player player) { return (char*)NativeInvoker.Invoke<IntPtr>(0x7718D2E2060837D2, (ulong)player); }
        internal static char* NETWORK_PLAYER_GET_USERID(Player player, int* userID) { return (char*)NativeInvoker.Invoke<IntPtr>(0x4927FC39CD0869A0, (ulong)player, (ulong)userID); }
        internal static BOOL NETWORK_PLAYER_IS_ROCKSTAR_DEV(Player player) { return NativeInvoker.Invoke<BOOL>(0x544ABDDA3B409B6D, (ulong)player); }
        internal static BOOL NETWORK_PLAYER_INDEX_IS_CHEATER(Player player) { return NativeInvoker.Invoke<BOOL>(0x565E430DB3B05BEC, (ulong)player); }
        internal static int NETWORK_GET_ENTITY_NET_SCRIPT_ID_(Entity entity) { return NativeInvoker.Invoke<int>(0x815F18AD865F057F, (ulong)entity); }
        internal static int N_0x37D5F739FD494675(Any p0) { return NativeInvoker.Invoke<int>(0x37D5F739FD494675, (ulong)p0); }
        internal static BOOL NETWORK_IS_INACTIVE_PROFILE(Any* p0) { return NativeInvoker.Invoke<BOOL>(0x7E58745504313A2E, (ulong)p0); }
        internal static int NETWORK_GET_MAX_FRIENDS() { return NativeInvoker.Invoke<int>(0xAFEBB0D5D8F687D2); } // 0xAFEBB0D5D8F687D2 0x048171BC b323, (ulong)AFEBB0D5D8F687D2); }
        internal static int NETWORK_GET_FRIEND_COUNT() { return NativeInvoker.Invoke<int>(0x203F1CFD823B27A4); } // 0x203F1CFD823B27A4 0xA396ACDE b323, (ulong)203F1CFD823B27A4); }
        internal static char* NETWORK_GET_FRIEND_NAME(int friendIndex) { return (char*)NativeInvoker.Invoke<IntPtr>(0xE11EBBB2A783FE8B, (ulong)friendIndex); }
        internal static char* NETWORK_GET_FRIEND_NAME_FROM_INDEX_(int friendIndex) { return (char*)NativeInvoker.Invoke<IntPtr>(0x4164F227D052E293, (ulong)friendIndex); }
        internal static BOOL NETWORK_IS_FRIEND_ONLINE(char* name) { return NativeInvoker.Invoke<BOOL>(0x425A44533437B64D, (ulong)name); }
        internal static BOOL NETWORK_IS_FRIEND_HANDLE_ONLINE(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0x87EB7A3FFCB314DB, (ulong)gamerHandle); }
        internal static BOOL NETWORK_IS_FRIEND_IN_SAME_TITLE(char* friendName) { return NativeInvoker.Invoke<BOOL>(0x2EA9A3BEDF3F17B8, (ulong)friendName); }
        internal static BOOL NETWORK_IS_FRIEND_IN_MULTIPLAYER(char* friendName) { return NativeInvoker.Invoke<BOOL>(0x57005C18827F3A28, (ulong)friendName); }
        internal static BOOL NETWORK_IS_FRIEND(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0x1A24A179F9B31654, (ulong)gamerHandle); }
        internal static Any NETWORK_IS_PENDING_FRIEND(Any p0) { return NativeInvoker.Invoke<Any>(0x0BE73DA6984A6E33, (ulong)p0); }
        internal static Any NETWORK_IS_ADDING_FRIEND() { return NativeInvoker.Invoke<Any>(0x6EA101606F6E4D81); } // 0x6EA101606F6E4D81 0xBB7EC8C4 b323, (ulong)6EA101606F6E4D81); }
        internal static BOOL NETWORK_ADD_FRIEND(Any* gamerHandle, char* message) { return NativeInvoker.Invoke<BOOL>(0x8E02D73914064223, (ulong)gamerHandle, (ulong)message); }
        internal static BOOL NETWORK_IS_FRIEND_INDEX_ONLINE(int friendIndex) { return NativeInvoker.Invoke<BOOL>(0xBAD8F2A42B844821, (ulong)friendIndex); }
        internal static void NETWORK_SET_PLAYER_IS_PASSIVE(BOOL toggle) { NativeInvoker.Invoke(0x1B857666604B1A74, (ulong)toggle); }
        internal static BOOL NETWORK_GET_PLAYER_OWNS_WAYPOINT(Player player) { return NativeInvoker.Invoke<BOOL>(0x82377B65E943F72D, (ulong)player); }
        internal static BOOL NETWORK_CAN_SET_WAYPOINT() { return NativeInvoker.Invoke<BOOL>(0xC927EC229934AF60); } // 0xC927EC229934AF60 0x009E68F3 b323, (ulong)C927EC229934AF60); }
        internal static void N_0x4C2A9FDC22377075() { NativeInvoker.Invoke(0x4C2A9FDC22377075); } // 0x4C2A9FDC22377075 b372<, (ulong)4C2A9FDC22377075); }
        internal static Any N_0xB309EBEA797E001F(Any p0) { return NativeInvoker.Invoke<Any>(0xB309EBEA797E001F, (ulong)p0); }
        internal static Any N_0x26F07DD83A5F7F98() { return NativeInvoker.Invoke<Any>(0x26F07DD83A5F7F98); } // 0x26F07DD83A5F7F98 0x9A176B6E b323, (ulong)26F07DD83A5F7F98); }
        internal static BOOL NETWORK_HAS_HEADSET() { return NativeInvoker.Invoke<BOOL>(0xE870F9F1F7B4F1FA); } // 0xE870F9F1F7B4F1FA 0xA7DC5657 b323, (ulong)E870F9F1F7B4F1FA); }
        internal static void N_0x7D395EA61622E116(BOOL p0) { NativeInvoker.Invoke(0x7D395EA61622E116, (ulong)p0); }
        internal static BOOL NETWORK_IS_LOCAL_TALKING() { return NativeInvoker.Invoke<BOOL>(0xC0D2AF00BCC234CA); } // 0xC0D2AF00BCC234CA 0xAC00A5BE b323, (ulong)C0D2AF00BCC234CA); }
        internal static BOOL NETWORK_GAMER_HAS_HEADSET(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0xF2FD55CB574BCC55, (ulong)gamerHandle); }
        internal static BOOL NETWORK_IS_GAMER_TALKING(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0x71C33B22606CD88A, (ulong)gamerHandle); }
        internal static BOOL NETWORK_CAN_COMMUNICATE_WITH_GAMER_2_(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0x8F5D1AD832AEB06C, (ulong)gamerHandle); }
        internal static BOOL NETWORK_CAN_COMMUNICATE_WITH_GAMER(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0xA150A4F065806B1F, (ulong)gamerHandle); }
        internal static BOOL NETWORK_IS_GAMER_MUTED_BY_ME(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0xCE60DE011B6C7978, (ulong)gamerHandle); }
        internal static BOOL NETWORK_AM_I_MUTED_BY_GAMER(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0xDF02A2C93F1F26DA, (ulong)gamerHandle); }
        internal static BOOL NETWORK_IS_GAMER_BLOCKED_BY_ME(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0xE944C4F5AF1B5883, (ulong)gamerHandle); }
        internal static BOOL NETWORK_AM_I_BLOCKED_BY_GAMER(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0x15337C7C268A27B2, (ulong)gamerHandle); }
        internal static BOOL NETWORK_CAN_VIEW_GAMER_USER_CONTENT(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0xB57A49545BA53CE7, (ulong)gamerHandle); }
        internal static BOOL NETWORK_HAS_VIEW_GAMER_USER_CONTENT_RESULT(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0xCCA4318E1AB03F1F, (ulong)gamerHandle); }
        internal static BOOL NETWORK_CAN_PLAY_MULTIPLAYER_WITH_GAMER(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0x07DD29D5E22763F1, (ulong)gamerHandle); }
        internal static BOOL NETWORK_CAN_GAMER_PLAY_MULTIPLAYER_WITH_ME(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0x135F9B7B7ADD2185, (ulong)gamerHandle); }
        internal static BOOL NETWORK_IS_PLAYER_TALKING(Player player) { return NativeInvoker.Invoke<BOOL>(0x031E11F3D447647E, (ulong)player); }
        internal static BOOL NETWORK_PLAYER_HAS_HEADSET(Player player) { return NativeInvoker.Invoke<BOOL>(0x3FB99A8B08D18FD6, (ulong)player); }
        internal static BOOL NETWORK_IS_PLAYER_MUTED_BY_ME(Player player) { return NativeInvoker.Invoke<BOOL>(0x8C71288AE68EDE39, (ulong)player); }
        internal static BOOL NETWORK_AM_I_MUTED_BY_PLAYER(Player player) { return NativeInvoker.Invoke<BOOL>(0x9D6981DFC91A8604, (ulong)player); }
        internal static BOOL NETWORK_IS_PLAYER_BLOCKED_BY_ME(Player player) { return NativeInvoker.Invoke<BOOL>(0x57AF1F8E27483721, (ulong)player); }
        internal static BOOL NETWORK_AM_I_BLOCKED_BY_PLAYER(Player player) { return NativeInvoker.Invoke<BOOL>(0x87F395D957D4353D, (ulong)player); }
        internal static float NETWORK_GET_PLAYER_LOUDNESS(Player player) { return NativeInvoker.Invoke<float>(0x21A1684A25C2867F, (ulong)player); }
        internal static void NETWORK_SET_TALKER_PROXIMITY(float value) { NativeInvoker.Invoke(0xCBF12D65F95AD686, *(uint*)&value); }
        internal static float NETWORK_GET_TALKER_PROXIMITY() { return NativeInvoker.Invoke<float>(0x84F0F13120B4E098); } // 0x84F0F13120B4E098 0x19991ADD b323, (ulong)84F0F13120B4E098); }
        internal static void NETWORK_SET_VOICE_ACTIVE(BOOL toggle) { NativeInvoker.Invoke(0xBABEC9E69A91C57B, (ulong)toggle); }
        internal static void N_0xCFEB46DCD7D8D5EB(BOOL p0) { NativeInvoker.Invoke(0xCFEB46DCD7D8D5EB, (ulong)p0); }
        internal static void NETWORK_OVERRIDE_TRANSITION_CHAT(BOOL p0) { NativeInvoker.Invoke(0xAF66059A131AA269, (ulong)p0); }
        internal static void NETWORK_SET_TEAM_ONLY_CHAT(BOOL toggle) { NativeInvoker.Invoke(0xD5B4883AC32F24C3, (ulong)toggle); }
        internal static void N_0x265559DA40B3F327(Any p0) { NativeInvoker.Invoke(0x265559DA40B3F327, (ulong)p0); }
        internal static Any N_0x4348BFDA56023A2F(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0x4348BFDA56023A2F, (ulong)p0, (ulong)p1); }
        internal static void NETWORK_OVERRIDE_TEAM_RESTRICTIONS(int team, BOOL toggle) { NativeInvoker.Invoke(0x6F697A66CE78674E, (ulong)team, (ulong)toggle); }
        internal static void NETWORK_SET_OVERRIDE_SPECTATOR_MODE(BOOL toggle) { NativeInvoker.Invoke(0x70DA3BF8DACD3210, (ulong)toggle); }
        internal static void N_0x3C5C1E2C2FF814B1(BOOL toggle) { NativeInvoker.Invoke(0x3C5C1E2C2FF814B1, (ulong)toggle); }
        internal static void N_0x9D7AFCBF21C51712(BOOL toggle) { NativeInvoker.Invoke(0x9D7AFCBF21C51712, (ulong)toggle); }
        internal static void NETWORK_SET_NO_SPECTATOR_CHAT(BOOL toggle) { NativeInvoker.Invoke(0xF46A1E03E8755980, (ulong)toggle); }
        internal static void N_0x6A5D89D7769A40D8(BOOL toggle) { NativeInvoker.Invoke(0x6A5D89D7769A40D8, (ulong)toggle); }
        internal static void NETWORK_OVERRIDE_CHAT_RESTRICTIONS(Player player, BOOL toggle) { NativeInvoker.Invoke(0x3039AE5AD2C9C0C4, (ulong)player, (ulong)toggle); }
        internal static void NETWORK_OVERRIDE_SEND_RESTRICTIONS(Player player, BOOL toggle) { NativeInvoker.Invoke(0x97DD4C5944CC2E6A, (ulong)player, (ulong)toggle); }
        internal static void NETWORK_OVERRIDE_SEND_RESTRICTIONS_ALL(BOOL toggle) { NativeInvoker.Invoke(0x57B192B4D4AD23D5, (ulong)toggle); }
        internal static void NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS(Player player, BOOL toggle) { NativeInvoker.Invoke(0xDDF73E2B1FEC5AB4, (ulong)player, (ulong)toggle); }
        internal static void NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS_ALL(BOOL toggle) { NativeInvoker.Invoke(0x0FF2862B61A58AF9, (ulong)toggle); }
        internal static void NETWORK_SET_VOICE_CHANNEL(int channel) { NativeInvoker.Invoke(0xEF6212C2EFEF1A23, (ulong)channel); }
        internal static void NETWORK_CLEAR_VOICE_CHANNEL() { NativeInvoker.Invoke(0xE036A705F989E049); } // 0xE036A705F989E049 0x9ECF722A b323<, (ulong)E036A705F989E049); }
        internal static void NETWORK_APPLY_VOICE_PROXIMITY_OVERRIDE(float x, float y, float z) { NativeInvoker.Invoke(0xDBD2056652689917, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void NETWORK_CLEAR_VOICE_PROXIMITY_OVERRIDE() { NativeInvoker.Invoke(0xF03755696450470C); } // 0xF03755696450470C 0x7F9B9052 b323<, (ulong)F03755696450470C); }
        internal static void N_0x5E3AA4CA2B6FB0EE(Any p0) { NativeInvoker.Invoke(0x5E3AA4CA2B6FB0EE, (ulong)p0); }
        internal static void N_0xCA575C391FEA25CC(Any p0) { NativeInvoker.Invoke(0xCA575C391FEA25CC, (ulong)p0); }
        internal static void N_0xADB57E5B663CCA8B(Player p0, float* p1, float* p2) { NativeInvoker.Invoke(0xADB57E5B663CCA8B, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0x8EF52ACAECC51D9C(BOOL toggle) { NativeInvoker.Invoke(0x8EF52ACAECC51D9C, (ulong)toggle); }
        internal static BOOL NETWORK_IS_TEXT_CHAT_ACTIVE_() { return NativeInvoker.Invoke<BOOL>(0x5FCF4D7069B09026); } // 0x5FCF4D7069B09026 b323, (ulong)5FCF4D7069B09026); }
        internal static void SHUTDOWN_AND_LAUNCH_SINGLE_PLAYER_GAME() { NativeInvoker.Invoke(0x593850C16A36B692); } // 0x593850C16A36B692 0x92B7351C b323<, (ulong)593850C16A36B692); }
        internal static BOOL SHUTDOWN_AND_LOAD_MOST_RECENT_SAVE_() { return NativeInvoker.Invoke<BOOL>(0x9ECA15ADFE141431); } // 0x9ECA15ADFE141431 b505, (ulong)9ECA15ADFE141431); }
        internal static void NETWORK_SET_FRIENDLY_FIRE_OPTION(BOOL toggle) { NativeInvoker.Invoke(0xF808475FA571D823, (ulong)toggle); }
        internal static void NETWORK_SET_RICH_PRESENCE(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x1DCCACDCFC569362, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_SET_RICH_PRESENCE_STRING(int p0, char* textLabel) { NativeInvoker.Invoke(0x3E200C2BCF4164EB, (ulong)p0, (ulong)textLabel); }
        internal static int NETWORK_GET_TIMEOUT_TIME() { return NativeInvoker.Invoke<int>(0x5ED0356A0CE3A34F); } // 0x5ED0356A0CE3A34F 0xE1F86C6A b323, (ulong)5ED0356A0CE3A34F); }
        internal static void NETWORK_LEAVE_PED_BEHIND_BEFORE_WARP(Player player, float x, float y, float z, BOOL p4, BOOL p5) { NativeInvoker.Invoke(0x9769F811D1785B03, (ulong)player, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)p4, (ulong)p5); }
        internal static void NETWORK_LEAVE_PED_BEHIND_BEFORE_CUTSCENE(Player player, BOOL p1) { NativeInvoker.Invoke(0xBF22E0F32968E967, (ulong)player, (ulong)p1); }
        internal static void REMOVE_ALL_STICKY_BOMBS_FROM_ENTITY(Entity entity, Ped ped) { NativeInvoker.Invoke(0x715135F4B82AC90D, (ulong)entity, (ulong)ped); }
        internal static void N_0x17C9E241111A674D(Any p0, Any p1) { NativeInvoker.Invoke(0x17C9E241111A674D, (ulong)p0, (ulong)p1); }
        internal static Any N_0x2E4C123D1C8A710E(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { return NativeInvoker.Invoke<Any>(0x2E4C123D1C8A710E, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static BOOL NETWORK_CLAN_SERVICE_IS_VALID() { return NativeInvoker.Invoke<BOOL>(0x579CCED0265D4896); } // 0x579CCED0265D4896 0xF5F4BD95 b323, (ulong)579CCED0265D4896); }
        internal static BOOL NETWORK_CLAN_PLAYER_IS_ACTIVE(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0xB124B57F571D8F18, (ulong)gamerHandle); }
        internal static BOOL NETWORK_CLAN_PLAYER_GET_DESC(Any* clanDesc, int bufferSize, Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0xEEE6EACBE8874FBA, (ulong)clanDesc, (ulong)bufferSize, (ulong)gamerHandle); }
        internal static BOOL NETWORK_CLAN_IS_ROCKSTAR_CLAN(int* clanDesc, int bufferSize) { return NativeInvoker.Invoke<BOOL>(0x7543BB439F63792B, (ulong)clanDesc, (ulong)bufferSize); }
        internal static void NETWORK_CLAN_GET_UI_FORMATTED_TAG(int* clanDesc, int bufferSize, char* formattedTag) { NativeInvoker.Invoke(0xF45352426FF3A4F0, (ulong)clanDesc, (ulong)bufferSize, (ulong)formattedTag); }
        internal static int NETWORK_CLAN_GET_LOCAL_MEMBERSHIPS_COUNT() { return NativeInvoker.Invoke<int>(0x1F471B79ACC90BEF); } // 0x1F471B79ACC90BEF 0x807B3450 b323, (ulong)1F471B79ACC90BEF); }
        internal static BOOL NETWORK_CLAN_GET_MEMBERSHIP_DESC(int* memberDesc, int p1) { return NativeInvoker.Invoke<BOOL>(0x48DE78AF2C8885B8, (ulong)memberDesc, (ulong)p1); }
        internal static BOOL NETWORK_CLAN_DOWNLOAD_MEMBERSHIP(Any* gamerHandle) { return NativeInvoker.Invoke<BOOL>(0xA989044E70010ABE, (ulong)gamerHandle); }
        internal static BOOL NETWORK_CLAN_DOWNLOAD_MEMBERSHIP_PENDING(Any* p0) { return NativeInvoker.Invoke<BOOL>(0x5B9E023DC6EBEDC0, (ulong)p0); }
        internal static BOOL NETWORK_CLAN_ANY_DOWNLOAD_MEMBERSHIP_PENDING() { return NativeInvoker.Invoke<BOOL>(0xB3F64A6A91432477); } // 0xB3F64A6A91432477 0x83ED8E08 b323, (ulong)B3F64A6A91432477); }
        internal static BOOL NETWORK_CLAN_REMOTE_MEMBERSHIPS_ARE_IN_CACHE(int* p0) { return NativeInvoker.Invoke<BOOL>(0xBB6E6FEE99D866B2, (ulong)p0); }
        internal static int NETWORK_CLAN_GET_MEMBERSHIP_COUNT(int* p0) { return NativeInvoker.Invoke<int>(0xAAB11F6C4ADBC2C1, (ulong)p0); }
        internal static BOOL NETWORK_CLAN_GET_MEMBERSHIP_VALID(int* p0, Any p1) { return NativeInvoker.Invoke<BOOL>(0x48A59CF88D43DF0E, (ulong)p0, (ulong)p1); }
        internal static BOOL NETWORK_CLAN_GET_MEMBERSHIP(int* p0, Any* clanMembership, int p2) { return NativeInvoker.Invoke<BOOL>(0xC8BC2011F67B3411, (ulong)p0, (ulong)clanMembership, (ulong)p2); }
        internal static BOOL NETWORK_CLAN_JOIN(int clanDesc) { return NativeInvoker.Invoke<BOOL>(0x9FAAA4F4FC71F87F, (ulong)clanDesc); }
        internal static BOOL NETWORK_CLAN_ANIMATION_(char* animDict, char* animName) { return NativeInvoker.Invoke<BOOL>(0x729E3401F0430686, (ulong)animDict, (ulong)animName); }
        internal static BOOL N_0x2B51EDBEFC301339(int p0, char* p1) { return NativeInvoker.Invoke<BOOL>(0x2B51EDBEFC301339, (ulong)p0, (ulong)p1); }
        internal static Any N_0xC32EA7A2F6CA7557() { return NativeInvoker.Invoke<Any>(0xC32EA7A2F6CA7557); } // 0xC32EA7A2F6CA7557 0x966C90FD b323, (ulong)C32EA7A2F6CA7557); }
        internal static BOOL NETWORK_CLAN_GET_EMBLEM_TXD_NAME(Any* netHandle, char* txdName) { return NativeInvoker.Invoke<BOOL>(0x5835D9CD92E83184, (ulong)netHandle, (ulong)txdName); }
        internal static BOOL NETWORK_CLAN_REQUEST_EMBLEM(Any p0) { return NativeInvoker.Invoke<BOOL>(0x13518FF1C6B28938, (ulong)p0); }
        internal static BOOL NETWORK_CLAN_IS_EMBLEM_READY(Any p0, Any* p1) { return NativeInvoker.Invoke<BOOL>(0xA134777FF7F33331, (ulong)p0, (ulong)p1); }
        internal static void NETWORK_CLAN_RELEASE_EMBLEM(Any p0) { NativeInvoker.Invoke(0x113E6E3E50E286B0, (ulong)p0); }
        internal static Any NETWORK_GET_PRIMARY_CLAN_DATA_CLEAR() { return NativeInvoker.Invoke<Any>(0x9AA46BADAD0E27ED); } // 0x9AA46BADAD0E27ED 0xE22445DA b323, (ulong)9AA46BADAD0E27ED); }
        internal static void NETWORK_GET_PRIMARY_CLAN_DATA_CANCEL() { NativeInvoker.Invoke(0x042E4B70B93E6054); } // 0x042E4B70B93E6054 0x455DDF5C b323<, (ulong)042E4B70B93E6054); }
        internal static BOOL NETWORK_GET_PRIMARY_CLAN_DATA_START(Any* p0, Any p1) { return NativeInvoker.Invoke<BOOL>(0xCE86D8191B762107, (ulong)p0, (ulong)p1); }
        internal static Any NETWORK_GET_PRIMARY_CLAN_DATA_PENDING() { return NativeInvoker.Invoke<Any>(0xB5074DB804E28CE7); } // 0xB5074DB804E28CE7 0xA4EF02F3 b323, (ulong)B5074DB804E28CE7); }
        internal static Any NETWORK_GET_PRIMARY_CLAN_DATA_SUCCESS() { return NativeInvoker.Invoke<Any>(0x5B4F04F19376A0BA); } // 0x5B4F04F19376A0BA 0x068A054E b323, (ulong)5B4F04F19376A0BA); }
        internal static BOOL NETWORK_GET_PRIMARY_CLAN_DATA_NEW(Any* p0, Any* p1) { return NativeInvoker.Invoke<BOOL>(0xC080FF658B2E41DA, (ulong)p0, (ulong)p1); }
        internal static void SET_NETWORK_ID_CAN_MIGRATE(int netId, BOOL toggle) { NativeInvoker.Invoke(0x299EEB23175895FC, (ulong)netId, (ulong)toggle); }
        internal static void SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(int netId, BOOL toggle) { NativeInvoker.Invoke(0xE05E81A888FA63C8, (ulong)netId, (ulong)toggle); }
        internal static void SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(int netId, Player player, BOOL toggle) { NativeInvoker.Invoke(0xA8A024587329F36A, (ulong)netId, (ulong)player, (ulong)toggle); }
        internal static void N_0x9D724B400A7E8FFC(Any p0, Any p1) { NativeInvoker.Invoke(0x9D724B400A7E8FFC, (ulong)p0, (ulong)p1); }
        internal static void NETWORK_SET_ENTITY_CAN_BLEND(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0xD830567D88A1E873, (ulong)entity, (ulong)toggle); }
        internal static void N_0x0379DAF89BA09AA5(Any p0, Any p1) { NativeInvoker.Invoke(0x0379DAF89BA09AA5, (ulong)p0, (ulong)p1); }
        internal static void NETWORK_SET_ENTITY_INVISIBLE_TO_NETWORK_(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0xF1CA12B18AEF5298, (ulong)entity, (ulong)toggle); }
        internal static void SET_NETWORK_ID_VISIBLE_IN_CUTSCENE(int netId, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xA6928482543022B4, (ulong)netId, (ulong)p1, (ulong)p2); }
        internal static void N_0x32EBD154CB6B8B99(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x32EBD154CB6B8B99, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0x76B3F29D3F967692(Any p0, Any p1) { NativeInvoker.Invoke(0x76B3F29D3F967692, (ulong)p0, (ulong)p1); }
        internal static void SET_NETWORK_CUTSCENE_ENTITIES(BOOL toggle) { NativeInvoker.Invoke(0xAAA553E7DD28A457, (ulong)toggle); }
        internal static void N_0x3FA36981311FA4FF(int netId, BOOL state) { NativeInvoker.Invoke(0x3FA36981311FA4FF, (ulong)netId, (ulong)state); }
        internal static BOOL IS_NETWORK_ID_OWNED_BY_PARTICIPANT(int netId) { return NativeInvoker.Invoke<BOOL>(0xA1607996431332DF, (ulong)netId); }
        internal static void SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE(BOOL p0, BOOL p1) { NativeInvoker.Invoke(0xD1065D68947E7B6E, (ulong)p0, (ulong)p1); }
        internal static void SET_LOCAL_PLAYER_INVISIBLE_LOCALLY(BOOL p0) { NativeInvoker.Invoke(0xE5F773C1A1D9D168, (ulong)p0); }
        internal static void SET_LOCAL_PLAYER_VISIBLE_LOCALLY(BOOL p0) { NativeInvoker.Invoke(0x7619364C82D3BF14, (ulong)p0); }
        internal static void SET_PLAYER_INVISIBLE_LOCALLY(Player player, BOOL toggle) { NativeInvoker.Invoke(0x12B37D54667DB0B8, (ulong)player, (ulong)toggle); }
        internal static void SET_PLAYER_VISIBLE_LOCALLY(Player player, BOOL toggle) { NativeInvoker.Invoke(0xFAA10F1FAFB11AF2, (ulong)player, (ulong)toggle); }
        internal static void FADE_OUT_LOCAL_PLAYER(BOOL p0) { NativeInvoker.Invoke(0x416DBD4CD6ED8DD2, (ulong)p0); }
        internal static void NETWORK_FADE_OUT_ENTITY(Entity entity, BOOL normal, BOOL slow) { NativeInvoker.Invoke(0xDE564951F95E09ED, (ulong)entity, (ulong)normal, (ulong)slow); }
        internal static void NETWORK_FADE_IN_ENTITY(Entity entity, BOOL state, Any p2) { NativeInvoker.Invoke(0x1F4ED342ACEFE62D, (ulong)entity, (ulong)state, (ulong)p2); }
        internal static BOOL NETWORK_IS_PLAYER_FADING(Player player) { return NativeInvoker.Invoke<BOOL>(0x631DC5DFF4B110E3, (ulong)player); }
        internal static BOOL NETWORK_IS_ENTITY_FADING(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x422F32CC7E56ABAD, (ulong)entity); }
        internal static BOOL IS_PLAYER_IN_CUTSCENE(Player player) { return NativeInvoker.Invoke<BOOL>(0xE73092F4157CD126, (ulong)player); }
        internal static void SET_ENTITY_VISIBLE_IN_CUTSCENE(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xE0031D3C8F36AB82, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void SET_ENTITY_LOCALLY_INVISIBLE(Entity entity) { NativeInvoker.Invoke(0xE135A9FF3F5D05D8, (ulong)entity); }
        internal static void SET_ENTITY_LOCALLY_VISIBLE(Entity entity) { NativeInvoker.Invoke(0x241E289B5C059EDC, (ulong)entity); }
        internal static BOOL IS_DAMAGE_TRACKER_ACTIVE_ON_NETWORK_ID(int netID) { return NativeInvoker.Invoke<BOOL>(0x6E192E33AD436366, (ulong)netID); }
        internal static void ACTIVATE_DAMAGE_TRACKER_ON_NETWORK_ID(int netID, BOOL toggle) { NativeInvoker.Invoke(0xD45B1FFCCD52FF19, (ulong)netID, (ulong)toggle); }
        internal static BOOL IS_DAMAGE_TRACKER_ACTIVE_ON_PLAYER_(Player player) { return NativeInvoker.Invoke<BOOL>(0xB2092A1EAA7FD45F, (ulong)player); }
        internal static void ACTIVATE_DAMAGE_TRACKER_ON_PLAYER_(Player player, BOOL toggle) { NativeInvoker.Invoke(0xBEC0816FF5ACBCDA, (ulong)player, (ulong)toggle); }
        internal static BOOL IS_SPHERE_VISIBLE_TO_ANOTHER_MACHINE(float p0, float p1, float p2, float p3) { return NativeInvoker.Invoke<BOOL>(0xD82CF8E64C8729D8, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3); }
        internal static BOOL IS_SPHERE_VISIBLE_TO_PLAYER(Any p0, float p1, float p2, float p3, float p4) { return NativeInvoker.Invoke<BOOL>(0xDC3A310219E5DA62, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4); }
        internal static void RESERVE_NETWORK_MISSION_OBJECTS(int amount) { NativeInvoker.Invoke(0x4E5C93BD0C32FBF8, (ulong)amount); }
        internal static void RESERVE_NETWORK_MISSION_PEDS(int amount) { NativeInvoker.Invoke(0xB60FEBA45333D36F, (ulong)amount); }
        internal static void RESERVE_NETWORK_MISSION_VEHICLES(int amount) { NativeInvoker.Invoke(0x76B02E21ED27A469, (ulong)amount); }
        internal static void RESERVE_NETWORK_LOCAL_OBJECTS_(int amount) { NativeInvoker.Invoke(0x797F9C5E661D920E, (ulong)amount); }
        internal static void RESERVE_NETWORK_LOCAL_PEDS_(int amount) { NativeInvoker.Invoke(0x2C8DF5D129595281, (ulong)amount); }
        internal static void RESERVE_NETWORK_LOCAL_VEHICLES_(int amount) { NativeInvoker.Invoke(0x42613035157E4208, (ulong)amount); }
        internal static BOOL CAN_REGISTER_MISSION_OBJECTS(int amount) { return NativeInvoker.Invoke<BOOL>(0x800DD4721A8B008B, (ulong)amount); }
        internal static BOOL CAN_REGISTER_MISSION_PEDS(int amount) { return NativeInvoker.Invoke<BOOL>(0xBCBF4FEF9FA5D781, (ulong)amount); }
        internal static BOOL CAN_REGISTER_MISSION_VEHICLES(int amount) { return NativeInvoker.Invoke<BOOL>(0x7277F1F2E085EE74, (ulong)amount); }
        internal static BOOL CAN_REGISTER_MISSION_PICKUPS_(int amount) { return NativeInvoker.Invoke<BOOL>(0x0A49D1CB6E34AF72, (ulong)amount); }
        internal static Any N_0xE16AA70CE9BEEDC3(Any p0) { return NativeInvoker.Invoke<Any>(0xE16AA70CE9BEEDC3, (ulong)p0); }
        internal static BOOL CAN_REGISTER_MISSION_ENTITIES(int ped_amt, int vehicle_amt, int @object_amt, int pickup_amt) { return NativeInvoker.Invoke<BOOL>(0x69778E7564BADE6D, (ulong)ped_amt, (ulong)vehicle_amt, (ulong)@object_amt, (ulong)pickup_amt); }
        internal static int GET_NUM_RESERVED_MISSION_OBJECTS(BOOL p0, Any p1) { return NativeInvoker.Invoke<int>(0xAA81B5F10BC43AC2, (ulong)p0, (ulong)p1); }
        internal static int GET_NUM_RESERVED_MISSION_PEDS(BOOL p0, Any p1) { return NativeInvoker.Invoke<int>(0x1F13D5AE5CB17E17, (ulong)p0, (ulong)p1); }
        internal static int GET_NUM_RESERVED_MISSION_VEHICLES(BOOL p0, Any p1) { return NativeInvoker.Invoke<int>(0xCF3A965906452031, (ulong)p0, (ulong)p1); }
        internal static int GET_NUM_CREATED_MISSION_OBJECTS(BOOL p0) { return NativeInvoker.Invoke<int>(0x12B6281B6C6706C0, (ulong)p0); }
        internal static int GET_NUM_CREATED_MISSION_PEDS(BOOL p0) { return NativeInvoker.Invoke<int>(0xCB215C4B56A7FAE7, (ulong)p0); }
        internal static int GET_NUM_CREATED_MISSION_VEHICLES(BOOL p0) { return NativeInvoker.Invoke<int>(0x0CD9AB83489430EA, (ulong)p0); }
        internal static void N_0xE42D626EEC94E5D9(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { NativeInvoker.Invoke(0xE42D626EEC94E5D9, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static int GET_MAX_NUM_NETWORK_OBJECTS() { return NativeInvoker.Invoke<int>(0xC7BE335216B5EC7C); } // 0xC7BE335216B5EC7C 0x8687E285 b323, (ulong)C7BE335216B5EC7C); }
        internal static int GET_MAX_NUM_NETWORK_PEDS() { return NativeInvoker.Invoke<int>(0x0C1F7D49C39D2289); } // 0x0C1F7D49C39D2289 0x744AC008 b323, (ulong)0C1F7D49C39D2289); }
        internal static int GET_MAX_NUM_NETWORK_VEHICLES() { return NativeInvoker.Invoke<int>(0x0AFCE529F69B21FF); } // 0x0AFCE529F69B21FF 0xC3A12135 b323, (ulong)0AFCE529F69B21FF); }
        internal static int GET_MAX_NUM_NETWORK_PICKUPS() { return NativeInvoker.Invoke<int>(0xA72835064DD63E4C); } // 0xA72835064DD63E4C 0x6A036061 b323, (ulong)A72835064DD63E4C); }
        internal static void N_0xBA7F0B77D80A4EB7(Any p0, Any p1) { NativeInvoker.Invoke(0xBA7F0B77D80A4EB7, (ulong)p0, (ulong)p1); }
        internal static void N_0x0F1A4B45B7693B95(Any p0, Any p1) { NativeInvoker.Invoke(0x0F1A4B45B7693B95, (ulong)p0, (ulong)p1); }
        internal static int GET_NETWORK_TIME() { return NativeInvoker.Invoke<int>(0x7A5487FE9FAA6B48); } // 0x7A5487FE9FAA6B48 0x998103C2 b323, (ulong)7A5487FE9FAA6B48); }
        internal static int GET_NETWORK_TIME_ACCURATE() { return NativeInvoker.Invoke<int>(0x89023FBBF9200E9F); } // 0x89023FBBF9200E9F 0x98AA48E5 b323, (ulong)89023FBBF9200E9F); }
        internal static BOOL HAS_NETWORK_TIME_STARTED() { return NativeInvoker.Invoke<BOOL>(0x46718ACEEDEAFC84); } // 0x46718ACEEDEAFC84 0x4538C4A2 b323, (ulong)46718ACEEDEAFC84); }
        internal static int GET_TIME_OFFSET(int timeA, int timeB) { return NativeInvoker.Invoke<int>(0x017008CCDAD48503, (ulong)timeA, (ulong)timeB); }
        internal static BOOL IS_TIME_LESS_THAN(int timeA, int timeB) { return NativeInvoker.Invoke<BOOL>(0xCB2CF5148012C8D0, (ulong)timeA, (ulong)timeB); }
        internal static BOOL IS_TIME_MORE_THAN(int timeA, int timeB) { return NativeInvoker.Invoke<BOOL>(0xDE350F8651E4346C, (ulong)timeA, (ulong)timeB); }
        internal static BOOL IS_TIME_EQUAL_TO(int timeA, int timeB) { return NativeInvoker.Invoke<BOOL>(0xF5BC95857BD6D512, (ulong)timeA, (ulong)timeB); }
        internal static int GET_TIME_DIFFERENCE(int timeA, int timeB) { return NativeInvoker.Invoke<int>(0xA2C6FC031D46FFF0, (ulong)timeA, (ulong)timeB); }
        internal static char* GET_TIME_AS_STRING(int time) { return (char*)NativeInvoker.Invoke<IntPtr>(0x9E23B1777A927DAD, (ulong)time); }
        internal static char* GET_CLOUD_TIME_AS_STRING_() { return (char*)NativeInvoker.Invoke<IntPtr>(0xF12E6CD06C73D69E); } // 0xF12E6CD06C73D69E b1103, (ulong)F12E6CD06C73D69E); }
        internal static int GET_CLOUD_TIME_AS_INT() { return NativeInvoker.Invoke<int>(0x9A73240B49945C76); } // 0x9A73240B49945C76 0xF2FDF2E0 b323, (ulong)9A73240B49945C76); }
        internal static void CONVERT_POSIX_TIME(int posixTime, Any* timeStructure) { NativeInvoker.Invoke(0xAC97AF97FA68E5D5, (ulong)posixTime, (ulong)timeStructure); }
        internal static void NETWORK_SET_IN_SPECTATOR_MODE(BOOL toggle, Ped playerPed) { NativeInvoker.Invoke(0x423DE3854BB50894, (ulong)toggle, (ulong)playerPed); }
        internal static void NETWORK_SET_IN_SPECTATOR_MODE_EXTENDED(BOOL toggle, Ped playerPed, BOOL p2) { NativeInvoker.Invoke(0x419594E137637120, (ulong)toggle, (ulong)playerPed, (ulong)p2); }
        internal static void NETWORK_SET_IN_FREE_CAM_MODE(BOOL toggle) { NativeInvoker.Invoke(0xFC18DB55AE19E046, (ulong)toggle); }
        internal static void NETWORK_SET_CHOICE_MIGRATE_OPTIONS(BOOL toggle, Player player) { NativeInvoker.Invoke(0x5C707A667DF8B9FA, (ulong)toggle, (ulong)player); }
        internal static BOOL NETWORK_IS_IN_SPECTATOR_MODE() { return NativeInvoker.Invoke<BOOL>(0x048746E388762E11); } // 0x048746E388762E11 0x3EAD9DB8 b323, (ulong)048746E388762E11); }
        internal static void NETWORK_SET_IN_MP_CUTSCENE(BOOL p0, BOOL p1) { NativeInvoker.Invoke(0x9CA5DE655269FEC4, (ulong)p0, (ulong)p1); }
        internal static BOOL NETWORK_IS_IN_MP_CUTSCENE() { return NativeInvoker.Invoke<BOOL>(0x6CC27C9FA2040220); } // 0x6CC27C9FA2040220 0x4BB33316 b323, (ulong)6CC27C9FA2040220); }
        internal static BOOL NETWORK_IS_PLAYER_IN_MP_CUTSCENE(Player player) { return NativeInvoker.Invoke<BOOL>(0x63F9EE203C3619F2, (ulong)player); }
        internal static void N_0xFAC18E7356BD3210() { NativeInvoker.Invoke(0xFAC18E7356BD3210); } // 0xFAC18E7356BD3210 b1180<, (ulong)FAC18E7356BD3210); }
        internal static void SET_NETWORK_VEHICLE_RESPOT_TIMER(int netId, int time, Any p2, Any p3) { NativeInvoker.Invoke(0xEC51713AB6EC36E8, (ulong)netId, (ulong)time, (ulong)p2, (ulong)p3); }
        internal static void SET_NETWORK_VEHICLE_AS_GHOST(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x6274C4712850841E, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_NETWORK_VEHICLE_POSITION_UPDATE_MULTIPLIER_(Vehicle vehicle, float multiplier) { NativeInvoker.Invoke(0xA2A707979FE754DC, (ulong)vehicle, *(uint*)&multiplier); }
        internal static void SET_NETWORK_ENABLE_VEHICLE_POSITION_CORRECTION_(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x838DA0936A24ED4D, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_LOCAL_PLAYER_AS_GHOST_(BOOL toggle, BOOL p1) { NativeInvoker.Invoke(0x5FFE9B4144F9712F, (ulong)toggle, (ulong)p1); }
        internal static BOOL IS_ENTITY_GHOSTED_TO_LOCAL_PLAYER_(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x21D04D7BC538C146, (ulong)entity); }
        internal static void N_0x13F1FCB111B820B0(BOOL p0) { NativeInvoker.Invoke(0x13F1FCB111B820B0, (ulong)p0); }
        internal static void SET_RELATIONSHIP_TO_PLAYER_(Player player, BOOL p1) { NativeInvoker.Invoke(0xA7C511FA1C5BDA38, (ulong)player, (ulong)p1); }
        internal static void SET_GHOSTED_ENTITY_ALPHA_(int alpha) { NativeInvoker.Invoke(0x658500AE6D723A7E, (ulong)alpha); }
        internal static void RESET_GHOSTED_ENTITY_ALPHA_() { NativeInvoker.Invoke(0x17330EBF2F2124A8); } // 0x17330EBF2F2124A8 b791<, (ulong)17330EBF2F2124A8); }
        internal static void NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER_(Entity entity, BOOL p1) { NativeInvoker.Invoke(0x4BA166079D658ED4, (ulong)entity, (ulong)p1); }
        internal static void N_0xD7B6C73CAD419BCF(BOOL p0) { NativeInvoker.Invoke(0xD7B6C73CAD419BCF, (ulong)p0); }
        internal static BOOL N_0x7EF7649B64D7FF10(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x7EF7649B64D7FF10, (ulong)entity); }
        internal static void USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR(BOOL toggle) { NativeInvoker.Invoke(0x77758139EC9B66C7, (ulong)toggle); }
        internal static int NETWORK_CREATE_SYNCHRONISED_SCENE(float x, float y, float z, float xRot, float yRot, float zRot, int rotationOrder, BOOL useOcclusionPortal, BOOL looped, float p9, float animTime, float p11) { return NativeInvoker.Invoke<int>(0x7CD6BC4C2BBDD526, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&xRot, *(uint*)&yRot, *(uint*)&zRot, (ulong)rotationOrder, (ulong)useOcclusionPortal, (ulong)looped, *(uint*)&p9, *(uint*)&animTime, *(uint*)&p11); }
        internal static void NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE(Ped ped, int netScene, char* animDict, char* animnName, float speed, float speedMultiplier, int duration, int flag, float playbackRate, Any p9) { NativeInvoker.Invoke(0x742A637471BCECD9, (ulong)ped, (ulong)netScene, (ulong)animDict, (ulong)animnName, *(uint*)&speed, *(uint*)&speedMultiplier, (ulong)duration, (ulong)flag, *(uint*)&playbackRate, (ulong)p9); }
        internal static void N_0xA5EAFE473E45C442(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9) { NativeInvoker.Invoke(0xA5EAFE473E45C442, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9); }
        internal static void NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE(Entity entity, int netScene, char* animDict, char* animName, float speed, float speedMulitiplier, int flag) { NativeInvoker.Invoke(0xF2404D68CBC855FA, (ulong)entity, (ulong)netScene, (ulong)animDict, (ulong)animName, *(uint*)&speed, *(uint*)&speedMulitiplier, (ulong)flag); }
        internal static void N_0x45F35C0EDC33B03B(int netScene, Hash modelHash, float x, float y, float z, float p5, char* p6, float p7, float p8, int flags) { NativeInvoker.Invoke(0x45F35C0EDC33B03B, (ulong)netScene, (ulong)modelHash, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&p5, (ulong)p6, *(uint*)&p7, *(uint*)&p8, (ulong)flags); }
        internal static void NETWORK_ADD_SYNCHRONISED_SCENE_CAMERA(int netScene, char* animDict, char* animName) { NativeInvoker.Invoke(0xCF8BD3B0BD6D42D7, (ulong)netScene, (ulong)animDict, (ulong)animName); }
        internal static void NETWORK_ATTACH_SYNCHRONISED_SCENE_TO_ENTITY(int netScene, Entity entity, int bone) { NativeInvoker.Invoke(0x478DCBD2A98B705A, (ulong)netScene, (ulong)entity, (ulong)bone); }
        internal static void NETWORK_START_SYNCHRONISED_SCENE(int netScene) { NativeInvoker.Invoke(0x9A1B3FCDB36C8697, (ulong)netScene); }
        internal static void NETWORK_STOP_SYNCHRONISED_SCENE(int netScene) { NativeInvoker.Invoke(0xC254481A4574CB2F, (ulong)netScene); }
        internal static int NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID(int netId) { return NativeInvoker.Invoke<int>(0x02C40BF885C567B6, (ulong)netId); }
        internal static void N_0xC9B43A33D09CADA7(Any p0) { NativeInvoker.Invoke(0xC9B43A33D09CADA7, (ulong)p0); }
        internal static void N_0x144DA052257AE7D8(Any p0) { NativeInvoker.Invoke(0x144DA052257AE7D8, (ulong)p0); }
        internal static Any N_0xFB1F9381E80FA13F(int p0, Any p1) { return NativeInvoker.Invoke<Any>(0xFB1F9381E80FA13F, (ulong)p0, (ulong)p1); }
        internal static BOOL NETWORK_START_RESPAWN_SEARCH_FOR_PLAYER(Player player, float x, float y, float z, float radius, float p5, float p6, float p7, int flags) { return NativeInvoker.Invoke<BOOL>(0x5A6FFA2433E2F14C, (ulong)player, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, *(uint*)&p5, *(uint*)&p6, *(uint*)&p7, (ulong)flags); }
        internal static BOOL NETWORK_START_RESPAWN_SEARCH_IN_ANGLED_AREA_FOR_PLAYER(Player player, float x1, float y1, float z1, float x2, float y2, float z2, float width, float p8, float p9, float p10, int flags) { return NativeInvoker.Invoke<BOOL>(0x4BA92A18502BCA61, (ulong)player, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&width, *(uint*)&p8, *(uint*)&p9, *(uint*)&p10, (ulong)flags); }
        internal static Any NETWORK_QUERY_RESPAWN_RESULTS(Any* p0) { return NativeInvoker.Invoke<Any>(0x3C891A251567DFCE, (ulong)p0); }
        internal static void NETWORK_CANCEL_RESPAWN_SEARCH() { NativeInvoker.Invoke(0xFB8F2A6F3DF08CBE); } // 0xFB8F2A6F3DF08CBE 0x44BFB619 b323<, (ulong)FB8F2A6F3DF08CBE); }
        internal static void NETWORK_GET_RESPAWN_RESULT(int randomInt, Vector3* coordinates, float* heading) { NativeInvoker.Invoke(0x371EA43692861CF1, (ulong)randomInt, (ulong)coordinates, (ulong)heading); }
        internal static int NETWORK_GET_RESPAWN_RESULT_FLAGS(int p0) { return NativeInvoker.Invoke<int>(0x6C34F1208B8923FD, (ulong)p0); }
        internal static void NETWORK_START_SOLO_TUTORIAL_SESSION() { NativeInvoker.Invoke(0x17E0198B3882C2CB); } // 0x17E0198B3882C2CB 0x408A9436 b323<, (ulong)17E0198B3882C2CB); }
        internal static void N_0xFB680D403909DC70(int teamId, int instanceId) { NativeInvoker.Invoke(0xFB680D403909DC70, (ulong)teamId, (ulong)instanceId); }
        internal static void NETWORK_END_TUTORIAL_SESSION() { NativeInvoker.Invoke(0xD0AFAFF5A51D72F7); } // 0xD0AFAFF5A51D72F7 0xBA57E53E b323<, (ulong)D0AFAFF5A51D72F7); }
        internal static BOOL NETWORK_IS_IN_TUTORIAL_SESSION() { return NativeInvoker.Invoke<BOOL>(0xADA24309FE08DACF); } // 0xADA24309FE08DACF 0x34DD7B28 b323, (ulong)ADA24309FE08DACF); }
        internal static BOOL N_0xB37E4E6A2388CA7B() { return NativeInvoker.Invoke<BOOL>(0xB37E4E6A2388CA7B); } // 0xB37E4E6A2388CA7B 0x755A2B3E b323, (ulong)B37E4E6A2388CA7B); }
        internal static BOOL NETWORK_IS_TUTORIAL_SESSION_CHANGE_PENDING() { return NativeInvoker.Invoke<BOOL>(0x35F0B98A8387274D); } // 0x35F0B98A8387274D 0xA003C40B b323, (ulong)35F0B98A8387274D); }
        internal static int NETWORK_GET_PLAYER_TUTORIAL_SESSION_INSTANCE(Player player) { return NativeInvoker.Invoke<int>(0x3B39236746714134, (ulong)player); }
        internal static BOOL NETWORK_IS_PLAYER_EQUAL_TO_INDEX_(Player player, int index) { return NativeInvoker.Invoke<BOOL>(0x9DE986FC9A87C474, (ulong)player, (ulong)index); }
        internal static void NETWORK_CONCEAL_PLAYER(Player player, BOOL toggle, BOOL p2) { NativeInvoker.Invoke(0xBBDF066252829606, (ulong)player, (ulong)toggle, (ulong)p2); }
        internal static BOOL NETWORK_IS_PLAYER_CONCEALED(Player player) { return NativeInvoker.Invoke<BOOL>(0x919B3C98ED8292F9, (ulong)player); }
        internal static void NETWORK_CONCEAL_ENTITY_(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0x1632BE0AC1E62876, (ulong)entity, (ulong)toggle); }
        internal static BOOL NETWORK_IS_ENTITY_CONCEALED_(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x71302EC70689052A, (ulong)entity); }
        internal static void NETWORK_OVERRIDE_CLOCK_TIME(int hours, int minutes, int seconds) { NativeInvoker.Invoke(0xE679E3E06E363892, (ulong)hours, (ulong)minutes, (ulong)seconds); }
        internal static void NETWORK_OVERRIDE_CLOCK_MILLISECONDS_PER_GAME_MINUTE_(int ms) { NativeInvoker.Invoke(0x42BF1D2E723B6D7E, (ulong)ms); }
        internal static void NETWORK_CLEAR_CLOCK_TIME_OVERRIDE() { NativeInvoker.Invoke(0xD972DF67326F966E); } // 0xD972DF67326F966E 0xC4AEAF49 b323<, (ulong)D972DF67326F966E); }
        internal static BOOL NETWORK_IS_CLOCK_TIME_OVERRIDDEN() { return NativeInvoker.Invoke<BOOL>(0xD7C95D322FF57522); } // 0xD7C95D322FF57522 0x2465296D b323, (ulong)D7C95D322FF57522); }
        internal static Any NETWORK_ADD_ENTITY_AREA(float p0, float p1, float p2, float p3, float p4, float p5) { return NativeInvoker.Invoke<Any>(0x494C8FB299290269, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5); }
        internal static Any NETWORK_ADD_ENTITY_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float width) { return NativeInvoker.Invoke<Any>(0x376C6375BA60293A, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&width); }
        internal static Any NETWORK_ADD_ENTITY_DISPLAYED_BOUNDARIES(float p0, float p1, float p2, float p3, float p4, float p5) { return NativeInvoker.Invoke<Any>(0x25B99872D588A101, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5); }
        internal static Any N_0x2B1C623823DB0D9D(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { return NativeInvoker.Invoke<Any>(0x2B1C623823DB0D9D, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static BOOL NETWORK_REMOVE_ENTITY_AREA(Any p0) { return NativeInvoker.Invoke<BOOL>(0x93CF869BAA0C4874, (ulong)p0); }
        internal static BOOL NETWORK_ENTITY_AREA_DOES_EXIST(int areaHandle) { return NativeInvoker.Invoke<BOOL>(0xE64A3CA08DFA37A9, (ulong)areaHandle); }
        internal static BOOL N_0x4DF7CFFF471A7FB1(Any p0) { return NativeInvoker.Invoke<BOOL>(0x4DF7CFFF471A7FB1, (ulong)p0); }
        internal static BOOL NETWORK_ENTITY_AREA_IS_OCCUPIED(int areaHandle) { return NativeInvoker.Invoke<BOOL>(0x4A2D4E8BF4265B0F, (ulong)areaHandle); }
        internal static void NETWORK_USE_HIGH_PRECISION_BLENDING(int netID, BOOL toggle) { NativeInvoker.Invoke(0x2B1813ABA29016C5, (ulong)netID, (ulong)toggle); }
        internal static void N_0xA6FCECCF4721D679(Any p0) { NativeInvoker.Invoke(0xA6FCECCF4721D679, (ulong)p0); }
        internal static void N_0x95BAF97C82464629(Any p0, Any p1) { NativeInvoker.Invoke(0x95BAF97C82464629, (ulong)p0, (ulong)p1); }
        internal static BOOL NETWORK_REQUEST_CLOUD_BACKGROUND_SCRIPTS() { return NativeInvoker.Invoke<BOOL>(0x924426BFFD82E915); } // 0x924426BFFD82E915 0x98EFB921 b323, (ulong)924426BFFD82E915); }
        internal static BOOL NETWORK_IS_CLOUD_BACKGROUND_SCRIPT_REQUEST_PENDING() { return NativeInvoker.Invoke<BOOL>(0x8132C0EB8B2B3293); } // 0x8132C0EB8B2B3293 0x20AB933A b323, (ulong)8132C0EB8B2B3293); }
        internal static void NETWORK_REQUEST_CLOUD_TUNABLES() { NativeInvoker.Invoke(0x42FB3B532D526E6C); } // 0x42FB3B532D526E6C 0xD760CAD5 b323<, (ulong)42FB3B532D526E6C); }
        internal static BOOL NETWORK_IS_TUNABLE_CLOUD_REQUEST_PENDING() { return NativeInvoker.Invoke<BOOL>(0x0467C11ED88B7D28); } // 0x0467C11ED88B7D28 0x47978D7F b323, (ulong)0467C11ED88B7D28); }
        internal static int NETWORK_GET_TUNABLE_CLOUD_CRC() { return NativeInvoker.Invoke<int>(0x10BD227A753B0D84); } // 0x10BD227A753B0D84 0x231CFD12 b323, (ulong)10BD227A753B0D84); }
        internal static BOOL NETWORK_DOES_TUNABLE_EXIST(char* tunableContext, char* tunableName) { return NativeInvoker.Invoke<BOOL>(0x85E5F8B9B898B20A, (ulong)tunableContext, (ulong)tunableName); }
        internal static BOOL NETWORK_ACCESS_TUNABLE_INT(char* tunableContext, char* tunableName, int* value) { return NativeInvoker.Invoke<BOOL>(0x8BE1146DFD5D4468, (ulong)tunableContext, (ulong)tunableName, (ulong)value); }
        internal static BOOL NETWORK_ACCESS_TUNABLE_FLOAT(char* tunableContext, char* tunableName, float* value) { return NativeInvoker.Invoke<BOOL>(0xE5608CA7BC163A5F, (ulong)tunableContext, (ulong)tunableName, (ulong)value); }
        internal static BOOL NETWORK_ACCESS_TUNABLE_BOOL(char* tunableContext, char* tunableName) { return NativeInvoker.Invoke<BOOL>(0xAA6A47A573ABB75A, (ulong)tunableContext, (ulong)tunableName); }
        internal static BOOL NETWORK_DOES_TUNABLE_EXIST_HASH(Hash tunableContext, Hash tunableName) { return NativeInvoker.Invoke<BOOL>(0xE4E53E1419D81127, (ulong)tunableContext, (ulong)tunableName); }
        internal static BOOL NETWORK_ALLOCATE_TUNABLES_REGISTRATION_DATA_MAP_() { return NativeInvoker.Invoke<BOOL>(0xFAFC23AEE23868DB); } // 0xFAFC23AEE23868DB b393, (ulong)FAFC23AEE23868DB); }
        internal static BOOL NETWORK_ACCESS_TUNABLE_INT_HASH(Hash tunableContext, Hash tunableName, int* value) { return NativeInvoker.Invoke<BOOL>(0x40FCE03E50E8DBE8, (ulong)tunableContext, (ulong)tunableName, (ulong)value); }
        internal static BOOL NETWORK_REGISTER_TUNABLE_INT_HASH_(Hash contextHash, Hash nameHash, int* value) { return NativeInvoker.Invoke<BOOL>(0x3A8B55FDA4C8DDEF, (ulong)contextHash, (ulong)nameHash, (ulong)value); }
        internal static BOOL NETWORK_ACCESS_TUNABLE_FLOAT_HASH(Hash tunableContext, Hash tunableName, float* value) { return NativeInvoker.Invoke<BOOL>(0x972BC203BBC4C4D5, (ulong)tunableContext, (ulong)tunableName, (ulong)value); }
        internal static BOOL NETWORK_REGISTER_TUNABLE_FLOAT_HASH_(Hash contextHash, Hash nameHash, float* value) { return NativeInvoker.Invoke<BOOL>(0x1950DAE9848A4739, (ulong)contextHash, (ulong)nameHash, (ulong)value); }
        internal static BOOL NETWORK_ACCESS_TUNABLE_BOOL_HASH(Hash tunableContext, Hash tunableName) { return NativeInvoker.Invoke<BOOL>(0xEA16B69D93D71A45, (ulong)tunableContext, (ulong)tunableName); }
        internal static BOOL NETWORK_REGISTER_TUNABLE_BOOL_HASH_(Hash contextHash, Hash nameHash, BOOL* value) { return NativeInvoker.Invoke<BOOL>(0x697F508861875B42, (ulong)contextHash, (ulong)nameHash, (ulong)value); }
        internal static BOOL NETWORK_TRY_ACCESS_TUNABLE_BOOL_HASH(Hash tunableContext, Hash tunableName, BOOL defaultValue) { return NativeInvoker.Invoke<BOOL>(0xC7420099936CE286, (ulong)tunableContext, (ulong)tunableName, (ulong)defaultValue); }
        internal static int NETWORK_GET_CONTENT_MODIFIER_LIST_ID(Hash contentHash) { return NativeInvoker.Invoke<int>(0x187382F8A3E0A6C3, (ulong)contentHash); }
        internal static int N_0x7DB53B37A2F211A0() { return NativeInvoker.Invoke<int>(0x7DB53B37A2F211A0); } // 0x7DB53B37A2F211A0 0x053BB329 b323, (ulong)7DB53B37A2F211A0); }
        internal static void NETWORK_RESET_BODY_TRACKER() { NativeInvoker.Invoke(0x72433699B4E6DD64); } // 0x72433699B4E6DD64 0x3914463F b323<, (ulong)72433699B4E6DD64); }
        internal static int NETWORK_GET_NUM_BODY_TRACKERS_() { return NativeInvoker.Invoke<int>(0xD38C4A6D047C019D); } // 0xD38C4A6D047C019D 0x17CBC608 b323, (ulong)D38C4A6D047C019D); }
        internal static BOOL N_0x2E0BF682CC778D49(Any p0) { return NativeInvoker.Invoke<BOOL>(0x2E0BF682CC778D49, (ulong)p0); }
        internal static BOOL N_0x0EDE326D47CD0F3E(Ped ped, Player player) { return NativeInvoker.Invoke<BOOL>(0x0EDE326D47CD0F3E, (ulong)ped, (ulong)player); }
        internal static void NETWORK_SET_VEHICLE_WHEELS_DESTRUCTIBLE_(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0x890E2C5ABED7236D, (ulong)entity, (ulong)toggle); }
        internal static void N_0x38B7C51AB1EDC7D8(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0x38B7C51AB1EDC7D8, (ulong)entity, (ulong)toggle); }
        internal static void N_0x3FC795691834481D(Any p0, Any p1) { NativeInvoker.Invoke(0x3FC795691834481D, (ulong)p0, (ulong)p1); }
        internal static void NETWORK_EXPLODE_VEHICLE(Vehicle vehicle, BOOL isAudible, BOOL isInvisible, BOOL p3) { NativeInvoker.Invoke(0x301A42153C9AD707, (ulong)vehicle, (ulong)isAudible, (ulong)isInvisible, (ulong)p3); }
        internal static void N_0x2A5E0621DD815A9A(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x2A5E0621DD815A9A, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void NETWORK_USE_LOGARITHMIC_BLENDING_THIS_FRAME(Entity entity) { NativeInvoker.Invoke(0xCD71A4ECAB22709E, (ulong)entity); }
        internal static void NETWORK_OVERRIDE_COORDS_AND_HEADING(Entity entity, float x, float y, float z, float heading) { NativeInvoker.Invoke(0xA7E30DE9272B6D49, (ulong)entity, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&heading); }
        internal static void N_0xE6717E652B8C8D8A(Any p0, Any p1) { NativeInvoker.Invoke(0xE6717E652B8C8D8A, (ulong)p0, (ulong)p1); }
        internal static void NETWORK_DISABLE_PROXIMITY_MIGRATION(int netID) { NativeInvoker.Invoke(0x407091CF6037118E, (ulong)netID); }
        internal static void NETWORK_SET_PROPERTY_ID(int id) { NativeInvoker.Invoke(0x1775961C2FBBCB5C, (ulong)id); }
        internal static void NETWORK_CLEAR_PROPERTY_ID() { NativeInvoker.Invoke(0xC2B82527CA77053E); } // 0xC2B82527CA77053E 0x38BC35C8 b323<, (ulong)C2B82527CA77053E); }
        internal static void N_0x367EF5E2F439B4C6(int p0) { NativeInvoker.Invoke(0x367EF5E2F439B4C6, (ulong)p0); }
        internal static void N_0x94538037EE44F5CF(BOOL p0) { NativeInvoker.Invoke(0x94538037EE44F5CF, (ulong)p0); }
        internal static void NETWORK_CACHE_LOCAL_PLAYER_HEAD_BLEND_DATA() { NativeInvoker.Invoke(0xBD0BE0BFC927EAC1); } // 0xBD0BE0BFC927EAC1 0x94AB35A9 b323<, (ulong)BD0BE0BFC927EAC1); }
        internal static BOOL NETWORK_HAS_CACHED_PLAYER_HEAD_BLEND_DATA(Player player) { return NativeInvoker.Invoke<BOOL>(0x237D5336A9A54108, (ulong)player); }
        internal static BOOL NETWORK_APPLY_CACHED_PLAYER_HEAD_BLEND_DATA(Ped ped, Player player) { return NativeInvoker.Invoke<BOOL>(0x99B72C7ABDE5C910, (ulong)ped, (ulong)player); }
        internal static int GET_NUM_COMMERCE_ITEMS() { return NativeInvoker.Invoke<int>(0xF2EAC213D5EA0623); } // 0xF2EAC213D5EA0623 0x965EA007 b323, (ulong)F2EAC213D5EA0623); }
        internal static BOOL IS_COMMERCE_DATA_VALID() { return NativeInvoker.Invoke<BOOL>(0xEA14EEF5B7CD2C30); } // 0xEA14EEF5B7CD2C30 0xEEFC8A55 b323, (ulong)EA14EEF5B7CD2C30); }
        internal static void N_0xB606E6CC59664972(Any p0) { NativeInvoker.Invoke(0xB606E6CC59664972, (ulong)p0); }
        internal static BOOL N_0x1D4DC17C38FEAFF0() { return NativeInvoker.Invoke<BOOL>(0x1D4DC17C38FEAFF0); } // 0x1D4DC17C38FEAFF0 0xED4A272F b323, (ulong)1D4DC17C38FEAFF0); }
        internal static char* GET_COMMERCE_ITEM_ID(int index) { return (char*)NativeInvoker.Invoke<IntPtr>(0x662635855957C411, (ulong)index); }
        internal static char* GET_COMMERCE_ITEM_NAME(int index) { return (char*)NativeInvoker.Invoke<IntPtr>(0xB4271092CA7EDF48, (ulong)index); }
        internal static char* GET_COMMERCE_PRODUCT_PRICE(int index) { return (char*)NativeInvoker.Invoke<IntPtr>(0xCA94551B50B4932C, (ulong)index); }
        internal static int GET_COMMERCE_ITEM_NUM_CATS(int index) { return NativeInvoker.Invoke<int>(0x2A7776C709904AB0, (ulong)index); }
        internal static char* GET_COMMERCE_ITEM_CAT(int index, int index2) { return (char*)NativeInvoker.Invoke<IntPtr>(0x6F44CBF56D79FAC0, (ulong)index, (ulong)index2); }
        internal static void OPEN_COMMERCE_STORE(char* p0, char* p1, int p2) { NativeInvoker.Invoke(0x58C21165F6545892, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL IS_COMMERCE_STORE_OPEN() { return NativeInvoker.Invoke<BOOL>(0x2EAC52B4019E2782); } // 0x2EAC52B4019E2782 0x25E2DBA9 b323, (ulong)2EAC52B4019E2782); }
        internal static void SET_STORE_ENABLED(BOOL toggle) { NativeInvoker.Invoke(0x9641A9FF718E9C5E, (ulong)toggle); }
        internal static BOOL REQUEST_COMMERCE_ITEM_IMAGE(int index) { return NativeInvoker.Invoke<BOOL>(0xA2F952104FC6DD4B, (ulong)index); }
        internal static void RELEASE_ALL_COMMERCE_ITEM_IMAGES() { NativeInvoker.Invoke(0x72D0706CD6CCDB58); } // 0x72D0706CD6CCDB58 0xCA7A0A49 b323<, (ulong)72D0706CD6CCDB58); }
        internal static char* GET_COMMERCE_ITEM_TEXTURENAME(int index) { return (char*)NativeInvoker.Invoke<IntPtr>(0x722F5D28B61C5EA8, (ulong)index); }
        internal static BOOL IS_STORE_AVAILABLE_TO_USER() { return NativeInvoker.Invoke<BOOL>(0x883D79C4071E18B3); } // 0x883D79C4071E18B3 0xD32FA11F b323, (ulong)883D79C4071E18B3); }
        internal static void N_0x265635150FB0D82E() { NativeInvoker.Invoke(0x265635150FB0D82E); } // 0x265635150FB0D82E 0xA7FA70AE b323<, (ulong)265635150FB0D82E); }
        internal static void N_0x444C4525ECE0A4B9() { NativeInvoker.Invoke(0x444C4525ECE0A4B9); } // 0x444C4525ECE0A4B9 0xCC7DCE24 b323<, (ulong)444C4525ECE0A4B9); }
        internal static BOOL N_0x59328EB08C5CEB2B() { return NativeInvoker.Invoke<BOOL>(0x59328EB08C5CEB2B); } // 0x59328EB08C5CEB2B 0x70F6D3AD b323, (ulong)59328EB08C5CEB2B); }
        internal static void N_0xFAE628F1E9ADB239(Hash p0, int p1, Hash p2) { NativeInvoker.Invoke(0xFAE628F1E9ADB239, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static int N_0x754615490A029508() { return NativeInvoker.Invoke<int>(0x754615490A029508); } // 0x754615490A029508 b1290, (ulong)754615490A029508); }
        internal static int N_0x155467ACA0F55705() { return NativeInvoker.Invoke<int>(0x155467ACA0F55705); } // 0x155467ACA0F55705 b1290, (ulong)155467ACA0F55705); }
        internal static int CLOUD_DELETE_MEMBER_FILE(char* p0) { return NativeInvoker.Invoke<int>(0xC64DED7EF0D2FE37, (ulong)p0); }
        internal static BOOL CLOUD_HAS_REQUEST_COMPLETED(int handle) { return NativeInvoker.Invoke<BOOL>(0x4C61B39930D045DA, (ulong)handle); }
        internal static BOOL CLOUD_DID_REQUEST_SUCCEED(int handle) { return NativeInvoker.Invoke<BOOL>(0x3A3D5568AF297CD5, (ulong)handle); }
        internal static void CLOUD_CHECK_AVAILABILITY() { NativeInvoker.Invoke(0x4F18196C8D38768D); } // 0x4F18196C8D38768D 0xC38E9DB0 b323<, (ulong)4F18196C8D38768D); }
        internal static BOOL CLOUD_IS_CHECKING_AVAILABILITY() { return NativeInvoker.Invoke<BOOL>(0xC7ABAC5DE675EE3B); } // 0xC7ABAC5DE675EE3B 0x32A4EB22 b323, (ulong)C7ABAC5DE675EE3B); }
        internal static BOOL CLOUD_GET_AVAILABILITY_CHECK_RESULT() { return NativeInvoker.Invoke<BOOL>(0x0B0CC10720653F3B); } // 0x0B0CC10720653F3B 0x9262744C b323, (ulong)0B0CC10720653F3B); }
        internal static Any N_0x8B0C2964BA471961() { return NativeInvoker.Invoke<Any>(0x8B0C2964BA471961); } // 0x8B0C2964BA471961 b323, (ulong)8B0C2964BA471961); }
        internal static Any N_0x88B588B41FF7868E() { return NativeInvoker.Invoke<Any>(0x88B588B41FF7868E); } // 0x88B588B41FF7868E b323, (ulong)88B588B41FF7868E); }
        internal static Any N_0x67FC09BC554A75E5() { return NativeInvoker.Invoke<Any>(0x67FC09BC554A75E5); } // 0x67FC09BC554A75E5 b323, (ulong)67FC09BC554A75E5); }
        internal static void CLEAR_LAUNCH_PARAMS_() { NativeInvoker.Invoke(0x966DD84FB6A46017); } // 0x966DD84FB6A46017 b323<, (ulong)966DD84FB6A46017); }
        internal static BOOL UGC_COPY_CONTENT(Any* p0, Any* p1) { return NativeInvoker.Invoke<BOOL>(0x152D90E4C1B4738A, (ulong)p0, (ulong)p1); }
        internal static Any N_0x9FEDF86898F100E9() { return NativeInvoker.Invoke<Any>(0x9FEDF86898F100E9); } // 0x9FEDF86898F100E9 0x798D6C27 b323, (ulong)9FEDF86898F100E9); }
        internal static BOOL UGC_HAS_CREATE_FINISHED() { return NativeInvoker.Invoke<BOOL>(0x5E24341A7F92A74B); } // 0x5E24341A7F92A74B 0xE69E8D0D b323, (ulong)5E24341A7F92A74B); }
        internal static Any UGC_DID_CREATE_SUCCEED() { return NativeInvoker.Invoke<Any>(0x24E4E51FC16305F9); } // 0x24E4E51FC16305F9 0x742075FE b323, (ulong)24E4E51FC16305F9); }
        internal static Any UGC_GET_CREATE_RESULT() { return NativeInvoker.Invoke<Any>(0xFBC5E768C7A77A6A); } // 0xFBC5E768C7A77A6A 0xCE569932 b323, (ulong)FBC5E768C7A77A6A); }
        internal static Any UGC_GET_CREATE_CONTENT_ID() { return NativeInvoker.Invoke<Any>(0xC55A0B40FFB1ED23); } // 0xC55A0B40FFB1ED23 0x82146BE9 b323, (ulong)C55A0B40FFB1ED23); }
        internal static void UGC_CLEAR_CREATE_RESULT() { NativeInvoker.Invoke(0x17440AA15D1D3739); } // 0x17440AA15D1D3739 0x133FF2D5 b323<, (ulong)17440AA15D1D3739); }
        internal static BOOL UGC_QUERY_MY_CONTENT(Any p0, Any p1, Any* p2, Any p3, Any p4, Any p5) { return NativeInvoker.Invoke<BOOL>(0x9BF438815F5D96EA, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static BOOL N_0x692D58DF40657E8C(Any p0, Any p1, Any p2, char* p3, Any p4, BOOL p5) { return NativeInvoker.Invoke<BOOL>(0x692D58DF40657E8C, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static BOOL UGC_QUERY_BY_CONTENT_ID(char* contentId, BOOL latestVersion, char* contentTypeName) { return NativeInvoker.Invoke<BOOL>(0x158EC424F35EC469, (ulong)contentId, (ulong)latestVersion, (ulong)contentTypeName); }
        internal static BOOL UGC_QUERY_BY_CONTENT_IDS(Any* data, int count, BOOL latestVersion, char* contentTypeName) { return NativeInvoker.Invoke<BOOL>(0xC7397A83F7A2A462, (ulong)data, (ulong)count, (ulong)latestVersion, (ulong)contentTypeName); }
        internal static BOOL UGC_QUERY_RECENTLY_CREATED_CONTENT_(int offset, int count, char* contentTypeName, int p3) { return NativeInvoker.Invoke<BOOL>(0x6D4CB481FAC835E8, (ulong)offset, (ulong)count, (ulong)contentTypeName, (ulong)p3); }
        internal static BOOL UGC_GET_BOOKMARKED_CONTENT(Any p0, Any p1, char* p2, Any* p3) { return NativeInvoker.Invoke<BOOL>(0xD5A4B59980401588, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static BOOL UGC_GET_MY_CONTENT(Any p0, Any p1, char* p2, Any* p3) { return NativeInvoker.Invoke<BOOL>(0x3195F8DD0D531052, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static BOOL UGC_GET_FRIEND_CONTENT(Any p0, Any p1, char* p2, Any* p3) { return NativeInvoker.Invoke<BOOL>(0xF9E1CCAE8BA4C281, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static BOOL UGC_GET_CREW_CONTENT(Any p0, Any p1, Any p2, char* p3, Any* p4) { return NativeInvoker.Invoke<BOOL>(0x9F6E2821885CAEE2, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static BOOL UGC_GET_GET_BY_CATEGORY(Any p0, Any p1, Any p2, char* p3, Any* p4) { return NativeInvoker.Invoke<BOOL>(0x678BB03C1A3BD51E, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static BOOL SET_BALANCE_ADD_MACHINE(char* contentId, char* contentTypeName) { return NativeInvoker.Invoke<BOOL>(0x815E5E3073DA1D67, (ulong)contentId, (ulong)contentTypeName); }
        internal static BOOL SET_BALANCE_ADD_MACHINES(Any* data, int dataCount, char* contentTypeName) { return NativeInvoker.Invoke<BOOL>(0xB8322EEB38BE7C26, (ulong)data, (ulong)dataCount, (ulong)contentTypeName); }
        internal static BOOL N_0xA7862BC5ED1DFD7E(Any p0, Any p1, Any* p2, Any* p3) { return NativeInvoker.Invoke<BOOL>(0xA7862BC5ED1DFD7E, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static BOOL N_0x97A770BEEF227E2B(Any p0, Any p1, Any* p2, Any* p3) { return NativeInvoker.Invoke<BOOL>(0x97A770BEEF227E2B, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static BOOL N_0x5324A0E3E4CE3570(Any p0, Any p1, Any* p2, Any* p3) { return NativeInvoker.Invoke<BOOL>(0x5324A0E3E4CE3570, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void UGC_CANCEL_QUERY() { NativeInvoker.Invoke(0xE9B99B6853181409); } // 0xE9B99B6853181409 0x021D5A94 b323<, (ulong)E9B99B6853181409); }
        internal static BOOL UGC_IS_GETTING() { return NativeInvoker.Invoke<BOOL>(0xD53ACDBEF24A46E8); } // 0xD53ACDBEF24A46E8 0x4908A514 b323, (ulong)D53ACDBEF24A46E8); }
        internal static BOOL UGC_HAS_GET_FINISHED() { return NativeInvoker.Invoke<BOOL>(0x02ADA21EA2F6918F); } // 0x02ADA21EA2F6918F 0x50296140 b323, (ulong)02ADA21EA2F6918F); }
        internal static Any UGC_DID_GET_SUCCEED() { return NativeInvoker.Invoke<Any>(0x941E5306BCD7C2C7); } // 0x941E5306BCD7C2C7 0x3970B0DA b323, (ulong)941E5306BCD7C2C7); }
        internal static Any N_0xC87E740D9F3872CC() { return NativeInvoker.Invoke<Any>(0xC87E740D9F3872CC); } // 0xC87E740D9F3872CC 0xC1487110 b323, (ulong)C87E740D9F3872CC); }
        internal static Any UGC_GET_QUERY_RESULT() { return NativeInvoker.Invoke<Any>(0xEDF7F927136C224B); } // 0xEDF7F927136C224B 0xCC2356E3 b323, (ulong)EDF7F927136C224B); }
        internal static Any UGC_GET_CONTENT_NUM() { return NativeInvoker.Invoke<Any>(0xE0A6138401BCB837); } // 0xE0A6138401BCB837 0x2DE69817 b323, (ulong)E0A6138401BCB837); }
        internal static Any UGC_GET_CONTENT_TOTAL() { return NativeInvoker.Invoke<Any>(0x769951E2455E2EB5); } // 0x769951E2455E2EB5 0x81BD8D3B b323, (ulong)769951E2455E2EB5); }
        internal static Hash UGC_GET_CONTENT_HASH() { return NativeInvoker.Invoke<Hash>(0x3A17A27D75C74887); } // 0x3A17A27D75C74887 0x8E1D8F78 b323, (ulong)3A17A27D75C74887); }
        internal static void UGC_CLEAR_QUERY_RESULTS() { NativeInvoker.Invoke(0xBA96394A0EECFA65); } // 0xBA96394A0EECFA65 0x0D35DD93 b323<, (ulong)BA96394A0EECFA65); }
        internal static char* UGC_GET_CONTENT_USER_ID(int p0) { return (char*)NativeInvoker.Invoke<IntPtr>(0xCD67AD041A394C9C, (ulong)p0); }
        internal static BOOL N_0x584770794D758C18(int p0, Any* p1) { return NativeInvoker.Invoke<BOOL>(0x584770794D758C18, (ulong)p0, (ulong)p1); }
        internal static BOOL N_0x8C8D2739BA44AF0F(Any p0) { return NativeInvoker.Invoke<BOOL>(0x8C8D2739BA44AF0F, (ulong)p0); }
        internal static Any UGC_GET_CONTENT_USER_NAME(Any p0) { return NativeInvoker.Invoke<Any>(0x703F12425ECA8BF5, (ulong)p0); }
        internal static BOOL N_0xAEAB987727C5A8A4(Any p0) { return NativeInvoker.Invoke<BOOL>(0xAEAB987727C5A8A4, (ulong)p0); }
        internal static int UGC_GET_CONTENT_CATEGORY(int p0) { return NativeInvoker.Invoke<int>(0xA7BAB11E7C9C6C5A, (ulong)p0); }
        internal static char* UGC_GET_CONTENT_ID(int p0) { return (char*)NativeInvoker.Invoke<IntPtr>(0x55AA95F481D694D2, (ulong)p0); }
        internal static char* UGC_GET_ROOT_CONTENT_ID(int p0) { return (char*)NativeInvoker.Invoke<IntPtr>(0xC0173D6BFF4E0348, (ulong)p0); }
        internal static Any UGC_GET_CONTENT_NAME(Any p0) { return NativeInvoker.Invoke<Any>(0xBF09786A7FCAB582, (ulong)p0); }
        internal static int UGC_GET_CONTENT_DESCRIPTION_HASH(Any p0) { return NativeInvoker.Invoke<int>(0x7CF0448787B23758, (ulong)p0); }
        internal static char* UGC_GET_CONTENT_PATH(int p0, int p1) { return (char*)NativeInvoker.Invoke<IntPtr>(0xBAF6BABF9E7CCC13, (ulong)p0, (ulong)p1); }
        internal static void UGC_GET_CONTENT_UPDATED_DATE(Any p0, Any* p1) { NativeInvoker.Invoke(0xCFD115B373C0DF63, (ulong)p0, (ulong)p1); }
        internal static Any UGC_GET_CONTENT_FILE_VERSION(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0x37025B27D9B658B1, (ulong)p0, (ulong)p1); }
        internal static BOOL N_0x1D610EB0FEA716D9(int p0) { return NativeInvoker.Invoke<BOOL>(0x1D610EB0FEA716D9, (ulong)p0); }
        internal static BOOL N_0x7FCC39C46C3C03BD(int p0) { return NativeInvoker.Invoke<BOOL>(0x7FCC39C46C3C03BD, (ulong)p0); }
        internal static Any UGC_GET_CONTENT_LANGUAGE(Any p0) { return NativeInvoker.Invoke<Any>(0x32DD916F3F7C9672, (ulong)p0); }
        internal static BOOL UGC_GET_CONTENT_IS_PUBLISHED(Any p0) { return NativeInvoker.Invoke<BOOL>(0x3054F114121C21EA, (ulong)p0); }
        internal static BOOL UGC_GET_CONTENT_IS_VERIFIED(Any p0) { return NativeInvoker.Invoke<BOOL>(0xA9240A96C74CCA13, (ulong)p0); }
        internal static Any UGC_GET_CONTENT_RATING(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0x1ACCFBA3D8DAB2EE, (ulong)p0, (ulong)p1); }
        internal static Any UGC_GET_CONTENT_RATING_COUNT(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0x759299C5BB31D2A9, (ulong)p0, (ulong)p1); }
        internal static Any UGC_GET_CONTENT_RATING_POSITIVE_COUNT(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0x87E5C46C187FE0AE, (ulong)p0, (ulong)p1); }
        internal static Any UGC_GET_CONTENT_RATING_NEGATIVE_COUNT(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0x4E548C0D7AE39FF9, (ulong)p0, (ulong)p1); }
        internal static BOOL UGC_GET_CONTENT_HAS_PLAYER_RECORD(Any p0) { return NativeInvoker.Invoke<BOOL>(0x70EA8DA57840F9BE, (ulong)p0); }
        internal static BOOL UGC_GET_CONTENT_HAS_PLAYER_BOOKMARKED(Any p0) { return NativeInvoker.Invoke<BOOL>(0x993CBE59D350D225, (ulong)p0); }
        internal static int UGC_REQUEST_CONTENT_DATA_FROM_INDEX(int p0, int p1) { return NativeInvoker.Invoke<int>(0x171DF6A0C07FB3DC, (ulong)p0, (ulong)p1); }
        internal static int UGC_REQUEST_CONTENT_DATA_FROM_PARAMS(char* contentTypeName, char* contentId, int p2, int p3, int p4) { return NativeInvoker.Invoke<int>(0x7FD2990AF016795E, (ulong)contentTypeName, (ulong)contentId, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static int UGC_REQUEST_CACHED_DESCRIPTION(int p0) { return NativeInvoker.Invoke<int>(0x5E0165278F6339EE, (ulong)p0); }
        internal static BOOL N_0x2D5DC831176D0114(Any p0) { return NativeInvoker.Invoke<BOOL>(0x2D5DC831176D0114, (ulong)p0); }
        internal static BOOL N_0xEBFA8D50ADDC54C4(Any p0) { return NativeInvoker.Invoke<BOOL>(0xEBFA8D50ADDC54C4, (ulong)p0); }
        internal static BOOL N_0x162C23CA83ED0A62(Any p0) { return NativeInvoker.Invoke<BOOL>(0x162C23CA83ED0A62, (ulong)p0); }
        internal static Any UGC_GET_CACHED_DESCRIPTION(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0x40F7E66472DF3E5C, (ulong)p0, (ulong)p1); }
        internal static BOOL N_0x5A34CD9C3C5BEC44(Any p0) { return NativeInvoker.Invoke<BOOL>(0x5A34CD9C3C5BEC44, (ulong)p0); }
        internal static void N_0x68103E2247887242() { NativeInvoker.Invoke(0x68103E2247887242); } // 0x68103E2247887242 0x0095DB71 b323<, (ulong)68103E2247887242); }
        internal static BOOL UGC_PUBLISH(char* contentId, char* @baseContentId, char* contentTypeName) { return NativeInvoker.Invoke<BOOL>(0x1DE0F5F50D723CAA, (ulong)contentId, (ulong)@baseContentId, (ulong)contentTypeName); }
        internal static BOOL UGC_SET_BOOKMARKED(char* contentId, BOOL bookmarked, char* contentTypeName) { return NativeInvoker.Invoke<BOOL>(0x274A1519DFC1094F, (ulong)contentId, (ulong)bookmarked, (ulong)contentTypeName); }
        internal static BOOL UGC_SET_DELETED(Any* p0, BOOL p1, char* p2) { return NativeInvoker.Invoke<BOOL>(0xD05D1A6C74DA3498, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static Any N_0x45E816772E93A9DB() { return NativeInvoker.Invoke<Any>(0x45E816772E93A9DB); } // 0x45E816772E93A9DB 0x8E664EFD b323, (ulong)45E816772E93A9DB); }
        internal static BOOL UGC_HAS_MODIFY_FINISHED() { return NativeInvoker.Invoke<BOOL>(0x299EF3C576773506); } // 0x299EF3C576773506 0x611E0BE2 b323, (ulong)299EF3C576773506); }
        internal static Any N_0x793FF272D5B365F4() { return NativeInvoker.Invoke<Any>(0x793FF272D5B365F4); } // 0x793FF272D5B365F4 0xF0211AC1 b323, (ulong)793FF272D5B365F4); }
        internal static Any UGC_GET_MODIFY_RESULT() { return NativeInvoker.Invoke<Any>(0x5A0A3D1A186A5508); } // 0x5A0A3D1A186A5508 0x1F0DD8AF b323, (ulong)5A0A3D1A186A5508); }
        internal static void UGC_CLEAR_MODIFY_RESULT() { NativeInvoker.Invoke(0xA1E5E0204A6FCC70); } // 0xA1E5E0204A6FCC70 0x405ECA16 b323<, (ulong)A1E5E0204A6FCC70); }
        internal static BOOL N_0xB746D20B17F2A229(Any* p0, Any* p1) { return NativeInvoker.Invoke<BOOL>(0xB746D20B17F2A229, (ulong)p0, (ulong)p1); }
        internal static Any N_0x63B406D7884BFA95() { return NativeInvoker.Invoke<Any>(0x63B406D7884BFA95); } // 0x63B406D7884BFA95 0xF79FFF3C b323, (ulong)63B406D7884BFA95); }
        internal static Any N_0x4D02279C83BE69FE() { return NativeInvoker.Invoke<Any>(0x4D02279C83BE69FE); } // 0x4D02279C83BE69FE 0xA7F3F82B b323, (ulong)4D02279C83BE69FE); }
        internal static Any UGC_GET_CREATOR_NUM() { return NativeInvoker.Invoke<Any>(0x597F8DBA9B206FC7); } // 0x597F8DBA9B206FC7 0x410C61D1 b323, (ulong)597F8DBA9B206FC7); }
        internal static BOOL UGC_POLICIES_MAKE_PRIVATE(Any p0) { return NativeInvoker.Invoke<BOOL>(0x5CAE833B0EE0C500, (ulong)p0); }
        internal static void UGC_CLEAR_OFFLINE_QUERY() { NativeInvoker.Invoke(0x61A885D3F7CFEE9A); } // 0x61A885D3F7CFEE9A 0xE13C1F7F b323<, (ulong)61A885D3F7CFEE9A); }
        internal static void UGC_SET_QUERY_DATA_FROM_OFFLINE(BOOL p0) { NativeInvoker.Invoke(0xF98DDE0A8ED09323, (ulong)p0); }
        internal static void N_0xFD75DABC0957BF33(BOOL p0) { NativeInvoker.Invoke(0xFD75DABC0957BF33, (ulong)p0); }
        internal static BOOL UGC_IS_LANGUAGE_SUPPORTED(Any p0) { return NativeInvoker.Invoke<BOOL>(0xF53E48461B71EECB, (ulong)p0); }
        internal static BOOL FACEBOOK_SET_HEIST_COMPLETE_(char* heistName, int cashEarned, int xpEarned) { return NativeInvoker.Invoke<BOOL>(0x098AB65B9ED9A9EC, (ulong)heistName, (ulong)cashEarned, (ulong)xpEarned); }
        internal static BOOL FACEBOOK_SET_CREATE_CHARACTER_COMPLETE_() { return NativeInvoker.Invoke<BOOL>(0xDC48473142545431); } // 0xDC48473142545431 0x02DAD93F b323, (ulong)DC48473142545431); }
        internal static BOOL FACEBOOK_SET_MILESTONE_COMPLETE_(int milestoneId) { return NativeInvoker.Invoke<BOOL>(0x0AE1F1653B554AB9, (ulong)milestoneId); }
        internal static BOOL FACEBOOK_IS_SENDING_DATA_() { return NativeInvoker.Invoke<BOOL>(0x62B9FEC9A11F10EF); } // 0x62B9FEC9A11F10EF 0x37A28C26 b323, (ulong)62B9FEC9A11F10EF); }
        internal static BOOL FACEBOOK_DO_UNK_CHECK_() { return NativeInvoker.Invoke<BOOL>(0xA75E2B6733DA5142); } // 0xA75E2B6733DA5142 0x11E8B5CD b323, (ulong)A75E2B6733DA5142); }
        internal static BOOL FACEBOOK_IS_AVAILABLE_() { return NativeInvoker.Invoke<BOOL>(0x43865688AE10F0D7); } // 0x43865688AE10F0D7 0x429AEAB3 b323, (ulong)43865688AE10F0D7); }
        internal static int TEXTURE_DOWNLOAD_REQUEST(Any* gamerHandle, char* filePath, char* name, BOOL p3) { return NativeInvoker.Invoke<int>(0x16160DA74A8E74A2, (ulong)gamerHandle, (ulong)filePath, (ulong)name, (ulong)p3); }
        internal static int TITLE_TEXTURE_DOWNLOAD_REQUEST(char* filePath, char* name, BOOL p2) { return NativeInvoker.Invoke<int>(0x0B203B4AFDE53A4F, (ulong)filePath, (ulong)name, (ulong)p2); }
        internal static Any UGC_TEXTURE_DOWNLOAD_REQUEST(char* p0, int p1, int p2, int p3, char* p4, BOOL p5) { return NativeInvoker.Invoke<Any>(0x308F96458B7087CC, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static void TEXTURE_DOWNLOAD_RELEASE(int p0) { NativeInvoker.Invoke(0x487EB90B98E9FB19, (ulong)p0); }
        internal static BOOL TEXTURE_DOWNLOAD_HAS_FAILED(int p0) { return NativeInvoker.Invoke<BOOL>(0x5776ED562C134687, (ulong)p0); }
        internal static char* TEXTURE_DOWNLOAD_GET_NAME(int p0) { return (char*)NativeInvoker.Invoke<IntPtr>(0x3448505B6E35262D, (ulong)p0); }
        internal static int GET_STATUS_OF_TEXTURE_DOWNLOAD(int p0) { return NativeInvoker.Invoke<int>(0x8BD6C6DEA20E82C6, (ulong)p0); }
        internal static BOOL N_0x60EDD13EB3AC1FF3() { return NativeInvoker.Invoke<BOOL>(0x60EDD13EB3AC1FF3); } // 0x60EDD13EB3AC1FF3 0x4DEBC227 b323, (ulong)60EDD13EB3AC1FF3); }
        internal static BOOL NETWORK_SHOULD_SHOW_CONNECTIVITY_TROUBLESHOOTING_() { return NativeInvoker.Invoke<BOOL>(0x82A2B386716608F1); } // 0x82A2B386716608F1 b393, (ulong)82A2B386716608F1); }
        internal static BOOL NETWORK_IS_CABLE_CONNECTED() { return NativeInvoker.Invoke<BOOL>(0xEFFB25453D8600F9); } // 0xEFFB25453D8600F9 0x5C065D55 b323, (ulong)EFFB25453D8600F9); }
        internal static BOOL NETWORK_GET_ROS_PRIVILEGE_9_() { return NativeInvoker.Invoke<BOOL>(0x66B59CFFD78467AF); } // 0x66B59CFFD78467AF 0x0CA1167F b323, (ulong)66B59CFFD78467AF); }
        internal static BOOL NETWORK_HAVE_ROS_SOCIAL_CLUB_PRIV() { return NativeInvoker.Invoke<BOOL>(0x606E4D3E3CCCF3EB); } // 0x606E4D3E3CCCF3EB 0x424C6E27 b323, (ulong)606E4D3E3CCCF3EB); }
        internal static BOOL NETWORK_HAVE_ROS_BANNED_PRIV() { return NativeInvoker.Invoke<BOOL>(0x8020A73847E0CA7D); } // 0x8020A73847E0CA7D 0xD3BBE42F b323, (ulong)8020A73847E0CA7D); }
        internal static BOOL NETWORK_HAVE_ROS_CREATE_TICKET_PRIV() { return NativeInvoker.Invoke<BOOL>(0xA0AD7E2AF5349F61); } // 0xA0AD7E2AF5349F61 0xBDBB5948 b323, (ulong)A0AD7E2AF5349F61); }
        internal static BOOL NETWORK_HAVE_ROS_MULTIPLAYER_PRIV() { return NativeInvoker.Invoke<BOOL>(0x5F91D5D0B36AA310); } // 0x5F91D5D0B36AA310 0x97287D68 b323, (ulong)5F91D5D0B36AA310); }
        internal static BOOL NETWORK_HAVE_ROS_LEADERBOARD_WRITE_PRIV() { return NativeInvoker.Invoke<BOOL>(0x422D396F80A96547); } // 0x422D396F80A96547 0xC6EA802E b323, (ulong)422D396F80A96547); }
        internal static BOOL NETWORK_HAS_ROS_PRIVILEGE(int index) { return NativeInvoker.Invoke<BOOL>(0xA699957E60D80214, (ulong)index); }
        internal static BOOL NETWORK_HAS_ROS_PRIVILEGE_END_DATE(int privilege, int* banType, Any* timeData) { return NativeInvoker.Invoke<BOOL>(0xC22912B1D85F26B1, (ulong)privilege, (ulong)banType, (ulong)timeData); }
        internal static BOOL NETWORK_GET_ROS_PRIVILEGE_24_() { return NativeInvoker.Invoke<BOOL>(0x593570C289A77688); } // 0x593570C289A77688 b323, (ulong)593570C289A77688); }
        internal static BOOL NETWORK_GET_ROS_PRIVILEGE_25_() { return NativeInvoker.Invoke<BOOL>(0x91B87C55093DE351); } // 0x91B87C55093DE351 b323, (ulong)91B87C55093DE351); }
        internal static Any N_0x36391F397731595D(Any p0) { return NativeInvoker.Invoke<Any>(0x36391F397731595D, (ulong)p0); }
        internal static int NETWORK_START_USER_CONTENT_PERMISSIONS_CHECK(Any* netHandle) { return NativeInvoker.Invoke<int>(0xDEB2B99A1AF1A2A6, (ulong)netHandle); }
        internal static void N_0x9465E683B12D3F6B() { NativeInvoker.Invoke(0x9465E683B12D3F6B); } // 0x9465E683B12D3F6B 0x273C6180 b323<, (ulong)9465E683B12D3F6B); }
        internal static void N_0xCA59CCAE5D01E4CE() { NativeInvoker.Invoke(0xCA59CCAE5D01E4CE); } // 0xCA59CCAE5D01E4CE b1734<, (ulong)CA59CCAE5D01E4CE); }
        internal static BOOL NETWORK_HAS_GAME_BEEN_ALTERED_() { return NativeInvoker.Invoke<BOOL>(0x659CF2EF7F550C4F); } // 0x659CF2EF7F550C4F b1011, (ulong)659CF2EF7F550C4F); }
        internal static void NETWORK_UPDATE_PLAYER_SCARS_() { NativeInvoker.Invoke(0xB7C7F6AD6424304B); } // 0xB7C7F6AD6424304B 0x371BBA08 b323<, (ulong)B7C7F6AD6424304B); }
        internal static void NETWORK_DISABLE_LEAVE_REMOTE_PED_BEHIND(BOOL toggle) { NativeInvoker.Invoke(0xC505036A35AFD01B, (ulong)toggle); }
        internal static void NETWORK_ALLOW_LOCAL_ENTITY_ATTACHMENT_(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0x267C78C60E806B9A, (ulong)entity, (ulong)toggle); }
        internal static void N_0x6BFF5F84102DF80A(Player player) { NativeInvoker.Invoke(0x6BFF5F84102DF80A, (ulong)player); }
        internal static void N_0x5C497525F803486B() { NativeInvoker.Invoke(0x5C497525F803486B); } // 0x5C497525F803486B b323<, (ulong)5C497525F803486B); }
        internal static Any N_0x6FB7BB3607D27FA2() { return NativeInvoker.Invoke<Any>(0x6FB7BB3607D27FA2); } // 0x6FB7BB3607D27FA2 b323, (ulong)6FB7BB3607D27FA2); }
        internal static void N_0x45A83257ED02D9BC() { NativeInvoker.Invoke(0x45A83257ED02D9BC); } // 0x45A83257ED02D9BC b323<, (ulong)45A83257ED02D9BC); }
        internal static BOOL NETWORK_IS_CONNECTION_ENDPOINT_RELAY_SERVER_(Player player) { return NativeInvoker.Invoke<BOOL>(0x16D3D49902F697BB, (ulong)player); }
        internal static float NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER_(Player player) { return NativeInvoker.Invoke<float>(0xD414BE129BB81B32, (ulong)player); }
        internal static float NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER_2_(Player player) { return NativeInvoker.Invoke<float>(0x0E3A041ED6AC2B45, (ulong)player); }
        internal static float NETWORK_GET_AVERAGE_PACKET_LOSS_FOR_PLAYER_(Player player) { return NativeInvoker.Invoke<float>(0x350C23949E43686C, (ulong)player); }
        internal static int NETWORK_GET_NUM_UNACKED_FOR_PLAYER_(Player player) { return NativeInvoker.Invoke<int>(0xFF8FCF9FFC458A1C, (ulong)player); }
        internal static int NETWORK_GET_UNRELIABLE_RESEND_COUNT_FOR_PLAYER_(Player player) { return NativeInvoker.Invoke<int>(0x3765C3A3E8192E10, (ulong)player); }
        internal static int NETWORK_GET_OLDEST_RESEND_COUNT_FOR_PLAYER_(Player player) { return NativeInvoker.Invoke<int>(0x52C1EADAF7B10302, (ulong)player); }
        internal static void NETWORK_REPORT_MYSELF_() { NativeInvoker.Invoke(0x5626D9D6810730D5); } // 0x5626D9D6810730D5 b350<, (ulong)5626D9D6810730D5); }
        internal static Vector3 N_0x64D779659BC37B19(Entity entity) { return NativeInvoker.Invoke<Vector3>(0x64D779659BC37B19, (ulong)entity); }
        internal static Vector3 NETWORK_GET_PLAYER_COORDS_(Player player) { return NativeInvoker.Invoke<Vector3>(0x125E6D638B8605D4, (ulong)player); }
        internal static Vector3 NETWORK_GET_LAST_VELOCITY_RECEIVED_(Entity entity) { return NativeInvoker.Invoke<Vector3>(0x33DE49EDF4DDE77A, (ulong)entity); }
        internal static Vector3 N_0xAA5FAFCD2C5F5E47(Entity entity) { return NativeInvoker.Invoke<Vector3>(0xAA5FAFCD2C5F5E47, (ulong)entity); }
        internal static Any N_0xAEDF1BC1C133D6E3() { return NativeInvoker.Invoke<Any>(0xAEDF1BC1C133D6E3); } // 0xAEDF1BC1C133D6E3 b323, (ulong)AEDF1BC1C133D6E3); }
        internal static Any N_0x2555CF7DA5473794() { return NativeInvoker.Invoke<Any>(0x2555CF7DA5473794); } // 0x2555CF7DA5473794 b323, (ulong)2555CF7DA5473794); }
        internal static Any N_0x6FD992C4A1C1B986() { return NativeInvoker.Invoke<Any>(0x6FD992C4A1C1B986); } // 0x6FD992C4A1C1B986 b323, (ulong)6FD992C4A1C1B986); }
        internal static int N_0xDB663CC9FF3407A9(Player player) { return NativeInvoker.Invoke<int>(0xDB663CC9FF3407A9, (ulong)player); }
        internal static void NETWORK_UGC_NAV_(Any p0, Any p1) { NativeInvoker.Invoke(0xC1447451DDB512F0, (ulong)p0, (ulong)p1); }
    }

    internal static unsafe class OBJECT
    {
        internal static Object CREATE_OBJECT(Hash modelHash, float x, float y, float z, BOOL isNetwork, BOOL bScriptHostObj, BOOL dynamic) { return NativeInvoker.Invoke<Object>(0x509D5878EB39E842, (ulong)modelHash, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)isNetwork, (ulong)bScriptHostObj, (ulong)dynamic); }
        internal static Object CREATE_OBJECT_NO_OFFSET(Hash modelHash, float x, float y, float z, BOOL isNetwork, BOOL bScriptHostObj, BOOL dynamic) { return NativeInvoker.Invoke<Object>(0x9A294B2138ABB884, (ulong)modelHash, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)isNetwork, (ulong)bScriptHostObj, (ulong)dynamic); }
        internal static void DELETE_OBJECT(Object* @object) { NativeInvoker.Invoke(0x539E0AE3E6634B9F, (ulong)@object); }
        internal static BOOL PLACE_OBJECT_ON_GROUND_PROPERLY(Object @object) { return NativeInvoker.Invoke<BOOL>(0x58A850EAEE20FAA3, (ulong)@object); }
        internal static BOOL PLACE_OBJECT_ON_GROUND_PROPERLY_2_(Object @object) { return NativeInvoker.Invoke<BOOL>(0xD76EEEF746057FD6, (ulong)@object); }
        internal static BOOL N_0xAFE24E4D29249E4A(Object @object, float p1, float p2, BOOL p3) { return NativeInvoker.Invoke<BOOL>(0xAFE24E4D29249E4A, (ulong)@object, *(uint*)&p1, *(uint*)&p2, (ulong)p3); }
        internal static BOOL SLIDE_OBJECT(Object @object, float toX, float toY, float toZ, float speedX, float speedY, float speedZ, BOOL collision) { return NativeInvoker.Invoke<BOOL>(0x2FDFF4107B8C1147, (ulong)@object, *(uint*)&toX, *(uint*)&toY, *(uint*)&toZ, *(uint*)&speedX, *(uint*)&speedY, *(uint*)&speedZ, (ulong)collision); }
        internal static void SET_OBJECT_TARGETTABLE(Object @object, BOOL targettable) { NativeInvoker.Invoke(0x8A7391690F5AFD81, (ulong)@object, (ulong)targettable); }
        internal static void SET_OBJECT_FORCE_VEHICLES_TO_AVOID(Object @object, BOOL toggle) { NativeInvoker.Invoke(0x77F33F2CCF64B3AA, (ulong)@object, (ulong)toggle); }
        internal static Object GET_CLOSEST_OBJECT_OF_TYPE(float x, float y, float z, float radius, Hash modelHash, BOOL isMission, BOOL p6, BOOL p7) { return NativeInvoker.Invoke<Object>(0xE143FA2249364369, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)modelHash, (ulong)isMission, (ulong)p6, (ulong)p7); }
        internal static BOOL HAS_OBJECT_BEEN_BROKEN(Object @object, Any p1) { return NativeInvoker.Invoke<BOOL>(0x8ABFB70C49CC43E2, (ulong)@object, (ulong)p1); }
        internal static BOOL HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_BROKEN(float p0, float p1, float p2, float p3, Hash modelHash, Any p5) { return NativeInvoker.Invoke<BOOL>(0x761B0E69AC4D007E, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, (ulong)modelHash, (ulong)p5); }
        internal static BOOL HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_COMPLETELY_DESTROYED(float x, float y, float z, float radius, Hash modelHash, BOOL p5) { return NativeInvoker.Invoke<BOOL>(0x46494A2475701343, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)modelHash, (ulong)p5); }
        internal static Any N_0x2542269291C6AC84(Any p0) { return NativeInvoker.Invoke<Any>(0x2542269291C6AC84, (ulong)p0); }
        internal static Vector3 GET_OBJECT_OFFSET_FROM_COORDS_(float xPos, float yPos, float zPos, float heading, float xOffset, float yOffset, float zOffset) { return NativeInvoker.Invoke<Vector3>(0x163E252DE035A133, *(uint*)&xPos, *(uint*)&yPos, *(uint*)&zPos, *(uint*)&heading, *(uint*)&xOffset, *(uint*)&yOffset, *(uint*)&zOffset); }
        internal static Any GET_COORDS_AND_ROTATION_OF_CLOSEST_OBJECT_OF_TYPE(float x, float y, float z, float radius, Hash modelHash, Vector3* outPosition, Vector3* outRotation, int rotationOrder) { return NativeInvoker.Invoke<Any>(0x163F8B586BC95F2A, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)modelHash, (ulong)outPosition, (ulong)outRotation, (ulong)rotationOrder); }
        internal static void SET_STATE_OF_CLOSEST_DOOR_OF_TYPE(Hash type, float x, float y, float z, BOOL locked, float heading, BOOL p6) { NativeInvoker.Invoke(0xF82D8F1926A02C3D, (ulong)type, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)locked, *(uint*)&heading, (ulong)p6); }
        internal static void GET_STATE_OF_CLOSEST_DOOR_OF_TYPE(Hash type, float x, float y, float z, BOOL* locked, float* heading) { NativeInvoker.Invoke(0xEDC1A5B84AEF33FF, (ulong)type, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)locked, (ulong)heading); }
        internal static void DOOR_CONTROL_(Hash modelHash, float x, float y, float z, BOOL locked, float xRotMult, float yRotMult, float zRotMult) { NativeInvoker.Invoke(0x9B12F9A24FABEDB0, (ulong)modelHash, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)locked, *(uint*)&xRotMult, *(uint*)&yRotMult, *(uint*)&zRotMult); }
        internal static void N_0x006E4B040ED37EC3(Any p0) { NativeInvoker.Invoke(0x006E4B040ED37EC3, (ulong)p0); }
        internal static void ADD_DOOR_TO_SYSTEM(Hash doorHash, Hash modelHash, float x, float y, float z, BOOL p5, BOOL scriptDoor, BOOL isLocal) { NativeInvoker.Invoke(0x6F8838D03D1DC226, (ulong)doorHash, (ulong)modelHash, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)p5, (ulong)scriptDoor, (ulong)isLocal); }
        internal static void REMOVE_DOOR_FROM_SYSTEM(Hash doorHash) { NativeInvoker.Invoke(0x464D8E1427156FE4, (ulong)doorHash); }
        internal static void DOOR_SYSTEM_SET_DOOR_STATE(Hash doorHash, int state, BOOL requestDoor, BOOL forceUpdate) { NativeInvoker.Invoke(0x6BAB9442830C7F53, (ulong)doorHash, (ulong)state, (ulong)requestDoor, (ulong)forceUpdate); }
        internal static int DOOR_SYSTEM_GET_DOOR_STATE(Hash doorHash) { return NativeInvoker.Invoke<int>(0x160AA1B32F6139B8, (ulong)doorHash); }
        internal static int DOOR_SYSTEM_GET_DOOR_PENDING_STATE(Hash doorHash) { return NativeInvoker.Invoke<int>(0x4BC2854478F3A749, (ulong)doorHash); }
        internal static void DOOR_SYSTEM_SET_AUTOMATIC_RATE(Hash doorHash, float rate, BOOL requestDoor, BOOL forceUpdate) { NativeInvoker.Invoke(0x03C27E13B42A0E82, (ulong)doorHash, *(uint*)&rate, (ulong)requestDoor, (ulong)forceUpdate); }
        internal static void DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(Hash doorHash, float distance, BOOL requestDoor, BOOL forceUpdate) { NativeInvoker.Invoke(0x9BA001CB45CBF627, (ulong)doorHash, *(uint*)&distance, (ulong)requestDoor, (ulong)forceUpdate); }
        internal static void DOOR_SYSTEM_SET_OPEN_RATIO(Hash doorHash, float ajar, BOOL requestDoor, BOOL forceUpdate) { NativeInvoker.Invoke(0xB6E6FBA95C7324AC, (ulong)doorHash, *(uint*)&ajar, (ulong)requestDoor, (ulong)forceUpdate); }
        internal static Any N_0xE851471AEFC3374F(Any p0) { return NativeInvoker.Invoke<Any>(0xE851471AEFC3374F, (ulong)p0); }
        internal static float DOOR_SYSTEM_GET_OPEN_RATIO(Hash doorHash) { return NativeInvoker.Invoke<float>(0x65499865FCA6E5EC, (ulong)doorHash); }
        internal static void DOOR_SYSTEM_SET_SPRING_REMOVED(Hash doorHash, BOOL removed, BOOL requestDoor, BOOL forceUpdate) { NativeInvoker.Invoke(0xC485E07E4F0B7958, (ulong)doorHash, (ulong)removed, (ulong)requestDoor, (ulong)forceUpdate); }
        internal static void DOOR_SYSTEM_SET_HOLD_OPEN(Hash doorHash, BOOL toggle) { NativeInvoker.Invoke(0xD9B71952F78A2640, (ulong)doorHash, (ulong)toggle); }
        internal static void N_0xA85A21582451E951(Hash doorHash, BOOL p1) { NativeInvoker.Invoke(0xA85A21582451E951, (ulong)doorHash, (ulong)p1); }
        internal static BOOL IS_DOOR_REGISTERED_WITH_SYSTEM(Hash doorHash) { return NativeInvoker.Invoke<BOOL>(0xC153C43EA202C8C1, (ulong)doorHash); }
        internal static BOOL IS_DOOR_CLOSED(Hash doorHash) { return NativeInvoker.Invoke<BOOL>(0xC531EE8A1145A149, (ulong)doorHash); }
        internal static void N_0xC7F29CA00F46350E(BOOL p0) { NativeInvoker.Invoke(0xC7F29CA00F46350E, (ulong)p0); }
        internal static void N_0x701FDA1E82076BA4() { NativeInvoker.Invoke(0x701FDA1E82076BA4); } // 0x701FDA1E82076BA4 0xF592AD10 b323<, (ulong)701FDA1E82076BA4); }
        internal static BOOL DOOR_SYSTEM_GET_IS_PHYSICS_LOADED(Any p0) { return NativeInvoker.Invoke<BOOL>(0xDF97CDD4FC08FD34, (ulong)p0); }
        internal static BOOL DOOR_SYSTEM_FIND_EXISTING_DOOR(float x, float y, float z, Hash modelHash, Hash* outDoorHash) { return NativeInvoker.Invoke<BOOL>(0x589F80B325CC82C5, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)modelHash, (ulong)outDoorHash); }
        internal static BOOL IS_GARAGE_EMPTY(Hash garageHash, BOOL p1, int p2) { return NativeInvoker.Invoke<BOOL>(0x90E47239EA1980B8, (ulong)garageHash, (ulong)p1, (ulong)p2); }
        internal static BOOL IS_PLAYER_ENTIRELY_INSIDE_GARAGE(Hash garageHash, Player player, float p2, int p3) { return NativeInvoker.Invoke<BOOL>(0x024A60DEB0EA69F0, (ulong)garageHash, (ulong)player, *(uint*)&p2, (ulong)p3); }
        internal static BOOL IS_PLAYER_PARTIALLY_INSIDE_GARAGE(Hash garageHash, Player player, int p2) { return NativeInvoker.Invoke<BOOL>(0x1761DC5D8471CBAA, (ulong)garageHash, (ulong)player, (ulong)p2); }
        internal static BOOL ARE_ENTITIES_ENTIRELY_INSIDE_GARAGE(Hash garageHash, BOOL p1, BOOL p2, BOOL p3, Any p4) { return NativeInvoker.Invoke<BOOL>(0x85B6C850546FDDE2, (ulong)garageHash, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static BOOL IS_ANY_ENTITY_ENTIRELY_INSIDE_GARAGE(Hash garageHash, BOOL p1, BOOL p2, BOOL p3, Any p4) { return NativeInvoker.Invoke<BOOL>(0x673ED815D6E323B7, (ulong)garageHash, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static BOOL IS_OBJECT_ENTIRELY_INSIDE_GARAGE(Hash garageHash, Entity entity, float p2, int p3) { return NativeInvoker.Invoke<BOOL>(0x372EF6699146A1E4, (ulong)garageHash, (ulong)entity, *(uint*)&p2, (ulong)p3); }
        internal static BOOL IS_OBJECT_PARTIALLY_INSIDE_GARAGE(Hash garageHash, Entity entity, int p2) { return NativeInvoker.Invoke<BOOL>(0xF0EED5A6BC7B237A, (ulong)garageHash, (ulong)entity, (ulong)p2); }
        internal static void CLEAR_GARAGE_AREA_(Hash garageHash, BOOL isNetwork) { NativeInvoker.Invoke(0xDA05194260CDCDF9, (ulong)garageHash, (ulong)isNetwork); }
        internal static void CLEAR_OBJECTS_INSIDE_GARAGE(Hash garageHash, BOOL vehicles, BOOL peds, BOOL @objects, BOOL isNetwork) { NativeInvoker.Invoke(0x190428512B240692, (ulong)garageHash, (ulong)vehicles, (ulong)peds, (ulong)@objects, (ulong)isNetwork); }
        internal static void N_0x659F9D71F52843F8(int id, BOOL toggle) { NativeInvoker.Invoke(0x659F9D71F52843F8, (ulong)id, (ulong)toggle); }
        internal static void ENABLE_SAVING_IN_GARAGE(Hash garageHash, BOOL toggle) { NativeInvoker.Invoke(0xF2E1A7133DD356A6, (ulong)garageHash, (ulong)toggle); }
        internal static void N_0x66A49D021870FE88() { NativeInvoker.Invoke(0x66A49D021870FE88); } // 0x66A49D021870FE88 0x6158959E b323<, (ulong)66A49D021870FE88); }
        internal static BOOL DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS(float x, float y, float z, float radius, Hash hash, BOOL p5) { return NativeInvoker.Invoke<BOOL>(0xBFA48E2FF417213F, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)hash, (ulong)p5); }
        internal static BOOL IS_POINT_IN_ANGLED_AREA(float xPos, float yPos, float zPos, float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL debug, BOOL includeZ) { return NativeInvoker.Invoke<BOOL>(0x2A70BAE8883E4C81, *(uint*)&xPos, *(uint*)&yPos, *(uint*)&zPos, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&width, (ulong)debug, (ulong)includeZ); }
        internal static void SET_OBJECT_ALLOW_LOW_LOD_BUOYANCY(Object @object, BOOL toggle) { NativeInvoker.Invoke(0x4D89D607CB3DD1D2, (ulong)@object, (ulong)toggle); }
        internal static void SET_OBJECT_PHYSICS_PARAMS(Object @object, float weight, float p2, float p3, float p4, float p5, float gravity, float p7, float p8, float p9, float p10, float buoyancy) { NativeInvoker.Invoke(0xF6DF6E90DE7DF90F, (ulong)@object, *(uint*)&weight, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&gravity, *(uint*)&p7, *(uint*)&p8, *(uint*)&p9, *(uint*)&p10, *(uint*)&buoyancy); }
        internal static float GET_OBJECT_FRAGMENT_DAMAGE_HEALTH(Any p0, BOOL p1) { return NativeInvoker.Invoke<float>(0xB6FBFD079B8D0596, (ulong)p0, (ulong)p1); }
        internal static void SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN(Object @object, BOOL toggle) { NativeInvoker.Invoke(0x406137F8EF90EAF5, (ulong)@object, (ulong)toggle); }
        internal static BOOL IS_ANY_OBJECT_NEAR_POINT(float x, float y, float z, float range, BOOL p4) { return NativeInvoker.Invoke<BOOL>(0x397DC58FF00298D1, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&range, (ulong)p4); }
        internal static BOOL IS_OBJECT_NEAR_POINT(Hash @objectHash, float x, float y, float z, float range) { return NativeInvoker.Invoke<BOOL>(0x8C90FE4B381BA60A, (ulong)@objectHash, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&range); }
        internal static void REMOVE_OBJECT_HIGH_DETAIL_MODEL(Object @object) { NativeInvoker.Invoke(0x4A39DB43E47CF3AA, (ulong)@object); }
        internal static void BREAK_OBJECT_FRAGMENT_CHILD(Object p0, Any p1, BOOL p2) { NativeInvoker.Invoke(0xE7E4C198B0185900, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0xE05F6AEEFEB0BB02(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0xE05F6AEEFEB0BB02, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0xF9C1681347C8BD15(Object @object) { NativeInvoker.Invoke(0xF9C1681347C8BD15, (ulong)@object); }
        internal static void TRACK_OBJECT_VISIBILITY(Object @object) { NativeInvoker.Invoke(0xB252BC036B525623, (ulong)@object); }
        internal static BOOL IS_OBJECT_VISIBLE(Object @object) { return NativeInvoker.Invoke<BOOL>(0x8B32ACE6326A7546, (ulong)@object); }
        internal static void N_0xC6033D32241F6FB5(Object @object, BOOL toggle) { NativeInvoker.Invoke(0xC6033D32241F6FB5, (ulong)@object, (ulong)toggle); }
        internal static void N_0xEB6F1A9B5510A5D2(Any p0, BOOL p1) { NativeInvoker.Invoke(0xEB6F1A9B5510A5D2, (ulong)p0, (ulong)p1); }
        internal static void SET_UNK_GLOBAL_BOOL_RELATED_TO_DAMAGE_(BOOL value) { NativeInvoker.Invoke(0xABDABF4E1EDECBFA, (ulong)value); }
        internal static void SET_CREATE_WEAPON_OBJECT_LIGHT_SOURCE_(Object @object, BOOL toggle) { NativeInvoker.Invoke(0xBCE595371A5FBAAF, (ulong)@object, (ulong)toggle); }
        internal static Object GET_RAYFIRE_MAP_OBJECT(float x, float y, float z, float radius, char* name) { return NativeInvoker.Invoke<Object>(0xB48FCED898292E52, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)name); }
        internal static void SET_STATE_OF_RAYFIRE_MAP_OBJECT(Object @object, int state) { NativeInvoker.Invoke(0x5C29F698D404C5E1, (ulong)@object, (ulong)state); }
        internal static int GET_STATE_OF_RAYFIRE_MAP_OBJECT(Object @object) { return NativeInvoker.Invoke<int>(0x899BA936634A322E, (ulong)@object); }
        internal static BOOL DOES_RAYFIRE_MAP_OBJECT_EXIST(Object @object) { return NativeInvoker.Invoke<BOOL>(0x52AF537A0C5B8AAD, (ulong)@object); }
        internal static float GET_RAYFIRE_MAP_OBJECT_ANIM_PHASE(Object @object) { return NativeInvoker.Invoke<float>(0x260EE4FDBDF4DB01, (ulong)@object); }
        internal static Pickup CREATE_PICKUP(Hash pickupHash, float posX, float posY, float posZ, int p4, int value, BOOL p6, Hash modelHash) { return NativeInvoker.Invoke<Pickup>(0xFBA08C503DD5FA58, (ulong)pickupHash, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, (ulong)p4, (ulong)value, (ulong)p6, (ulong)modelHash); }
        internal static Pickup CREATE_PICKUP_ROTATE(Hash pickupHash, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, int flag, int amount, Any p9, BOOL p10, Hash modelHash) { return NativeInvoker.Invoke<Pickup>(0x891804727E0A98B7, (ulong)pickupHash, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, (ulong)flag, (ulong)amount, (ulong)p9, (ulong)p10, (ulong)modelHash); }
        internal static void N_0x394CD08E31313C28() { NativeInvoker.Invoke(0x394CD08E31313C28); } // 0x394CD08E31313C28 b944<, (ulong)394CD08E31313C28); }
        internal static void N_0x826D1EE4D1CAFC78(Any p0, Any p1) { NativeInvoker.Invoke(0x826D1EE4D1CAFC78, (ulong)p0, (ulong)p1); }
        internal static Pickup CREATE_AMBIENT_PICKUP(Hash pickupHash, float posX, float posY, float posZ, int flags, int value, Hash modelHash, BOOL p7, BOOL p8) { return NativeInvoker.Invoke<Pickup>(0x673966A0C0FD7171, (ulong)pickupHash, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, (ulong)flags, (ulong)value, (ulong)modelHash, (ulong)p7, (ulong)p8); }
        internal static Pickup CREATE_NON_NETWORKED_AMBIENT_PICKUP_(Hash pickupHash, float posX, float posY, float posZ, int flags, int value, Hash modelHash, BOOL p7, BOOL p8) { return NativeInvoker.Invoke<Pickup>(0x9C93764223E29C50, (ulong)pickupHash, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, (ulong)flags, (ulong)value, (ulong)modelHash, (ulong)p7, (ulong)p8); }
        internal static void N_0x1E3F1B1B891A2AAA(Any p0, Any p1) { NativeInvoker.Invoke(0x1E3F1B1B891A2AAA, (ulong)p0, (ulong)p1); }
        internal static Object CREATE_PORTABLE_PICKUP(Hash pickupHash, float x, float y, float z, BOOL placeOnGround, Hash modelHash) { return NativeInvoker.Invoke<Object>(0x2EAF1FDB2FB55698, (ulong)pickupHash, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)placeOnGround, (ulong)modelHash); }
        internal static Object CREATE_NON_NETWORKED_PORTABLE_PICKUP(Hash pickupHash, float x, float y, float z, BOOL placeOnGround, Hash modelHash) { return NativeInvoker.Invoke<Object>(0x125494B98A21AAF7, (ulong)pickupHash, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)placeOnGround, (ulong)modelHash); }
        internal static void ATTACH_PORTABLE_PICKUP_TO_PED(Object pickupObject, Ped ped) { NativeInvoker.Invoke(0x8DC39368BDD57755, (ulong)pickupObject, (ulong)ped); }
        internal static void DETACH_PORTABLE_PICKUP_FROM_PED(Object pickupObject) { NativeInvoker.Invoke(0xCF463D1E9A0AECB1, (ulong)pickupObject); }
        internal static void HIDE_PICKUP_(Object pickupObject, BOOL toggle) { NativeInvoker.Invoke(0x867458251D47CCB2, (ulong)pickupObject, (ulong)toggle); }
        internal static void SET_MAX_NUM_PORTABLE_PICKUPS_CARRIED_BY_PLAYER(Hash modelHash, int p1) { NativeInvoker.Invoke(0x0BF3B3BD47D79C08, (ulong)modelHash, (ulong)p1); }
        internal static void SET_LOCAL_PLAYER_CAN_COLLECT_PORTABLE_PICKUPS(BOOL p0) { NativeInvoker.Invoke(0x78857FC65CADB909, (ulong)p0); }
        internal static Vector3 GET_SAFE_PICKUP_COORDS(float x, float y, float z, float p3, float p4) { return NativeInvoker.Invoke<Vector3>(0x6E16BC2503FF1FF0, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&p3, *(uint*)&p4); }
        internal static void N_0xD4A7A435B3710D05(float x, float y, float z, float radius) { NativeInvoker.Invoke(0xD4A7A435B3710D05, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius); }
        internal static void N_0xB7C6D80FB371659A() { NativeInvoker.Invoke(0xB7C6D80FB371659A); } // 0xB7C6D80FB371659A b1290<, (ulong)B7C6D80FB371659A); }
        internal static Vector3 GET_PICKUP_COORDS(Pickup pickup) { return NativeInvoker.Invoke<Vector3>(0x225B8B35C88029B3, (ulong)pickup); }
        internal static void N_0x8DCA505A5C196F05(Any p0, Any p1) { NativeInvoker.Invoke(0x8DCA505A5C196F05, (ulong)p0, (ulong)p1); }
        internal static void REMOVE_ALL_PICKUPS_OF_TYPE(Hash pickupHash) { NativeInvoker.Invoke(0x27F9D613092159CF, (ulong)pickupHash); }
        internal static BOOL HAS_PICKUP_BEEN_COLLECTED(Pickup pickup) { return NativeInvoker.Invoke<BOOL>(0x80EC48E6679313F9, (ulong)pickup); }
        internal static void REMOVE_PICKUP(Pickup pickup) { NativeInvoker.Invoke(0x3288D8ACAECD2AB2, (ulong)pickup); }
        internal static void CREATE_MONEY_PICKUPS(float x, float y, float z, int value, int amount, Hash model) { NativeInvoker.Invoke(0x0589B5E791CE9B2B, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)value, (ulong)amount, (ulong)model); }
        internal static BOOL DOES_PICKUP_EXIST(Pickup pickup) { return NativeInvoker.Invoke<BOOL>(0xAFC1CA75AD4074D1, (ulong)pickup); }
        internal static BOOL DOES_PICKUP_OBJECT_EXIST(Object pickupObject) { return NativeInvoker.Invoke<BOOL>(0xD9EFB6DBF7DAAEA3, (ulong)pickupObject); }
        internal static Object GET_PICKUP_OBJECT(Pickup pickup) { return NativeInvoker.Invoke<Object>(0x5099BC55630B25AE, (ulong)pickup); }
        internal static BOOL IS_OBJECT_A_PORTABLE_PICKUP(Object @object) { return NativeInvoker.Invoke<BOOL>(0xFC481C641EBBD27D, (ulong)@object); }
        internal static BOOL IS_OBJECT_A_PICKUP(Object @object) { return NativeInvoker.Invoke<BOOL>(0x0378C08504160D0D, (ulong)@object); }
        internal static BOOL DOES_PICKUP_OF_TYPE_EXIST_IN_AREA(Hash pickupHash, float x, float y, float z, float radius) { return NativeInvoker.Invoke<BOOL>(0xF9C36251F6E48E33, (ulong)pickupHash, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius); }
        internal static void SET_PICKUP_REGENERATION_TIME(Pickup pickup, int duration) { NativeInvoker.Invoke(0x78015C9B4B3ECC9D, (ulong)pickup, (ulong)duration); }
        internal static void FORCE_PICKUP_REGENERATE(Any p0) { NativeInvoker.Invoke(0x758A5C1B3B1E1990, (ulong)p0); }
        internal static void TOGGLE_USE_PICKUPS_FOR_PLAYER_(Player player, Hash pickupHash, BOOL toggle) { NativeInvoker.Invoke(0x616093EC6B139DD9, (ulong)player, (ulong)pickupHash, (ulong)toggle); }
        internal static void SET_LOCAL_PLAYER_CAN_USE_PICKUPS_WITH_THIS_MODEL_(Hash modelHash, BOOL toggle) { NativeInvoker.Invoke(0x88EAEC617CD26926, (ulong)modelHash, (ulong)toggle); }
        internal static void N_0xFDC07C58E8AAB715(Hash pickupHash) { NativeInvoker.Invoke(0xFDC07C58E8AAB715, (ulong)pickupHash); }
        internal static void SET_TEAM_PICKUP_OBJECT(Object @object, Any p1, BOOL p2) { NativeInvoker.Invoke(0x53E0DF1A2A3CF0CA, (ulong)@object, (ulong)p1, (ulong)p2); }
        internal static void PREVENT_COLLECTION_OF_PORTABLE_PICKUP(Object @object, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x92AEFB5F6E294023, (ulong)@object, (ulong)p1, (ulong)p2); }
        internal static void N_0x27F248C3FEBFAAD3(Any p0, Any p1) { NativeInvoker.Invoke(0x27F248C3FEBFAAD3, (ulong)p0, (ulong)p1); }
        internal static void N_0x0596843B34B95CE5(Any p0, Any p1) { NativeInvoker.Invoke(0x0596843B34B95CE5, (ulong)p0, (ulong)p1); }
        internal static void N_0xA08FE5E49BDC39DD(Any p0, float p1, BOOL p2) { NativeInvoker.Invoke(0xA08FE5E49BDC39DD, (ulong)p0, *(uint*)&p1, (ulong)p2); }
        internal static void N_0x62454A641B41F3C5(Any p0) { NativeInvoker.Invoke(0x62454A641B41F3C5, (ulong)p0); }
        internal static void N_0x39A5FB7EAF150840(Any p0, Any p1) { NativeInvoker.Invoke(0x39A5FB7EAF150840, (ulong)p0, (ulong)p1); }
        internal static void N_0x834344A414C7C85D(Any p0, Any p1) { NativeInvoker.Invoke(0x834344A414C7C85D, (ulong)p0, (ulong)p1); }
        internal static Any N_0xDB41D07A45A6D4B7(Any p0) { return NativeInvoker.Invoke<Any>(0xDB41D07A45A6D4B7, (ulong)p0); }
        internal static void SET_PICKUP_GENERATION_RANGE_MULTIPLIER(float multiplier) { NativeInvoker.Invoke(0x318516E02DE3ECE2, *(uint*)&multiplier); }
        internal static float GET_PICKUP_GENERATION_RANGE_MULTIPLIER_() { return NativeInvoker.Invoke<float>(0xB3ECA65C7317F174); } // 0xB3ECA65C7317F174 b944, (ulong)B3ECA65C7317F174); }
        internal static void N_0x31F924B53EADDF65(BOOL p0) { NativeInvoker.Invoke(0x31F924B53EADDF65, (ulong)p0); }
        internal static void SET_PICKUP_UNCOLLECTABLE(Any p0, Any p1) { NativeInvoker.Invoke(0x1C1B69FAE509BA97, (ulong)p0, (ulong)p1); }
        internal static void N_0x858EC9FD25DE04AA(Any p0, Any p1) { NativeInvoker.Invoke(0x858EC9FD25DE04AA, (ulong)p0, (ulong)p1); }
        internal static void SET_PICKUP_HIDDEN_WHEN_UNCOLLECTABLE(Any p0, Any p1) { NativeInvoker.Invoke(0x3ED2B83AB2E82799, (ulong)p0, (ulong)p1); }
        internal static void N_0x8881C98A31117998(Any p0, Any p1) { NativeInvoker.Invoke(0x8881C98A31117998, (ulong)p0, (ulong)p1); }
        internal static void N_0x8CFF648FBD7330F1(Any p0) { NativeInvoker.Invoke(0x8CFF648FBD7330F1, (ulong)p0); }
        internal static void N_0x46F3ADD1E2D5BAF2(Any p0, Any p1) { NativeInvoker.Invoke(0x46F3ADD1E2D5BAF2, (ulong)p0, (ulong)p1); }
        internal static void N_0x641F272B52E2F0F8(Any p0, Any p1) { NativeInvoker.Invoke(0x641F272B52E2F0F8, (ulong)p0, (ulong)p1); }
        internal static void N_0x4C134B4DF76025D0(Pickup pickup, BOOL toggle) { NativeInvoker.Invoke(0x4C134B4DF76025D0, (ulong)pickup, (ulong)toggle); }
        internal static void N_0xAA059C615DE9DD03(Pickup pickup, BOOL toggle) { NativeInvoker.Invoke(0xAA059C615DE9DD03, (ulong)pickup, (ulong)toggle); }
        internal static void N_0xF92099527DB8E2A7(Any p0, Any p1) { NativeInvoker.Invoke(0xF92099527DB8E2A7, (ulong)p0, (ulong)p1); }
        internal static void N_0xA2C1F5E92AFE49ED() { NativeInvoker.Invoke(0xA2C1F5E92AFE49ED); } // 0xA2C1F5E92AFE49ED 0xB241806C b323<, (ulong)A2C1F5E92AFE49ED); }
        internal static void N_0x762DB2D380B48D04(Any p0) { NativeInvoker.Invoke(0x762DB2D380B48D04, (ulong)p0); }
        internal static void RENDER_FAKE_PICKUP_GLOW(float x, float y, float z, int colorIndex) { NativeInvoker.Invoke(0x3430676B11CDF21D, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)colorIndex); }
        internal static void N_0x7813E8B8C4AE4799(Pickup pickup) { NativeInvoker.Invoke(0x7813E8B8C4AE4799, (ulong)pickup); }
        internal static void N_0xBFFE53AE7E67FCDC(Pickup pickup, BOOL toggle) { NativeInvoker.Invoke(0xBFFE53AE7E67FCDC, (ulong)pickup, (ulong)toggle); }
        internal static void N_0xD05A3241B9A86F19(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0xD05A3241B9A86F19, (ulong)entity, (ulong)toggle); }
        internal static void N_0xB2D0BDE54F0E8E5A(Object @object, BOOL toggle) { NativeInvoker.Invoke(0xB2D0BDE54F0E8E5A, (ulong)@object, (ulong)toggle); }
        internal static Hash GET_WEAPON_TYPE_FROM_PICKUP_TYPE(Hash pickupHash) { return NativeInvoker.Invoke<Hash>(0x08F96CA6C551AD51, (ulong)pickupHash); }
        internal static Hash GET_PICKUP_HASH_FROM_WEAPON_(Hash weaponHash) { return NativeInvoker.Invoke<Hash>(0xD6429A016084F1A5, (ulong)weaponHash); }
        internal static BOOL IS_PICKUP_WEAPON_OBJECT_VALID(Object @object) { return NativeInvoker.Invoke<BOOL>(0x11D1E53A726891FE, (ulong)@object); }
        internal static int GET_OBJECT_TEXTURE_VARIATION_(Object @object) { return NativeInvoker.Invoke<int>(0xE84EB93729C5F36A, (ulong)@object); }
        internal static void SET_OBJECT_TEXTURE_VARIATION_(Object @object, int textureVariation) { NativeInvoker.Invoke(0x971DA0055324D033, (ulong)@object, (ulong)textureVariation); }
        internal static BOOL SET_TEXTURE_VARIATION_OF_CLOSEST_OBJECT_OF_TYPE_(float x, float y, float z, float radius, Hash modelHash, int textureVariation) { return NativeInvoker.Invoke<BOOL>(0xF12E33034D887F66, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)modelHash, (ulong)textureVariation); }
        internal static void N_0x31574B1B41268673(Any p0, Any p1) { NativeInvoker.Invoke(0x31574B1B41268673, (ulong)p0, (ulong)p1); }
        internal static Any SET_OBJECT_LIGHT_COLOR_(Object @object, BOOL p1, int r, int g, int b) { return NativeInvoker.Invoke<Any>(0x5F048334B4A4E774, (ulong)@object, (ulong)p1, (ulong)r, (ulong)g, (ulong)b); }
        internal static BOOL N_0xADF084FB8F075D06(Object @object) { return NativeInvoker.Invoke<BOOL>(0xADF084FB8F075D06, (ulong)@object); }
        internal static void N_0x3B2FD68DB5F8331C(Object @object, BOOL toggle) { NativeInvoker.Invoke(0x3B2FD68DB5F8331C, (ulong)@object, (ulong)toggle); }
        internal static void SET_OBJECT_STUNT_PROP_SPEEDUP_(Object @object, Any p1) { NativeInvoker.Invoke(0x96EE0EBA0163DF80, (ulong)@object, (ulong)p1); }
        internal static void SET_OBJECT_STUNT_PROP_DURATION_(Object @object, float duration) { NativeInvoker.Invoke(0xDF6CA0330F2E737B, (ulong)@object, *(uint*)&duration); }
        internal static Hash GET_PICKUP_HASH_(Hash pickupHash) { return NativeInvoker.Invoke<Hash>(0x5EAAD83F8CFB4575, (ulong)pickupHash); }
        internal static void SET_FORCE_OBJECT_THIS_FRAME(float x, float y, float z, float p3) { NativeInvoker.Invoke(0xF538081986E49E9D, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&p3); }
        internal static void MARK_OBJECT_FOR_DELETION_(Object @object) { NativeInvoker.Invoke(0xADBE4809F19F927A, (ulong)@object); }
        internal static void N_0x8CAAB2BD3EA58BD4(Any p0) { NativeInvoker.Invoke(0x8CAAB2BD3EA58BD4, (ulong)p0); }
        internal static void N_0x63ECF581BC70E363(Any p0, Any p1) { NativeInvoker.Invoke(0x63ECF581BC70E363, (ulong)p0, (ulong)p1); }
        internal static void SET_ENABLE_ARENA_PROP_PHYSICS_(Object @object, BOOL toggle, int p2) { NativeInvoker.Invoke(0x911024442F4898F0, (ulong)@object, (ulong)toggle, (ulong)p2); }
        internal static void SET_ENABLE_ARENA_PROP_PHYSICS_ON_PED_(Object @object, BOOL toggle, int p2, Ped ped) { NativeInvoker.Invoke(0xB20834A7DD3D8896, (ulong)@object, (ulong)toggle, (ulong)p2, (ulong)ped); }
        internal static void N_0x734E1714D077DA9A(Object @object, BOOL toggle) { NativeInvoker.Invoke(0x734E1714D077DA9A, (ulong)@object, (ulong)toggle); }
        internal static void N_0x1A6CBB06E2D0D79D(Object @object, BOOL p1) { NativeInvoker.Invoke(0x1A6CBB06E2D0D79D, (ulong)@object, (ulong)p1); }
        internal static BOOL GET_IS_ARENA_PROP_PHYSICS_DISABLED_(Object @object, Any p1) { return NativeInvoker.Invoke<BOOL>(0x43C677F1E1158005, (ulong)@object, (ulong)p1); }
        internal static Any N_0x3BD770D281982DB5(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0x3BD770D281982DB5, (ulong)p0, (ulong)p1); }
        internal static void N_0x1C57C94A6446492A(Object @object, BOOL toggle) { NativeInvoker.Invoke(0x1C57C94A6446492A, (ulong)@object, (ulong)toggle); }
        internal static void N_0xB5B7742424BD4445(Object @object, BOOL toggle) { NativeInvoker.Invoke(0xB5B7742424BD4445, (ulong)@object, (ulong)toggle); }
    }

    internal static unsafe class PAD
    {
        internal static BOOL IS_CONTROL_ENABLED(int padIndex, int control) { return NativeInvoker.Invoke<BOOL>(0x1CEA6BFDF248E5D9, (ulong)padIndex, (ulong)control); }
        internal static BOOL IS_CONTROL_PRESSED(int padIndex, int control) { return NativeInvoker.Invoke<BOOL>(0xF3A21BCD95725A4A, (ulong)padIndex, (ulong)control); }
        internal static BOOL IS_CONTROL_RELEASED(int padIndex, int control) { return NativeInvoker.Invoke<BOOL>(0x648EE3E7F38877DD, (ulong)padIndex, (ulong)control); }
        internal static BOOL IS_CONTROL_JUST_PRESSED(int padIndex, int control) { return NativeInvoker.Invoke<BOOL>(0x580417101DDB492F, (ulong)padIndex, (ulong)control); }
        internal static BOOL IS_CONTROL_JUST_RELEASED(int padIndex, int control) { return NativeInvoker.Invoke<BOOL>(0x50F940259D3841E6, (ulong)padIndex, (ulong)control); }
        internal static int GET_CONTROL_VALUE(int padIndex, int control) { return NativeInvoker.Invoke<int>(0xD95E79E8686D2C27, (ulong)padIndex, (ulong)control); }
        internal static float GET_CONTROL_NORMAL(int padIndex, int control) { return NativeInvoker.Invoke<float>(0xEC3C9B8D5327B563, (ulong)padIndex, (ulong)control); }
        internal static void N_0x5B73C77D9EB66E24(BOOL p0) { NativeInvoker.Invoke(0x5B73C77D9EB66E24, (ulong)p0); }
        internal static float GET_CONTROL_UNBOUND_NORMAL(int padIndex, int control) { return NativeInvoker.Invoke<float>(0x5B84D09CEC5209C5, (ulong)padIndex, (ulong)control); }
        internal static BOOL SET_CONTROL_NORMAL_(int padIndex, int control, float amount) { return NativeInvoker.Invoke<BOOL>(0xE8A25867FBA3B05E, (ulong)padIndex, (ulong)control, *(uint*)&amount); }
        internal static BOOL IS_DISABLED_CONTROL_PRESSED(int padIndex, int control) { return NativeInvoker.Invoke<BOOL>(0xE2587F8CBBD87B1D, (ulong)padIndex, (ulong)control); }
        internal static BOOL IS_DISABLED_CONTROL_RELEASED(int padIndex, int control) { return NativeInvoker.Invoke<BOOL>(0xFB6C4072E9A32E92, (ulong)padIndex, (ulong)control); }
        internal static BOOL IS_DISABLED_CONTROL_JUST_PRESSED(int padIndex, int control) { return NativeInvoker.Invoke<BOOL>(0x91AEF906BCA88877, (ulong)padIndex, (ulong)control); }
        internal static BOOL IS_DISABLED_CONTROL_JUST_RELEASED(int padIndex, int control) { return NativeInvoker.Invoke<BOOL>(0x305C8DCD79DA8B0F, (ulong)padIndex, (ulong)control); }
        internal static float GET_DISABLED_CONTROL_NORMAL(int padIndex, int control) { return NativeInvoker.Invoke<float>(0x11E65974A982637C, (ulong)padIndex, (ulong)control); }
        internal static float GET_DISABLED_CONTROL_UNBOUND_NORMAL(int padIndex, int control) { return NativeInvoker.Invoke<float>(0x4F8A26A890FD62FB, (ulong)padIndex, (ulong)control); }
        internal static int N_0xD7D22F5592AED8BA(int p0) { return NativeInvoker.Invoke<int>(0xD7D22F5592AED8BA, (ulong)p0); }
        internal static BOOL IS_USING_KEYBOARD_(int padIndex) { return NativeInvoker.Invoke<BOOL>(0xA571D46727E2B718, (ulong)padIndex); }
        internal static BOOL IS_USING_KEYBOARD_2_(int padIndex) { return NativeInvoker.Invoke<BOOL>(0x13337B38DB572509, (ulong)padIndex); }
        internal static BOOL SET_CURSOR_LOCATION_(float x, float y) { return NativeInvoker.Invoke<BOOL>(0xFC695459D4D0E219, *(uint*)&x, *(uint*)&y); }
        internal static BOOL N_0x23F09EADC01449D6(int padIndex) { return NativeInvoker.Invoke<BOOL>(0x23F09EADC01449D6, (ulong)padIndex); }
        internal static BOOL N_0x6CD79468A1E595C6(int padIndex) { return NativeInvoker.Invoke<BOOL>(0x6CD79468A1E595C6, (ulong)padIndex); }
        internal static char* GET_CONTROL_INSTRUCTIONAL_BUTTON(int padIndex, int control, BOOL p2) { return (char*)NativeInvoker.Invoke<IntPtr>(0x0499D7B09FC9B407, (ulong)padIndex, (ulong)control, (ulong)p2); }
        internal static char* GET_CONTROL_GROUP_INSTRUCTIONAL_BUTTON(int padIndex, int controlGroup, BOOL p2) { return (char*)NativeInvoker.Invoke<IntPtr>(0x80C2FD58D720C801, (ulong)padIndex, (ulong)controlGroup, (ulong)p2); }
        internal static void SET_CONTROL_LIGHT_EFFECT_COLOR(int padIndex, int red, int green, int blue) { NativeInvoker.Invoke(0x8290252FFF36ACB5, (ulong)padIndex, (ulong)red, (ulong)green, (ulong)blue); }
        internal static void N_0xCB0360EFEFB2580D(int padIndex) { NativeInvoker.Invoke(0xCB0360EFEFB2580D, (ulong)padIndex); }
        internal static void SET_PAD_SHAKE(int padIndex, int duration, int frequency) { NativeInvoker.Invoke(0x48B3886C1358D0D5, (ulong)padIndex, (ulong)duration, (ulong)frequency); }
        internal static void N_0x14D29BB12D47F68C(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x14D29BB12D47F68C, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void STOP_PAD_SHAKE(int padIndex) { NativeInvoker.Invoke(0x38C16A305E8CDC8D, (ulong)padIndex); }
        internal static void SET_PAD_SHAKE_SUPPRESSED_ID(int padIndex, Any p1) { NativeInvoker.Invoke(0xF239400E16C23E08, (ulong)padIndex, (ulong)p1); }
        internal static void N_0xA0CEFCEA390AAB9B(Any p0) { NativeInvoker.Invoke(0xA0CEFCEA390AAB9B, (ulong)p0); }
        internal static BOOL IS_LOOK_INVERTED() { return NativeInvoker.Invoke<BOOL>(0x77B612531280010D); } // 0x77B612531280010D 0x313434B2 b323, (ulong)77B612531280010D); }
        internal static BOOL N_0xE1615EC03B3BB4FD() { return NativeInvoker.Invoke<BOOL>(0xE1615EC03B3BB4FD); } // 0xE1615EC03B3BB4FD b323, (ulong)E1615EC03B3BB4FD); }
        internal static int GET_LOCAL_PLAYER_AIM_STATE() { return NativeInvoker.Invoke<int>(0xBB41AFBBBC0A0287); } // 0xBB41AFBBBC0A0287 0x81802053 b323, (ulong)BB41AFBBBC0A0287); }
        internal static int GET_LOCAL_PLAYER_AIM_STATE_2_() { return NativeInvoker.Invoke<int>(0x59B9A7AF4C95133C); } // 0x59B9A7AF4C95133C b323, (ulong)59B9A7AF4C95133C); }
        internal static Any N_0x25AAA32BDC98F2A3() { return NativeInvoker.Invoke<Any>(0x25AAA32BDC98F2A3); } // 0x25AAA32BDC98F2A3 b1365, (ulong)25AAA32BDC98F2A3); }
        internal static BOOL GET_IS_USING_ALTERNATE_DRIVEBY() { return NativeInvoker.Invoke<BOOL>(0x0F70731BACCFBB96); } // 0x0F70731BACCFBB96 0xC1AFABD5 b323, (ulong)0F70731BACCFBB96); }
        internal static BOOL GET_ALLOW_MOVEMENT_WHILE_ZOOMED() { return NativeInvoker.Invoke<BOOL>(0xFC859E2374407556); } // 0xFC859E2374407556 0xC0823820 b323, (ulong)FC859E2374407556); }
        internal static void SET_PLAYERPAD_SHAKES_WHEN_CONTROLLER_DISABLED(BOOL toggle) { NativeInvoker.Invoke(0x798FDEB5B1575088, (ulong)toggle); }
        internal static void SET_INPUT_EXCLUSIVE(int padIndex, int control) { NativeInvoker.Invoke(0xEDE476E5EE29EDB1, (ulong)padIndex, (ulong)control); }
        internal static void DISABLE_CONTROL_ACTION(int padIndex, int control, BOOL disable) { NativeInvoker.Invoke(0xFE99B66D079CF6BC, (ulong)padIndex, (ulong)control, (ulong)disable); }
        internal static void ENABLE_CONTROL_ACTION(int padIndex, int control, BOOL enable) { NativeInvoker.Invoke(0x351220255D64C155, (ulong)padIndex, (ulong)control, (ulong)enable); }
        internal static void DISABLE_ALL_CONTROL_ACTIONS(int padIndex) { NativeInvoker.Invoke(0x5F4B6931816E599B, (ulong)padIndex); }
        internal static void ENABLE_ALL_CONTROL_ACTIONS(int padIndex) { NativeInvoker.Invoke(0xA5FFE9B05F199DE7, (ulong)padIndex); }
        internal static BOOL SWITCH_TO_INPUT_MAPPING_SCHEME_(char* name) { return NativeInvoker.Invoke<BOOL>(0x3D42B92563939375, (ulong)name); }
        internal static BOOL SWITCH_TO_INPUT_MAPPING_SCHEME_2_(char* name) { return NativeInvoker.Invoke<BOOL>(0x4683149ED1DDE7A1, (ulong)name); }
        internal static void RESET_INPUT_MAPPING_SCHEME_() { NativeInvoker.Invoke(0x643ED62D5EA3BEBD); } // 0x643ED62D5EA3BEBD 0x42140FF9 b323<, (ulong)643ED62D5EA3BEBD); }
        internal static void N_0x7F4724035FDCA1DD(int padIndex) { NativeInvoker.Invoke(0x7F4724035FDCA1DD, (ulong)padIndex); }
    }

    internal static unsafe class PATHFIND
    {
        internal static void SET_ROADS_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL nodeEnabled, BOOL unknown2) { NativeInvoker.Invoke(0xBF1A602B5BA52FEE, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)nodeEnabled, (ulong)unknown2); }
        internal static void SET_ROADS_IN_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float width, BOOL unknown1, BOOL unknown2, BOOL unknown3) { NativeInvoker.Invoke(0x1A5AA1208AF5DB59, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&width, (ulong)unknown1, (ulong)unknown2, (ulong)unknown3); }
        internal static void SET_PED_PATHS_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL unknown, Any p7) { NativeInvoker.Invoke(0x34F060F4BF92E018, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)unknown, (ulong)p7); }
        internal static BOOL GET_SAFE_COORD_FOR_PED(float x, float y, float z, BOOL onGround, Vector3* outPosition, int flags) { return NativeInvoker.Invoke<BOOL>(0xB61C8E878A4199CA, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)onGround, (ulong)outPosition, (ulong)flags); }
        internal static BOOL GET_CLOSEST_VEHICLE_NODE(float x, float y, float z, Vector3* outPosition, int nodeType, float p5, float p6) { return NativeInvoker.Invoke<BOOL>(0x240A18690AE96513, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)outPosition, (ulong)nodeType, *(uint*)&p5, *(uint*)&p6); }
        internal static BOOL GET_CLOSEST_MAJOR_VEHICLE_NODE(float x, float y, float z, Vector3* outPosition, float unknown1, int unknown2) { return NativeInvoker.Invoke<BOOL>(0x2EABE3B06F58C1BE, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)outPosition, *(uint*)&unknown1, (ulong)unknown2); }
        internal static BOOL GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(float x, float y, float z, Vector3* outPosition, float* outHeading, int nodeType, float p6, int p7) { return NativeInvoker.Invoke<BOOL>(0xFF071FB798B803B0, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)outPosition, (ulong)outHeading, (ulong)nodeType, *(uint*)&p6, (ulong)p7); }
        internal static BOOL GET_NTH_CLOSEST_VEHICLE_NODE(float x, float y, float z, int nthClosest, Vector3* outPosition, Any unknown1, Any unknown2, Any unknown3) { return NativeInvoker.Invoke<BOOL>(0xE50E52416CCF948B, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)nthClosest, (ulong)outPosition, (ulong)unknown1, (ulong)unknown2, (ulong)unknown3); }
        internal static int GET_NTH_CLOSEST_VEHICLE_NODE_ID(float x, float y, float z, int nth, int nodetype, float p5, float p6) { return NativeInvoker.Invoke<int>(0x22D7275A79FE8215, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)nth, (ulong)nodetype, *(uint*)&p5, *(uint*)&p6); }
        internal static BOOL GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING(float x, float y, float z, int nthClosest, Vector3* outPosition, float* outHeading, Any* unknown1, int unknown2, float unknown3, float unknown4) { return NativeInvoker.Invoke<BOOL>(0x80CA6A8B6C094CC4, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)nthClosest, (ulong)outPosition, (ulong)outHeading, (ulong)unknown1, (ulong)unknown2, *(uint*)&unknown3, *(uint*)&unknown4); }
        internal static int GET_NTH_CLOSEST_VEHICLE_NODE_ID_WITH_HEADING(float x, float y, float z, int nthClosest, Vector3* outPosition, float* outHeading, Any p6, float p7, float p8) { return NativeInvoker.Invoke<int>(0x6448050E9C2A7207, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)nthClosest, (ulong)outPosition, (ulong)outHeading, (ulong)p6, *(uint*)&p7, *(uint*)&p8); }
        internal static BOOL GET_NTH_CLOSEST_VEHICLE_NODE_FAVOUR_DIRECTION(float x, float y, float z, float desiredX, float desiredY, float desiredZ, int nthClosest, Vector3* outPosition, float* outHeading, int nodetype, float p10, Any p11) { return NativeInvoker.Invoke<BOOL>(0x45905BE8654AE067, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&desiredX, *(uint*)&desiredY, *(uint*)&desiredZ, (ulong)nthClosest, (ulong)outPosition, (ulong)outHeading, (ulong)nodetype, *(uint*)&p10, (ulong)p11); }
        internal static BOOL GET_VEHICLE_NODE_PROPERTIES(float x, float y, float z, int* density, int* flags) { return NativeInvoker.Invoke<BOOL>(0x0568566ACBB5DEDC, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)density, (ulong)flags); }
        internal static BOOL IS_VEHICLE_NODE_ID_VALID(int vehicleNodeId) { return NativeInvoker.Invoke<BOOL>(0x1EAF30FCFBF5AF74, (ulong)vehicleNodeId); }
        internal static void GET_VEHICLE_NODE_POSITION(int nodeId, Vector3* outPosition) { NativeInvoker.Invoke(0x703123E5E7D429C2, (ulong)nodeId, (ulong)outPosition); }
        internal static BOOL GET_VEHICLE_NODE_IS_GPS_ALLOWED(int nodeID) { return NativeInvoker.Invoke<BOOL>(0xA2AE5C478B96E3B6, (ulong)nodeID); }
        internal static BOOL GET_VEHICLE_NODE_IS_SWITCHED_OFF(int nodeID) { return NativeInvoker.Invoke<BOOL>(0x4F5070AA58F69279, (ulong)nodeID); }
        internal static Any GET_CLOSEST_ROAD(float x, float y, float z, float p3, int p4, Vector3* p5, Vector3* p6, Any* p7, Any* p8, float* p9, BOOL p10) { return NativeInvoker.Invoke<Any>(0x132F52BBA570FE92, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9, (ulong)p10); }
        internal static void SET_ALL_PATHS_CACHE_BOUNDINGSTRUCT_(BOOL toggle) { NativeInvoker.Invoke(0x228E5C6AD4D74BFD, (ulong)toggle); }
        internal static void SET_AI_GLOBAL_PATH_NODES_TYPE_(int type) { NativeInvoker.Invoke(0xF74B1FFA4A15FBEA, (ulong)type); }
        internal static BOOL ARE_NODES_LOADED_FOR_AREA(float x1, float y1, float x2, float y2) { return NativeInvoker.Invoke<BOOL>(0xF7B79A50B905A30D, *(uint*)&x1, *(uint*)&y1, *(uint*)&x2, *(uint*)&y2); }
        internal static BOOL REQUEST_PATHS_PREFER_ACCURATE_BOUNDINGSTRUCT_(float x1, float y1, float x2, float y2) { return NativeInvoker.Invoke<BOOL>(0x07FB139B592FA687, *(uint*)&x1, *(uint*)&y1, *(uint*)&x2, *(uint*)&y2); }
        internal static void SET_ROADS_BACK_TO_ORIGINAL(float p0, float p1, float p2, float p3, float p4, float p5, Any p6) { NativeInvoker.Invoke(0x1EE7063B80FFC77C, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, (ulong)p6); }
        internal static void SET_ROADS_BACK_TO_ORIGINAL_IN_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float width, Any p7) { NativeInvoker.Invoke(0x0027501B9F3B407E, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&width, (ulong)p7); }
        internal static void SET_AMBIENT_PED_RANGE_MULTIPLIER_THIS_FRAME(float multiplier) { NativeInvoker.Invoke(0x0B919E1FB47CC4E0, *(uint*)&multiplier); }
        internal static void N_0xAA76052DDA9BFC3E(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { NativeInvoker.Invoke(0xAA76052DDA9BFC3E, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static void SET_PED_PATHS_BACK_TO_ORIGINAL(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { NativeInvoker.Invoke(0xE04B48F2CC926253, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static BOOL GET_RANDOM_VEHICLE_NODE(float x, float y, float z, float radius, BOOL p4, BOOL p5, BOOL p6, Vector3* outPosition, int* nodeId) { return NativeInvoker.Invoke<BOOL>(0x93E0DB8440B73A7D, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)outPosition, (ulong)nodeId); }
        internal static void GET_STREET_NAME_AT_COORD(float x, float y, float z, Hash* streetName, Hash* crossingRoad) { NativeInvoker.Invoke(0x2EB41072B4C1E4C0, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)streetName, (ulong)crossingRoad); }
        internal static int GENERATE_DIRECTIONS_TO_COORD(float x, float y, float z, BOOL p3, int* direction, float* p5, float* distToNxJunction) { return NativeInvoker.Invoke<int>(0xF90125F1F79ECDF8, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)p3, (ulong)direction, (ulong)p5, (ulong)distToNxJunction); }
        internal static void SET_IGNORE_NO_GPS_FLAG(BOOL toggle) { NativeInvoker.Invoke(0x72751156E7678833, (ulong)toggle); }
        internal static void SET_IGNORE_SECONDARY_ROUTE_NODES_(BOOL toggle) { NativeInvoker.Invoke(0x1FC289A0C3FF470F, (ulong)toggle); }
        internal static void SET_GPS_DISABLED_ZONE(float x1, float y1, float z1, float x2, float y2, float z3) { NativeInvoker.Invoke(0xDC20483CD3DD5201, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z3); }
        internal static int GET_GPS_BLIP_ROUTE_LENGTH() { return NativeInvoker.Invoke<int>(0xBBB45C3CF5C8AA85); } // 0xBBB45C3CF5C8AA85 0x4B770634 b323, (ulong)BBB45C3CF5C8AA85); }
        internal static Any N_0xF3162836C28F9DA5(Any p0, Any p1, Any p2, Any p3) { return NativeInvoker.Invoke<Any>(0xF3162836C28F9DA5, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static BOOL GET_GPS_BLIP_ROUTE_FOUND() { return NativeInvoker.Invoke<BOOL>(0x869DAACBBE9FA006); } // 0x869DAACBBE9FA006 0x286F82CC b323, (ulong)869DAACBBE9FA006); }
        internal static BOOL GET_ROAD_SIDE_POINT_WITH_HEADING_(float x, float y, float z, float heading, Vector3* outPosition) { return NativeInvoker.Invoke<BOOL>(0xA0F8A7517A273C05, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&heading, (ulong)outPosition); }
        internal static BOOL GET_POINT_ON_ROAD_SIDE_(float x, float y, float z, int p3, Vector3* outPosition) { return NativeInvoker.Invoke<BOOL>(0x16F46FB18C8009E4, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)p3, (ulong)outPosition); }
        internal static BOOL IS_POINT_ON_ROAD(float x, float y, float z, Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x125BF4ABFC536B09, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)vehicle); }
        internal static int GET_NEXT_GPS_DISABLED_ZONE_INDEX() { return NativeInvoker.Invoke<int>(0xD3A6A0EF48823A8C); } // 0xD3A6A0EF48823A8C 0xBE92551F b323, (ulong)D3A6A0EF48823A8C); }
        internal static void SET_GPS_DISABLED_ZONE_AT_INDEX(float x1, float y1, float z1, float x2, float y2, float z2, int index) { NativeInvoker.Invoke(0xD0BC1C6FB18EE154, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)index); }
        internal static void CLEAR_GPS_DISABLED_ZONE_AT_INDEX(int index) { NativeInvoker.Invoke(0x2801D0012266DF07, (ulong)index); }
        internal static void ADD_NAVMESH_REQUIRED_REGION(float x, float y, float radius) { NativeInvoker.Invoke(0x387EAD7EE42F6685, *(uint*)&x, *(uint*)&y, *(uint*)&radius); }
        internal static void REMOVE_NAVMESH_REQUIRED_REGIONS() { NativeInvoker.Invoke(0x916F0A3CDEC3445E); } // 0x916F0A3CDEC3445E 0x637BB680 b323<, (ulong)916F0A3CDEC3445E); }
        internal static BOOL IS_NAVMESH_REQUIRED_REGION_OWNED_BY_ANY_THREAD_() { return NativeInvoker.Invoke<BOOL>(0x705A844002B39DC0); } // 0x705A844002B39DC0 b944, (ulong)705A844002B39DC0); }
        internal static void DISABLE_NAVMESH_IN_AREA(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { NativeInvoker.Invoke(0x4C8872D8CDBE1B8B, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static BOOL ARE_ALL_NAVMESH_REGIONS_LOADED() { return NativeInvoker.Invoke<BOOL>(0x8415D95B194A3AEA); } // 0x8415D95B194A3AEA 0x34C4E789 b323, (ulong)8415D95B194A3AEA); }
        internal static BOOL IS_NAVMESH_LOADED_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2) { return NativeInvoker.Invoke<BOOL>(0xF813C7E63F9062A5, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2); }
        internal static Any N_0x01708E8DD3FF8C65(float p0, float p1, float p2, float p3, float p4, float p5) { return NativeInvoker.Invoke<Any>(0x01708E8DD3FF8C65, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5); }
        internal static Any ADD_NAVMESH_BLOCKING_OBJECT(float p0, float p1, float p2, float p3, float p4, float p5, float p6, BOOL p7, Any p8) { return NativeInvoker.Invoke<Any>(0xFCD5C8E06E502F5A, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, (ulong)p7, (ulong)p8); }
        internal static void UPDATE_NAVMESH_BLOCKING_OBJECT(Any p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, Any p8) { NativeInvoker.Invoke(0x109E99373F290687, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, *(uint*)&p7, (ulong)p8); }
        internal static void REMOVE_NAVMESH_BLOCKING_OBJECT(Any p0) { NativeInvoker.Invoke(0x46399A7895957C0E, (ulong)p0); }
        internal static BOOL DOES_NAVMESH_BLOCKING_OBJECT_EXIST(Any p0) { return NativeInvoker.Invoke<BOOL>(0x0EAEB0DB4B132399, (ulong)p0); }
        internal static float GET_HEIGHTMAP_TOP_Z_FOR_POSITION_(float x, float y) { return NativeInvoker.Invoke<float>(0x29C24BFBED8AB8FB, *(uint*)&x, *(uint*)&y); }
        internal static float GET_HEIGHTMAP_TOP_Z_FOR_AREA_(float x1, float y1, float x2, float y2) { return NativeInvoker.Invoke<float>(0x8ABE8608576D9CE3, *(uint*)&x1, *(uint*)&y1, *(uint*)&x2, *(uint*)&y2); }
        internal static float GET_HEIGHTMAP_BOTTOM_Z_FOR_POSITION_(float x, float y) { return NativeInvoker.Invoke<float>(0x336511A34F2E5185, *(uint*)&x, *(uint*)&y); }
        internal static float GET_HEIGHTMAP_BOTTOM_Z_FOR_AREA_(float x1, float y1, float x2, float y2) { return NativeInvoker.Invoke<float>(0x3599D741C9AC6310, *(uint*)&x1, *(uint*)&y1, *(uint*)&x2, *(uint*)&y2); }
        internal static float CALCULATE_TRAVEL_DISTANCE_BETWEEN_POINTS(float x1, float y1, float z1, float x2, float y2, float z2) { return NativeInvoker.Invoke<float>(0xADD95C7005C4A197, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2); }
    }

    internal static unsafe class PED
    {
        internal static Ped CREATE_PED(int pedType, Hash modelHash, float x, float y, float z, float heading, BOOL isNetwork, BOOL bScriptHostPed) { return NativeInvoker.Invoke<Ped>(0xD49F9B0955C367DE, (ulong)pedType, (ulong)modelHash, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&heading, (ulong)isNetwork, (ulong)bScriptHostPed); }
        internal static void DELETE_PED(Ped* ped) { NativeInvoker.Invoke(0x9614299DCB53E54B, (ulong)ped); }
        internal static Ped CLONE_PED(Ped ped, BOOL isNetwork, BOOL bScriptHostPed, BOOL copyHeadBlendFlag) { return NativeInvoker.Invoke<Ped>(0xEF29A16337FACADB, (ulong)ped, (ulong)isNetwork, (ulong)bScriptHostPed, (ulong)copyHeadBlendFlag); }
        internal static Ped CLONE_PED_EX_(Ped ped, BOOL isNetwork, BOOL bScriptHostPed, BOOL copyHeadBlendFlag, BOOL p4) { return NativeInvoker.Invoke<Ped>(0x668FD40BCBA5DE48, (ulong)ped, (ulong)isNetwork, (ulong)bScriptHostPed, (ulong)copyHeadBlendFlag, (ulong)p4); }
        internal static void CLONE_PED_TO_TARGET(Ped ped, Ped targetPed) { NativeInvoker.Invoke(0xE952D6431689AD9A, (ulong)ped, (ulong)targetPed); }
        internal static void CLONE_PED_TO_TARGET_EX_(Ped ped, Ped targetPed, BOOL p2) { NativeInvoker.Invoke(0x148B08C2D2ACB884, (ulong)ped, (ulong)targetPed, (ulong)p2); }
        internal static BOOL IS_PED_IN_VEHICLE(Ped ped, Vehicle vehicle, BOOL atGetIn) { return NativeInvoker.Invoke<BOOL>(0xA3EE4A07279BB9DB, (ulong)ped, (ulong)vehicle, (ulong)atGetIn); }
        internal static BOOL IS_PED_IN_MODEL(Ped ped, Hash modelHash) { return NativeInvoker.Invoke<BOOL>(0x796D90EFB19AA332, (ulong)ped, (ulong)modelHash); }
        internal static BOOL IS_PED_IN_ANY_VEHICLE(Ped ped, BOOL atGetIn) { return NativeInvoker.Invoke<BOOL>(0x997ABD671D25CA0B, (ulong)ped, (ulong)atGetIn); }
        internal static BOOL IS_COP_PED_IN_AREA_3D(float x1, float y1, float z1, float x2, float y2, float z2) { return NativeInvoker.Invoke<BOOL>(0x16EC4839969F9F5E, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2); }
        internal static BOOL IS_PED_INJURED(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x84A2DD9AC37C35C1, (ulong)ped); }
        internal static BOOL IS_PED_HURT(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x5983BB449D7FDB12, (ulong)ped); }
        internal static BOOL IS_PED_FATALLY_INJURED(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xD839450756ED5A80, (ulong)ped); }
        internal static BOOL IS_PED_DEAD_OR_DYING(Ped ped, BOOL p1) { return NativeInvoker.Invoke<BOOL>(0x3317DEDB88C95038, (ulong)ped, (ulong)p1); }
        internal static BOOL IS_CONVERSATION_PED_DEAD(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xE0A0AEC214B1FABA, (ulong)ped); }
        internal static BOOL IS_PED_AIMING_FROM_COVER(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x3998B1276A3300E5, (ulong)ped); }
        internal static BOOL IS_PED_RELOADING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x24B100C68C645951, (ulong)ped); }
        internal static BOOL IS_PED_A_PLAYER(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x12534C348C6CB68B, (ulong)ped); }
        internal static Ped CREATE_PED_INSIDE_VEHICLE(Vehicle vehicle, int pedType, Hash modelHash, int seat, BOOL isNetwork, BOOL bScriptHostPed) { return NativeInvoker.Invoke<Ped>(0x7DD959874C1FD534, (ulong)vehicle, (ulong)pedType, (ulong)modelHash, (ulong)seat, (ulong)isNetwork, (ulong)bScriptHostPed); }
        internal static void SET_PED_DESIRED_HEADING(Ped ped, float heading) { NativeInvoker.Invoke(0xAA5A7ECE2AA8FE70, (ulong)ped, *(uint*)&heading); }
        internal static void FREEZE_PED_CAMERA_ROTATION_(Ped ped) { NativeInvoker.Invoke(0xFF287323B0E2C69A, (ulong)ped); }
        internal static BOOL IS_PED_FACING_PED(Ped ped, Ped otherPed, float angle) { return NativeInvoker.Invoke<BOOL>(0xD71649DB0A545AA3, (ulong)ped, (ulong)otherPed, *(uint*)&angle); }
        internal static BOOL IS_PED_IN_MELEE_COMBAT(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x4E209B2C1EAD5159, (ulong)ped); }
        internal static BOOL IS_PED_STOPPED(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x530944F6F4B8A214, (ulong)ped); }
        internal static BOOL IS_PED_SHOOTING_IN_AREA(Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, BOOL p7, BOOL p8) { return NativeInvoker.Invoke<BOOL>(0x7E9DFE24AC1E58EF, (ulong)ped, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)p7, (ulong)p8); }
        internal static BOOL IS_ANY_PED_SHOOTING_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL p6, BOOL p7) { return NativeInvoker.Invoke<BOOL>(0xA0D3D71EA1086C55, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)p6, (ulong)p7); }
        internal static BOOL IS_PED_SHOOTING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x34616828CD07F1A1, (ulong)ped); }
        internal static void SET_PED_ACCURACY(Ped ped, int accuracy) { NativeInvoker.Invoke(0x7AEFB85C1D49DEB6, (ulong)ped, (ulong)accuracy); }
        internal static int GET_PED_ACCURACY(Ped ped) { return NativeInvoker.Invoke<int>(0x37F4AD56ECBC0CD6, (ulong)ped); }
        internal static void N_0x87DDEB611B329A9C(float multiplier) { NativeInvoker.Invoke(0x87DDEB611B329A9C, *(uint*)&multiplier); }
        internal static BOOL IS_PED_MODEL(Ped ped, Hash modelHash) { return NativeInvoker.Invoke<BOOL>(0xC9D55B1A358A5BF7, (ulong)ped, (ulong)modelHash); }
        internal static void EXPLODE_PED_HEAD(Ped ped, Hash weaponHash) { NativeInvoker.Invoke(0x2D05CED3A38D0F3A, (ulong)ped, (ulong)weaponHash); }
        internal static void REMOVE_PED_ELEGANTLY(Ped* ped) { NativeInvoker.Invoke(0xAC6D445B994DF95E, (ulong)ped); }
        internal static void ADD_ARMOUR_TO_PED(Ped ped, int amount) { NativeInvoker.Invoke(0x5BA652A0CD14DF2F, (ulong)ped, (ulong)amount); }
        internal static void SET_PED_ARMOUR(Ped ped, int amount) { NativeInvoker.Invoke(0xCEA04D83135264CC, (ulong)ped, (ulong)amount); }
        internal static void SET_PED_INTO_VEHICLE(Ped ped, Vehicle vehicle, int seatIndex) { NativeInvoker.Invoke(0xF75B0D629E1C063D, (ulong)ped, (ulong)vehicle, (ulong)seatIndex); }
        internal static void SET_PED_ALLOW_VEHICLES_OVERRIDE(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x3C028C636A414ED9, (ulong)ped, (ulong)toggle); }
        internal static BOOL CAN_CREATE_RANDOM_PED(BOOL unk) { return NativeInvoker.Invoke<BOOL>(0x3E8349C08E4B82E4, (ulong)unk); }
        internal static Ped CREATE_RANDOM_PED(float posX, float posY, float posZ) { return NativeInvoker.Invoke<Ped>(0xB4AC7D0CF06BFE8F, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ); }
        internal static Ped CREATE_RANDOM_PED_AS_DRIVER(Vehicle vehicle, BOOL returnHandle) { return NativeInvoker.Invoke<Ped>(0x9B62392B474F44A0, (ulong)vehicle, (ulong)returnHandle); }
        internal static BOOL CAN_CREATE_RANDOM_DRIVER() { return NativeInvoker.Invoke<BOOL>(0xB8EB95E5B4E56978); } // 0xB8EB95E5B4E56978 0x99861609 b323, (ulong)B8EB95E5B4E56978); }
        internal static BOOL CAN_CREATE_RANDOM_BIKE_RIDER() { return NativeInvoker.Invoke<BOOL>(0xEACEEDA81751915C); } // 0xEACEEDA81751915C 0x7018BE31 b323, (ulong)EACEEDA81751915C); }
        internal static void SET_PED_MOVE_ANIMS_BLEND_OUT(Ped ped) { NativeInvoker.Invoke(0x9E8C908F41584ECD, (ulong)ped); }
        internal static void SET_PED_CAN_BE_DRAGGED_OUT(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xC1670E958EEE24E5, (ulong)ped, (ulong)toggle); }
        internal static void N_0xF2BEBCDFAFDAA19E(BOOL toggle) { NativeInvoker.Invoke(0xF2BEBCDFAFDAA19E, (ulong)toggle); }
        internal static BOOL IS_PED_MALE(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x6D9F5FAA7488BA46, (ulong)ped); }
        internal static BOOL IS_PED_HUMAN(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xB980061DA992779D, (ulong)ped); }
        internal static Vehicle GET_VEHICLE_PED_IS_IN(Ped ped, BOOL includeLastVehicle) { return NativeInvoker.Invoke<Vehicle>(0x9A9112A0FE9A4713, (ulong)ped, (ulong)includeLastVehicle); }
        internal static void RESET_PED_LAST_VEHICLE(Ped ped) { NativeInvoker.Invoke(0xBB8DE8CF6A8DD8BB, (ulong)ped); }
        internal static void SET_PED_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier) { NativeInvoker.Invoke(0x95E3D6257B166CF2, *(uint*)&multiplier); }
        internal static void SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME(float p0, float p1) { NativeInvoker.Invoke(0x7A556143A1C03898, *(uint*)&p0, *(uint*)&p1); }
        internal static void N_0x5A7F62FDA59759BD() { NativeInvoker.Invoke(0x5A7F62FDA59759BD); } // 0x5A7F62FDA59759BD 0xB48C0C04 b323<, (ulong)5A7F62FDA59759BD); }
        internal static void SET_SCRIPTED_CONVERSION_COORD_THIS_FRAME(float x, float y, float z) { NativeInvoker.Invoke(0x5086C7843552CF85, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void SET_PED_NON_CREATION_AREA(float x1, float y1, float z1, float x2, float y2, float z2) { NativeInvoker.Invoke(0xEE01041D559983EA, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2); }
        internal static void CLEAR_PED_NON_CREATION_AREA() { NativeInvoker.Invoke(0x2E05208086BA0651); } // 0x2E05208086BA0651 0x6F7043A3 b323<, (ulong)2E05208086BA0651); }
        internal static void INSTANTLY_FILL_PED_POPULATION() { NativeInvoker.Invoke(0x4759CC730F947C81); } // 0x4759CC730F947C81 0x8C555ADD b323<, (ulong)4759CC730F947C81); }
        internal static BOOL IS_PED_ON_MOUNT(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x460BC76A0E10655E, (ulong)ped); }
        internal static Ped GET_MOUNT(Ped ped) { return NativeInvoker.Invoke<Ped>(0xE7E11B8DCBED1058, (ulong)ped); }
        internal static BOOL IS_PED_ON_VEHICLE(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x67722AEB798E5FAB, (ulong)ped); }
        internal static BOOL IS_PED_ON_SPECIFIC_VEHICLE(Ped ped, Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xEC5F66E459AF3BB2, (ulong)ped, (ulong)vehicle); }
        internal static void SET_PED_MONEY(Ped ped, int amount) { NativeInvoker.Invoke(0xA9C8960E8684C1B5, (ulong)ped, (ulong)amount); }
        internal static int GET_PED_MONEY(Ped ped) { return NativeInvoker.Invoke<int>(0x3F69145BBA87BAE7, (ulong)ped); }
        internal static void N_0xFF4803BC019852D9(float p0, Any p1) { NativeInvoker.Invoke(0xFF4803BC019852D9, *(uint*)&p0, (ulong)p1); }
        internal static void SET_AMBIENT_PEDS_DROP_MONEY(BOOL p0) { NativeInvoker.Invoke(0x6B0E6172C9A4D902, (ulong)p0); }
        internal static void N_0x9911F4A24485F653(BOOL p0) { NativeInvoker.Invoke(0x9911F4A24485F653, (ulong)p0); }
        internal static void SET_PED_SUFFERS_CRITICAL_HITS(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xEBD76F2359F190AC, (ulong)ped, (ulong)toggle); }
        internal static void N_0xAFC976FD0580C7B3(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xAFC976FD0580C7B3, (ulong)ped, (ulong)toggle); }
        internal static BOOL IS_PED_SITTING_IN_VEHICLE(Ped ped, Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xA808AA1D79230FC2, (ulong)ped, (ulong)vehicle); }
        internal static BOOL IS_PED_SITTING_IN_ANY_VEHICLE(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x826AA586EDB9FEF8, (ulong)ped); }
        internal static BOOL IS_PED_ON_FOOT(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x01FEE67DB37F59B2, (ulong)ped); }
        internal static BOOL IS_PED_ON_ANY_BIKE(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x94495889E22C6479, (ulong)ped); }
        internal static BOOL IS_PED_PLANTING_BOMB(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xC70B5FAE151982D8, (ulong)ped); }
        internal static Vector3 GET_DEAD_PED_PICKUP_COORDS(Ped ped, float p1, float p2) { return NativeInvoker.Invoke<Vector3>(0xCD5003B097200F36, (ulong)ped, *(uint*)&p1, *(uint*)&p2); }
        internal static BOOL IS_PED_IN_ANY_BOAT(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x2E0E1C2B4F6CB339, (ulong)ped); }
        internal static BOOL IS_PED_IN_ANY_SUB(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xFBFC01CCFB35D99E, (ulong)ped); }
        internal static BOOL IS_PED_IN_ANY_HELI(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x298B91AE825E5705, (ulong)ped); }
        internal static BOOL IS_PED_IN_ANY_PLANE(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x5FFF4CFC74D8FB80, (ulong)ped); }
        internal static BOOL IS_PED_IN_FLYING_VEHICLE(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x9134873537FA419C, (ulong)ped); }
        internal static void SET_PED_DIES_IN_WATER(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x56CEF0AC79073BDE, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_DIES_IN_SINKING_VEHICLE(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xD718A22995E2B4BC, (ulong)ped, (ulong)toggle); }
        internal static int GET_PED_ARMOUR(Ped ped) { return NativeInvoker.Invoke<int>(0x9483AF821605B1D8, (ulong)ped); }
        internal static void SET_PED_STAY_IN_VEHICLE_WHEN_JACKED(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xEDF4079F9D54C9A1, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_CAN_BE_SHOT_IN_VEHICLE(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xC7EF1BA83230BA07, (ulong)ped, (ulong)toggle); }
        internal static BOOL GET_PED_LAST_DAMAGE_BONE(Ped ped, int* outBone) { return NativeInvoker.Invoke<BOOL>(0xD75960F6BD9EA49C, (ulong)ped, (ulong)outBone); }
        internal static void CLEAR_PED_LAST_DAMAGE_BONE(Ped ped) { NativeInvoker.Invoke(0x8EF6B7AC68E2F01B, (ulong)ped); }
        internal static void SET_AI_WEAPON_DAMAGE_MODIFIER(float value) { NativeInvoker.Invoke(0x1B1E2A40A65B8521, *(uint*)&value); }
        internal static void RESET_AI_WEAPON_DAMAGE_MODIFIER() { NativeInvoker.Invoke(0xEA16670E7BA4743C); } // 0xEA16670E7BA4743C 0x6E965420 b323<, (ulong)EA16670E7BA4743C); }
        internal static void SET_AI_MELEE_WEAPON_DAMAGE_MODIFIER(float modifier) { NativeInvoker.Invoke(0x66460DEDDD417254, *(uint*)&modifier); }
        internal static void RESET_AI_MELEE_WEAPON_DAMAGE_MODIFIER() { NativeInvoker.Invoke(0x46E56A7CD1D63C3F); } // 0x46E56A7CD1D63C3F 0x97886238 b323<, (ulong)46E56A7CD1D63C3F); }
        internal static void N_0x2F3C3D9F50681DE4(Any p0, BOOL p1) { NativeInvoker.Invoke(0x2F3C3D9F50681DE4, (ulong)p0, (ulong)p1); }
        internal static void SET_PED_CAN_BE_TARGETTED(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x63F58F7C80513AAD, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_CAN_BE_TARGETTED_BY_TEAM(Ped ped, int team, BOOL toggle) { NativeInvoker.Invoke(0xBF1CA77833E58F2C, (ulong)ped, (ulong)team, (ulong)toggle); }
        internal static void SET_PED_CAN_BE_TARGETTED_BY_PLAYER(Ped ped, Player player, BOOL toggle) { NativeInvoker.Invoke(0x66B57B72E0836A76, (ulong)ped, (ulong)player, (ulong)toggle); }
        internal static void N_0x061CB768363D6424(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x061CB768363D6424, (ulong)ped, (ulong)toggle); }
        internal static void N_0xFD325494792302D7(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xFD325494792302D7, (ulong)ped, (ulong)toggle); }
        internal static BOOL IS_PED_IN_ANY_POLICE_VEHICLE(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x0BD04E29640C9C12, (ulong)ped); }
        internal static void FORCE_PED_TO_OPEN_PARACHUTE(Ped ped) { NativeInvoker.Invoke(0x16E42E800B472221, (ulong)ped); }
        internal static BOOL IS_PED_IN_PARACHUTE_FREE_FALL(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x7DCE8BDA0F1C1200, (ulong)ped); }
        internal static BOOL IS_PED_FALLING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xFB92A102F1C4DFA3, (ulong)ped); }
        internal static BOOL IS_PED_JUMPING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xCEDABC5900A0BF97, (ulong)ped); }
        internal static Any N_0x412F1364FA066CFB(Any p0) { return NativeInvoker.Invoke<Any>(0x412F1364FA066CFB, (ulong)p0); }
        internal static Any N_0x451D05012CCEC234(Any p0) { return NativeInvoker.Invoke<Any>(0x451D05012CCEC234, (ulong)p0); }
        internal static BOOL IS_PED_CLIMBING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x53E8CB4F48BFE623, (ulong)ped); }
        internal static BOOL IS_PED_VAULTING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x117C70D1F5730B5E, (ulong)ped); }
        internal static BOOL IS_PED_DIVING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x5527B8246FEF9B11, (ulong)ped); }
        internal static BOOL IS_PED_JUMPING_OUT_OF_VEHICLE(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x433DDFFE2044B636, (ulong)ped); }
        internal static BOOL IS_PED_OPENING_A_DOOR_(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x26AF0E8E30BD2A2C, (ulong)ped); }
        internal static int GET_PED_PARACHUTE_STATE(Ped ped) { return NativeInvoker.Invoke<int>(0x79CFD9827CC979B6, (ulong)ped); }
        internal static int GET_PED_PARACHUTE_LANDING_TYPE(Ped ped) { return NativeInvoker.Invoke<int>(0x8B9F1FC6AE8166C0, (ulong)ped); }
        internal static void SET_PED_PARACHUTE_TINT_INDEX(Ped ped, int tintIndex) { NativeInvoker.Invoke(0x333FC8DB079B7186, (ulong)ped, (ulong)tintIndex); }
        internal static void GET_PED_PARACHUTE_TINT_INDEX(Ped ped, int* outTintIndex) { NativeInvoker.Invoke(0xEAF5F7E5AE7C6C9D, (ulong)ped, (ulong)outTintIndex); }
        internal static void SET_PED_RESERVE_PARACHUTE_TINT_INDEX(Ped ped, Any p1) { NativeInvoker.Invoke(0xE88DA0751C22A2AD, (ulong)ped, (ulong)p1); }
        internal static Object CREATE_PARACHUTE_BAG_OBJECT(Ped ped, BOOL p1, BOOL p2) { return NativeInvoker.Invoke<Object>(0x8C4F3BF23B6237DB, (ulong)ped, (ulong)p1, (ulong)p2); }
        internal static void SET_PED_DUCKING(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x030983CA930B692D, (ulong)ped, (ulong)toggle); }
        internal static BOOL IS_PED_DUCKING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xD125AE748725C6BC, (ulong)ped); }
        internal static BOOL IS_PED_IN_ANY_TAXI(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x6E575D6A898AB852, (ulong)ped); }
        internal static void SET_PED_ID_RANGE(Ped ped, float value) { NativeInvoker.Invoke(0xF107E836A70DCE05, (ulong)ped, *(uint*)&value); }
        internal static void SET_PED_HIGHLY_PERCEPTIVE(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x52D59AB61DDC05DD, (ulong)ped, (ulong)toggle); }
        internal static void N_0x2F074C904D85129E(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { NativeInvoker.Invoke(0x2F074C904D85129E, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static void N_0xEC4B4B3B9908052A(Ped ped, float unk) { NativeInvoker.Invoke(0xEC4B4B3B9908052A, (ulong)ped, *(uint*)&unk); }
        internal static void N_0x733C87D4CE22BEA2(Any p0) { NativeInvoker.Invoke(0x733C87D4CE22BEA2, (ulong)p0); }
        internal static void SET_PED_SEEING_RANGE(Ped ped, float value) { NativeInvoker.Invoke(0xF29CF591C4BF6CEE, (ulong)ped, *(uint*)&value); }
        internal static void SET_PED_HEARING_RANGE(Ped ped, float value) { NativeInvoker.Invoke(0x33A8F7F7D5F7F33C, (ulong)ped, *(uint*)&value); }
        internal static void SET_PED_VISUAL_FIELD_MIN_ANGLE(Ped ped, float value) { NativeInvoker.Invoke(0x2DB492222FB21E26, (ulong)ped, *(uint*)&value); }
        internal static void SET_PED_VISUAL_FIELD_MAX_ANGLE(Ped ped, float value) { NativeInvoker.Invoke(0x70793BDCA1E854D4, (ulong)ped, *(uint*)&value); }
        internal static void SET_PED_VISUAL_FIELD_MIN_ELEVATION_ANGLE(Ped ped, float angle) { NativeInvoker.Invoke(0x7A276EB2C224D70F, (ulong)ped, *(uint*)&angle); }
        internal static void SET_PED_VISUAL_FIELD_MAX_ELEVATION_ANGLE(Ped ped, float angle) { NativeInvoker.Invoke(0x78D0B67629D75856, (ulong)ped, *(uint*)&angle); }
        internal static void SET_PED_VISUAL_FIELD_PERIPHERAL_RANGE(Ped ped, float range) { NativeInvoker.Invoke(0x9C74B0BC831B753A, (ulong)ped, *(uint*)&range); }
        internal static void SET_PED_VISUAL_FIELD_CENTER_ANGLE(Ped ped, float angle) { NativeInvoker.Invoke(0x3B6405E8AB34A907, (ulong)ped, *(uint*)&angle); }
        internal static float GET_PED_VISUAL_FIELD_CENTER_ANGLE_(Ped ped) { return NativeInvoker.Invoke<float>(0xEF2C71A32CAD5FBD, (ulong)ped); }
        internal static void SET_PED_STEALTH_MOVEMENT(Ped ped, BOOL p1, char* action) { NativeInvoker.Invoke(0x88CBB5CEB96B7BD2, (ulong)ped, (ulong)p1, (ulong)action); }
        internal static BOOL GET_PED_STEALTH_MOVEMENT(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x7C2AC9CA66575FBF, (ulong)ped); }
        internal static int CREATE_GROUP(int unused) { return NativeInvoker.Invoke<int>(0x90370EBE0FEE1A3D, (ulong)unused); }
        internal static void SET_PED_AS_GROUP_LEADER(Ped ped, int groupId) { NativeInvoker.Invoke(0x2A7819605465FBCE, (ulong)ped, (ulong)groupId); }
        internal static void SET_PED_AS_GROUP_MEMBER(Ped ped, int groupId) { NativeInvoker.Invoke(0x9F3480FE65DB31B5, (ulong)ped, (ulong)groupId); }
        internal static void SET_PED_CAN_TELEPORT_TO_GROUP_LEADER(Ped pedHandle, int groupHandle, BOOL toggle) { NativeInvoker.Invoke(0x2E2F4240B3F24647, (ulong)pedHandle, (ulong)groupHandle, (ulong)toggle); }
        internal static void REMOVE_GROUP(int groupId) { NativeInvoker.Invoke(0x8EB2F69076AF7053, (ulong)groupId); }
        internal static void REMOVE_PED_FROM_GROUP(Ped ped) { NativeInvoker.Invoke(0xED74007FFB146BC2, (ulong)ped); }
        internal static BOOL IS_PED_GROUP_MEMBER(Ped ped, int groupId) { return NativeInvoker.Invoke<BOOL>(0x9BB01E3834671191, (ulong)ped, (ulong)groupId); }
        internal static BOOL IS_PED_HANGING_ON_TO_VEHICLE(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x1C86D8AEF8254B78, (ulong)ped); }
        internal static void SET_GROUP_SEPARATION_RANGE(int groupHandle, float separationRange) { NativeInvoker.Invoke(0x4102C7858CFEE4E4, (ulong)groupHandle, *(uint*)&separationRange); }
        internal static void SET_PED_MIN_GROUND_TIME_FOR_STUNGUN(Ped ped, int ms) { NativeInvoker.Invoke(0xFA0675AB151073FA, (ulong)ped, (ulong)ms); }
        internal static BOOL IS_PED_PRONE(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xD6A86331A537A7B9, (ulong)ped); }
        internal static BOOL IS_PED_IN_COMBAT(Ped ped, Ped target) { return NativeInvoker.Invoke<BOOL>(0x4859F1FC66A6278E, (ulong)ped, (ulong)target); }
        internal static Entity GET_PED_TASK_COMBAT_TARGET_(Ped ped, Any p1) { return NativeInvoker.Invoke<Entity>(0x32C27A11307B01CC, (ulong)ped, (ulong)p1); }
        internal static BOOL CAN_PED_IN_COMBAT_SEE_TARGET(Ped ped, Ped target) { return NativeInvoker.Invoke<BOOL>(0xEAD42DE3610D0721, (ulong)ped, (ulong)target); }
        internal static BOOL IS_PED_DOING_DRIVEBY(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xB2C086CC1BF8F2BF, (ulong)ped); }
        internal static BOOL IS_PED_JACKING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x4AE4FF911DFB61DA, (ulong)ped); }
        internal static BOOL IS_PED_BEING_JACKED(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x9A497FE2DF198913, (ulong)ped); }
        internal static BOOL IS_PED_BEING_STUNNED(Ped ped, int p1) { return NativeInvoker.Invoke<BOOL>(0x4FBACCE3B4138EE8, (ulong)ped, (ulong)p1); }
        internal static Ped GET_PEDS_JACKER(Ped ped) { return NativeInvoker.Invoke<Ped>(0x9B128DC36C1E04CF, (ulong)ped); }
        internal static Ped GET_JACK_TARGET(Ped ped) { return NativeInvoker.Invoke<Ped>(0x5486A79D9FBD342D, (ulong)ped); }
        internal static BOOL IS_PED_FLEEING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xBBCCE00B381F8482, (ulong)ped); }
        internal static BOOL IS_PED_IN_COVER(Ped ped, BOOL exceptUseWeapon) { return NativeInvoker.Invoke<BOOL>(0x60DFD0691A170B88, (ulong)ped, (ulong)exceptUseWeapon); }
        internal static BOOL IS_PED_IN_COVER_FACING_LEFT(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x845333B3150583AB, (ulong)ped); }
        internal static BOOL IS_PED_IN_HIGH_COVER(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x6A03BF943D767C93, (ulong)ped); }
        internal static BOOL IS_PED_GOING_INTO_COVER(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x9F65DBC537E59AD5, (ulong)ped); }
        internal static Any SET_PED_PINNED_DOWN(Ped ped, BOOL pinned, int i) { return NativeInvoker.Invoke<Any>(0xAAD6D1ACF08F4612, (ulong)ped, (ulong)pinned, (ulong)i); }
        internal static int GET_SEAT_PED_IS_TRYING_TO_ENTER(Ped ped) { return NativeInvoker.Invoke<int>(0x6F4C85ACD641BCD2, (ulong)ped); }
        internal static Vehicle GET_VEHICLE_PED_IS_TRYING_TO_ENTER(Ped ped) { return NativeInvoker.Invoke<Vehicle>(0x814FA8BE5449445D, (ulong)ped); }
        internal static Entity GET_PED_SOURCE_OF_DEATH(Ped ped) { return NativeInvoker.Invoke<Entity>(0x93C8B64DEB84728C, (ulong)ped); }
        internal static Hash GET_PED_CAUSE_OF_DEATH(Ped ped) { return NativeInvoker.Invoke<Hash>(0x16FFE42AB2D2DC59, (ulong)ped); }
        internal static int GET_PED_TIME_OF_DEATH(Ped ped) { return NativeInvoker.Invoke<int>(0x1E98817B311AE98A, (ulong)ped); }
        internal static int N_0x5407B7288D0478B7(Any p0) { return NativeInvoker.Invoke<int>(0x5407B7288D0478B7, (ulong)p0); }
        internal static Any N_0x336B3D200AB007CB(Any p0, float p1, float p2, float p3, float p4) { return NativeInvoker.Invoke<Any>(0x336B3D200AB007CB, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4); }
        internal static void SET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH(Ped ped, Hash hash) { NativeInvoker.Invoke(0xADB3F206518799E8, (ulong)ped, (ulong)hash); }
        internal static void SET_PED_RELATIONSHIP_GROUP_HASH(Ped ped, Hash hash) { NativeInvoker.Invoke(0xC80A74AC829DDD92, (ulong)ped, (ulong)hash); }
        internal static void SET_RELATIONSHIP_BETWEEN_GROUPS(int relationship, Hash group1, Hash group2) { NativeInvoker.Invoke(0xBF25EB89375A37AD, (ulong)relationship, (ulong)group1, (ulong)group2); }
        internal static void CLEAR_RELATIONSHIP_BETWEEN_GROUPS(int relationship, Hash group1, Hash group2) { NativeInvoker.Invoke(0x5E29243FB56FC6D4, (ulong)relationship, (ulong)group1, (ulong)group2); }
        internal static Any ADD_RELATIONSHIP_GROUP(char* name, Hash* groupHash) { return NativeInvoker.Invoke<Any>(0xF372BC22FCB88606, (ulong)name, (ulong)groupHash); }
        internal static void REMOVE_RELATIONSHIP_GROUP(Hash groupHash) { NativeInvoker.Invoke(0xB6BA2444AB393DA2, (ulong)groupHash); }
        internal static BOOL DOES_RELATIONSHIP_GROUP_EXIST_(Hash groupHash) { return NativeInvoker.Invoke<BOOL>(0xCC6E3B6BB69501F1, (ulong)groupHash); }
        internal static int GET_RELATIONSHIP_BETWEEN_PEDS(Ped ped1, Ped ped2) { return NativeInvoker.Invoke<int>(0xEBA5AD3A0EAF7121, (ulong)ped1, (ulong)ped2); }
        internal static Hash GET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH(Ped ped) { return NativeInvoker.Invoke<Hash>(0x42FDD0F017B1E38E, (ulong)ped); }
        internal static Hash GET_PED_RELATIONSHIP_GROUP_HASH(Ped ped) { return NativeInvoker.Invoke<Hash>(0x7DBDD04862D95F04, (ulong)ped); }
        internal static int GET_RELATIONSHIP_BETWEEN_GROUPS(Hash group1, Hash group2) { return NativeInvoker.Invoke<int>(0x9E6B70061662AE5C, (ulong)group1, (ulong)group2); }
        internal static void SET_RELATIONSHIP_GROUP_DONT_AFFECT_WANTED_LEVEL_(Hash group, BOOL p1) { NativeInvoker.Invoke(0x5615E0C5EB2BC6E2, (ulong)group, (ulong)p1); }
        internal static void N_0xAD27D957598E49E9(Ped ped, Any p1, float p2, Hash hash, Any p4, Any p5) { NativeInvoker.Invoke(0xAD27D957598E49E9, (ulong)ped, (ulong)p1, *(uint*)&p2, (ulong)hash, (ulong)p4, (ulong)p5); }
        internal static void SET_PED_CAN_BE_TARGETED_WITHOUT_LOS(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x4328652AE5769C71, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_TO_INFORM_RESPECTED_FRIENDS(Ped ped, float radius, int maxFriends) { NativeInvoker.Invoke(0x112942C6E708F70B, (ulong)ped, *(uint*)&radius, (ulong)maxFriends); }
        internal static BOOL IS_PED_RESPONDING_TO_EVENT(Ped ped, Any @event) { return NativeInvoker.Invoke<BOOL>(0x625B774D75C87068, (ulong)ped, (ulong)@event); }
        internal static BOOL GET_PED_EVENT_DATA_(Ped ped, int @eventType, Any* outData) { return NativeInvoker.Invoke<BOOL>(0xBA656A3BB01BDEA3, (ulong)ped, (ulong)@eventType, (ulong)outData); }
        internal static void SET_PED_FIRING_PATTERN(Ped ped, Hash patternHash) { NativeInvoker.Invoke(0x9AC577F5A12AD8A9, (ulong)ped, (ulong)patternHash); }
        internal static void SET_PED_SHOOT_RATE(Ped ped, int shootRate) { NativeInvoker.Invoke(0x614DA022990752DC, (ulong)ped, (ulong)shootRate); }
        internal static void SET_COMBAT_FLOAT(Ped ped, int combatType, float p2) { NativeInvoker.Invoke(0xFF41B4B141ED981C, (ulong)ped, (ulong)combatType, *(uint*)&p2); }
        internal static float GET_COMBAT_FLOAT(Ped ped, int p1) { return NativeInvoker.Invoke<float>(0x52DFF8A10508090A, (ulong)ped, (ulong)p1); }
        internal static void GET_GROUP_SIZE(int groupID, Any* unknown, int* sizeInMembers) { NativeInvoker.Invoke(0x8DE69FE35CA09A45, (ulong)groupID, (ulong)unknown, (ulong)sizeInMembers); }
        internal static BOOL DOES_GROUP_EXIST(int groupId) { return NativeInvoker.Invoke<BOOL>(0x7C6B0C22F9F40BBE, (ulong)groupId); }
        internal static int GET_PED_GROUP_INDEX(Ped ped) { return NativeInvoker.Invoke<int>(0xF162E133B4E7A675, (ulong)ped); }
        internal static BOOL IS_PED_IN_GROUP(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x5891CAC5D4ACFF74, (ulong)ped); }
        internal static Player GET_PLAYER_PED_IS_FOLLOWING(Ped ped) { return NativeInvoker.Invoke<Player>(0x6A3975DEA89F9A17, (ulong)ped); }
        internal static void SET_GROUP_FORMATION(int groupId, int formationType) { NativeInvoker.Invoke(0xCE2F5FC3AF7E8C1E, (ulong)groupId, (ulong)formationType); }
        internal static void SET_GROUP_FORMATION_SPACING(int groupId, float p1, float p2, float p3) { NativeInvoker.Invoke(0x1D9D45004C28C916, (ulong)groupId, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3); }
        internal static void RESET_GROUP_FORMATION_DEFAULT_SPACING(int groupHandle) { NativeInvoker.Invoke(0x63DAB4CCB3273205, (ulong)groupHandle); }
        internal static Vehicle GET_VEHICLE_PED_IS_USING(Ped ped) { return NativeInvoker.Invoke<Vehicle>(0x6094AD011A2EA87D, (ulong)ped); }
        internal static Vehicle GET_VEHICLE_PED_IS_ENTERING(Ped ped) { return NativeInvoker.Invoke<Vehicle>(0xF92691AED837A5FC, (ulong)ped); }
        internal static void SET_PED_GRAVITY(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x9FF447B6B6AD960A, (ulong)ped, (ulong)toggle); }
        internal static void APPLY_DAMAGE_TO_PED(Ped ped, int damageAmount, BOOL p2, Any p3) { NativeInvoker.Invoke(0x697157CED63F18D4, (ulong)ped, (ulong)damageAmount, (ulong)p2, (ulong)p3); }
        internal static int GET_TIME_OF_LAST_PED_WEAPON_DAMAGE_(Ped ped, Hash weaponHash) { return NativeInvoker.Invoke<int>(0x36B77BB84687C318, (ulong)ped, (ulong)weaponHash); }
        internal static void SET_PED_ALLOWED_TO_DUCK(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xDA1F1B7BE1A8766F, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_NEVER_LEAVES_GROUP(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x3DBFC55D5C9BB447, (ulong)ped, (ulong)toggle); }
        internal static int GET_PED_TYPE(Ped ped) { return NativeInvoker.Invoke<int>(0xFF059E1E4C01E63C, (ulong)ped); }
        internal static void SET_PED_AS_COP(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xBB03C38DD3FB7FFD, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_MAX_HEALTH(Ped ped, int value) { NativeInvoker.Invoke(0xF5F6378C4F3419D3, (ulong)ped, (ulong)value); }
        internal static int GET_PED_MAX_HEALTH(Ped ped) { return NativeInvoker.Invoke<int>(0x4700A416E8324EF3, (ulong)ped); }
        internal static void SET_PED_MAX_TIME_IN_WATER(Ped ped, float value) { NativeInvoker.Invoke(0x43C851690662113D, (ulong)ped, *(uint*)&value); }
        internal static void SET_PED_MAX_TIME_UNDERWATER(Ped ped, float value) { NativeInvoker.Invoke(0x6BA428C528D9E522, (ulong)ped, *(uint*)&value); }
        internal static void N_0x2735233A786B1BEF(Ped ped, float p1) { NativeInvoker.Invoke(0x2735233A786B1BEF, (ulong)ped, *(uint*)&p1); }
        internal static void SET_PED_VEHICLE_FORCED_SEAT_USAGE(Ped ped, Vehicle vehicle, int seatIndex, int flags, Any p4) { NativeInvoker.Invoke(0x952F06BEECD775CC, (ulong)ped, (ulong)vehicle, (ulong)seatIndex, (ulong)flags, (ulong)p4); }
        internal static void CLEAR_ALL_PED_VEHICLE_FORCED_SEAT_USAGE(Ped ped) { NativeInvoker.Invoke(0xE6CA85E7259CE16B, (ulong)ped); }
        internal static void N_0xB282749D5E028163(Any p0, Any p1) { NativeInvoker.Invoke(0xB282749D5E028163, (ulong)p0, (ulong)p1); }
        internal static void SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE(Ped ped, int state) { NativeInvoker.Invoke(0x7A6535691B477C48, (ulong)ped, (ulong)state); }
        internal static BOOL CAN_KNOCK_PED_OFF_VEHICLE(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x51AC07A44D4F5B8A, (ulong)ped); }
        internal static void KNOCK_PED_OFF_VEHICLE(Ped ped) { NativeInvoker.Invoke(0x45BBCBA77C29A841, (ulong)ped); }
        internal static void SET_PED_COORDS_NO_GANG(Ped ped, float posX, float posY, float posZ) { NativeInvoker.Invoke(0x87052FE446E07247, (ulong)ped, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ); }
        internal static Ped GET_PED_AS_GROUP_MEMBER(int groupID, int memberNumber) { return NativeInvoker.Invoke<Ped>(0x51455483CF23ED97, (ulong)groupID, (ulong)memberNumber); }
        internal static Ped GET_PED_AS_GROUP_LEADER(int groupID) { return NativeInvoker.Invoke<Ped>(0x5CCE68DBD5FE93EC, (ulong)groupID); }
        internal static void SET_PED_KEEP_TASK(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x971D38760FBC02EF, (ulong)ped, (ulong)toggle); }
        internal static void N_0x49E50BDB8BA4DAB2(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x49E50BDB8BA4DAB2, (ulong)ped, (ulong)toggle); }
        internal static BOOL IS_PED_SWIMMING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x9DE327631295B4C2, (ulong)ped); }
        internal static BOOL IS_PED_SWIMMING_UNDER_WATER(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xC024869A53992F34, (ulong)ped); }
        internal static void SET_PED_COORDS_KEEP_VEHICLE(Ped ped, float posX, float posY, float posZ) { NativeInvoker.Invoke(0x9AFEFF481A85AB2E, (ulong)ped, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ); }
        internal static void SET_PED_DIES_IN_VEHICLE(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x2A30922C90C9B42C, (ulong)ped, (ulong)toggle); }
        internal static void SET_CREATE_RANDOM_COPS(BOOL toggle) { NativeInvoker.Invoke(0x102E68B2024D536D, (ulong)toggle); }
        internal static void SET_CREATE_RANDOM_COPS_NOT_ON_SCENARIOS(BOOL toggle) { NativeInvoker.Invoke(0x8A4986851C4EF6E7, (ulong)toggle); }
        internal static void SET_CREATE_RANDOM_COPS_ON_SCENARIOS(BOOL toggle) { NativeInvoker.Invoke(0x444CB7D7DBE6973D, (ulong)toggle); }
        internal static BOOL CAN_CREATE_RANDOM_COPS() { return NativeInvoker.Invoke<BOOL>(0x5EE2CAFF7F17770D); } // 0x5EE2CAFF7F17770D 0xAA73DAD9 b323, (ulong)5EE2CAFF7F17770D); }
        internal static void SET_PED_AS_ENEMY(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x02A0C9720B854BFA, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_CAN_SMASH_GLASS(Ped ped, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x1CCE141467FF42A2, (ulong)ped, (ulong)p1, (ulong)p2); }
        internal static BOOL IS_PED_IN_ANY_TRAIN(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x6F972C1AB75A1ED0, (ulong)ped); }
        internal static BOOL IS_PED_GETTING_INTO_A_VEHICLE(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xBB062B2B5722478E, (ulong)ped); }
        internal static BOOL IS_PED_TRYING_TO_ENTER_A_LOCKED_VEHICLE(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x44D28D5DDFE5F68C, (ulong)ped); }
        internal static void SET_ENABLE_HANDCUFFS(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xDF1AF8B5D56542FA, (ulong)ped, (ulong)toggle); }
        internal static void SET_ENABLE_BOUND_ANKLES(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xC52E0F855C58FC2E, (ulong)ped, (ulong)toggle); }
        internal static void SET_ENABLE_SCUBA(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xF99F62004024D506, (ulong)ped, (ulong)toggle); }
        internal static void SET_CAN_ATTACK_FRIENDLY(Ped ped, BOOL toggle, BOOL p2) { NativeInvoker.Invoke(0xB3B1CB349FF9C75D, (ulong)ped, (ulong)toggle, (ulong)p2); }
        internal static int GET_PED_ALERTNESS(Ped ped) { return NativeInvoker.Invoke<int>(0xF6AA118530443FD2, (ulong)ped); }
        internal static void SET_PED_ALERTNESS(Ped ped, int value) { NativeInvoker.Invoke(0xDBA71115ED9941A6, (ulong)ped, (ulong)value); }
        internal static void SET_PED_GET_OUT_UPSIDE_DOWN_VEHICLE(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xBC0ED94165A48BC2, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_MOVEMENT_CLIPSET(Ped ped, char* clipSet, float transitionSpeed) { NativeInvoker.Invoke(0xAF8A94EDE7712BEF, (ulong)ped, (ulong)clipSet, *(uint*)&transitionSpeed); }
        internal static void RESET_PED_MOVEMENT_CLIPSET(Ped ped, float p1) { NativeInvoker.Invoke(0xAA74EC0CB0AAEA2C, (ulong)ped, *(uint*)&p1); }
        internal static void SET_PED_STRAFE_CLIPSET(Ped ped, char* clipSet) { NativeInvoker.Invoke(0x29A28F3F8CF6D854, (ulong)ped, (ulong)clipSet); }
        internal static void RESET_PED_STRAFE_CLIPSET(Ped ped) { NativeInvoker.Invoke(0x20510814175EA477, (ulong)ped); }
        internal static void SET_PED_WEAPON_MOVEMENT_CLIPSET(Ped ped, char* clipSet) { NativeInvoker.Invoke(0x2622E35B77D3ACA2, (ulong)ped, (ulong)clipSet); }
        internal static void RESET_PED_WEAPON_MOVEMENT_CLIPSET(Ped ped) { NativeInvoker.Invoke(0x97B0DB5B4AA74E77, (ulong)ped); }
        internal static void SET_PED_DRIVE_BY_CLIPSET_OVERRIDE(Ped ped, char* clipset) { NativeInvoker.Invoke(0xED34AB6C5CB36520, (ulong)ped, (ulong)clipset); }
        internal static void CLEAR_PED_DRIVE_BY_CLIPSET_OVERRIDE(Ped ped) { NativeInvoker.Invoke(0x4AFE3690D7E0B5AC, (ulong)ped); }
        internal static void SET_PED_COVER_CLIPSET_OVERRIDE_(Ped ped, char* p1) { NativeInvoker.Invoke(0x9DBA107B4937F809, (ulong)ped, (ulong)p1); }
        internal static void CLEAR_PED_COVER_CLIPSET_OVERRIDE_(Ped ped) { NativeInvoker.Invoke(0xC79196DCB36F6121, (ulong)ped); }
        internal static void N_0x80054D7FCC70EEC6(Ped ped) { NativeInvoker.Invoke(0x80054D7FCC70EEC6, (ulong)ped); }
        internal static void SET_PED_IN_VEHICLE_CONTEXT(Ped ped, Hash context) { NativeInvoker.Invoke(0x530071295899A8C6, (ulong)ped, (ulong)context); }
        internal static void RESET_PED_IN_VEHICLE_CONTEXT(Ped ped) { NativeInvoker.Invoke(0x22EF8FF8778030EB, (ulong)ped); }
        internal static BOOL IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM(Ped ped, char* animDict, char* anim) { return NativeInvoker.Invoke<BOOL>(0x6EC47A344923E1ED, (ulong)ped, (ulong)animDict, (ulong)anim); }
        internal static void SET_PED_ALTERNATE_WALK_ANIM(Ped ped, char* animDict, char* animName, float p3, BOOL p4) { NativeInvoker.Invoke(0x6C60394CB4F75E9A, (ulong)ped, (ulong)animDict, (ulong)animName, *(uint*)&p3, (ulong)p4); }
        internal static void CLEAR_PED_ALTERNATE_WALK_ANIM(Ped ped, float p1) { NativeInvoker.Invoke(0x8844BBFCE30AA9E9, (ulong)ped, *(uint*)&p1); }
        internal static void SET_PED_ALTERNATE_MOVEMENT_ANIM(Ped ped, int stance, char* animDictionary, char* animationName, float p4, BOOL p5) { NativeInvoker.Invoke(0x90A43CC281FFAB46, (ulong)ped, (ulong)stance, (ulong)animDictionary, (ulong)animationName, *(uint*)&p4, (ulong)p5); }
        internal static void CLEAR_PED_ALTERNATE_MOVEMENT_ANIM(Ped ped, int stance, float p2) { NativeInvoker.Invoke(0xD8D19675ED5FBDCE, (ulong)ped, (ulong)stance, *(uint*)&p2); }
        internal static void SET_PED_GESTURE_GROUP(Ped ped, char* animGroupGesture) { NativeInvoker.Invoke(0xDDF803377F94AAA8, (ulong)ped, (ulong)animGroupGesture); }
        internal static Vector3 GET_ANIM_INITIAL_OFFSET_POSITION(char* animDict, char* animName, float x, float y, float z, float xRot, float yRot, float zRot, float p8, int p9) { return NativeInvoker.Invoke<Vector3>(0xBE22B26DD764C040, (ulong)animDict, (ulong)animName, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&xRot, *(uint*)&yRot, *(uint*)&zRot, *(uint*)&p8, (ulong)p9); }
        internal static Vector3 GET_ANIM_INITIAL_OFFSET_ROTATION(char* animDict, char* animName, float x, float y, float z, float xRot, float yRot, float zRot, float p8, int p9) { return NativeInvoker.Invoke<Vector3>(0x4B805E6046EE9E47, (ulong)animDict, (ulong)animName, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&xRot, *(uint*)&yRot, *(uint*)&zRot, *(uint*)&p8, (ulong)p9); }
        internal static int GET_PED_DRAWABLE_VARIATION(Ped ped, int componentId) { return NativeInvoker.Invoke<int>(0x67F3780DD425D4FC, (ulong)ped, (ulong)componentId); }
        internal static int GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS(Ped ped, int componentId) { return NativeInvoker.Invoke<int>(0x27561561732A7842, (ulong)ped, (ulong)componentId); }
        internal static int GET_PED_TEXTURE_VARIATION(Ped ped, int componentId) { return NativeInvoker.Invoke<int>(0x04A355E041E004E6, (ulong)ped, (ulong)componentId); }
        internal static int GET_NUMBER_OF_PED_TEXTURE_VARIATIONS(Ped ped, int componentId, int drawableId) { return NativeInvoker.Invoke<int>(0x8F7156A3142A6BAD, (ulong)ped, (ulong)componentId, (ulong)drawableId); }
        internal static int GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS(Ped ped, int propId) { return NativeInvoker.Invoke<int>(0x5FAF9754E789FB47, (ulong)ped, (ulong)propId); }
        internal static int GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS(Ped ped, int propId, int drawableId) { return NativeInvoker.Invoke<int>(0xA6E7F1CEB523E171, (ulong)ped, (ulong)propId, (ulong)drawableId); }
        internal static int GET_PED_PALETTE_VARIATION(Ped ped, int componentId) { return NativeInvoker.Invoke<int>(0xE3DD5F2A84B42281, (ulong)ped, (ulong)componentId); }
        internal static BOOL N_0x9E30E91FB03A2CAF(Any* p0, Any* p1) { return NativeInvoker.Invoke<BOOL>(0x9E30E91FB03A2CAF, (ulong)p0, (ulong)p1); }
        internal static Any N_0x1E77FA7A62EE6C4C(Any p0) { return NativeInvoker.Invoke<Any>(0x1E77FA7A62EE6C4C, (ulong)p0); }
        internal static Any N_0xF033419D1B81FAE8(Any p0) { return NativeInvoker.Invoke<Any>(0xF033419D1B81FAE8, (ulong)p0); }
        internal static BOOL IS_PED_COMPONENT_VARIATION_VALID(Ped ped, int componentId, int drawableId, int textureId) { return NativeInvoker.Invoke<BOOL>(0xE825F6B6CEA7671D, (ulong)ped, (ulong)componentId, (ulong)drawableId, (ulong)textureId); }
        internal static void SET_PED_COMPONENT_VARIATION(Ped ped, int componentId, int drawableId, int textureId, int paletteId) { NativeInvoker.Invoke(0x262B14F48D29DE80, (ulong)ped, (ulong)componentId, (ulong)drawableId, (ulong)textureId, (ulong)paletteId); }
        internal static void SET_PED_RANDOM_COMPONENT_VARIATION(Ped ped, int p1) { NativeInvoker.Invoke(0xC8A9481A01E63C28, (ulong)ped, (ulong)p1); }
        internal static void SET_PED_RANDOM_PROPS(Ped ped) { NativeInvoker.Invoke(0xC44AA05345C992C6, (ulong)ped); }
        internal static void SET_PED_DEFAULT_COMPONENT_VARIATION(Ped ped) { NativeInvoker.Invoke(0x45EEE61580806D63, (ulong)ped); }
        internal static void SET_PED_BLEND_FROM_PARENTS(Ped ped, Any p1, Any p2, float p3, float p4) { NativeInvoker.Invoke(0x137BBD05230DB22D, (ulong)ped, (ulong)p1, (ulong)p2, *(uint*)&p3, *(uint*)&p4); }
        internal static void SET_PED_HEAD_BLEND_DATA(Ped ped, int shapeFirstID, int shapeSecondID, int shapeThirdID, int skinFirstID, int skinSecondID, int skinThirdID, float shapeMix, float skinMix, float thirdMix, BOOL isParent) { NativeInvoker.Invoke(0x9414E18B9434C2FE, (ulong)ped, (ulong)shapeFirstID, (ulong)shapeSecondID, (ulong)shapeThirdID, (ulong)skinFirstID, (ulong)skinSecondID, (ulong)skinThirdID, *(uint*)&shapeMix, *(uint*)&skinMix, *(uint*)&thirdMix, (ulong)isParent); }
        internal static BOOL GET_PED_HEAD_BLEND_DATA(Ped ped, Any* headBlendData) { return NativeInvoker.Invoke<BOOL>(0x2746BD9D88C5C5D0, (ulong)ped, (ulong)headBlendData); }
        internal static void UPDATE_PED_HEAD_BLEND_DATA(Ped ped, float shapeMix, float skinMix, float thirdMix) { NativeInvoker.Invoke(0x723538F61C647C5A, (ulong)ped, *(uint*)&shapeMix, *(uint*)&skinMix, *(uint*)&thirdMix); }
        internal static void SET_PED_EYE_COLOR_(Ped ped, int index) { NativeInvoker.Invoke(0x50B56988B170AFDF, (ulong)ped, (ulong)index); }
        internal static int GET_PED_EYE_COLOR_(Ped ped) { return NativeInvoker.Invoke<int>(0x76BBA2CEE66D47E9, (ulong)ped); }
        internal static void SET_PED_HEAD_OVERLAY(Ped ped, int overlayID, int index, float opacity) { NativeInvoker.Invoke(0x48F44967FA05CC1E, (ulong)ped, (ulong)overlayID, (ulong)index, *(uint*)&opacity); }
        internal static int GET_PED_HEAD_OVERLAY_VALUE_(Ped ped, int overlayID) { return NativeInvoker.Invoke<int>(0xA60EF3B6461A4D43, (ulong)ped, (ulong)overlayID); }
        internal static int GET_PED_HEAD_OVERLAY_NUM(int overlayID) { return NativeInvoker.Invoke<int>(0xCF1CE768BB43480E, (ulong)overlayID); }
        internal static void SET_PED_HEAD_OVERLAY_COLOR_(Ped ped, int overlayID, int colorType, int colorID, int secondColorID) { NativeInvoker.Invoke(0x497BF74A7B9CB952, (ulong)ped, (ulong)overlayID, (ulong)colorType, (ulong)colorID, (ulong)secondColorID); }
        internal static void SET_PED_HAIR_COLOR_(Ped ped, int colorID, int highlightColorID) { NativeInvoker.Invoke(0x4CFFC65454C93A49, (ulong)ped, (ulong)colorID, (ulong)highlightColorID); }
        internal static int GET_NUM_HAIR_COLORS_() { return NativeInvoker.Invoke<int>(0xE5C0CF872C2AD150); } // 0xE5C0CF872C2AD150 b323, (ulong)E5C0CF872C2AD150); }
        internal static int GET_NUM_MAKEUP_COLORS_() { return NativeInvoker.Invoke<int>(0xD1F7CA1535D22818); } // 0xD1F7CA1535D22818 b323, (ulong)D1F7CA1535D22818); }
        internal static void GET_PED_HAIR_RGB_COLOR_(int hairColorIndex, int* outR, int* outG, int* outB) { NativeInvoker.Invoke(0x4852FC386E2E1BB5, (ulong)hairColorIndex, (ulong)outR, (ulong)outG, (ulong)outB); }
        internal static void GET_PED_MAKEUP_RGB_COLOR_(int makeupColorIndex, int* outR, int* outG, int* outB) { NativeInvoker.Invoke(0x013E5CFC38CD5387, (ulong)makeupColorIndex, (ulong)outR, (ulong)outG, (ulong)outB); }
        internal static BOOL IS_PED_HAIR_COLOR_VALID_2_(int colorId) { return NativeInvoker.Invoke<BOOL>(0xED6D8E27A43B8CDE, (ulong)colorId); }
        internal static int N_0xEA9960D07DADCF10(Any p0) { return NativeInvoker.Invoke<int>(0xEA9960D07DADCF10, (ulong)p0); }
        internal static BOOL IS_PED_LIPSTICK_COLOR_VALID_2_(int colorId) { return NativeInvoker.Invoke<BOOL>(0x3E802F11FBE27674, (ulong)colorId); }
        internal static BOOL IS_PED_BLUSH_COLOR_VALID_2_(int colorId) { return NativeInvoker.Invoke<BOOL>(0xF41B5D290C99A3D6, (ulong)colorId); }
        internal static BOOL IS_PED_HAIR_COLOR_VALID_(int colorID) { return NativeInvoker.Invoke<BOOL>(0xE0D36E5D9E99CC21, (ulong)colorID); }
        internal static Any N_0xAAA6A3698A69E048(Any p0) { return NativeInvoker.Invoke<Any>(0xAAA6A3698A69E048, (ulong)p0); }
        internal static BOOL IS_PED_LIPSTICK_COLOR_VALID_(int colorID) { return NativeInvoker.Invoke<BOOL>(0x0525A2C2562F3CD4, (ulong)colorID); }
        internal static BOOL IS_PED_BLUSH_COLOR_VALID_(int colorID) { return NativeInvoker.Invoke<BOOL>(0x604E810189EE3A59, (ulong)colorID); }
        internal static BOOL IS_PED_BODY_BLEMISH_VALID_(int colorId) { return NativeInvoker.Invoke<BOOL>(0x09E7ECA981D9B210, (ulong)colorId); }
        internal static Any N_0xC56FBF2F228E1DAC(Hash modelHash, Any p1, Any p2) { return NativeInvoker.Invoke<Any>(0xC56FBF2F228E1DAC, (ulong)modelHash, (ulong)p1, (ulong)p2); }
        internal static void SET_PED_FACE_FEATURE_(Ped ped, int index, float scale) { NativeInvoker.Invoke(0x71A5C1DBA060049E, (ulong)ped, (ulong)index, *(uint*)&scale); }
        internal static BOOL HAS_PED_HEAD_BLEND_FINISHED(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x654CD0A825161131, (ulong)ped); }
        internal static void FINALIZE_HEAD_BLEND(Ped ped) { NativeInvoker.Invoke(0x4668D80430D6C299, (ulong)ped); }
        internal static void SET_HEAD_BLEND_PALETTE_COLOR(Ped ped, int r, int g, int b, int id) { NativeInvoker.Invoke(0xCC9682B8951C5229, (ulong)ped, (ulong)r, (ulong)g, (ulong)b, (ulong)id); }
        internal static void DISABLE_HEAD_BLEND_PALETTE_COLOR(Ped ped) { NativeInvoker.Invoke(0xA21C118553BBDF02, (ulong)ped); }
        internal static int GET_PED_HEAD_BLEND_FIRST_INDEX(int type) { return NativeInvoker.Invoke<int>(0x68D353AB88B97E0C, (ulong)type); }
        internal static int GET_PED_HEAD_BLEND_NUM_HEADS(int type) { return NativeInvoker.Invoke<int>(0x5EF37013A6539C9D, (ulong)type); }
        internal static Any SET_PED_PRELOAD_VARIATION_DATA(Ped ped, int slot, int drawableId, int textureId) { return NativeInvoker.Invoke<Any>(0x39D55A620FCB6A3A, (ulong)ped, (ulong)slot, (ulong)drawableId, (ulong)textureId); }
        internal static BOOL HAS_PED_PRELOAD_VARIATION_DATA_FINISHED(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x66680A92700F43DF, (ulong)ped); }
        internal static void RELEASE_PED_PRELOAD_VARIATION_DATA(Ped ped) { NativeInvoker.Invoke(0x5AAB586FFEC0FD96, (ulong)ped); }
        internal static BOOL SET_PED_PRELOAD_PROP_DATA(Ped ped, int componentId, int drawableId, int TextureId) { return NativeInvoker.Invoke<BOOL>(0x2B16A3BFF1FBCE49, (ulong)ped, (ulong)componentId, (ulong)drawableId, (ulong)TextureId); }
        internal static BOOL HAS_PED_PRELOAD_PROP_DATA_FINISHED(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x784002A632822099, (ulong)ped); }
        internal static void RELEASE_PED_PRELOAD_PROP_DATA(Ped ped) { NativeInvoker.Invoke(0xF79F9DEF0AADE61A, (ulong)ped); }
        internal static int GET_PED_PROP_INDEX(Ped ped, int componentId) { return NativeInvoker.Invoke<int>(0x898CC20EA75BACD8, (ulong)ped, (ulong)componentId); }
        internal static void SET_PED_PROP_INDEX(Ped ped, int componentId, int drawableId, int TextureId, BOOL attach) { NativeInvoker.Invoke(0x93376B65A266EB5F, (ulong)ped, (ulong)componentId, (ulong)drawableId, (ulong)TextureId, (ulong)attach); }
        internal static void KNOCK_OFF_PED_PROP(Ped ped, BOOL p1, BOOL p2, BOOL p3, BOOL p4) { NativeInvoker.Invoke(0x6FD7816A36615F48, (ulong)ped, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void CLEAR_PED_PROP(Ped ped, int propId) { NativeInvoker.Invoke(0x0943E5B8E078E76E, (ulong)ped, (ulong)propId); }
        internal static void CLEAR_ALL_PED_PROPS(Ped ped) { NativeInvoker.Invoke(0xCD8A7537A9B52F06, (ulong)ped); }
        internal static void DROP_AMBIENT_PROP(Ped ped) { NativeInvoker.Invoke(0xAFF4710E2A0A6C12, (ulong)ped); }
        internal static int GET_PED_PROP_TEXTURE_INDEX(Ped ped, int componentId) { return NativeInvoker.Invoke<int>(0xE131A28626F81AB2, (ulong)ped, (ulong)componentId); }
        internal static void CLEAR_PED_PARACHUTE_PACK_VARIATION(Ped ped) { NativeInvoker.Invoke(0x1280804F7CFD2D6C, (ulong)ped); }
        internal static void SET_PED_SCUBA_GEAR_VARIATION_(Ped ped) { NativeInvoker.Invoke(0x36C6984C3ED0C911, (ulong)ped); }
        internal static void CLEAR_PED_SCUBA_GEAR_VARIATION(Ped ped) { NativeInvoker.Invoke(0xB50EB4CCB29704AC, (ulong)ped); }
        internal static BOOL N_0xFEC9A3B1820F3331(Any p0) { return NativeInvoker.Invoke<BOOL>(0xFEC9A3B1820F3331, (ulong)p0); }
        internal static void SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x9F8AA94D6D97DBF4, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_BOUNDS_ORIENTATION(Ped ped, float p1, float p2, float p3, float p4, float p5) { NativeInvoker.Invoke(0x4F5F651ACCC9C4CF, (ulong)ped, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5); }
        internal static void REGISTER_TARGET(Ped ped, Ped target) { NativeInvoker.Invoke(0x2F25D9AEFA34FBA2, (ulong)ped, (ulong)target); }
        internal static void REGISTER_HATED_TARGETS_AROUND_PED(Ped ped, float radius) { NativeInvoker.Invoke(0x9222F300BF8354FE, (ulong)ped, *(uint*)&radius); }
        internal static Ped GET_RANDOM_PED_AT_COORD(float x, float y, float z, float xRadius, float yRadius, float zRadius, int pedType) { return NativeInvoker.Invoke<Ped>(0x876046A8E3A4B71C, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&xRadius, *(uint*)&yRadius, *(uint*)&zRadius, (ulong)pedType); }
        internal static BOOL GET_CLOSEST_PED(float x, float y, float z, float radius, BOOL p4, BOOL p5, Ped* outPed, BOOL p7, BOOL p8, int pedType) { return NativeInvoker.Invoke<BOOL>(0xC33AB876A77F8164, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)p4, (ulong)p5, (ulong)outPed, (ulong)p7, (ulong)p8, (ulong)pedType); }
        internal static void SET_SCENARIO_PEDS_TO_BE_RETURNED_BY_NEXT_COMMAND(BOOL value) { NativeInvoker.Invoke(0x14F19A8782C8071E, (ulong)value); }
        internal static BOOL N_0x03EA03AF85A85CB7(Ped ped, BOOL p1, BOOL p2, BOOL p3, BOOL p4, BOOL p5, BOOL p6, BOOL p7, Any p8) { return NativeInvoker.Invoke<BOOL>(0x03EA03AF85A85CB7, (ulong)ped, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8); }
        internal static void SET_DRIVER_RACING_MODIFIER(Ped driver, float modifier) { NativeInvoker.Invoke(0xDED5AF5A0EA4B297, (ulong)driver, *(uint*)&modifier); }
        internal static void SET_DRIVER_ABILITY(Ped driver, float ability) { NativeInvoker.Invoke(0xB195FFA8042FC5C3, (ulong)driver, *(uint*)&ability); }
        internal static void SET_DRIVER_AGGRESSIVENESS(Ped driver, float aggressiveness) { NativeInvoker.Invoke(0xA731F608CA104E3C, (ulong)driver, *(uint*)&aggressiveness); }
        internal static BOOL CAN_PED_RAGDOLL(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x128F79EDCECE4FD5, (ulong)ped); }
        internal static BOOL SET_PED_TO_RAGDOLL(Ped ped, int time1, int time2, int ragdollType, BOOL p4, BOOL p5, BOOL p6) { return NativeInvoker.Invoke<BOOL>(0xAE99FB955581844A, (ulong)ped, (ulong)time1, (ulong)time2, (ulong)ragdollType, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static BOOL SET_PED_TO_RAGDOLL_WITH_FALL(Ped ped, int time, int p2, int ragdollType, float x, float y, float z, float p7, float p8, float p9, float p10, float p11, float p12, float p13) { return NativeInvoker.Invoke<BOOL>(0xD76632D99E4966C8, (ulong)ped, (ulong)time, (ulong)p2, (ulong)ragdollType, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&p7, *(uint*)&p8, *(uint*)&p9, *(uint*)&p10, *(uint*)&p11, *(uint*)&p12, *(uint*)&p13); }
        internal static void SET_PED_RAGDOLL_ON_COLLISION(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xF0A4F1BBF4FA7497, (ulong)ped, (ulong)toggle); }
        internal static BOOL IS_PED_RAGDOLL(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x47E4E977581C5B55, (ulong)ped); }
        internal static BOOL IS_PED_RUNNING_RAGDOLL_TASK(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xE3B6097CC25AA69E, (ulong)ped); }
        internal static void SET_PED_RAGDOLL_FORCE_FALL(Ped ped) { NativeInvoker.Invoke(0x01F6594B923B9251, (ulong)ped); }
        internal static void RESET_PED_RAGDOLL_TIMER(Ped ped) { NativeInvoker.Invoke(0x9FA4664CF62E47E8, (ulong)ped); }
        internal static void SET_PED_CAN_RAGDOLL(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xB128377056A54E2A, (ulong)ped, (ulong)toggle); }
        internal static BOOL IS_PED_RUNNING_MELEE_TASK(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xD1871251F3B5ACD7, (ulong)ped); }
        internal static BOOL IS_PED_RUNNING_MOBILE_PHONE_TASK(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x2AFE52F782F25775, (ulong)ped); }
        internal static BOOL IS_MOBILE_PHONE_TO_PED_EAR(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xA3F3564A5B3646C0, (ulong)ped); }
        internal static void SET_RAGDOLL_BLOCKING_FLAGS(Ped ped, int flags) { NativeInvoker.Invoke(0x26695EC767728D84, (ulong)ped, (ulong)flags); }
        internal static void CLEAR_RAGDOLL_BLOCKING_FLAGS(Ped ped, int flags) { NativeInvoker.Invoke(0xD86D101FCFD00A4B, (ulong)ped, (ulong)flags); }
        internal static void SET_PED_ANGLED_DEFENSIVE_AREA(Ped ped, float p1, float p2, float p3, float p4, float p5, float p6, float p7, BOOL p8, BOOL p9) { NativeInvoker.Invoke(0xC7F76DF27A5045A1, (ulong)ped, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, *(uint*)&p7, (ulong)p8, (ulong)p9); }
        internal static void SET_PED_SPHERE_DEFENSIVE_AREA(Ped ped, float x, float y, float z, float radius, BOOL p5, BOOL p6) { NativeInvoker.Invoke(0x9D3151A373974804, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)p5, (ulong)p6); }
        internal static void SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_PED(Ped ped, Ped target, float xOffset, float yOffset, float zOffset, float radius, BOOL p6) { NativeInvoker.Invoke(0xF9B8F91AAD3B953E, (ulong)ped, (ulong)target, *(uint*)&xOffset, *(uint*)&yOffset, *(uint*)&zOffset, *(uint*)&radius, (ulong)p6); }
        internal static void SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_VEHICLE(Ped ped, Vehicle target, float xOffset, float yOffset, float zOffset, float radius, BOOL p6) { NativeInvoker.Invoke(0xE4723DB6E736CCFF, (ulong)ped, (ulong)target, *(uint*)&xOffset, *(uint*)&yOffset, *(uint*)&zOffset, *(uint*)&radius, (ulong)p6); }
        internal static void SET_PED_DEFENSIVE_AREA_ATTACHED_TO_PED(Ped ped, Ped attachPed, float p2, float p3, float p4, float p5, float p6, float p7, float p8, BOOL p9, BOOL p10) { NativeInvoker.Invoke(0x4EF47FE21698A8B6, (ulong)ped, (ulong)attachPed, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, *(uint*)&p7, *(uint*)&p8, (ulong)p9, (ulong)p10); }
        internal static void SET_PED_DEFENSIVE_AREA_DIRECTION(Ped ped, float p1, float p2, float p3, BOOL p4) { NativeInvoker.Invoke(0x413C6C763A4AFFAD, (ulong)ped, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, (ulong)p4); }
        internal static void REMOVE_PED_DEFENSIVE_AREA(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x74D4E028107450A9, (ulong)ped, (ulong)toggle); }
        internal static Vector3 GET_PED_DEFENSIVE_AREA_POSITION(Ped ped, BOOL p1) { return NativeInvoker.Invoke<Vector3>(0x3C06B8786DD94CD1, (ulong)ped, (ulong)p1); }
        internal static BOOL IS_PED_DEFENSIVE_AREA_ACTIVE(Ped ped, BOOL p1) { return NativeInvoker.Invoke<BOOL>(0xBA63D9FE45412247, (ulong)ped, (ulong)p1); }
        internal static void SET_PED_PREFERRED_COVER_SET(Ped ped, Any itemSet) { NativeInvoker.Invoke(0x8421EB4DA7E391B9, (ulong)ped, (ulong)itemSet); }
        internal static void REMOVE_PED_PREFERRED_COVER_SET(Ped ped) { NativeInvoker.Invoke(0xFDDB234CF74073D9, (ulong)ped); }
        internal static void REVIVE_INJURED_PED(Ped ped) { NativeInvoker.Invoke(0x8D8ACD8388CD99CE, (ulong)ped); }
        internal static void RESURRECT_PED(Ped ped) { NativeInvoker.Invoke(0x71BC8E838B9C6035, (ulong)ped); }
        internal static void SET_PED_NAME_DEBUG(Ped ped, char* name) { NativeInvoker.Invoke(0x98EFA132A4117BE1, (ulong)ped, (ulong)name); }
        internal static Vector3 GET_PED_EXTRACTED_DISPLACEMENT(Ped ped, BOOL worldSpace) { return NativeInvoker.Invoke<Vector3>(0xE0AF41401ADF87E3, (ulong)ped, (ulong)worldSpace); }
        internal static void SET_PED_DIES_WHEN_INJURED(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x5BA7919BED300023, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_ENABLE_WEAPON_BLOCKING(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x97A790315D3831FD, (ulong)ped, (ulong)toggle); }
        internal static void N_0xF9ACF4A08098EA25(Ped ped, BOOL p1) { NativeInvoker.Invoke(0xF9ACF4A08098EA25, (ulong)ped, (ulong)p1); }
        internal static void RESET_PED_VISIBLE_DAMAGE(Ped ped) { NativeInvoker.Invoke(0x3AC1F7B898F30C05, (ulong)ped); }
        internal static void APPLY_PED_BLOOD_DAMAGE_BY_ZONE(Ped ped, Any p1, float p2, float p3, Any p4) { NativeInvoker.Invoke(0x816F6981C60BF53B, (ulong)ped, (ulong)p1, *(uint*)&p2, *(uint*)&p3, (ulong)p4); }
        internal static void APPLY_PED_BLOOD(Ped ped, int boneIndex, float xRot, float yRot, float zRot, char* woundType) { NativeInvoker.Invoke(0x83F7E01C7B769A26, (ulong)ped, (ulong)boneIndex, *(uint*)&xRot, *(uint*)&yRot, *(uint*)&zRot, (ulong)woundType); }
        internal static void APPLY_PED_BLOOD_BY_ZONE(Ped ped, int p1, float p2, float p3, char* p4) { NativeInvoker.Invoke(0x3311E47B91EDCBBC, (ulong)ped, (ulong)p1, *(uint*)&p2, *(uint*)&p3, (ulong)p4); }
        internal static void APPLY_PED_BLOOD_SPECIFIC(Ped ped, int p1, float p2, float p3, float p4, float p5, int p6, float p7, char* p8) { NativeInvoker.Invoke(0xEF0D582CBF2D9B0F, (ulong)ped, (ulong)p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, (ulong)p6, *(uint*)&p7, (ulong)p8); }
        internal static void APPLY_PED_DAMAGE_DECAL(Ped ped, int damageZone, float xOffset, float yOffset, float heading, float scale, float alpha, int variation, BOOL fadeIn, char* decalName) { NativeInvoker.Invoke(0x397C38AA7B4A5F83, (ulong)ped, (ulong)damageZone, *(uint*)&xOffset, *(uint*)&yOffset, *(uint*)&heading, *(uint*)&scale, *(uint*)&alpha, (ulong)variation, (ulong)fadeIn, (ulong)decalName); }
        internal static void APPLY_PED_DAMAGE_PACK(Ped ped, char* damagePack, float damage, float mult) { NativeInvoker.Invoke(0x46DF918788CB093F, (ulong)ped, (ulong)damagePack, *(uint*)&damage, *(uint*)&mult); }
        internal static void CLEAR_PED_BLOOD_DAMAGE(Ped ped) { NativeInvoker.Invoke(0x8FE22675A5A45817, (ulong)ped); }
        internal static void CLEAR_PED_BLOOD_DAMAGE_BY_ZONE(Ped ped, int p1) { NativeInvoker.Invoke(0x56E3B78C5408D9F4, (ulong)ped, (ulong)p1); }
        internal static void HIDE_PED_BLOOD_DAMAGE_BY_ZONE(Ped ped, Any p1, BOOL p2) { NativeInvoker.Invoke(0x62AB793144DE75DC, (ulong)ped, (ulong)p1, (ulong)p2); }
        internal static void CLEAR_PED_DAMAGE_DECAL_BY_ZONE(Ped ped, int p1, char* p2) { NativeInvoker.Invoke(0x523C79AEEFCC4A2A, (ulong)ped, (ulong)p1, (ulong)p2); }
        internal static int GET_PED_DECORATIONS_STATE(Ped ped) { return NativeInvoker.Invoke<int>(0x71EAB450D86954A1, (ulong)ped); }
        internal static void N_0x2B694AFCF64E6994(Ped ped, BOOL p1) { NativeInvoker.Invoke(0x2B694AFCF64E6994, (ulong)ped, (ulong)p1); }
        internal static void CLEAR_PED_WETNESS(Ped ped) { NativeInvoker.Invoke(0x9C720776DAA43E7E, (ulong)ped); }
        internal static void SET_PED_WETNESS_HEIGHT(Ped ped, float height) { NativeInvoker.Invoke(0x44CB6447D2571AA0, (ulong)ped, *(uint*)&height); }
        internal static void SET_PED_WETNESS_ENABLED_THIS_FRAME(Ped ped) { NativeInvoker.Invoke(0xB5485E4907B53019, (ulong)ped); }
        internal static void CLEAR_PED_ENV_DIRT(Ped ped) { NativeInvoker.Invoke(0x6585D955A68452A5, (ulong)ped); }
        internal static void SET_PED_SWEAT(Ped ped, float sweat) { NativeInvoker.Invoke(0x27B0405F59637D1F, (ulong)ped, *(uint*)&sweat); }
        internal static void ADD_PED_DECORATION_FROM_HASHES(Ped ped, Hash collection, Hash overlay) { NativeInvoker.Invoke(0x5F5D1665E352A839, (ulong)ped, (ulong)collection, (ulong)overlay); }
        internal static void ADD_PED_DECORATION_FROM_HASHES_IN_CORONA(Ped ped, Hash collection, Hash overlay) { NativeInvoker.Invoke(0x5619BFA07CFD7833, (ulong)ped, (ulong)collection, (ulong)overlay); }
        internal static int GET_PED_DECORATION_ZONE_FROM_HASHES(Hash collection, Hash overlay) { return NativeInvoker.Invoke<int>(0x9FD452BFBE7A7A8B, (ulong)collection, (ulong)overlay); }
        internal static void CLEAR_PED_DECORATIONS(Ped ped) { NativeInvoker.Invoke(0x0E5173C163976E38, (ulong)ped); }
        internal static void CLEAR_PED_DECORATIONS_LEAVE_SCARS(Ped ped) { NativeInvoker.Invoke(0xE3B27E70CEAB9F0C, (ulong)ped); }
        internal static BOOL WAS_PED_SKELETON_UPDATED(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x11B499C1E0FF8559, (ulong)ped); }
        internal static Vector3 GET_PED_BONE_COORDS(Ped ped, int boneId, float offsetX, float offsetY, float offsetZ) { return NativeInvoker.Invoke<Vector3>(0x17C07FC640E86B4E, (ulong)ped, (ulong)boneId, *(uint*)&offsetX, *(uint*)&offsetY, *(uint*)&offsetZ); }
        internal static void CREATE_NM_MESSAGE(BOOL startImmediately, int messageId) { NativeInvoker.Invoke(0x418EF2A1BCE56685, (ulong)startImmediately, (ulong)messageId); }
        internal static void GIVE_PED_NM_MESSAGE(Ped ped) { NativeInvoker.Invoke(0xB158DFCCC56E5C5B, (ulong)ped); }
        internal static int ADD_SCENARIO_BLOCKING_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL p6, BOOL p7, BOOL p8, BOOL p9) { return NativeInvoker.Invoke<int>(0x1B5C85C612E5256E, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9); }
        internal static void REMOVE_SCENARIO_BLOCKING_AREAS() { NativeInvoker.Invoke(0xD37401D78A929A49); } // 0xD37401D78A929A49 0x4DDF845F b323<, (ulong)D37401D78A929A49); }
        internal static void REMOVE_SCENARIO_BLOCKING_AREA(Any p0, BOOL p1) { NativeInvoker.Invoke(0x31D16B74C6E29D66, (ulong)p0, (ulong)p1); }
        internal static void SET_SCENARIO_PEDS_SPAWN_IN_SPHERE_AREA(float x, float y, float z, float range, int p4) { NativeInvoker.Invoke(0x28157D43CF600981, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&range, (ulong)p4); }
        internal static BOOL DOES_SCENARIO_BLOCKING_AREA_EXIST_(float x1, float y1, float z1, float x2, float y2, float z2) { return NativeInvoker.Invoke<BOOL>(0x8A24B067D175A7BD, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2); }
        internal static BOOL IS_PED_USING_SCENARIO(Ped ped, char* scenario) { return NativeInvoker.Invoke<BOOL>(0x1BF094736DD62C2E, (ulong)ped, (ulong)scenario); }
        internal static BOOL IS_PED_USING_ANY_SCENARIO(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x57AB4A3080F85143, (ulong)ped); }
        internal static Any SET_PED_PANIC_EXIT_SCENARIO(Any p0, Any p1, Any p2, Any p3) { return NativeInvoker.Invoke<Any>(0xFE07FF6495D52E2A, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x9A77DFD295E29B09(Any p0, BOOL p1) { NativeInvoker.Invoke(0x9A77DFD295E29B09, (ulong)p0, (ulong)p1); }
        internal static Any N_0x25361A96E0F7E419(Any p0, Any p1, Any p2, Any p3) { return NativeInvoker.Invoke<Any>(0x25361A96E0F7E419, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static Any SET_PED_SHOULD_PLAY_DIRECTED_SCENARIO_EXIT_(Any p0, Any p1, Any p2, Any p3) { return NativeInvoker.Invoke<Any>(0xEC6935EBE0847B90, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void SET_PED_SHOULD_PLAY_NORMAL_SCENARIO_EXIT(Ped ped) { NativeInvoker.Invoke(0xA3A9299C4F2ADB98, (ulong)ped); }
        internal static void SET_PED_SHOULD_PLAY_IMMEDIATE_SCENARIO_EXIT(Ped ped) { NativeInvoker.Invoke(0xF1C03A5352243A30, (ulong)ped); }
        internal static Any SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT(Ped ped, Any p1, Any p2, Any p3) { return NativeInvoker.Invoke<Any>(0xEEED8FAFEC331A70, (ulong)ped, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x425AECF167663F48(Ped ped, BOOL p1) { NativeInvoker.Invoke(0x425AECF167663F48, (ulong)ped, (ulong)p1); }
        internal static void N_0x5B6010B3CBC29095(Any p0, BOOL p1) { NativeInvoker.Invoke(0x5B6010B3CBC29095, (ulong)p0, (ulong)p1); }
        internal static void N_0xCEDA60A74219D064(Any p0, BOOL p1) { NativeInvoker.Invoke(0xCEDA60A74219D064, (ulong)p0, (ulong)p1); }
        internal static Any N_0xC30BDAEE47256C13(Any p0) { return NativeInvoker.Invoke<Any>(0xC30BDAEE47256C13, (ulong)p0); }
        internal static void PLAY_FACIAL_ANIM(Ped ped, char* animName, char* animDict) { NativeInvoker.Invoke(0xE1E65CA8AC9C00ED, (ulong)ped, (ulong)animName, (ulong)animDict); }
        internal static void SET_FACIAL_CLIPSET_OVERRIDE_(Ped ped, char* animDict) { NativeInvoker.Invoke(0x5687C7F05B39E401, (ulong)ped, (ulong)animDict); }
        internal static void SET_FACIAL_IDLE_ANIM_OVERRIDE(Ped ped, char* animName, char* animDict) { NativeInvoker.Invoke(0xFFC24B988B938B38, (ulong)ped, (ulong)animName, (ulong)animDict); }
        internal static void CLEAR_FACIAL_IDLE_ANIM_OVERRIDE(Ped ped) { NativeInvoker.Invoke(0x726256CC1EEB182F, (ulong)ped); }
        internal static void SET_PED_CAN_PLAY_GESTURE_ANIMS(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xBAF20C5432058024, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_CAN_PLAY_VISEME_ANIMS(Ped ped, BOOL toggle, BOOL p2) { NativeInvoker.Invoke(0xF833DDBA3B104D43, (ulong)ped, (ulong)toggle, (ulong)p2); }
        internal static void SET_PED_CAN_PLAY_INJURED_ANIMS_(Ped ped, BOOL p1) { NativeInvoker.Invoke(0x33A60D8BDD6E508C, (ulong)ped, (ulong)p1); }
        internal static void SET_PED_CAN_PLAY_AMBIENT_ANIMS(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x6373D1349925A70E, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x0EB0585D15254740, (ulong)ped, (ulong)toggle); }
        internal static void N_0xC2EE020F5FB4DB53(Ped ped) { NativeInvoker.Invoke(0xC2EE020F5FB4DB53, (ulong)ped); }
        internal static void SET_PED_CAN_ARM_IK(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x6C3B4D6D13B4C841, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_CAN_HEAD_IK(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xC11C18092C5530DC, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_CAN_LEG_IK(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x73518ECE2485412B, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_CAN_TORSO_IK(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xF2B7106D37947CE0, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_CAN_TORSO_REACT_IK(Ped ped, BOOL p1) { NativeInvoker.Invoke(0xF5846EDB26A98A24, (ulong)ped, (ulong)p1); }
        internal static void N_0x6647C5F6F5792496(Ped ped, BOOL p1) { NativeInvoker.Invoke(0x6647C5F6F5792496, (ulong)ped, (ulong)p1); }
        internal static void SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xEC4686EC06434678, (ulong)ped, (ulong)toggle); }
        internal static BOOL IS_PED_HEADTRACKING_PED(Ped ped1, Ped ped2) { return NativeInvoker.Invoke<BOOL>(0x5CD3CB88A7F8850D, (ulong)ped1, (ulong)ped2); }
        internal static BOOL IS_PED_HEADTRACKING_ENTITY(Ped ped, Entity entity) { return NativeInvoker.Invoke<BOOL>(0x813A0A7C9D2E831F, (ulong)ped, (ulong)entity); }
        internal static void SET_PED_PRIMARY_LOOKAT(Ped ped, Ped lookAt) { NativeInvoker.Invoke(0xCD17B554996A8D9E, (ulong)ped, (ulong)lookAt); }
        internal static void SET_PED_CLOTH_PACKAGE_INDEX(Any p0, Any p1) { NativeInvoker.Invoke(0x78C4E9961DB3EB5B, (ulong)p0, (ulong)p1); }
        internal static void SET_PED_CLOTH_PRONE(Any p0, Any p1) { NativeInvoker.Invoke(0x82A3D6D9CC2CB8E3, (ulong)p0, (ulong)p1); }
        internal static void N_0xA660FAF550EB37E5(Any p0, BOOL p1) { NativeInvoker.Invoke(0xA660FAF550EB37E5, (ulong)p0, (ulong)p1); }
        internal static void SET_PED_CONFIG_FLAG(Ped ped, int flagId, BOOL value) { NativeInvoker.Invoke(0x1913FE4CBF41C463, (ulong)ped, (ulong)flagId, (ulong)value); }
        internal static void SET_PED_RESET_FLAG(Ped ped, int flagId, BOOL doReset) { NativeInvoker.Invoke(0xC1E8A365BF3B29F2, (ulong)ped, (ulong)flagId, (ulong)doReset); }
        internal static BOOL GET_PED_CONFIG_FLAG(Ped ped, int flagId, BOOL p2) { return NativeInvoker.Invoke<BOOL>(0x7EE53118C892B513, (ulong)ped, (ulong)flagId, (ulong)p2); }
        internal static BOOL GET_PED_RESET_FLAG(Ped ped, int flagId) { return NativeInvoker.Invoke<BOOL>(0xAF9E59B1B1FBF2A0, (ulong)ped, (ulong)flagId); }
        internal static void SET_PED_GROUP_MEMBER_PASSENGER_INDEX(Ped ped, int index) { NativeInvoker.Invoke(0x0BDDB8D9EC6BCF3C, (ulong)ped, (ulong)index); }
        internal static void SET_PED_CAN_EVASIVE_DIVE(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x6B7A646C242A7059, (ulong)ped, (ulong)toggle); }
        internal static BOOL IS_PED_EVASIVE_DIVING(Ped ped, Entity* evadingEntity) { return NativeInvoker.Invoke<BOOL>(0x414641C26E105898, (ulong)ped, (ulong)evadingEntity); }
        internal static void SET_PED_SHOOTS_AT_COORD(Ped ped, float x, float y, float z, BOOL toggle) { NativeInvoker.Invoke(0x96A05E4FB321B1BA, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)toggle); }
        internal static void SET_PED_MODEL_IS_SUPPRESSED(Hash modelHash, BOOL toggle) { NativeInvoker.Invoke(0xE163A4BCE4DE6F11, (ulong)modelHash, (ulong)toggle); }
        internal static void STOP_ANY_PED_MODEL_BEING_SUPPRESSED() { NativeInvoker.Invoke(0xB47BD05FA66B40CF); } // 0xB47BD05FA66B40CF 0x5AD7DC55 b323<, (ulong)B47BD05FA66B40CF); }
        internal static void SET_PED_CAN_BE_TARGETED_WHEN_INJURED(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x638C03B0F9878F57, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_GENERATES_DEAD_BODY_EVENTS(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x7FB17BA2E7DECA5B, (ulong)ped, (ulong)toggle); }
        internal static void BLOCK_PED_DEAD_BODY_SHOCKING_EVENTS_(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xE43A13C9E4CCCBCF, (ulong)ped, (ulong)toggle); }
        internal static void N_0x3E9679C1DFCF422C(Any p0, Any p1) { NativeInvoker.Invoke(0x3E9679C1DFCF422C, (ulong)p0, (ulong)p1); }
        internal static void SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xDF993EE5E90ABA25, (ulong)ped, (ulong)toggle); }
        internal static void GIVE_PED_HELMET(Ped ped, BOOL cannotRemove, int helmetFlag, int textureIndex) { NativeInvoker.Invoke(0x54C7C4A94367717E, (ulong)ped, (ulong)cannotRemove, (ulong)helmetFlag, (ulong)textureIndex); }
        internal static void REMOVE_PED_HELMET(Ped ped, BOOL instantly) { NativeInvoker.Invoke(0xA7B2458D0AD6DED8, (ulong)ped, (ulong)instantly); }
        internal static BOOL IS_PED_TAKING_OFF_HELMET(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x14590DDBEDB1EC85, (ulong)ped); }
        internal static void SET_PED_HELMET(Ped ped, BOOL canWearHelmet) { NativeInvoker.Invoke(0x560A43136EB58105, (ulong)ped, (ulong)canWearHelmet); }
        internal static void SET_PED_HELMET_FLAG(Ped ped, int helmetFlag) { NativeInvoker.Invoke(0xC0E78D5C2CE3EB25, (ulong)ped, (ulong)helmetFlag); }
        internal static void SET_PED_HELMET_PROP_INDEX(Ped ped, int propIndex, BOOL p2) { NativeInvoker.Invoke(0x26D83693ED99291C, (ulong)ped, (ulong)propIndex, (ulong)p2); }
        internal static void SET_PED_HELMET_UNK_(Ped ped, BOOL p1, int p2, int p3) { NativeInvoker.Invoke(0x3F7325574E41B44D, (ulong)ped, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static BOOL IS_PED_HELMET_UNK_(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xB9496CE47546DB2C, (ulong)ped); }
        internal static void SET_PED_HELMET_TEXTURE_INDEX(Ped ped, int textureIndex) { NativeInvoker.Invoke(0xF1550C4BD22582E2, (ulong)ped, (ulong)textureIndex); }
        internal static BOOL IS_PED_WEARING_HELMET(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xF33BDFE19B309B19, (ulong)ped); }
        internal static void CLEAR_PED_STORED_HAT_PROP(Ped ped) { NativeInvoker.Invoke(0x687C0B594907D2E8, (ulong)ped); }
        internal static Any GET_PED_HELMET_STORED_HAT_PROP_INDEX(Ped ped) { return NativeInvoker.Invoke<Any>(0x451294E859ECC018, (ulong)ped); }
        internal static Any GET_PED_HELMET_STORED_HAT_TEX_INDEX(Ped ped) { return NativeInvoker.Invoke<Any>(0x9D728C1E12BF5518, (ulong)ped); }
        internal static BOOL N_0xF2385935BFFD4D92(Any p0) { return NativeInvoker.Invoke<BOOL>(0xF2385935BFFD4D92, (ulong)p0); }
        internal static void SET_PED_TO_LOAD_COVER(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x332B562EEDA62399, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_CAN_COWER_IN_COVER(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xCB7553CDCEF4A735, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_CAN_PEEK_IN_COVER(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xC514825C507E3736, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_PLAYS_HEAD_ON_HORN_ANIM_WHEN_DIES_IN_VEHICLE(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x94D94BF1A75AED3D, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_LEG_IK_MODE(Ped ped, int mode) { NativeInvoker.Invoke(0xC396F5B86FF9FEBD, (ulong)ped, (ulong)mode); }
        internal static void SET_PED_MOTION_BLUR(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x0A986918B102B448, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_CAN_SWITCH_WEAPON(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xED7F7EFE9FABF340, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_DIES_INSTANTLY_IN_WATER(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xEEB64139BA29A7CF, (ulong)ped, (ulong)toggle); }
        internal static void N_0x1A330D297AAC6BC1(Ped ped, int p1) { NativeInvoker.Invoke(0x1A330D297AAC6BC1, (ulong)ped, (ulong)p1); }
        internal static void STOP_PED_WEAPON_FIRING_WHEN_DROPPED(Ped ped) { NativeInvoker.Invoke(0xC158D28142A34608, (ulong)ped); }
        internal static void SET_SCRIPTED_ANIM_SEAT_OFFSET(Ped ped, float p1) { NativeInvoker.Invoke(0x5917BBA32D06C230, (ulong)ped, *(uint*)&p1); }
        internal static void SET_PED_COMBAT_MOVEMENT(Ped ped, int combatMovement) { NativeInvoker.Invoke(0x4D9CA1009AFBD057, (ulong)ped, (ulong)combatMovement); }
        internal static int GET_PED_COMBAT_MOVEMENT(Ped ped) { return NativeInvoker.Invoke<int>(0xDEA92412FCAEB3F5, (ulong)ped); }
        internal static void SET_PED_COMBAT_ABILITY(Ped ped, int abilityLevel) { NativeInvoker.Invoke(0xC7622C0D36B2FDA8, (ulong)ped, (ulong)abilityLevel); }
        internal static void SET_PED_COMBAT_RANGE(Ped ped, int combatRange) { NativeInvoker.Invoke(0x3C606747B23E497B, (ulong)ped, (ulong)combatRange); }
        internal static int GET_PED_COMBAT_RANGE(Ped ped) { return NativeInvoker.Invoke<int>(0xF9D9F7F2DB8E2FA0, (ulong)ped); }
        internal static void SET_PED_COMBAT_ATTRIBUTES(Ped ped, int attributeId, BOOL enabled) { NativeInvoker.Invoke(0x9F7794730795E019, (ulong)ped, (ulong)attributeId, (ulong)enabled); }
        internal static void SET_PED_TARGET_LOSS_RESPONSE(Ped ped, int responseType) { NativeInvoker.Invoke(0x0703B9079823DA4A, (ulong)ped, (ulong)responseType); }
        internal static BOOL IS_PED_PERFORMING_MELEE_ACTION(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xDCCA191DF9980FD7, (ulong)ped); }
        internal static BOOL IS_PED_PERFORMING_STEALTH_KILL(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xFD4CCDBCC59941B7, (ulong)ped); }
        internal static BOOL IS_PED_PERFORMING_DEPENDENT_COMBO_LIMIT(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xEBD0EDBA5BE957CF, (ulong)ped); }
        internal static BOOL IS_PED_BEING_STEALTH_KILLED(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x863B23EFDE9C5DF2, (ulong)ped); }
        internal static Ped GET_MELEE_TARGET_FOR_PED(Ped ped) { return NativeInvoker.Invoke<Ped>(0x18A3E9EE1297FD39, (ulong)ped); }
        internal static BOOL WAS_PED_KILLED_BY_STEALTH(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xF9800AA1A771B000, (ulong)ped); }
        internal static BOOL WAS_PED_KILLED_BY_TAKEDOWN(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x7F08E26039C7347C, (ulong)ped); }
        internal static BOOL WAS_PED_KNOCKED_OUT(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x61767F73EACEED21, (ulong)ped); }
        internal static void SET_PED_FLEE_ATTRIBUTES(Ped ped, int attributeFlags, BOOL enable) { NativeInvoker.Invoke(0x70A2D1137C8ED7C9, (ulong)ped, (ulong)attributeFlags, (ulong)enable); }
        internal static void SET_PED_COWER_HASH(Ped ped, char* p1) { NativeInvoker.Invoke(0xA549131166868ED3, (ulong)ped, (ulong)p1); }
        internal static void N_0x2016C603D6B8987C(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x2016C603D6B8987C, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_STEERS_AROUND_PEDS(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x46F2193B3AD1D891, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_STEERS_AROUND_OBJECTS(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x1509C089ADC208BF, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_STEERS_AROUND_VEHICLES(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xEB6FB9D48DDE23EC, (ulong)ped, (ulong)toggle); }
        internal static void N_0xA9B61A329BFDCBEA(Any p0, BOOL p1) { NativeInvoker.Invoke(0xA9B61A329BFDCBEA, (ulong)p0, (ulong)p1); }
        internal static void SET_PED_INCREASED_AVOIDANCE_RADIUS(Ped ped) { NativeInvoker.Invoke(0x570389D1C3DE3C6B, (ulong)ped); }
        internal static void SET_PED_BLOCKS_PATHING_WHEN_DEAD(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x576594E8D64375E2, (ulong)ped, (ulong)toggle); }
        internal static void N_0xA52D5247A4227E14(Any p0) { NativeInvoker.Invoke(0xA52D5247A4227E14, (ulong)p0); }
        internal static BOOL IS_ANY_PED_NEAR_POINT(float x, float y, float z, float radius) { return NativeInvoker.Invoke<BOOL>(0x083961498679DC9F, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius); }
        internal static void FORCE_PED_AI_AND_ANIMATION_UPDATE(Ped ped, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x2208438012482A1A, (ulong)ped, (ulong)p1, (ulong)p2); }
        internal static BOOL IS_PED_HEADING_TOWARDS_POSITION(Ped ped, float x, float y, float z, float p4) { return NativeInvoker.Invoke<BOOL>(0xFCF37A457CB96DC0, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&p4); }
        internal static void REQUEST_PED_VISIBILITY_TRACKING(Ped ped) { NativeInvoker.Invoke(0x7D7A2E43E74E2EB8, (ulong)ped); }
        internal static void REQUEST_PED_VEHICLE_VISIBILITY_TRACKING(Ped ped, BOOL p1) { NativeInvoker.Invoke(0x2BC338A7B21F4608, (ulong)ped, (ulong)p1); }
        internal static void N_0xCD018C591F94CB43(Ped ped, BOOL p1) { NativeInvoker.Invoke(0xCD018C591F94CB43, (ulong)ped, (ulong)p1); }
        internal static void N_0x75BA1CB3B7D40CAF(Ped ped, BOOL p1) { NativeInvoker.Invoke(0x75BA1CB3B7D40CAF, (ulong)ped, (ulong)p1); }
        internal static BOOL IS_TRACKED_PED_VISIBLE(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x91C8E617F64188AC, (ulong)ped); }
        internal static int N_0x511F1A683387C7E2(Ped ped) { return NativeInvoker.Invoke<int>(0x511F1A683387C7E2, (ulong)ped); }
        internal static BOOL IS_PED_TRACKED(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x4C5E1F087CD10BB7, (ulong)ped); }
        internal static BOOL HAS_PED_RECEIVED_EVENT(Ped ped, int @eventId) { return NativeInvoker.Invoke<BOOL>(0x8507BCB710FA6DC0, (ulong)ped, (ulong)@eventId); }
        internal static BOOL CAN_PED_SEE_HATED_PED(Ped ped1, Ped ped2) { return NativeInvoker.Invoke<BOOL>(0x6CD5A433374D4CFB, (ulong)ped1, (ulong)ped2); }
        internal static BOOL N_0x9C6A6C19B6C0C496(Ped ped, int* p1) { return NativeInvoker.Invoke<BOOL>(0x9C6A6C19B6C0C496, (ulong)ped, (ulong)p1); }
        internal static BOOL N_0x2DFC81C9B9608549(Ped ped, int* p1) { return NativeInvoker.Invoke<BOOL>(0x2DFC81C9B9608549, (ulong)ped, (ulong)p1); }
        internal static int GET_PED_BONE_INDEX(Ped ped, int boneId) { return NativeInvoker.Invoke<int>(0x3F428D08BE5AAE31, (ulong)ped, (ulong)boneId); }
        internal static int GET_PED_RAGDOLL_BONE_INDEX(Ped ped, int bone) { return NativeInvoker.Invoke<int>(0x2057EF813397A772, (ulong)ped, (ulong)bone); }
        internal static void SET_PED_ENVEFF_SCALE(Ped ped, float value) { NativeInvoker.Invoke(0xBF29516833893561, (ulong)ped, *(uint*)&value); }
        internal static float GET_PED_ENVEFF_SCALE(Ped ped) { return NativeInvoker.Invoke<float>(0x9C14D30395A51A3C, (ulong)ped); }
        internal static void SET_ENABLE_PED_ENVEFF_SCALE(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xD2C5AA0C0E8D0F1E, (ulong)ped, (ulong)toggle); }
        internal static void N_0x110F526AB784111F(Ped ped, float p1) { NativeInvoker.Invoke(0x110F526AB784111F, (ulong)ped, *(uint*)&p1); }
        internal static void SET_PED_ENVEFF_COLOR_MODULATOR(Ped ped, int p1, int p2, int p3) { NativeInvoker.Invoke(0xD69411AA0CEBF9E9, (ulong)ped, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void SET_PED_EMISSIVE_INTENSITY_(Ped ped, float intensity) { NativeInvoker.Invoke(0x4E90D746056E273D, (ulong)ped, *(uint*)&intensity); }
        internal static float GET_PED_EMISSIVE_INTENSITY_(Ped ped) { return NativeInvoker.Invoke<float>(0x1461B28A06717D68, (ulong)ped); }
        internal static BOOL IS_PED_SHADER_EFFECT_VALID_(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x81AA517FBBA05D39, (ulong)ped); }
        internal static void N_0xE906EC930F5FE7C8(Any p0, Any p1) { NativeInvoker.Invoke(0xE906EC930F5FE7C8, (ulong)p0, (ulong)p1); }
        internal static void N_0x1216E0BFA72CC703(Any p0, Any p1) { NativeInvoker.Invoke(0x1216E0BFA72CC703, (ulong)p0, (ulong)p1); }
        internal static void SET_PED_AO_BLOB_RENDERING(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x2B5AA717A181FB4C, (ulong)ped, (ulong)toggle); }
        internal static BOOL N_0xB8B52E498014F5B0(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xB8B52E498014F5B0, (ulong)ped); }
        internal static int CREATE_SYNCHRONIZED_SCENE(float x, float y, float z, float roll, float pitch, float yaw, int p6) { return NativeInvoker.Invoke<int>(0x8C18E0F9080ADD73, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&roll, *(uint*)&pitch, *(uint*)&yaw, (ulong)p6); }
        internal static int CREATE_SYNCHRONIZED_SCENE_2_(float x, float y, float z, float radius, Hash @object) { return NativeInvoker.Invoke<int>(0x62EC273D00187DCA, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)@object); }
        internal static BOOL IS_SYNCHRONIZED_SCENE_RUNNING(int sceneId) { return NativeInvoker.Invoke<BOOL>(0x25D39B935A038A26, (ulong)sceneId); }
        internal static void SET_SYNCHRONIZED_SCENE_ORIGIN(int sceneID, float x, float y, float z, float roll, float pitch, float yaw, BOOL p7) { NativeInvoker.Invoke(0x6ACF6B7225801CD7, (ulong)sceneID, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&roll, *(uint*)&pitch, *(uint*)&yaw, (ulong)p7); }
        internal static void SET_SYNCHRONIZED_SCENE_PHASE(int sceneID, float phase) { NativeInvoker.Invoke(0x734292F4F0ABF6D0, (ulong)sceneID, *(uint*)&phase); }
        internal static float GET_SYNCHRONIZED_SCENE_PHASE(int sceneID) { return NativeInvoker.Invoke<float>(0xE4A310B1D7FA73CC, (ulong)sceneID); }
        internal static void SET_SYNCHRONIZED_SCENE_RATE(int sceneID, float rate) { NativeInvoker.Invoke(0xB6C49F8A5E295A5D, (ulong)sceneID, *(uint*)&rate); }
        internal static float GET_SYNCHRONIZED_SCENE_RATE(int sceneID) { return NativeInvoker.Invoke<float>(0xD80932D577274D40, (ulong)sceneID); }
        internal static void SET_SYNCHRONIZED_SCENE_LOOPED(int sceneID, BOOL toggle) { NativeInvoker.Invoke(0xD9A897A4C6C2974F, (ulong)sceneID, (ulong)toggle); }
        internal static BOOL IS_SYNCHRONIZED_SCENE_LOOPED(int sceneID) { return NativeInvoker.Invoke<BOOL>(0x62522002E0C391BA, (ulong)sceneID); }
        internal static void SET_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME(int sceneID, BOOL toggle) { NativeInvoker.Invoke(0x394B9CD12435C981, (ulong)sceneID, (ulong)toggle); }
        internal static BOOL IS_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME(int sceneID) { return NativeInvoker.Invoke<BOOL>(0x7F2F4F13AC5257EF, (ulong)sceneID); }
        internal static void ATTACH_SYNCHRONIZED_SCENE_TO_ENTITY(int sceneID, Entity entity, int boneIndex) { NativeInvoker.Invoke(0x272E4723B56A3B96, (ulong)sceneID, (ulong)entity, (ulong)boneIndex); }
        internal static void DETACH_SYNCHRONIZED_SCENE(int sceneID) { NativeInvoker.Invoke(0x6D38F1F04CBB37EA, (ulong)sceneID); }
        internal static void DISPOSE_SYNCHRONIZED_SCENE_(int scene) { NativeInvoker.Invoke(0xCD9CC7E200A52A6F, (ulong)scene); }
        internal static BOOL FORCE_PED_MOTION_STATE(Ped ped, Hash motionStateHash, BOOL p2, int p3, BOOL p4) { return NativeInvoker.Invoke<BOOL>(0xF28965D04F570DCA, (ulong)ped, (ulong)motionStateHash, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static BOOL GET_PED_CURRENT_MOVEMENT_SPEED_(Ped ped, float* speedX, float* speedY) { return NativeInvoker.Invoke<BOOL>(0xF60165E1D2C5370B, (ulong)ped, (ulong)speedX, (ulong)speedY); }
        internal static void SET_PED_MAX_MOVE_BLEND_RATIO(Ped ped, float value) { NativeInvoker.Invoke(0x433083750C5E064A, (ulong)ped, *(uint*)&value); }
        internal static void SET_PED_MIN_MOVE_BLEND_RATIO(Ped ped, float value) { NativeInvoker.Invoke(0x01A898D26E2333DD, (ulong)ped, *(uint*)&value); }
        internal static void SET_PED_MOVE_RATE_OVERRIDE(Ped ped, float value) { NativeInvoker.Invoke(0x085BF80FA50A39D1, (ulong)ped, *(uint*)&value); }
        internal static void N_0x0B3E35AC043707D9(Any p0, Any p1) { NativeInvoker.Invoke(0x0B3E35AC043707D9, (ulong)p0, (ulong)p1); }
        internal static BOOL N_0x46B05BCAE43856B0(Ped ped, int flag) { return NativeInvoker.Invoke<BOOL>(0x46B05BCAE43856B0, (ulong)ped, (ulong)flag); }
        internal static int GET_PED_NEARBY_VEHICLES(Ped ped, int* sizeAndVehs) { return NativeInvoker.Invoke<int>(0xCFF869CBFA210D82, (ulong)ped, (ulong)sizeAndVehs); }
        internal static int GET_PED_NEARBY_PEDS(Ped ped, int* sizeAndPeds, int ignore) { return NativeInvoker.Invoke<int>(0x23F8F5FC7E8C4A6B, (ulong)ped, (ulong)sizeAndPeds, (ulong)ignore); }
        internal static BOOL HAVE_ALL_STREAMING_REQUESTS_COMPLETED(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x7350823473013C02, (ulong)ped); }
        internal static BOOL IS_PED_USING_ACTION_MODE(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x00E73468D085F745, (ulong)ped); }
        internal static void SET_PED_USING_ACTION_MODE(Ped ped, BOOL p1, int p2, char* action) { NativeInvoker.Invoke(0xD75ACCF5E0FB5367, (ulong)ped, (ulong)p1, (ulong)p2, (ulong)action); }
        internal static void SET_MOVEMENT_MODE_OVERRIDE(Ped ped, char* name) { NativeInvoker.Invoke(0x781DE8FA214E87D2, (ulong)ped, (ulong)name); }
        internal static void SET_PED_CAPSULE(Ped ped, float value) { NativeInvoker.Invoke(0x364DF566EC833DE2, (ulong)ped, *(uint*)&value); }
        internal static int REGISTER_PEDHEADSHOT(Ped ped) { return NativeInvoker.Invoke<int>(0x4462658788425076, (ulong)ped); }
        internal static int REGISTER_PEDHEADSHOT_3_(Ped ped) { return NativeInvoker.Invoke<int>(0xBA8805A1108A2515, (ulong)ped); }
        internal static int REGISTER_PEDHEADSHOT_TRANSPARENT(Ped ped) { return NativeInvoker.Invoke<int>(0x953563CE563143AF, (ulong)ped); }
        internal static void UNREGISTER_PEDHEADSHOT(int id) { NativeInvoker.Invoke(0x96B1361D9B24C2FF, (ulong)id); }
        internal static BOOL IS_PEDHEADSHOT_VALID(int id) { return NativeInvoker.Invoke<BOOL>(0xA0A9668F158129A2, (ulong)id); }
        internal static BOOL IS_PEDHEADSHOT_READY(int id) { return NativeInvoker.Invoke<BOOL>(0x7085228842B13A67, (ulong)id); }
        internal static char* GET_PEDHEADSHOT_TXD_STRING(int id) { return (char*)NativeInvoker.Invoke<IntPtr>(0xDB4EACD4AD0A5D6B, (ulong)id); }
        internal static BOOL REQUEST_PEDHEADSHOT_IMG_UPLOAD(int id) { return NativeInvoker.Invoke<BOOL>(0xF0DAEF2F545BEE25, (ulong)id); }
        internal static void RELEASE_PEDHEADSHOT_IMG_UPLOAD(int id) { NativeInvoker.Invoke(0x5D517B27CF6ECD04, (ulong)id); }
        internal static BOOL IS_PEDHEADSHOT_IMG_UPLOAD_AVAILABLE() { return NativeInvoker.Invoke<BOOL>(0xEBB376779A760AA8); } // 0xEBB376779A760AA8 0x810158F8 b323, (ulong)EBB376779A760AA8); }
        internal static BOOL HAS_PEDHEADSHOT_IMG_UPLOAD_FAILED() { return NativeInvoker.Invoke<BOOL>(0x876928DDDFCCC9CD); } // 0x876928DDDFCCC9CD 0x05023F8F b323, (ulong)876928DDDFCCC9CD); }
        internal static BOOL HAS_PEDHEADSHOT_IMG_UPLOAD_SUCCEEDED() { return NativeInvoker.Invoke<BOOL>(0xE8A169E666CBC541); } // 0xE8A169E666CBC541 0xAA39FD6C b323, (ulong)E8A169E666CBC541); }
        internal static void SET_PED_HEATSCALE_OVERRIDE(Ped ped, float heatScale) { NativeInvoker.Invoke(0xC1F6EBF9A3D55538, (ulong)ped, *(uint*)&heatScale); }
        internal static void DISABLE_PED_HEATSCALE_OVERRIDE(Ped ped) { NativeInvoker.Invoke(0x600048C60D5C2C51, (ulong)ped); }
        internal static void SPAWNPOINTS_START_SEARCH(float p0, float p1, float p2, float p3, float p4, int interiorFlags, float scale, int duration) { NativeInvoker.Invoke(0x2DF9038C90AD5264, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, (ulong)interiorFlags, *(uint*)&scale, (ulong)duration); }
        internal static void SPAWNPOINTS_START_SEARCH_IN_ANGLED_AREA(float x, float y, float z, float p3, float p4, float p5, float p6, int interiorFlags, float scale, int duration) { NativeInvoker.Invoke(0xB2AFF10216DEFA2F, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, (ulong)interiorFlags, *(uint*)&scale, (ulong)duration); }
        internal static void SPAWNPOINTS_CANCEL_SEARCH() { NativeInvoker.Invoke(0xFEE4A5459472A9F8); } // 0xFEE4A5459472A9F8 0x492C9E46 b323<, (ulong)FEE4A5459472A9F8); }
        internal static BOOL SPAWNPOINTS_IS_SEARCH_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0x3C67506996001F5E); } // 0x3C67506996001F5E 0x814A28F4 b323, (ulong)3C67506996001F5E); }
        internal static BOOL SPAWNPOINTS_IS_SEARCH_COMPLETE() { return NativeInvoker.Invoke<BOOL>(0xA586FBEB32A53DBB); } // 0xA586FBEB32A53DBB 0x0B60D2BA b323, (ulong)A586FBEB32A53DBB); }
        internal static BOOL SPAWNPOINTS_IS_SEARCH_FAILED() { return NativeInvoker.Invoke<BOOL>(0xF445DE8DA80A1792); } // 0xF445DE8DA80A1792 0x6B83ABDF b323, (ulong)F445DE8DA80A1792); }
        internal static int SPAWNPOINTS_GET_NUM_SEARCH_RESULTS() { return NativeInvoker.Invoke<int>(0xA635C11B8C44AFC2); } // 0xA635C11B8C44AFC2 0xF46B4DC8 b323, (ulong)A635C11B8C44AFC2); }
        internal static void SPAWNPOINTS_GET_SEARCH_RESULT(int randomInt, float* x, float* y, float* z) { NativeInvoker.Invoke(0x280C7E3AC7F56E90, (ulong)randomInt, (ulong)x, (ulong)y, (ulong)z); }
        internal static void SPAWNPOINTS_GET_SEARCH_RESULT_FLAGS(int p0, int* p1) { NativeInvoker.Invoke(0xB782F8238512BAD5, (ulong)p0, (ulong)p1); }
        internal static void SET_IK_TARGET(Ped ped, int ikIndex, Entity entityLookAt, int boneLookAt, float offsetX, float offsetY, float offsetZ, Any p7, int blendInDuration, int blendOutDuration) { NativeInvoker.Invoke(0xC32779C16FCEECD9, (ulong)ped, (ulong)ikIndex, (ulong)entityLookAt, (ulong)boneLookAt, *(uint*)&offsetX, *(uint*)&offsetY, *(uint*)&offsetZ, (ulong)p7, (ulong)blendInDuration, (ulong)blendOutDuration); }
        internal static void N_0xED3C76ADFA6D07C4(Ped ped) { NativeInvoker.Invoke(0xED3C76ADFA6D07C4, (ulong)ped); }
        internal static void REQUEST_ACTION_MODE_ASSET(char* asset) { NativeInvoker.Invoke(0x290E2780BB7AA598, (ulong)asset); }
        internal static BOOL HAS_ACTION_MODE_ASSET_LOADED(char* asset) { return NativeInvoker.Invoke<BOOL>(0xE4B5F4BF2CB24E65, (ulong)asset); }
        internal static void REMOVE_ACTION_MODE_ASSET(char* asset) { NativeInvoker.Invoke(0x13E940F88470FA51, (ulong)asset); }
        internal static void REQUEST_STEALTH_MODE_ASSET(char* asset) { NativeInvoker.Invoke(0x2A0A62FCDEE16D4F, (ulong)asset); }
        internal static BOOL HAS_STEALTH_MODE_ASSET_LOADED(char* asset) { return NativeInvoker.Invoke<BOOL>(0xE977FC5B08AF3441, (ulong)asset); }
        internal static void REMOVE_STEALTH_MODE_ASSET(char* asset) { NativeInvoker.Invoke(0x9219857D21F0E842, (ulong)asset); }
        internal static void SET_PED_LOD_MULTIPLIER(Ped ped, float multiplier) { NativeInvoker.Invoke(0xDC2C5C242AAC342B, (ulong)ped, *(uint*)&multiplier); }
        internal static void SET_PED_CAN_LOSE_PROPS_ON_DAMAGE(Ped ped, BOOL toggle, int p2) { NativeInvoker.Invoke(0xE861D0B05C7662B8, (ulong)ped, (ulong)toggle, (ulong)p2); }
        internal static void SET_FORCE_FOOTSTEP_UPDATE(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x129466ED55140F8D, (ulong)ped, (ulong)toggle); }
        internal static void SET_FORCE_STEP_TYPE(Ped ped, BOOL p1, int type, int p3) { NativeInvoker.Invoke(0xCB968B53FC7F916D, (ulong)ped, (ulong)p1, (ulong)type, (ulong)p3); }
        internal static BOOL IS_ANY_HOSTILE_PED_NEAR_POINT(Ped ped, float x, float y, float z, float radius) { return NativeInvoker.Invoke<BOOL>(0x68772DB2B2526F9F, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius); }
        internal static void SET_PED_CAN_PLAY_IN_CAR_IDLES_(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x820E9892A77E97CD, (ulong)ped, (ulong)toggle); }
        internal static BOOL IS_TARGET_PED_IN_PERCEPTION_AREA(Ped ped, Ped targetPed, float p2, float p3, float p4, float p5) { return NativeInvoker.Invoke<BOOL>(0x06087579E7AA85A9, (ulong)ped, (ulong)targetPed, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5); }
        internal static void SET_POP_CONTROL_SPHERE_THIS_FRAME(float x, float y, float z, float min, float max) { NativeInvoker.Invoke(0xD8C3BE3EE94CAF2D, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&min, *(uint*)&max); }
        internal static void N_0xD33DAA36272177C4(Ped ped) { NativeInvoker.Invoke(0xD33DAA36272177C4, (ulong)ped); }
        internal static void N_0x711794453CFD692B(Any p0, Any p1) { NativeInvoker.Invoke(0x711794453CFD692B, (ulong)p0, (ulong)p1); }
        internal static void N_0x83A169EABCDB10A2(Any p0, Any p1) { NativeInvoker.Invoke(0x83A169EABCDB10A2, (ulong)p0, (ulong)p1); }
        internal static void N_0x288DF530C92DAD6F(Any p0, float p1) { NativeInvoker.Invoke(0x288DF530C92DAD6F, (ulong)p0, *(uint*)&p1); }
        internal static BOOL IS_PED_SWAPPING_WEAPON_(Ped Ped) { return NativeInvoker.Invoke<BOOL>(0x3795688A307E1EB6, (ulong)Ped); }
        internal static void N_0x0F62619393661D6E(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x0F62619393661D6E, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0xDFE68C4B787E1BFB(Ped ped) { NativeInvoker.Invoke(0xDFE68C4B787E1BFB, (ulong)ped); }
        internal static void SET_ENABLE_SCUBA_GEAR_LIGHT_(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xEE2476B9EE4A094F, (ulong)ped, (ulong)toggle); }
        internal static BOOL IS_SCUBA_GEAR_LIGHT_ENABLED_(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x88274C11CF0D866D, (ulong)ped); }
        internal static void CLEAR_FACIAL_CLIPSET_OVERRIDE_(Ped ped) { NativeInvoker.Invoke(0x637822DC2AFEEBF8, (ulong)ped); }
        internal static void N_0xFAB944D4D481ACCB(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xFAB944D4D481ACCB, (ulong)ped, (ulong)toggle); }
    }

    internal static unsafe class PHYSICS
    {
        internal static int ADD_ROPE(float x, float y, float z, float rotX, float rotY, float rotZ, float length, int ropeType, float maxLength, float minLength, float windingSpeed, BOOL p11, BOOL p12, BOOL rigid, float p14, BOOL breakWhenShot, Any* unkPtr) { return NativeInvoker.Invoke<int>(0xE832D760399EB220, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, *(uint*)&length, (ulong)ropeType, *(uint*)&maxLength, *(uint*)&minLength, *(uint*)&windingSpeed, (ulong)p11, (ulong)p12, (ulong)rigid, *(uint*)&p14, (ulong)breakWhenShot, (ulong)unkPtr); }
        internal static void DELETE_ROPE(int* ropeId) { NativeInvoker.Invoke(0x52B4829281364649, (ulong)ropeId); }
        internal static void DELETE_CHILD_ROPE(int ropeId) { NativeInvoker.Invoke(0xAA5D6B1888E4DB20, (ulong)ropeId); }
        internal static BOOL DOES_ROPE_EXIST(int* ropeId) { return NativeInvoker.Invoke<BOOL>(0xFD5448BE3111ED96, (ulong)ropeId); }
        internal static void N_0xA1AE736541B0FCA3(int* ropeId, BOOL p1) { NativeInvoker.Invoke(0xA1AE736541B0FCA3, (ulong)ropeId, (ulong)p1); }
        internal static void ROPE_DRAW_SHADOW_ENABLED(int* ropeId, BOOL toggle) { NativeInvoker.Invoke(0xF159A63806BB5BA8, (ulong)ropeId, (ulong)toggle); }
        internal static void LOAD_ROPE_DATA(int ropeId, char* rope_preset) { NativeInvoker.Invoke(0xCBB203C04D1ABD27, (ulong)ropeId, (ulong)rope_preset); }
        internal static void PIN_ROPE_VERTEX(int ropeId, int vertex, float x, float y, float z) { NativeInvoker.Invoke(0x2B320CF14146B69A, (ulong)ropeId, (ulong)vertex, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void UNPIN_ROPE_VERTEX(int ropeId, int vertex) { NativeInvoker.Invoke(0x4B5AE2EEE4A8F180, (ulong)ropeId, (ulong)vertex); }
        internal static int GET_ROPE_VERTEX_COUNT(int ropeId) { return NativeInvoker.Invoke<int>(0x3655F544CD30F0B5, (ulong)ropeId); }
        internal static void ATTACH_ENTITIES_TO_ROPE(int ropeId, Entity ent1, Entity ent2, float ent1_x, float ent1_y, float ent1_z, float ent2_x, float ent2_y, float ent2_z, float length, BOOL p10, BOOL p11, Any* p12, Any* p13) { NativeInvoker.Invoke(0x3D95EC8B6D940AC3, (ulong)ropeId, (ulong)ent1, (ulong)ent2, *(uint*)&ent1_x, *(uint*)&ent1_y, *(uint*)&ent1_z, *(uint*)&ent2_x, *(uint*)&ent2_y, *(uint*)&ent2_z, *(uint*)&length, (ulong)p10, (ulong)p11, (ulong)p12, (ulong)p13); }
        internal static void ATTACH_ROPE_TO_ENTITY(int ropeId, Entity entity, float x, float y, float z, BOOL p5) { NativeInvoker.Invoke(0x4B490A6832559A65, (ulong)ropeId, (ulong)entity, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)p5); }
        internal static void DETACH_ROPE_FROM_ENTITY(int ropeId, Entity entity) { NativeInvoker.Invoke(0xBCF3026912A8647D, (ulong)ropeId, (ulong)entity); }
        internal static void ROPE_SET_UPDATE_PINVERTS(int ropeId) { NativeInvoker.Invoke(0xC8D667EE52114ABA, (ulong)ropeId); }
        internal static void ROPE_SET_UPDATE_ORDER(int ropeId, Any p1) { NativeInvoker.Invoke(0xDC57A637A20006ED, (ulong)ropeId, (ulong)p1); }
        internal static void N_0x36CCB9BE67B970FD(int ropeId, BOOL p1) { NativeInvoker.Invoke(0x36CCB9BE67B970FD, (ulong)ropeId, (ulong)p1); }
        internal static BOOL N_0x84DE3B5FB3E666F0(int* ropeId) { return NativeInvoker.Invoke<BOOL>(0x84DE3B5FB3E666F0, (ulong)ropeId); }
        internal static Vector3 GET_ROPE_LAST_VERTEX_COORD(int ropeId) { return NativeInvoker.Invoke<Vector3>(0x21BB0FBD3E217C2D, (ulong)ropeId); }
        internal static Vector3 GET_ROPE_VERTEX_COORD(int ropeId, int vertex) { return NativeInvoker.Invoke<Vector3>(0xEA61CA8E80F09E4D, (ulong)ropeId, (ulong)vertex); }
        internal static void START_ROPE_WINDING(int ropeId) { NativeInvoker.Invoke(0x1461C72C889E343E, (ulong)ropeId); }
        internal static void STOP_ROPE_WINDING(int ropeId) { NativeInvoker.Invoke(0xCB2D4AB84A19AA7C, (ulong)ropeId); }
        internal static void START_ROPE_UNWINDING_FRONT(int ropeId) { NativeInvoker.Invoke(0x538D1179EC1AA9A9, (ulong)ropeId); }
        internal static void STOP_ROPE_UNWINDING_FRONT(int ropeId) { NativeInvoker.Invoke(0xFFF3A50779EFBBB3, (ulong)ropeId); }
        internal static void ROPE_CONVERT_TO_SIMPLE(int ropeId) { NativeInvoker.Invoke(0x5389D48EFA2F079A, (ulong)ropeId); }
        internal static void ROPE_LOAD_TEXTURES() { NativeInvoker.Invoke(0x9B9039DBF2D258C1); } // 0x9B9039DBF2D258C1 0xBA97CE91 b323<, (ulong)9B9039DBF2D258C1); }
        internal static BOOL ROPE_ARE_TEXTURES_LOADED() { return NativeInvoker.Invoke<BOOL>(0xF2D0E6A75CC05597); } // 0xF2D0E6A75CC05597 0x5FDC1047 b323, (ulong)F2D0E6A75CC05597); }
        internal static void ROPE_UNLOAD_TEXTURES() { NativeInvoker.Invoke(0x6CE36C35C1AC8163); } // 0x6CE36C35C1AC8163 0x584463E0 b323<, (ulong)6CE36C35C1AC8163); }
        internal static BOOL DOES_ROPE_BELONG_TO_THIS_SCRIPT_(int ropeId) { return NativeInvoker.Invoke<BOOL>(0x271C9D3ACA5D6409, (ulong)ropeId); }
        internal static void N_0xBC0CE682D4D05650(int ropeId, int p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, float p12, float p13) { NativeInvoker.Invoke(0xBC0CE682D4D05650, (ulong)ropeId, (ulong)p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, *(uint*)&p7, *(uint*)&p8, *(uint*)&p9, *(uint*)&p10, *(uint*)&p11, *(uint*)&p12, *(uint*)&p13); }
        internal static void N_0xB1B6216CA2E7B55E(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xB1B6216CA2E7B55E, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0xB743F735C03D7810(int ropeId, int p1) { NativeInvoker.Invoke(0xB743F735C03D7810, (ulong)ropeId, (ulong)p1); }
        internal static float ROPE_GET_DISTANCE_BETWEEN_ENDS(int ropeId) { return NativeInvoker.Invoke<float>(0x73040398DFF9A4A6, (ulong)ropeId); }
        internal static void ROPE_FORCE_LENGTH(int ropeId, float length) { NativeInvoker.Invoke(0xD009F759A723DB1B, (ulong)ropeId, *(uint*)&length); }
        internal static void ROPE_RESET_LENGTH(int ropeId, float length) { NativeInvoker.Invoke(0xC16DE94D9BEA14A0, (ulong)ropeId, *(uint*)&length); }
        internal static void APPLY_IMPULSE_TO_CLOTH(float posX, float posY, float posZ, float vecX, float vecY, float vecZ, float impulse) { NativeInvoker.Invoke(0xE37F721824571784, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, *(uint*)&vecX, *(uint*)&vecY, *(uint*)&vecZ, *(uint*)&impulse); }
        internal static void SET_DAMPING(Entity entity, int vertex, float value) { NativeInvoker.Invoke(0xEEA3B200A6FEB65B, (ulong)entity, (ulong)vertex, *(uint*)&value); }
        internal static void ACTIVATE_PHYSICS(Entity entity) { NativeInvoker.Invoke(0x710311ADF0E20730, (ulong)entity); }
        internal static void SET_CGOFFSET(Entity entity, float x, float y, float z) { NativeInvoker.Invoke(0xD8FA3908D7B86904, (ulong)entity, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static Vector3 GET_CGOFFSET(Entity entity) { return NativeInvoker.Invoke<Vector3>(0x8214A4B5A7A33612, (ulong)entity); }
        internal static void SET_CG_AT_BOUNDCENTER(Entity entity) { NativeInvoker.Invoke(0xBE520D9761FF811F, (ulong)entity); }
        internal static void BREAK_ENTITY_GLASS(Entity entity, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, Any p9, BOOL p10) { NativeInvoker.Invoke(0x2E648D16F6E308F3, (ulong)entity, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, *(uint*)&p7, *(uint*)&p8, (ulong)p9, (ulong)p10); }
        internal static BOOL GET_HAS_OBJECT_FRAG_INST_(Object @object) { return NativeInvoker.Invoke<BOOL>(0x0C112765300C7E1E, (ulong)@object); }
        internal static void SET_DISABLE_BREAKING(Object @object, BOOL toggle) { NativeInvoker.Invoke(0x5CEC1A84620E7D5B, (ulong)@object, (ulong)toggle); }
        internal static void N_0xCC6E963682533882(Object @object) { NativeInvoker.Invoke(0xCC6E963682533882, (ulong)@object); }
        internal static void SET_DISABLE_FRAG_DAMAGE(Object @object, BOOL toggle) { NativeInvoker.Invoke(0x01BA3AED21C16CFB, (ulong)@object, (ulong)toggle); }
        internal static void SET_ENTITY_PROOF_UNK_(Entity entity, BOOL toggle) { NativeInvoker.Invoke(0x15F944730C832252, (ulong)entity, (ulong)toggle); }
        internal static void N_0x9EBD751E5787BAF2(BOOL p0) { NativeInvoker.Invoke(0x9EBD751E5787BAF2, (ulong)p0); }
        internal static void SET_LAUNCH_CONTROL_ENABLED_(BOOL toggle) { NativeInvoker.Invoke(0xAA6A6098851C396F, (ulong)toggle); }
    }

    internal static unsafe class PLAYER
    {
        internal static Ped GET_PLAYER_PED(Player player) { return NativeInvoker.Invoke<Ped>(0x43A66C31C68491C0, (ulong)player); }
        internal static Ped GET_PLAYER_PED_SCRIPT_INDEX(Player player) { return NativeInvoker.Invoke<Ped>(0x50FAC3A3E030A6E1, (ulong)player); }
        internal static void SET_PLAYER_MODEL(Player player, Hash model) { NativeInvoker.Invoke(0x00A1CADD00108836, (ulong)player, (ulong)model); }
        internal static void CHANGE_PLAYER_PED(Player player, Ped ped, BOOL p2, BOOL resetDamage) { NativeInvoker.Invoke(0x048189FAC643DEEE, (ulong)player, (ulong)ped, (ulong)p2, (ulong)resetDamage); }
        internal static void GET_PLAYER_RGB_COLOUR(Player player, int* r, int* g, int* b) { NativeInvoker.Invoke(0xE902EF951DCE178F, (ulong)player, (ulong)r, (ulong)g, (ulong)b); }
        internal static int GET_NUMBER_OF_PLAYERS() { return NativeInvoker.Invoke<int>(0x407C7F91DDB46C16); } // 0x407C7F91DDB46C16 0x4C1B8867 b323, (ulong)407C7F91DDB46C16); }
        internal static int GET_PLAYER_TEAM(Player player) { return NativeInvoker.Invoke<int>(0x37039302F4E0A008, (ulong)player); }
        internal static void SET_PLAYER_TEAM(Player player, int team) { NativeInvoker.Invoke(0x0299FA38396A4940, (ulong)player, (ulong)team); }
        internal static int GET_NUMBER_OF_PLAYERS_IN_TEAM_(int team) { return NativeInvoker.Invoke<int>(0x1FC200409F10E6F1, (ulong)team); }
        internal static char* GET_PLAYER_NAME(Player player) { return (char*)NativeInvoker.Invoke<IntPtr>(0x6D0DE6A7B5DA71F8, (ulong)player); }
        internal static float GET_WANTED_LEVEL_RADIUS(Player player) { return NativeInvoker.Invoke<float>(0x085DEB493BE80812, (ulong)player); }
        internal static Vector3 GET_PLAYER_WANTED_CENTRE_POSITION(Player player) { return NativeInvoker.Invoke<Vector3>(0x0C92BA89F1AF26F8, (ulong)player); }
        internal static void SET_PLAYER_WANTED_CENTRE_POSITION(Player player, Vector3* position, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0x520E541A97A13354, (ulong)player, (ulong)position, (ulong)p2, (ulong)p3); }
        internal static int GET_WANTED_LEVEL_THRESHOLD(int wantedLevel) { return NativeInvoker.Invoke<int>(0xFDD179EAF45B556C, (ulong)wantedLevel); }
        internal static void SET_PLAYER_WANTED_LEVEL(Player player, int wantedLevel, BOOL disableNoMission) { NativeInvoker.Invoke(0x39FF19C64EF7DA5B, (ulong)player, (ulong)wantedLevel, (ulong)disableNoMission); }
        internal static void SET_PLAYER_WANTED_LEVEL_NO_DROP(Player player, int wantedLevel, BOOL p2) { NativeInvoker.Invoke(0x340E61DE7F471565, (ulong)player, (ulong)wantedLevel, (ulong)p2); }
        internal static void SET_PLAYER_WANTED_LEVEL_NOW(Player player, BOOL p1) { NativeInvoker.Invoke(0xE0A7D1E497FFCD6F, (ulong)player, (ulong)p1); }
        internal static BOOL ARE_PLAYER_FLASHING_STARS_ABOUT_TO_DROP(Player player) { return NativeInvoker.Invoke<BOOL>(0xAFAF86043E5874E9, (ulong)player); }
        internal static BOOL ARE_PLAYER_STARS_GREYED_OUT(Player player) { return NativeInvoker.Invoke<BOOL>(0x0A6EB355EE14A2DB, (ulong)player); }
        internal static Any N_0x7E07C78925D5FD96(Any p0) { return NativeInvoker.Invoke<Any>(0x7E07C78925D5FD96, (ulong)p0); }
        internal static void SET_DISPATCH_COPS_FOR_PLAYER(Player player, BOOL toggle) { NativeInvoker.Invoke(0xDB172424876553F4, (ulong)player, (ulong)toggle); }
        internal static BOOL IS_PLAYER_WANTED_LEVEL_GREATER(Player player, int wantedLevel) { return NativeInvoker.Invoke<BOOL>(0x238DB2A2C23EE9EF, (ulong)player, (ulong)wantedLevel); }
        internal static void CLEAR_PLAYER_WANTED_LEVEL(Player player) { NativeInvoker.Invoke(0xB302540597885499, (ulong)player); }
        internal static BOOL IS_PLAYER_DEAD(Player player) { return NativeInvoker.Invoke<BOOL>(0x424D4687FA1E5652, (ulong)player); }
        internal static BOOL IS_PLAYER_PRESSING_HORN(Player player) { return NativeInvoker.Invoke<BOOL>(0xFA1E2BF8B10598F9, (ulong)player); }
        internal static void SET_PLAYER_CONTROL(Player player, BOOL bHasControl, int flags) { NativeInvoker.Invoke(0x8D32347D6D4C40A2, (ulong)player, (ulong)bHasControl, (ulong)flags); }
        internal static int GET_PLAYER_WANTED_LEVEL(Player player) { return NativeInvoker.Invoke<int>(0xE28E54788CE8F12D, (ulong)player); }
        internal static void SET_MAX_WANTED_LEVEL(int maxWantedLevel) { NativeInvoker.Invoke(0xAA5F02DB48D704B9, (ulong)maxWantedLevel); }
        internal static void SET_POLICE_RADAR_BLIPS(BOOL toggle) { NativeInvoker.Invoke(0x43286D561B72B8BF, (ulong)toggle); }
        internal static void SET_POLICE_IGNORE_PLAYER(Player player, BOOL toggle) { NativeInvoker.Invoke(0x32C62AA929C2DA6A, (ulong)player, (ulong)toggle); }
        internal static BOOL IS_PLAYER_PLAYING(Player player) { return NativeInvoker.Invoke<BOOL>(0x5E9564D8246B909A, (ulong)player); }
        internal static void SET_EVERYONE_IGNORE_PLAYER(Player player, BOOL toggle) { NativeInvoker.Invoke(0x8EEDA153AD141BA4, (ulong)player, (ulong)toggle); }
        internal static void SET_ALL_RANDOM_PEDS_FLEE(Player player, BOOL toggle) { NativeInvoker.Invoke(0x056E0FE8534C2949, (ulong)player, (ulong)toggle); }
        internal static void SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME(Player player) { NativeInvoker.Invoke(0x471D2FF42A94B4F2, (ulong)player); }
        internal static void N_0xDE45D1A1EF45EE61(Player player, BOOL toggle) { NativeInvoker.Invoke(0xDE45D1A1EF45EE61, (ulong)player, (ulong)toggle); }
        internal static void N_0xC3376F42B1FACCC6(Player player) { NativeInvoker.Invoke(0xC3376F42B1FACCC6, (ulong)player); }
        internal static void N_0xFAC75988A7D078D3(Player player) { NativeInvoker.Invoke(0xFAC75988A7D078D3, (ulong)player); }
        internal static void SET_IGNORE_LOW_PRIORITY_SHOCKING_EVENTS(Player player, BOOL toggle) { NativeInvoker.Invoke(0x596976B02B6B5700, (ulong)player, (ulong)toggle); }
        internal static void SET_WANTED_LEVEL_MULTIPLIER(float multiplier) { NativeInvoker.Invoke(0x020E5F00CDA207BA, *(uint*)&multiplier); }
        internal static void SET_WANTED_LEVEL_DIFFICULTY(Player player, float difficulty) { NativeInvoker.Invoke(0x9B0BB33B04405E7A, (ulong)player, *(uint*)&difficulty); }
        internal static void RESET_WANTED_LEVEL_DIFFICULTY(Player player) { NativeInvoker.Invoke(0xB9D0DD990DC141DD, (ulong)player); }
        internal static int GET_WANTED_LEVEL_PAROLE_DURATION_() { return NativeInvoker.Invoke<int>(0xA72200F51875FEA4); } // 0xA72200F51875FEA4 b2372, (ulong)A72200F51875FEA4); }
        internal static void SET_WANTED_LEVEL_HIDDEN_EVASION_TIME_(Player player, int wantedLevel, int lossTime) { NativeInvoker.Invoke(0x49B856B1360C47C7, (ulong)player, (ulong)wantedLevel, (ulong)lossTime); }
        internal static void N_0x823EC8E82BA45986(Any p0) { NativeInvoker.Invoke(0x823EC8E82BA45986, (ulong)p0); }
        internal static void START_FIRING_AMNESTY(int duration) { NativeInvoker.Invoke(0xBF9BD71691857E48, (ulong)duration); }
        internal static void REPORT_CRIME(Player player, int crimeType, int wantedLvlThresh) { NativeInvoker.Invoke(0xE9B09589827545E7, (ulong)player, (ulong)crimeType, (ulong)wantedLvlThresh); }
        internal static void SWITCH_CRIME_TYPE_(Player player, int p1) { NativeInvoker.Invoke(0x9A987297ED8BD838, (ulong)player, (ulong)p1); }
        internal static void N_0xBC9490CA15AEA8FB(Player player) { NativeInvoker.Invoke(0xBC9490CA15AEA8FB, (ulong)player); }
        internal static void N_0x4669B3ED80F24B4E(Player player) { NativeInvoker.Invoke(0x4669B3ED80F24B4E, (ulong)player); }
        internal static void N_0x2F41A3BAE005E5FA(Any p0, Any p1) { NativeInvoker.Invoke(0x2F41A3BAE005E5FA, (ulong)p0, (ulong)p1); }
        internal static void N_0xAD73CE5A09E42D12(Player player) { NativeInvoker.Invoke(0xAD73CE5A09E42D12, (ulong)player); }
        internal static void N_0x36F1B38855F2A8DF(Player player) { NativeInvoker.Invoke(0x36F1B38855F2A8DF, (ulong)player); }
        internal static void REPORT_POLICE_SPOTTED_PLAYER(Player player) { NativeInvoker.Invoke(0xDC64D2C53493ED12, (ulong)player); }
        internal static void N_0xB45EFF719D8427A6(float p0) { NativeInvoker.Invoke(0xB45EFF719D8427A6, *(uint*)&p0); }
        internal static void N_0x0032A6DBA562C518() { NativeInvoker.Invoke(0x0032A6DBA562C518); } // 0x0032A6DBA562C518 0x47CAB814 b323<, (ulong)0032A6DBA562C518); }
        internal static BOOL CAN_PLAYER_START_MISSION(Player player) { return NativeInvoker.Invoke<BOOL>(0xDE7465A27D403C06, (ulong)player); }
        internal static BOOL IS_PLAYER_READY_FOR_CUTSCENE(Player player) { return NativeInvoker.Invoke<BOOL>(0x908CBECC2CAA3690, (ulong)player); }
        internal static BOOL IS_PLAYER_TARGETTING_ENTITY(Player player, Entity entity) { return NativeInvoker.Invoke<BOOL>(0x7912F7FC4F6264B6, (ulong)player, (ulong)entity); }
        internal static BOOL GET_PLAYER_TARGET_ENTITY(Player player, Entity* entity) { return NativeInvoker.Invoke<BOOL>(0x13EDE1A5DBF797C9, (ulong)player, (ulong)entity); }
        internal static BOOL IS_PLAYER_FREE_AIMING(Player player) { return NativeInvoker.Invoke<BOOL>(0x2E397FD2ECD37C87, (ulong)player); }
        internal static BOOL IS_PLAYER_FREE_AIMING_AT_ENTITY(Player player, Entity entity) { return NativeInvoker.Invoke<BOOL>(0x3C06B5C839B38F7B, (ulong)player, (ulong)entity); }
        internal static BOOL GET_ENTITY_PLAYER_IS_FREE_AIMING_AT(Player player, Entity* entity) { return NativeInvoker.Invoke<BOOL>(0x2975C866E6713290, (ulong)player, (ulong)entity); }
        internal static void SET_PLAYER_LOCKON_RANGE_OVERRIDE(Player player, float range) { NativeInvoker.Invoke(0x29961D490E5814FD, (ulong)player, *(uint*)&range); }
        internal static void SET_PLAYER_CAN_DO_DRIVE_BY(Player player, BOOL toggle) { NativeInvoker.Invoke(0x6E8834B52EC20C77, (ulong)player, (ulong)toggle); }
        internal static void SET_PLAYER_CAN_BE_HASSLED_BY_GANGS(Player player, BOOL toggle) { NativeInvoker.Invoke(0xD5E460AD7020A246, (ulong)player, (ulong)toggle); }
        internal static void SET_PLAYER_CAN_USE_COVER(Player player, BOOL toggle) { NativeInvoker.Invoke(0xD465A8599DFF6814, (ulong)player, (ulong)toggle); }
        internal static int GET_MAX_WANTED_LEVEL() { return NativeInvoker.Invoke<int>(0x462E0DB9B137DC5F); } // 0x462E0DB9B137DC5F 0x457F1E44 b323, (ulong)462E0DB9B137DC5F); }
        internal static BOOL IS_PLAYER_TARGETTING_ANYTHING(Player player) { return NativeInvoker.Invoke<BOOL>(0x78CFE51896B6B8A4, (ulong)player); }
        internal static void SET_PLAYER_SPRINT(Player player, BOOL toggle) { NativeInvoker.Invoke(0xA01B8075D8B92DF4, (ulong)player, (ulong)toggle); }
        internal static void RESET_PLAYER_STAMINA(Player player) { NativeInvoker.Invoke(0xA6F312FCCE9C1DFE, (ulong)player); }
        internal static void RESTORE_PLAYER_STAMINA(Player player, float p1) { NativeInvoker.Invoke(0xA352C1B864CAFD33, (ulong)player, *(uint*)&p1); }
        internal static float GET_PLAYER_SPRINT_STAMINA_REMAINING(Player player) { return NativeInvoker.Invoke<float>(0x3F9F16F8E65A7ED7, (ulong)player); }
        internal static float GET_PLAYER_SPRINT_TIME_REMAINING(Player player) { return NativeInvoker.Invoke<float>(0x1885BC9B108B4C99, (ulong)player); }
        internal static float GET_PLAYER_UNDERWATER_TIME_REMAINING(Player player) { return NativeInvoker.Invoke<float>(0xA1FCF8E6AF40B731, (ulong)player); }
        internal static Any SET_PLAYER_UNDERWATER_TIME_REMAINING_(Player player, float time) { return NativeInvoker.Invoke<Any>(0xA0D3E4F7AAFB7E78, (ulong)player, *(uint*)&time); }
        internal static int GET_PLAYER_GROUP(Player player) { return NativeInvoker.Invoke<int>(0x0D127585F77030AF, (ulong)player); }
        internal static int GET_PLAYER_MAX_ARMOUR(Player player) { return NativeInvoker.Invoke<int>(0x92659B4CE1863CB3, (ulong)player); }
        internal static BOOL IS_PLAYER_CONTROL_ON(Player player) { return NativeInvoker.Invoke<BOOL>(0x49C32D60007AFA47, (ulong)player); }
        internal static BOOL IS_PLAYER_CAM_CONTROL_DISABLED_() { return NativeInvoker.Invoke<BOOL>(0x7C814D2FB49F40C0); } // 0x7C814D2FB49F40C0 b323, (ulong)7C814D2FB49F40C0); }
        internal static BOOL IS_PLAYER_SCRIPT_CONTROL_ON(Player player) { return NativeInvoker.Invoke<BOOL>(0x8A876A65283DD7D7, (ulong)player); }
        internal static BOOL IS_PLAYER_CLIMBING(Player player) { return NativeInvoker.Invoke<BOOL>(0x95E8F73DC65EFB9C, (ulong)player); }
        internal static BOOL IS_PLAYER_BEING_ARRESTED(Player player, BOOL atArresting) { return NativeInvoker.Invoke<BOOL>(0x388A47C51ABDAC8E, (ulong)player, (ulong)atArresting); }
        internal static void RESET_PLAYER_ARREST_STATE(Player player) { NativeInvoker.Invoke(0x2D03E13C460760D6, (ulong)player); }
        internal static Vehicle GET_PLAYERS_LAST_VEHICLE() { return NativeInvoker.Invoke<Vehicle>(0xB6997A7EB3F5C8C0); } // 0xB6997A7EB3F5C8C0 0xE2757AC1 b323, (ulong)B6997A7EB3F5C8C0); }
        internal static Player GET_PLAYER_INDEX() { return NativeInvoker.Invoke<Player>(0xA5EDC40EF369B48D); } // 0xA5EDC40EF369B48D 0x309BBDC1 b323, (ulong)A5EDC40EF369B48D); }
        internal static Player INT_TO_PLAYERINDEX(int value) { return NativeInvoker.Invoke<Player>(0x41BD2A6B006AF756, (ulong)value); }
        internal static int INT_TO_PARTICIPANTINDEX(int value) { return NativeInvoker.Invoke<int>(0x9EC6603812C24710, (ulong)value); }
        internal static int GET_TIME_SINCE_PLAYER_HIT_VEHICLE(Player player) { return NativeInvoker.Invoke<int>(0x5D35ECF3A81A0EE0, (ulong)player); }
        internal static int GET_TIME_SINCE_PLAYER_HIT_PED(Player player) { return NativeInvoker.Invoke<int>(0xE36A25322DC35F42, (ulong)player); }
        internal static int GET_TIME_SINCE_PLAYER_DROVE_ON_PAVEMENT(Player player) { return NativeInvoker.Invoke<int>(0xD559D2BE9E37853B, (ulong)player); }
        internal static int GET_TIME_SINCE_PLAYER_DROVE_AGAINST_TRAFFIC(Player player) { return NativeInvoker.Invoke<int>(0xDB89591E290D9182, (ulong)player); }
        internal static BOOL IS_PLAYER_FREE_FOR_AMBIENT_TASK(Player player) { return NativeInvoker.Invoke<BOOL>(0xDCCFD3F106C36AB4, (ulong)player); }
        internal static Player PLAYER_ID() { return NativeInvoker.Invoke<Player>(0x4F8644AF03D0E0D6); } // 0x4F8644AF03D0E0D6 0x8AEA886C b323, (ulong)4F8644AF03D0E0D6); }
        internal static Ped PLAYER_PED_ID() { return NativeInvoker.Invoke<Ped>(0xD80958FC74E988A6); } // 0xD80958FC74E988A6 0xFA92E226 b323, (ulong)D80958FC74E988A6); }
        internal static int NETWORK_PLAYER_ID_TO_INT() { return NativeInvoker.Invoke<int>(0xEE68096F9F37341E); } // 0xEE68096F9F37341E 0x8DD5B838 b323, (ulong)EE68096F9F37341E); }
        internal static BOOL HAS_FORCE_CLEANUP_OCCURRED(int cleanupFlags) { return NativeInvoker.Invoke<BOOL>(0xC968670BFACE42D9, (ulong)cleanupFlags); }
        internal static void FORCE_CLEANUP(int cleanupFlags) { NativeInvoker.Invoke(0xBC8983F38F78ED51, (ulong)cleanupFlags); }
        internal static void FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME(char* name, int cleanupFlags) { NativeInvoker.Invoke(0x4C68DDDDF0097317, (ulong)name, (ulong)cleanupFlags); }
        internal static void FORCE_CLEANUP_FOR_THREAD_WITH_THIS_ID(int id, int cleanupFlags) { NativeInvoker.Invoke(0xF745B37630DF176B, (ulong)id, (ulong)cleanupFlags); }
        internal static int GET_CAUSE_OF_MOST_RECENT_FORCE_CLEANUP() { return NativeInvoker.Invoke<int>(0x9A41CF4674A12272); } // 0x9A41CF4674A12272 0x39AA9FC8 b323, (ulong)9A41CF4674A12272); }
        internal static void SET_PLAYER_MAY_ONLY_ENTER_THIS_VEHICLE(Player player, Vehicle vehicle) { NativeInvoker.Invoke(0x8026FF78F208978A, (ulong)player, (ulong)vehicle); }
        internal static void SET_PLAYER_MAY_NOT_ENTER_ANY_VEHICLE(Player player) { NativeInvoker.Invoke(0x1DE37BBF9E9CC14A, (ulong)player); }
        internal static BOOL GIVE_ACHIEVEMENT_TO_PLAYER(int achievementId) { return NativeInvoker.Invoke<BOOL>(0xBEC7076D64130195, (ulong)achievementId); }
        internal static BOOL SET_ACHIEVEMENT_PROGRESS_(int achievementId, int progress) { return NativeInvoker.Invoke<BOOL>(0xC2AFFFDABBDC2C5C, (ulong)achievementId, (ulong)progress); }
        internal static int GET_ACHIEVEMENT_PROGRESS_(int achievementId) { return NativeInvoker.Invoke<int>(0x1C186837D0619335, (ulong)achievementId); }
        internal static BOOL HAS_ACHIEVEMENT_BEEN_PASSED(int achievementId) { return NativeInvoker.Invoke<BOOL>(0x867365E111A3B6EB, (ulong)achievementId); }
        internal static BOOL IS_PLAYER_ONLINE() { return NativeInvoker.Invoke<BOOL>(0xF25D331DC2627BBC); } // 0xF25D331DC2627BBC 0x9FAB6729 b323, (ulong)F25D331DC2627BBC); }
        internal static BOOL IS_PLAYER_LOGGING_IN_NP() { return NativeInvoker.Invoke<BOOL>(0x74556E1420867ECA); } // 0x74556E1420867ECA 0x8F72FAD0 b323, (ulong)74556E1420867ECA); }
        internal static void DISPLAY_SYSTEM_SIGNIN_UI(BOOL unk) { NativeInvoker.Invoke(0x94DD7888C10A979E, (ulong)unk); }
        internal static BOOL IS_SYSTEM_UI_BEING_DISPLAYED() { return NativeInvoker.Invoke<BOOL>(0x5D511E3867C87139); } // 0x5D511E3867C87139 0xE495B6DA b323, (ulong)5D511E3867C87139); }
        internal static void SET_PLAYER_INVINCIBLE(Player player, BOOL toggle) { NativeInvoker.Invoke(0x239528EACDC3E7DE, (ulong)player, (ulong)toggle); }
        internal static BOOL GET_PLAYER_INVINCIBLE(Player player) { return NativeInvoker.Invoke<BOOL>(0xB721981B2B939E07, (ulong)player); }
        internal static BOOL N_0xDCC07526B8EC45AF(Player player) { return NativeInvoker.Invoke<BOOL>(0xDCC07526B8EC45AF, (ulong)player); }
        internal static void SET_PLAYER_INVINCIBLE_KEEP_RAGDOLL_ENABLED_(Player player, BOOL toggle) { NativeInvoker.Invoke(0x6BC97F4F4BB3C04B, (ulong)player, (ulong)toggle); }
        internal static void N_0xCAC57395B151135F(Player player, BOOL p1) { NativeInvoker.Invoke(0xCAC57395B151135F, (ulong)player, (ulong)p1); }
        internal static void REMOVE_PLAYER_HELMET(Player player, BOOL p2) { NativeInvoker.Invoke(0xF3AC26D3CC576528, (ulong)player, (ulong)p2); }
        internal static void GIVE_PLAYER_RAGDOLL_CONTROL(Player player, BOOL toggle) { NativeInvoker.Invoke(0x3C49C870E66F0A28, (ulong)player, (ulong)toggle); }
        internal static void SET_PLAYER_LOCKON(Player player, BOOL toggle) { NativeInvoker.Invoke(0x5C8B2F450EE4328E, (ulong)player, (ulong)toggle); }
        internal static void SET_PLAYER_TARGETING_MODE(int targetMode) { NativeInvoker.Invoke(0xB1906895227793F3, (ulong)targetMode); }
        internal static void SET_PLAYER_TARGET_LEVEL(int targetLevel) { NativeInvoker.Invoke(0x5702B917B99DB1CD, (ulong)targetLevel); }
        internal static BOOL N_0xB9CF1F793A9F1BF1() { return NativeInvoker.Invoke<BOOL>(0xB9CF1F793A9F1BF1); } // 0xB9CF1F793A9F1BF1 b323, (ulong)B9CF1F793A9F1BF1); }
        internal static BOOL N_0xCB645E85E97EA48B() { return NativeInvoker.Invoke<BOOL>(0xCB645E85E97EA48B); } // 0xCB645E85E97EA48B b372, (ulong)CB645E85E97EA48B); }
        internal static void CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED(Player player) { NativeInvoker.Invoke(0xF0B67A4DE6AB5F98, (ulong)player); }
        internal static BOOL HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED(Player player) { return NativeInvoker.Invoke<BOOL>(0x20CE80B0C2BF4ACC, (ulong)player); }
        internal static void CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED(Player player) { NativeInvoker.Invoke(0x4AACB96203D11A31, (ulong)player); }
        internal static BOOL HAS_PLAYER_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED(Player player) { return NativeInvoker.Invoke<BOOL>(0xE4B90F367BD81752, (ulong)player); }
        internal static void SET_AIR_DRAG_MULTIPLIER_FOR_PLAYERS_VEHICLE(Player player, float multiplier) { NativeInvoker.Invoke(0xCA7DC8329F0A1E9E, (ulong)player, *(uint*)&multiplier); }
        internal static void SET_SWIM_MULTIPLIER_FOR_PLAYER(Player player, float multiplier) { NativeInvoker.Invoke(0xA91C6F0FF7D16A13, (ulong)player, *(uint*)&multiplier); }
        internal static void SET_RUN_SPRINT_MULTIPLIER_FOR_PLAYER(Player player, float multiplier) { NativeInvoker.Invoke(0x6DB47AA77FD94E09, (ulong)player, *(uint*)&multiplier); }
        internal static int GET_TIME_SINCE_LAST_ARREST() { return NativeInvoker.Invoke<int>(0x5063F92F07C2A316); } // 0x5063F92F07C2A316 0x62824EF4 b323, (ulong)5063F92F07C2A316); }
        internal static int GET_TIME_SINCE_LAST_DEATH() { return NativeInvoker.Invoke<int>(0xC7034807558DDFCA); } // 0xC7034807558DDFCA 0x24BC5AC0 b323, (ulong)C7034807558DDFCA); }
        internal static void ASSISTED_MOVEMENT_CLOSE_ROUTE() { NativeInvoker.Invoke(0xAEBF081FFC0A0E5E); } // 0xAEBF081FFC0A0E5E 0xF23277F3 b323<, (ulong)AEBF081FFC0A0E5E); }
        internal static void ASSISTED_MOVEMENT_FLUSH_ROUTE() { NativeInvoker.Invoke(0x8621390F0CDCFE1F); } // 0x8621390F0CDCFE1F 0xD04568B9 b323<, (ulong)8621390F0CDCFE1F); }
        internal static void SET_PLAYER_FORCED_AIM(Player player, BOOL toggle) { NativeInvoker.Invoke(0x0FEE4F80AC44A726, (ulong)player, (ulong)toggle); }
        internal static void SET_PLAYER_FORCED_ZOOM(Player player, BOOL toggle) { NativeInvoker.Invoke(0x75E7D505F2B15902, (ulong)player, (ulong)toggle); }
        internal static void SET_PLAYER_FORCE_SKIP_AIM_INTRO(Player player, BOOL toggle) { NativeInvoker.Invoke(0x7651BC64AE59E128, (ulong)player, (ulong)toggle); }
        internal static void DISABLE_PLAYER_FIRING(Player player, BOOL toggle) { NativeInvoker.Invoke(0x5E6CC07646BBEAB8, (ulong)player, (ulong)toggle); }
        internal static void N_0xB885852C39CC265D() { NativeInvoker.Invoke(0xB885852C39CC265D); } // 0xB885852C39CC265D 0x47D6004E b323<, (ulong)B885852C39CC265D); }
        internal static void SET_DISABLE_AMBIENT_MELEE_MOVE(Player player, BOOL toggle) { NativeInvoker.Invoke(0x2E8AABFA40A84F8C, (ulong)player, (ulong)toggle); }
        internal static void SET_PLAYER_MAX_ARMOUR(Player player, int value) { NativeInvoker.Invoke(0x77DFCCF5948B8C71, (ulong)player, (ulong)value); }
        internal static void SPECIAL_ABILITY_ACTIVATE_(Player player, int p1) { NativeInvoker.Invoke(0x821FDC827D6F4090, (ulong)player, (ulong)p1); }
        internal static void SET_SPECIAL_ABILITY_(Player player, int p1, Any p2) { NativeInvoker.Invoke(0xB214D570EAD7F81A, (ulong)player, (ulong)p1, (ulong)p2); }
        internal static void SPECIAL_ABILITY_DEPLETE_(Player player, int p1) { NativeInvoker.Invoke(0x17F7471EACA78290, (ulong)player, (ulong)p1); }
        internal static void SPECIAL_ABILITY_DEACTIVATE(Player player, Any p1) { NativeInvoker.Invoke(0xD6A953C6D1492057, (ulong)player, (ulong)p1); }
        internal static void SPECIAL_ABILITY_DEACTIVATE_FAST(Player player, Any p1) { NativeInvoker.Invoke(0x9CB5CE07A3968D5A, (ulong)player, (ulong)p1); }
        internal static void SPECIAL_ABILITY_RESET(Player player, Any p1) { NativeInvoker.Invoke(0x375F0E738F861A94, (ulong)player, (ulong)p1); }
        internal static void SPECIAL_ABILITY_CHARGE_ON_MISSION_FAILED(Player player, Any p1) { NativeInvoker.Invoke(0xC9A763D8FE87436A, (ulong)player, (ulong)p1); }
        internal static void SPECIAL_ABILITY_CHARGE_SMALL(Player player, BOOL p1, BOOL p2, Any p3) { NativeInvoker.Invoke(0x2E7B9B683481687D, (ulong)player, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void SPECIAL_ABILITY_CHARGE_MEDIUM(Player player, BOOL p1, BOOL p2, Any p3) { NativeInvoker.Invoke(0xF113E3AA9BC54613, (ulong)player, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void SPECIAL_ABILITY_CHARGE_LARGE(Player player, BOOL p1, BOOL p2, Any p3) { NativeInvoker.Invoke(0xF733F45FA4497D93, (ulong)player, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void SPECIAL_ABILITY_CHARGE_CONTINUOUS(Player player, Ped p1, Any p2) { NativeInvoker.Invoke(0xED481732DFF7E997, (ulong)player, (ulong)p1, (ulong)p2); }
        internal static void SPECIAL_ABILITY_CHARGE_ABSOLUTE(Player player, int p1, BOOL p2, Any p3) { NativeInvoker.Invoke(0xB7B0870EB531D08D, (ulong)player, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void SPECIAL_ABILITY_CHARGE_NORMALIZED(Player player, float normalizedValue, BOOL p2, Any p3) { NativeInvoker.Invoke(0xA0696A65F009EE18, (ulong)player, *(uint*)&normalizedValue, (ulong)p2, (ulong)p3); }
        internal static void SPECIAL_ABILITY_FILL_METER(Player player, BOOL p1, Any p2) { NativeInvoker.Invoke(0x3DACA8DDC6FD4980, (ulong)player, (ulong)p1, (ulong)p2); }
        internal static void SPECIAL_ABILITY_DEPLETE_METER(Player player, BOOL p1, Any p2) { NativeInvoker.Invoke(0x1D506DBBBC51E64B, (ulong)player, (ulong)p1, (ulong)p2); }
        internal static void SPECIAL_ABILITY_LOCK(Hash playerModel, Any p1) { NativeInvoker.Invoke(0x6A09D0D590A47D13, (ulong)playerModel, (ulong)p1); }
        internal static void SPECIAL_ABILITY_UNLOCK(Hash playerModel, Any p1) { NativeInvoker.Invoke(0xF145F3BE2EFA9A3B, (ulong)playerModel, (ulong)p1); }
        internal static BOOL IS_SPECIAL_ABILITY_UNLOCKED(Hash playerModel) { return NativeInvoker.Invoke<BOOL>(0xC6017F6A6CDFA694, (ulong)playerModel); }
        internal static BOOL IS_SPECIAL_ABILITY_ACTIVE(Player player, Any p1) { return NativeInvoker.Invoke<BOOL>(0x3E5F7FC85D854E15, (ulong)player, (ulong)p1); }
        internal static BOOL IS_SPECIAL_ABILITY_METER_FULL(Player player, Any p1) { return NativeInvoker.Invoke<BOOL>(0x05A1FE504B7F2587, (ulong)player, (ulong)p1); }
        internal static void ENABLE_SPECIAL_ABILITY(Player player, BOOL toggle, Any p2) { NativeInvoker.Invoke(0x181EC197DAEFE121, (ulong)player, (ulong)toggle, (ulong)p2); }
        internal static BOOL IS_SPECIAL_ABILITY_ENABLED(Player player, Any p1) { return NativeInvoker.Invoke<BOOL>(0xB1D200FE26AEF3CB, (ulong)player, (ulong)p1); }
        internal static void SET_SPECIAL_ABILITY_MULTIPLIER(float multiplier) { NativeInvoker.Invoke(0xA49C426ED0CA4AB7, *(uint*)&multiplier); }
        internal static void N_0xFFEE8FA29AB9A18E(Player player, Any p1) { NativeInvoker.Invoke(0xFFEE8FA29AB9A18E, (ulong)player, (ulong)p1); }
        internal static BOOL N_0x5FC472C501CCADB3(Player player) { return NativeInvoker.Invoke<BOOL>(0x5FC472C501CCADB3, (ulong)player); }
        internal static BOOL N_0xF10B44FD479D69F3(Player player, int p1) { return NativeInvoker.Invoke<BOOL>(0xF10B44FD479D69F3, (ulong)player, (ulong)p1); }
        internal static BOOL N_0xDD2620B7B9D16FF1(Player player, float p1) { return NativeInvoker.Invoke<BOOL>(0xDD2620B7B9D16FF1, (ulong)player, *(uint*)&p1); }
        internal static void START_PLAYER_TELEPORT(Player player, float x, float y, float z, float heading, BOOL p5, BOOL findCollisionLand, BOOL p7) { NativeInvoker.Invoke(0xAD15F075A4DA0FDE, (ulong)player, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&heading, (ulong)p5, (ulong)findCollisionLand, (ulong)p7); }
        internal static BOOL UPDATE_PLAYER_TELEPORT(Player player) { return NativeInvoker.Invoke<BOOL>(0xE23D5873C2394C61, (ulong)player); }
        internal static void STOP_PLAYER_TELEPORT() { NativeInvoker.Invoke(0xC449EDED9D73009C); } // 0xC449EDED9D73009C 0x86AB8DBB b323<, (ulong)C449EDED9D73009C); }
        internal static BOOL IS_PLAYER_TELEPORT_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0x02B15662D7F8886F); } // 0x02B15662D7F8886F 0x3A11D118 b323, (ulong)02B15662D7F8886F); }
        internal static float GET_PLAYER_CURRENT_STEALTH_NOISE(Player player) { return NativeInvoker.Invoke<float>(0x2F395D61F3A1F877, (ulong)player); }
        internal static void SET_PLAYER_HEALTH_RECHARGE_MULTIPLIER(Player player, float regenRate) { NativeInvoker.Invoke(0x5DB660B38DD98A31, (ulong)player, *(uint*)&regenRate); }
        internal static float GET_PLAYER_HEALTH_RECHARGE_LIMIT_(Player player) { return NativeInvoker.Invoke<float>(0x8BC515BAE4AAF8FF, (ulong)player); }
        internal static void SET_PLAYER_HEALTH_RECHARGE_LIMIT_(Player player, float limit) { NativeInvoker.Invoke(0xC388A0F065F5BC34, (ulong)player, *(uint*)&limit); }
        internal static void SET_PLAYER_FALL_DISTANCE_(Player player, float p1) { NativeInvoker.Invoke(0xEFD79FA81DFBA9CB, (ulong)player, *(uint*)&p1); }
        internal static void SET_PLAYER_WEAPON_DAMAGE_MODIFIER(Player player, float modifier) { NativeInvoker.Invoke(0xCE07B9F7817AADA3, (ulong)player, *(uint*)&modifier); }
        internal static void SET_PLAYER_WEAPON_DEFENSE_MODIFIER(Player player, float modifier) { NativeInvoker.Invoke(0x2D83BC011CA14A3C, (ulong)player, *(uint*)&modifier); }
        internal static void SET_PLAYER_WEAPON_DEFENSE_MODIFIER_2_(Player player, float modifier) { NativeInvoker.Invoke(0xBCFDE9EDE4CF27DC, (ulong)player, *(uint*)&modifier); }
        internal static void SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER(Player player, float modifier, BOOL p2) { NativeInvoker.Invoke(0x4A3DC7ECCC321032, (ulong)player, *(uint*)&modifier, (ulong)p2); }
        internal static void SET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER(Player player, float modifier) { NativeInvoker.Invoke(0xAE540335B4ABC4E2, (ulong)player, *(uint*)&modifier); }
        internal static void SET_PLAYER_VEHICLE_DAMAGE_MODIFIER(Player player, float modifier) { NativeInvoker.Invoke(0xA50E117CDDF82F0C, (ulong)player, *(uint*)&modifier); }
        internal static void SET_PLAYER_VEHICLE_DEFENSE_MODIFIER(Player player, float modifier) { NativeInvoker.Invoke(0x4C60E6EFDAFF2462, (ulong)player, *(uint*)&modifier); }
        internal static void N_0x8D768602ADEF2245(Player player, float p1) { NativeInvoker.Invoke(0x8D768602ADEF2245, (ulong)player, *(uint*)&p1); }
        internal static void N_0xD821056B9ACF8052(Player player, Any p1) { NativeInvoker.Invoke(0xD821056B9ACF8052, (ulong)player, (ulong)p1); }
        internal static void N_0x31E90B8873A4CD3B(Player player, float p1) { NativeInvoker.Invoke(0x31E90B8873A4CD3B, (ulong)player, *(uint*)&p1); }
        internal static void SET_PLAYER_PARACHUTE_TINT_INDEX(Player player, int tintIndex) { NativeInvoker.Invoke(0xA3D0E54541D9A5E5, (ulong)player, (ulong)tintIndex); }
        internal static void GET_PLAYER_PARACHUTE_TINT_INDEX(Player player, int* tintIndex) { NativeInvoker.Invoke(0x75D3F7A1B0D9B145, (ulong)player, (ulong)tintIndex); }
        internal static void SET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX(Player player, int index) { NativeInvoker.Invoke(0xAF04C87F5DC1DF38, (ulong)player, (ulong)index); }
        internal static void GET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX(Player player, int* index) { NativeInvoker.Invoke(0xD5A016BC3C09CF40, (ulong)player, (ulong)index); }
        internal static void SET_PLAYER_PARACHUTE_PACK_TINT_INDEX(Player player, int tintIndex) { NativeInvoker.Invoke(0x93B0FB27C9A04060, (ulong)player, (ulong)tintIndex); }
        internal static void GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(Player player, int* tintIndex) { NativeInvoker.Invoke(0x6E9C742F340CE5A2, (ulong)player, (ulong)tintIndex); }
        internal static void SET_PLAYER_HAS_RESERVE_PARACHUTE(Player player) { NativeInvoker.Invoke(0x7DDAB28D31FAC363, (ulong)player); }
        internal static BOOL GET_PLAYER_HAS_RESERVE_PARACHUTE(Player player) { return NativeInvoker.Invoke<BOOL>(0x5DDFE2FF727F3CA3, (ulong)player); }
        internal static void SET_PLAYER_CAN_LEAVE_PARACHUTE_SMOKE_TRAIL(Player player, BOOL enabled) { NativeInvoker.Invoke(0xF401B182DBA8AF53, (ulong)player, (ulong)enabled); }
        internal static void SET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR(Player player, int r, int g, int b) { NativeInvoker.Invoke(0x8217FD371A4625CF, (ulong)player, (ulong)r, (ulong)g, (ulong)b); }
        internal static void GET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR(Player player, int* r, int* g, int* b) { NativeInvoker.Invoke(0xEF56DBABD3CD4887, (ulong)player, (ulong)r, (ulong)g, (ulong)b); }
        internal static void SET_PLAYER_RESET_FLAG_PREFER_REAR_SEATS(Player player, int flags) { NativeInvoker.Invoke(0x11D5F725F0E780E0, (ulong)player, (ulong)flags); }
        internal static void SET_PLAYER_NOISE_MULTIPLIER(Player player, float multiplier) { NativeInvoker.Invoke(0xDB89EF50FF25FCE9, (ulong)player, *(uint*)&multiplier); }
        internal static void SET_PLAYER_SNEAKING_NOISE_MULTIPLIER(Player player, float multiplier) { NativeInvoker.Invoke(0xB2C1A29588A9F47C, (ulong)player, *(uint*)&multiplier); }
        internal static BOOL CAN_PED_HEAR_PLAYER(Player player, Ped ped) { return NativeInvoker.Invoke<BOOL>(0xF297383AA91DCA29, (ulong)player, (ulong)ped); }
        internal static void SIMULATE_PLAYER_INPUT_GAIT(Player player, float amount, int gaitType, float speed, BOOL p4, BOOL p5) { NativeInvoker.Invoke(0x477D5D63E63ECA5D, (ulong)player, *(uint*)&amount, (ulong)gaitType, *(uint*)&speed, (ulong)p4, (ulong)p5); }
        internal static void RESET_PLAYER_INPUT_GAIT(Player player) { NativeInvoker.Invoke(0x19531C47A2ABD691, (ulong)player); }
        internal static void SET_AUTO_GIVE_PARACHUTE_WHEN_ENTER_PLANE(Player player, BOOL toggle) { NativeInvoker.Invoke(0x9F343285A00B4BB6, (ulong)player, (ulong)toggle); }
        internal static void SET_AUTO_GIVE_SCUBA_GEAR_WHEN_EXIT_VEHICLE(Player player, BOOL toggle) { NativeInvoker.Invoke(0xD2B315B6689D537D, (ulong)player, (ulong)toggle); }
        internal static void SET_PLAYER_STEALTH_PERCEPTION_MODIFIER(Player player, float value) { NativeInvoker.Invoke(0x4E9021C1FCDD507A, (ulong)player, *(uint*)&value); }
        internal static BOOL N_0x690A61A6D13583F6(Player player) { return NativeInvoker.Invoke<BOOL>(0x690A61A6D13583F6, (ulong)player); }
        internal static void N_0x9EDD76E87D5D51BA(Player player) { NativeInvoker.Invoke(0x9EDD76E87D5D51BA, (ulong)player); }
        internal static void SET_PLAYER_SIMULATE_AIMING(Player player, BOOL toggle) { NativeInvoker.Invoke(0xC54C95DA968EC5B5, (ulong)player, (ulong)toggle); }
        internal static void SET_PLAYER_CLOTH_PIN_FRAMES(Player player, int p1) { NativeInvoker.Invoke(0x749FADDF97DFE930, (ulong)player, (ulong)p1); }
        internal static void SET_PLAYER_CLOTH_PACKAGE_INDEX(int index) { NativeInvoker.Invoke(0x9F7BBA2EA6372500, (ulong)index); }
        internal static void SET_PLAYER_CLOTH_LOCK_COUNTER(int value) { NativeInvoker.Invoke(0x14D913B777DFF5DA, (ulong)value); }
        internal static void PLAYER_ATTACH_VIRTUAL_BOUND(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7) { NativeInvoker.Invoke(0xED51733DC73AED51, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, *(uint*)&p7); }
        internal static void PLAYER_DETACH_VIRTUAL_BOUND() { NativeInvoker.Invoke(0x1DD5897E2FA6E7C9); } // 0x1DD5897E2FA6E7C9 0x96100EA4 b323<, (ulong)1DD5897E2FA6E7C9); }
        internal static BOOL HAS_PLAYER_BEEN_SPOTTED_IN_STOLEN_VEHICLE(Player player) { return NativeInvoker.Invoke<BOOL>(0xD705740BB0A1CF4C, (ulong)player); }
        internal static BOOL IS_PLAYER_BATTLE_AWARE(Player player) { return NativeInvoker.Invoke<BOOL>(0x38D28DA81E4E9BF9, (ulong)player); }
        internal static BOOL N_0xBC0753C9CA14B506(Player player, int p1, BOOL p2) { return NativeInvoker.Invoke<BOOL>(0xBC0753C9CA14B506, (ulong)player, (ulong)p1, (ulong)p2); }
        internal static void EXTEND_WORLD_BOUNDARY_FOR_PLAYER(float x, float y, float z) { NativeInvoker.Invoke(0x5006D96C995A5827, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void RESET_WORLD_BOUNDARY_FOR_PLAYER() { NativeInvoker.Invoke(0xDA1DF03D5A315F4E); } // 0xDA1DF03D5A315F4E 0xA97C2F6C b323<, (ulong)DA1DF03D5A315F4E); }
        internal static BOOL IS_PLAYER_RIDING_TRAIN(Player player) { return NativeInvoker.Invoke<BOOL>(0x4EC12697209F2196, (ulong)player); }
        internal static BOOL HAS_PLAYER_LEFT_THE_WORLD(Player player) { return NativeInvoker.Invoke<BOOL>(0xD55DDFB47991A294, (ulong)player); }
        internal static void SET_PLAYER_LEAVE_PED_BEHIND(Player player, BOOL toggle) { NativeInvoker.Invoke(0xFF300C7649724A0B, (ulong)player, (ulong)toggle); }
        internal static void SET_PLAYER_PARACHUTE_VARIATION_OVERRIDE(Player player, int p1, Any p2, Any p3, BOOL p4) { NativeInvoker.Invoke(0xD9284A8C0D48352C, (ulong)player, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void CLEAR_PLAYER_PARACHUTE_VARIATION_OVERRIDE(Player player) { NativeInvoker.Invoke(0x0F4CC924CF8C7B21, (ulong)player); }
        internal static void SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(Player player, Hash model) { NativeInvoker.Invoke(0x977DB4641F6FC3DB, (ulong)player, (ulong)model); }
        internal static void SET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE_(Player player, Hash model) { NativeInvoker.Invoke(0x0764486AEDE748DB, (ulong)player, (ulong)model); }
        internal static Hash GET_PLAYER_PARACHUTE_MODEL_OVERRIDE_(Player player) { return NativeInvoker.Invoke<Hash>(0xC219887CA3E65C41, (ulong)player); }
        internal static Hash GET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE_(Player player) { return NativeInvoker.Invoke<Hash>(0x37FAAA68DCA9D08D, (ulong)player); }
        internal static void CLEAR_PLAYER_PARACHUTE_MODEL_OVERRIDE(Player player) { NativeInvoker.Invoke(0x8753997EB5F6EE3F, (ulong)player); }
        internal static void CLEAR_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE_(Player player) { NativeInvoker.Invoke(0x290D248E25815AE8, (ulong)player); }
        internal static void SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(Player player, Hash model) { NativeInvoker.Invoke(0xDC80A4C2F18A2B64, (ulong)player, (ulong)model); }
        internal static void CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(Player player) { NativeInvoker.Invoke(0x10C54E4389C12B42, (ulong)player); }
        internal static void DISABLE_PLAYER_VEHICLE_REWARDS(Player player) { NativeInvoker.Invoke(0xC142BE3BB9CE125F, (ulong)player); }
        internal static void N_0x2F7CEB6520288061(BOOL p0) { NativeInvoker.Invoke(0x2F7CEB6520288061, (ulong)p0); }
        internal static void SET_PLAYER_BLUETOOTH_STATE(Player player, BOOL state) { NativeInvoker.Invoke(0x5DC40A8869C22141, (ulong)player, (ulong)state); }
        internal static BOOL IS_PLAYER_BLUETOOTH_ENABLE(Player player) { return NativeInvoker.Invoke<BOOL>(0x65FAEE425DE637B0, (ulong)player); }
        internal static void N_0x5501B7A5CDB79D37(Player player) { NativeInvoker.Invoke(0x5501B7A5CDB79D37, (ulong)player); }
        internal static int GET_PLAYER_FAKE_WANTED_LEVEL(Player player) { return NativeInvoker.Invoke<int>(0x56105E599CAB0EFA, (ulong)player); }
        internal static void N_0x55FCC0C390620314(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x55FCC0C390620314, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0x2382AB11450AE7BA(Any p0, Any p1) { NativeInvoker.Invoke(0x2382AB11450AE7BA, (ulong)p0, (ulong)p1); }
        internal static Any N_0x6E4361FF3E8CD7CA(Any p0) { return NativeInvoker.Invoke<Any>(0x6E4361FF3E8CD7CA, (ulong)p0); }
        internal static void N_0x237440E46D918649(Any p0) { NativeInvoker.Invoke(0x237440E46D918649, (ulong)p0); }
        internal static void SET_PLAYER_HOMING_ROCKET_DISABLED_(Any p0, Any p1) { NativeInvoker.Invoke(0xEE4EBDD2593BA844, (ulong)p0, (ulong)p1); }
        internal static void N_0x9097EB6D4BB9A12A(Player player, Entity entity) { NativeInvoker.Invoke(0x9097EB6D4BB9A12A, (ulong)player, (ulong)entity); }
        internal static void N_0x9F260BFB59ADBCA3(Player player, Entity entity) { NativeInvoker.Invoke(0x9F260BFB59ADBCA3, (ulong)player, (ulong)entity); }
        internal static void N_0x7BAE68775557AE0B(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { NativeInvoker.Invoke(0x7BAE68775557AE0B, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static void N_0x7148E0F43D11F0D9() { NativeInvoker.Invoke(0x7148E0F43D11F0D9); } // 0x7148E0F43D11F0D9 b1604<, (ulong)7148E0F43D11F0D9); }
        internal static void N_0x70A382ADEC069DD3(float coordX, float coordY, float coordZ) { NativeInvoker.Invoke(0x70A382ADEC069DD3, *(uint*)&coordX, *(uint*)&coordY, *(uint*)&coordZ); }
    }

    internal static unsafe class RECORDING
    {
        internal static void N_0x48621C9FCA3EBD28(int p0) { NativeInvoker.Invoke(0x48621C9FCA3EBD28, (ulong)p0); }
        internal static void N_0x81CBAE94390F9F89() { NativeInvoker.Invoke(0x81CBAE94390F9F89); } // 0x81CBAE94390F9F89 b323<, (ulong)81CBAE94390F9F89); }
        internal static void N_0x13B350B8AD0EEE10() { NativeInvoker.Invoke(0x13B350B8AD0EEE10); } // 0x13B350B8AD0EEE10 b323<, (ulong)13B350B8AD0EEE10); }
        internal static void N_0x293220DA1B46CEBC(float p0, float p1, int p2) { NativeInvoker.Invoke(0x293220DA1B46CEBC, *(uint*)&p0, *(uint*)&p1, (ulong)p2); }
        internal static void N_0x208784099002BC30(char* missionNameLabel, Any p1) { NativeInvoker.Invoke(0x208784099002BC30, (ulong)missionNameLabel, (ulong)p1); }
        internal static void STOP_RECORDING_THIS_FRAME_() { NativeInvoker.Invoke(0xEB2D525B57F42B40); } // 0xEB2D525B57F42B40 b323<, (ulong)EB2D525B57F42B40); }
        internal static void N_0xF854439EFBB3B583() { NativeInvoker.Invoke(0xF854439EFBB3B583); } // 0xF854439EFBB3B583 b323<, (ulong)F854439EFBB3B583); }
        internal static void DISABLE_ROCKSTAR_EDITOR_CAMERA_CHANGES_() { NativeInvoker.Invoke(0xAF66DCEE6609B148); } // 0xAF66DCEE6609B148 b323<, (ulong)AF66DCEE6609B148); }
        internal static void N_0x66972397E0757E7A(int p0, int p1, int p2) { NativeInvoker.Invoke(0x66972397E0757E7A, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void START_RECORDING_(int mode) { NativeInvoker.Invoke(0xC3AC2FFF9612AC81, (ulong)mode); }
        internal static void STOP_RECORDING_AND_SAVE_CLIP_() { NativeInvoker.Invoke(0x071A5197D6AFC8B3); } // 0x071A5197D6AFC8B3 b323<, (ulong)071A5197D6AFC8B3); }
        internal static void STOP_RECORDING_AND_DISCARD_CLIP_() { NativeInvoker.Invoke(0x88BB3507ED41A240); } // 0x88BB3507ED41A240 b323<, (ulong)88BB3507ED41A240); }
        internal static BOOL SAVE_RECORDING_CLIP_() { return NativeInvoker.Invoke<BOOL>(0x644546EC5287471B); } // 0x644546EC5287471B b323, (ulong)644546EC5287471B); }
        internal static BOOL IS_RECORDING_() { return NativeInvoker.Invoke<BOOL>(0x1897CA71995A90B4); } // 0x1897CA71995A90B4 b323, (ulong)1897CA71995A90B4); }
        internal static Any N_0xDF4B952F7D381B95() { return NativeInvoker.Invoke<Any>(0xDF4B952F7D381B95); } // 0xDF4B952F7D381B95 b323, (ulong)DF4B952F7D381B95); }
        internal static Any N_0x4282E08174868BE3() { return NativeInvoker.Invoke<Any>(0x4282E08174868BE3); } // 0x4282E08174868BE3 b323, (ulong)4282E08174868BE3); }
        internal static BOOL N_0x33D47E85B476ABCD(BOOL p0) { return NativeInvoker.Invoke<BOOL>(0x33D47E85B476ABCD, (ulong)p0); }
    }

    internal static unsafe class REPLAY
    {
        internal static void N_0x7E2BD3EF6C205F09(char* p0, BOOL p1) { NativeInvoker.Invoke(0x7E2BD3EF6C205F09, (ulong)p0, (ulong)p1); }
        internal static BOOL IS_INTERIOR_RENDERING_DISABLED_() { return NativeInvoker.Invoke<BOOL>(0x95AB8B5C992C7B58); } // 0x95AB8B5C992C7B58 b323, (ulong)95AB8B5C992C7B58); }
        internal static void N_0x5AD3932DAEB1E5D3() { NativeInvoker.Invoke(0x5AD3932DAEB1E5D3); } // 0x5AD3932DAEB1E5D3 b323<, (ulong)5AD3932DAEB1E5D3); }
        internal static void N_0xE058175F8EAFE79A(BOOL p0) { NativeInvoker.Invoke(0xE058175F8EAFE79A, (ulong)p0); }
        internal static void RESET_EDITOR_VALUES_() { NativeInvoker.Invoke(0x3353D13F09307691); } // 0x3353D13F09307691 b323<, (ulong)3353D13F09307691); }
        internal static void ACTIVATE_ROCKSTAR_EDITOR_(int p0) { NativeInvoker.Invoke(0x49DA8145672B2725, (ulong)p0); }
    }

    internal static unsafe class SAVEMIGRATION
    {
        internal static Any N_0x84B418E93894AC1C() { return NativeInvoker.Invoke<Any>(0x84B418E93894AC1C); } // 0x84B418E93894AC1C b2372, (ulong)84B418E93894AC1C); }
        internal static Any N_0xE5E9746A66359F9D() { return NativeInvoker.Invoke<Any>(0xE5E9746A66359F9D); } // 0xE5E9746A66359F9D b2372, (ulong)E5E9746A66359F9D); }
        internal static Any N_0x690B76BD2763E068() { return NativeInvoker.Invoke<Any>(0x690B76BD2763E068); } // 0x690B76BD2763E068 b2372, (ulong)690B76BD2763E068); }
    }

    internal static unsafe class SCRIPT
    {
        internal static void REQUEST_SCRIPT(char* scriptName) { NativeInvoker.Invoke(0x6EB5F71AA68F2E8E, (ulong)scriptName); }
        internal static void SET_SCRIPT_AS_NO_LONGER_NEEDED(char* scriptName) { NativeInvoker.Invoke(0xC90D2DCACD56184C, (ulong)scriptName); }
        internal static BOOL HAS_SCRIPT_LOADED(char* scriptName) { return NativeInvoker.Invoke<BOOL>(0xE6CC9F3BA0FB9EF1, (ulong)scriptName); }
        internal static BOOL DOES_SCRIPT_EXIST(char* scriptName) { return NativeInvoker.Invoke<BOOL>(0xFC04745FBE67C19A, (ulong)scriptName); }
        internal static void REQUEST_SCRIPT_WITH_NAME_HASH(Hash scriptHash) { NativeInvoker.Invoke(0xD62A67D26D9653E6, (ulong)scriptHash); }
        internal static void SET_SCRIPT_WITH_NAME_HASH_AS_NO_LONGER_NEEDED(Hash scriptHash) { NativeInvoker.Invoke(0xC5BC038960E9DB27, (ulong)scriptHash); }
        internal static BOOL HAS_SCRIPT_WITH_NAME_HASH_LOADED(Hash scriptHash) { return NativeInvoker.Invoke<BOOL>(0x5F0F0C783EB16C04, (ulong)scriptHash); }
        internal static BOOL DOES_SCRIPT_WITH_NAME_HASH_EXIST(Hash scriptHash) { return NativeInvoker.Invoke<BOOL>(0xF86AA3C56BA31381, (ulong)scriptHash); }
        internal static void TERMINATE_THREAD(int threadId) { NativeInvoker.Invoke(0xC8B189ED9138BCD4, (ulong)threadId); }
        internal static BOOL IS_THREAD_ACTIVE(int threadId) { return NativeInvoker.Invoke<BOOL>(0x46E9AE36D8FA6417, (ulong)threadId); }
        internal static char* GET_NAME_OF_THREAD_(int threadId) { return (char*)NativeInvoker.Invoke<IntPtr>(0x05A42BA9FC8DA96B, (ulong)threadId); }
        internal static void SCRIPT_THREAD_ITERATOR_RESET() { NativeInvoker.Invoke(0xDADFADA5A20143A8); } // 0xDADFADA5A20143A8 0xBB4E2F66 b323<, (ulong)DADFADA5A20143A8); }
        internal static int SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID() { return NativeInvoker.Invoke<int>(0x30B4FA1C82DD4B9F); } // 0x30B4FA1C82DD4B9F 0x1E28B28F b323, (ulong)30B4FA1C82DD4B9F); }
        internal static int GET_ID_OF_THIS_THREAD() { return NativeInvoker.Invoke<int>(0xC30338E8088E2E21); } // 0xC30338E8088E2E21 0xDE524830 b323, (ulong)C30338E8088E2E21); }
        internal static void TERMINATE_THIS_THREAD() { NativeInvoker.Invoke(0x1090044AD1DA76FA); } // 0x1090044AD1DA76FA 0x3CD9CBB7 b323<, (ulong)1090044AD1DA76FA); }
        internal static int GET_NUMBER_OF_REFERENCES_OF_SCRIPT_WITH_NAME_HASH_(Hash scriptHash) { return NativeInvoker.Invoke<int>(0x2C83A9DA6BFFC4F9, (ulong)scriptHash); }
        internal static char* GET_THIS_SCRIPT_NAME() { return (char*)NativeInvoker.Invoke<IntPtr>(0x442E0A7EDE4A738A); } // 0x442E0A7EDE4A738A 0xA40FD5D9 b323, (ulong)442E0A7EDE4A738A); }
        internal static Hash GET_HASH_OF_THIS_SCRIPT_NAME() { return NativeInvoker.Invoke<Hash>(0x8A1C8B1738FFE87E); } // 0x8A1C8B1738FFE87E 0x2BEE1F45 b323, (ulong)8A1C8B1738FFE87E); }
        internal static int GET_NUMBER_OF_EVENTS(int @eventGroup) { return NativeInvoker.Invoke<int>(0x5F92A689A06620AA, (ulong)@eventGroup); }
        internal static BOOL GET_EVENT_EXISTS(int @eventGroup, int @eventIndex) { return NativeInvoker.Invoke<BOOL>(0x936E6168A9BCEDB5, (ulong)@eventGroup, (ulong)@eventIndex); }
        internal static int GET_EVENT_AT_INDEX(int @eventGroup, int @eventIndex) { return NativeInvoker.Invoke<int>(0xD8F66A3A60C62153, (ulong)@eventGroup, (ulong)@eventIndex); }
        internal static BOOL GET_EVENT_DATA(int @eventGroup, int @eventIndex, Any* @eventData, int @eventDataSize) { return NativeInvoker.Invoke<BOOL>(0x2902843FCD2B2D79, (ulong)@eventGroup, (ulong)@eventIndex, (ulong)@eventData, (ulong)@eventDataSize); }
        internal static void TRIGGER_SCRIPT_EVENT(int @eventGroup, Any* @eventData, int @eventDataSize, int playerBits) { NativeInvoker.Invoke(0x5AE99C571D5BBE5D, (ulong)@eventGroup, (ulong)@eventData, (ulong)@eventDataSize, (ulong)playerBits); }
        internal static void SHUTDOWN_LOADING_SCREEN() { NativeInvoker.Invoke(0x078EBE9809CCD637); } // 0x078EBE9809CCD637 0xA2826D17 b323<, (ulong)078EBE9809CCD637); }
        internal static void SET_NO_LOADING_SCREEN(BOOL toggle) { NativeInvoker.Invoke(0x5262CC1995D07E09, (ulong)toggle); }
        internal static BOOL GET_NO_LOADING_SCREEN() { return NativeInvoker.Invoke<BOOL>(0x18C1270EA7F199BC); } // 0x18C1270EA7F199BC 0x27512BA0 b323, (ulong)18C1270EA7F199BC); }
        internal static void N_0xB1577667C3708F9B() { NativeInvoker.Invoke(0xB1577667C3708F9B); } // 0xB1577667C3708F9B 0xB03BCCDF b323<, (ulong)B1577667C3708F9B); }
        internal static BOOL N_0x836B62713E0534CA() { return NativeInvoker.Invoke<BOOL>(0x836B62713E0534CA); } // 0x836B62713E0534CA b323, (ulong)836B62713E0534CA); }
        internal static void N_0x760910B49D2B98EA() { NativeInvoker.Invoke(0x760910B49D2B98EA); } // 0x760910B49D2B98EA b323<, (ulong)760910B49D2B98EA); }
        internal static void BG_START_CONTEXT_HASH(Hash contextHash) { NativeInvoker.Invoke(0x75B18E49607874C7, (ulong)contextHash); }
        internal static void BG_END_CONTEXT_HASH(Hash contextHash) { NativeInvoker.Invoke(0x107E5CC7CA942BC1, (ulong)contextHash); }
        internal static void BG_START_CONTEXT(char* contextName) { NativeInvoker.Invoke(0x9D5A25BADB742ACD, (ulong)contextName); }
        internal static void BG_END_CONTEXT(char* contextName) { NativeInvoker.Invoke(0xDC2BACD920D0A0DD, (ulong)contextName); }
        internal static BOOL N_0x0F6F1EBBC4E1D5E6(int scriptIndex, char* p1) { return NativeInvoker.Invoke<BOOL>(0x0F6F1EBBC4E1D5E6, (ulong)scriptIndex, (ulong)p1); }
        internal static int N_0x22E21FBCFC88C149(int scriptIndex, char* p1) { return NativeInvoker.Invoke<int>(0x22E21FBCFC88C149, (ulong)scriptIndex, (ulong)p1); }
        internal static int N_0x829CD22E043A2577(Hash p0) { return NativeInvoker.Invoke<int>(0x829CD22E043A2577, (ulong)p0); }
        internal static void TRIGGER_SCRIPT_EVENT_2_(int @eventGroup, Any* @eventData, int @eventDataSize, int playerBits) { NativeInvoker.Invoke(0xA40CC53DF8E50837, (ulong)@eventGroup, (ulong)@eventData, (ulong)@eventDataSize, (ulong)playerBits); }
    }

    internal static unsafe class SHAPETEST
    {
        internal static int START_SHAPE_TEST_LOS_PROBE(float x1, float y1, float z1, float x2, float y2, float z2, int flags, Entity entity, int p8) { return NativeInvoker.Invoke<int>(0x7EE9F5D83DD4F90E, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)flags, (ulong)entity, (ulong)p8); }
        internal static int START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE(float x1, float y1, float z1, float x2, float y2, float z2, int flags, Entity entity, int p8) { return NativeInvoker.Invoke<int>(0x377906D8A31E5586, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)flags, (ulong)entity, (ulong)p8); }
        internal static int START_SHAPE_TEST_BOUNDING_BOX(Entity entity, int flags1, int flags2) { return NativeInvoker.Invoke<int>(0x052837721A854EC7, (ulong)entity, (ulong)flags1, (ulong)flags2); }
        internal static int START_SHAPE_TEST_BOX(float x, float y, float z, float x1, float y2, float z2, float rotX, float rotY, float rotZ, Any p9, int flags, Entity entity, Any p12) { return NativeInvoker.Invoke<int>(0xFE466162C4401D18, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&x1, *(uint*)&y2, *(uint*)&z2, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, (ulong)p9, (ulong)flags, (ulong)entity, (ulong)p12); }
        internal static int START_SHAPE_TEST_BOUND(Entity entity, int flags1, int flags2) { return NativeInvoker.Invoke<int>(0x37181417CE7C8900, (ulong)entity, (ulong)flags1, (ulong)flags2); }
        internal static int START_SHAPE_TEST_CAPSULE(float x1, float y1, float z1, float x2, float y2, float z2, float radius, int flags, Entity entity, int p9) { return NativeInvoker.Invoke<int>(0x28579D1B8F8AAC80, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&radius, (ulong)flags, (ulong)entity, (ulong)p9); }
        internal static int START_SHAPE_TEST_SWEPT_SPHERE(float x1, float y1, float z1, float x2, float y2, float z2, float radius, int flags, Entity entity, Any p9) { return NativeInvoker.Invoke<int>(0xE6AC6C45FBE83004, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, *(uint*)&radius, (ulong)flags, (ulong)entity, (ulong)p9); }
        internal static int START_SHAPE_TEST_SURROUNDING_COORDS_(Vector3* pVec1, Vector3* pVec2, int flag, Entity entity, int flag2) { return NativeInvoker.Invoke<int>(0xFF6BE494C7987F34, (ulong)pVec1, (ulong)pVec2, (ulong)flag, (ulong)entity, (ulong)flag2); }
        internal static int GET_SHAPE_TEST_RESULT(int shapeTestHandle, BOOL* hit, Vector3* endCoords, Vector3* surfaceNormal, Entity* entityHit) { return NativeInvoker.Invoke<int>(0x3D87450E15D98694, (ulong)shapeTestHandle, (ulong)hit, (ulong)endCoords, (ulong)surfaceNormal, (ulong)entityHit); }
        internal static int GET_SHAPE_TEST_RESULT_INCLUDING_MATERIAL(int shapeTestHandle, BOOL* hit, Vector3* endCoords, Vector3* surfaceNormal, Hash* materialHash, Entity* entityHit) { return NativeInvoker.Invoke<int>(0x65287525D951F6BE, (ulong)shapeTestHandle, (ulong)hit, (ulong)endCoords, (ulong)surfaceNormal, (ulong)materialHash, (ulong)entityHit); }
        internal static void RELEASE_SCRIPT_GUID_FROM_ENTITY(Entity entityHit) { NativeInvoker.Invoke(0x2B3334BCA57CD799, (ulong)entityHit); }
    }

    internal static unsafe class SOCIALCLUB
    {
        internal static int SC_INBOX_GET_TOTAL_NUM_MESSAGES() { return NativeInvoker.Invoke<int>(0x03A93FF1A2CA0864); } // 0x03A93FF1A2CA0864 0x6BE5DF29 b323, (ulong)03A93FF1A2CA0864); }
        internal static Hash SC_INBOX_GET_MESSAGE_TYPE_AT_INDEX(int msgIndex) { return NativeInvoker.Invoke<Hash>(0xBB8EA16ECBC976C4, (ulong)msgIndex); }
        internal static BOOL SC_INBOX_GET_MESSAGE_IS_READ_AT_INDEX(int msgIndex) { return NativeInvoker.Invoke<BOOL>(0x93028F1DB42BFD08, (ulong)msgIndex); }
        internal static BOOL SC_INBOX_MESSAGE_POP_(int p0) { return NativeInvoker.Invoke<BOOL>(0x2C015348CF19CA1D, (ulong)p0); }
        internal static BOOL SC_INBOX_MESSAGE_GET_DATA_INT(int p0, char* context, int* @out) { return NativeInvoker.Invoke<BOOL>(0xA00EFE4082C4056E, (ulong)p0, (ulong)context, (ulong)@out); }
        internal static BOOL SC_INBOX_MESSAGE_GET_DATA_BOOL_(int p0, char* p1) { return NativeInvoker.Invoke<BOOL>(0xFFE5C16F402D851D, (ulong)p0, (ulong)p1); }
        internal static BOOL SC_INBOX_MESSAGE_GET_DATA_STRING(int p0, char* context, char* @out) { return NativeInvoker.Invoke<BOOL>(0x7572EF42FC6A9B6D, (ulong)p0, (ulong)context, (ulong)@out); }
        internal static BOOL SC_INBOX_MESSAGE_DO_APPLY(int p0) { return NativeInvoker.Invoke<BOOL>(0x9A2C8064B6C1E41A, (ulong)p0); }
        internal static char* SC_INBOX_MESSAGE_GET_STRING_(int p0) { return (char*)NativeInvoker.Invoke<IntPtr>(0xF3E31D16CBDCB304, (ulong)p0); }
        internal static void SC_INBOX_MESSAGE_PUSH_GAMER_TO_EVENT_RECIP_LIST_(Any* gamerHandle) { NativeInvoker.Invoke(0xDA024BDBD600F44A, (ulong)gamerHandle); }
        internal static void SC_INBOX_MESSAGE_SEND_UGC_STAT_UPDATE_EVENT_(Any* data) { NativeInvoker.Invoke(0xA68D3D229F4F3B06, (ulong)data); }
        internal static BOOL SC_INBOX_MESSAGE_GET_UGCDATA(int p0, Any* p1) { return NativeInvoker.Invoke<BOOL>(0x69D82604A1A5A254, (ulong)p0, (ulong)p1); }
        internal static BOOL SC_INBOX_MESSAGE_SEND_BOUNTY_PRESENCE_EVENT_(Any* data) { return NativeInvoker.Invoke<BOOL>(0x6AFD2CD753FEEF83, (ulong)data); }
        internal static BOOL SC_INBOX_MESSAGE_GET_BOUNTY_DATA_(int index, Any* outData) { return NativeInvoker.Invoke<BOOL>(0x87E0052F08BD64E6, (ulong)index, (ulong)outData); }
        internal static void SC_INBOX_GET_EMAILS_(int offset, int limit) { NativeInvoker.Invoke(0x040ADDCBAFA1018A, (ulong)offset, (ulong)limit); }
        internal static Any N_0x16DA8172459434AA() { return NativeInvoker.Invoke<Any>(0x16DA8172459434AA); } // 0x16DA8172459434AA b323, (ulong)16DA8172459434AA); }
        internal static Any N_0x7DB18CA8CAD5B098() { return NativeInvoker.Invoke<Any>(0x7DB18CA8CAD5B098); } // 0x7DB18CA8CAD5B098 b505, (ulong)7DB18CA8CAD5B098); }
        internal static BOOL N_0x4737980E8A283806(int p0, Any* p1) { return NativeInvoker.Invoke<BOOL>(0x4737980E8A283806, (ulong)p0, (ulong)p1); }
        internal static void N_0x44ACA259D67651DB(Any* p0, Any p1) { NativeInvoker.Invoke(0x44ACA259D67651DB, (ulong)p0, (ulong)p1); }
        internal static void SC_EMAIL_MESSAGE_PUSH_GAMER_TO_RECIP_LIST(Any* gamerHandle) { NativeInvoker.Invoke(0x2330C12A7A605D16, (ulong)gamerHandle); }
        internal static void SC_EMAIL_MESSAGE_CLEAR_RECIP_LIST() { NativeInvoker.Invoke(0x55DF6DB45179236E); } // 0x55DF6DB45179236E 0xD094F11A b323<, (ulong)55DF6DB45179236E); }
        internal static void N_0x116FB94DC4B79F17(char* p0) { NativeInvoker.Invoke(0x116FB94DC4B79F17, (ulong)p0); }
        internal static Any N_0x07DBD622D9533857(Any p0) { return NativeInvoker.Invoke<Any>(0x07DBD622D9533857, (ulong)p0); }
        internal static void SET_HANDLE_ROCKSTAR_MESSAGE_VIA_SCRIPT_(BOOL toggle) { NativeInvoker.Invoke(0xBFA0A56A817C6C7D, (ulong)toggle); }
        internal static BOOL IS_ROCKSTAR_MESSAGE_READY_FOR_SCRIPT_() { return NativeInvoker.Invoke<BOOL>(0xBC1CC91205EC8D6E); } // 0xBC1CC91205EC8D6E 0x6C5738AB b323, (ulong)BC1CC91205EC8D6E); }
        internal static char* ROCKSTAR_MESSAGE_GET_STRING_() { return (char*)NativeInvoker.Invoke<IntPtr>(0xDF649C4E9AFDD788); } // 0xDF649C4E9AFDD788 0x468668F0 b323, (ulong)DF649C4E9AFDD788); }
        internal static BOOL SC_PRESENCE_ATTR_SET_INT(Hash attrHash, int value) { return NativeInvoker.Invoke<BOOL>(0x1F1E9682483697C7, (ulong)attrHash, (ulong)value); }
        internal static BOOL SC_PRESENCE_ATTR_SET_FLOAT(Hash attrHash, float value) { return NativeInvoker.Invoke<BOOL>(0xC4C4575F62534A24, (ulong)attrHash, *(uint*)&value); }
        internal static BOOL SC_PRESENCE_ATTR_SET_STRING(Hash attrHash, char* value) { return NativeInvoker.Invoke<BOOL>(0x287F1F75D2803595, (ulong)attrHash, (ulong)value); }
        internal static BOOL N_0x487912FD248EFDDF(Any p0, float p1) { return NativeInvoker.Invoke<BOOL>(0x487912FD248EFDDF, (ulong)p0, *(uint*)&p1); }
        internal static Any N_0xC85A7127E7AD02AA() { return NativeInvoker.Invoke<Any>(0xC85A7127E7AD02AA); } // 0xC85A7127E7AD02AA b323, (ulong)C85A7127E7AD02AA); }
        internal static Any N_0xA770C8EEC6FB2AC5() { return NativeInvoker.Invoke<Any>(0xA770C8EEC6FB2AC5); } // 0xA770C8EEC6FB2AC5 b323, (ulong)A770C8EEC6FB2AC5); }
        internal static BOOL SC_GET_IS_PROFILE_ATTRIBUTE_SET_(char* name) { return NativeInvoker.Invoke<BOOL>(0x8416FE4E4629D7D7, (ulong)name); }
        internal static Any N_0x7FFCBFEE44ECFABF() { return NativeInvoker.Invoke<Any>(0x7FFCBFEE44ECFABF); } // 0x7FFCBFEE44ECFABF b323, (ulong)7FFCBFEE44ECFABF); }
        internal static Any N_0x2D874D4AE612A65F() { return NativeInvoker.Invoke<Any>(0x2D874D4AE612A65F); } // 0x2D874D4AE612A65F b323, (ulong)2D874D4AE612A65F); }
        internal static BOOL SC_PROFANITY_CHECK_STRING(char* @string, int* token) { return NativeInvoker.Invoke<BOOL>(0x75632C5ECD7ED843, (ulong)@string, (ulong)token); }
        internal static BOOL SC_PROFANITY_CHECK_UGC_STRING_(char* @string, int* token) { return NativeInvoker.Invoke<BOOL>(0xEB2BF817463DFA28, (ulong)@string, (ulong)token); }
        internal static BOOL SC_PROFANITY_GET_CHECK_IS_VALID(int token) { return NativeInvoker.Invoke<BOOL>(0x1753344C770358AE, (ulong)token); }
        internal static BOOL SC_PROFANITY_GET_CHECK_IS_PENDING(int token) { return NativeInvoker.Invoke<BOOL>(0x82E4A58BABC15AE7, (ulong)token); }
        internal static BOOL SC_PROFANITY_GET_STRING_PASSED(int token) { return NativeInvoker.Invoke<BOOL>(0x85535ACF97FC0969, (ulong)token); }
        internal static int SC_PROFANITY_GET_STRING_STATUS(int token) { return NativeInvoker.Invoke<int>(0x930DE22F07B1CCE3, (ulong)token); }
        internal static BOOL N_0xF6BAAAF762E1BF40(char* p0, int* p1) { return NativeInvoker.Invoke<BOOL>(0xF6BAAAF762E1BF40, (ulong)p0, (ulong)p1); }
        internal static BOOL N_0xF22CA0FD74B80E7A(Any p0) { return NativeInvoker.Invoke<BOOL>(0xF22CA0FD74B80E7A, (ulong)p0); }
        internal static Any N_0x9237E334F6E43156(Any p0) { return NativeInvoker.Invoke<Any>(0x9237E334F6E43156, (ulong)p0); }
        internal static Any N_0x700569DBA175A77C(Any p0) { return NativeInvoker.Invoke<Any>(0x700569DBA175A77C, (ulong)p0); }
        internal static Any N_0x1D4446A62D35B0D0(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0x1D4446A62D35B0D0, (ulong)p0, (ulong)p1); }
        internal static Any N_0x2E89990DDFF670C3(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0x2E89990DDFF670C3, (ulong)p0, (ulong)p1); }
        internal static BOOL N_0xD0EE05FE193646EA(char* p0, char* p1, Any* p2) { return NativeInvoker.Invoke<BOOL>(0xD0EE05FE193646EA, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL N_0x1989C6E6F67E76A8(char* p0, Any* p1, int* p2) { return NativeInvoker.Invoke<BOOL>(0x1989C6E6F67E76A8, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static Any N_0x07C61676E5BB52CD(Any p0) { return NativeInvoker.Invoke<Any>(0x07C61676E5BB52CD, (ulong)p0); }
        internal static Any N_0x8147FFF6A718E1AD(Any p0) { return NativeInvoker.Invoke<Any>(0x8147FFF6A718E1AD, (ulong)p0); }
        internal static BOOL N_0x0F73393BAC7E6730(char* p0, int* p1) { return NativeInvoker.Invoke<BOOL>(0x0F73393BAC7E6730, (ulong)p0, (ulong)p1); }
        internal static int N_0xD302E99EDF0449CF(int p0) { return NativeInvoker.Invoke<int>(0xD302E99EDF0449CF, (ulong)p0); }
        internal static int N_0x5C4EBFFA98BDB41C(int p0) { return NativeInvoker.Invoke<int>(0x5C4EBFFA98BDB41C, (ulong)p0); }
        internal static BOOL N_0xFF8F3A92B75ED67A() { return NativeInvoker.Invoke<BOOL>(0xFF8F3A92B75ED67A); } // 0xFF8F3A92B75ED67A 0xC96456BA b323, (ulong)FF8F3A92B75ED67A); }
        internal static int N_0x4ED9C8D6DA297639() { return NativeInvoker.Invoke<int>(0x4ED9C8D6DA297639); } // 0x4ED9C8D6DA297639 0xC5E08B66 b323, (ulong)4ED9C8D6DA297639); }
        internal static BOOL N_0x710BCDA8071EDED1(char* p0, int* p1) { return NativeInvoker.Invoke<BOOL>(0x710BCDA8071EDED1, (ulong)p0, (ulong)p1); }
        internal static BOOL N_0x50A8A36201DBF83E(char* p0, float* p1) { return NativeInvoker.Invoke<BOOL>(0x50A8A36201DBF83E, (ulong)p0, (ulong)p1); }
        internal static BOOL N_0x9DE5D2F723575ED0(char* p0, char* p1) { return NativeInvoker.Invoke<BOOL>(0x9DE5D2F723575ED0, (ulong)p0, (ulong)p1); }
        internal static BOOL N_0xC2C97EA97711D1AE(char* p0) { return NativeInvoker.Invoke<BOOL>(0xC2C97EA97711D1AE, (ulong)p0); }
        internal static BOOL N_0x450819D8CF90C416(char* p0) { return NativeInvoker.Invoke<BOOL>(0x450819D8CF90C416, (ulong)p0); }
        internal static int N_0x4A7D6E727F941747(char* p0) { return NativeInvoker.Invoke<int>(0x4A7D6E727F941747, (ulong)p0); }
        internal static BOOL N_0xE75A4A2E5E316D86(char* p0, int* p1, char* p2) { return NativeInvoker.Invoke<BOOL>(0xE75A4A2E5E316D86, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL N_0x2570E26BE63964E3(char* p0, float* p1, char* p2) { return NativeInvoker.Invoke<BOOL>(0x2570E26BE63964E3, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL N_0x1D12A56FC95BE92E(char* p0, char* p1, char* p2) { return NativeInvoker.Invoke<BOOL>(0x1D12A56FC95BE92E, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL N_0x33DF47CC0642061B(char* p0, char* p1) { return NativeInvoker.Invoke<BOOL>(0x33DF47CC0642061B, (ulong)p0, (ulong)p1); }
        internal static BOOL N_0xA468E0BE12B12C70(int p0) { return NativeInvoker.Invoke<BOOL>(0xA468E0BE12B12C70, (ulong)p0); }
        internal static BOOL N_0x8CC469AB4D349B7C(int p0, char* p1, int* p2) { return NativeInvoker.Invoke<BOOL>(0x8CC469AB4D349B7C, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL N_0xC5A35C73B68F3C49(int p0, char* p1, float* p2) { return NativeInvoker.Invoke<BOOL>(0xC5A35C73B68F3C49, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL N_0x699E4A5C8C893A18(int p0, char* p1, char* p2) { return NativeInvoker.Invoke<BOOL>(0x699E4A5C8C893A18, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL N_0x19853B5B17D77BCA(int p0, char* p1) { return NativeInvoker.Invoke<BOOL>(0x19853B5B17D77BCA, (ulong)p0, (ulong)p1); }
        internal static BOOL N_0x6BFB12CE158E3DD4(Any p0) { return NativeInvoker.Invoke<BOOL>(0x6BFB12CE158E3DD4, (ulong)p0); }
        internal static BOOL N_0xFE4C1D0D3B9CC17E(Any p0, Any p1) { return NativeInvoker.Invoke<BOOL>(0xFE4C1D0D3B9CC17E, (ulong)p0, (ulong)p1); }
        internal static Any N_0xD8122C407663B995() { return NativeInvoker.Invoke<Any>(0xD8122C407663B995); } // 0xD8122C407663B995 0x1C65B038 b323, (ulong)D8122C407663B995); }
        internal static BOOL N_0x3001BEF2FECA3680() { return NativeInvoker.Invoke<BOOL>(0x3001BEF2FECA3680); } // 0x3001BEF2FECA3680 0x4D4C37B3 b323, (ulong)3001BEF2FECA3680); }
        internal static BOOL N_0x92DA6E70EF249BD1(char* p0, int* p1) { return NativeInvoker.Invoke<BOOL>(0x92DA6E70EF249BD1, (ulong)p0, (ulong)p1); }
        internal static void N_0x675721C9F644D161() { NativeInvoker.Invoke(0x675721C9F644D161); } // 0x675721C9F644D161 0x486867E6 b323<, (ulong)675721C9F644D161); }
        internal static Any N_0xE4F6E8D07A2F0F51(Any p0) { return NativeInvoker.Invoke<Any>(0xE4F6E8D07A2F0F51, (ulong)p0); }
        internal static BOOL N_0x8A4416C0DB05FA66(Any p0) { return NativeInvoker.Invoke<BOOL>(0x8A4416C0DB05FA66, (ulong)p0); }
        internal static void N_0xEA95C0853A27888E() { NativeInvoker.Invoke(0xEA95C0853A27888E); } // 0xEA95C0853A27888E b1290<, (ulong)EA95C0853A27888E); }
        internal static char* SC_GET_NICKNAME_() { return (char*)NativeInvoker.Invoke<IntPtr>(0x198D161F458ECC7F); } // 0x198D161F458ECC7F b323, (ulong)198D161F458ECC7F); }
        internal static BOOL N_0x225798743970412B(int* p0) { return NativeInvoker.Invoke<BOOL>(0x225798743970412B, (ulong)p0); }
        internal static BOOL SC_GET_HAS_ACHIEVEMENT_BEEN_PASSED_(int achievementId) { return NativeInvoker.Invoke<BOOL>(0x418DC16FAE452C1C, (ulong)achievementId); }
    }

    internal static unsafe class STATS
    {
        internal static Any STAT_CLEAR_SLOT_FOR_RELOAD(int statSlot) { return NativeInvoker.Invoke<Any>(0xEB0A72181D4AA4AD, (ulong)statSlot); }
        internal static BOOL STAT_LOAD(int p0) { return NativeInvoker.Invoke<BOOL>(0xA651443F437B1CE6, (ulong)p0); }
        internal static BOOL STAT_SAVE(int p0, BOOL p1, int p2, Any p3) { return NativeInvoker.Invoke<BOOL>(0xE07BCA305B82D2FD, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x5688585E6D563CD8(int p0) { NativeInvoker.Invoke(0x5688585E6D563CD8, (ulong)p0); }
        internal static BOOL STAT_LOAD_PENDING(Any p0) { return NativeInvoker.Invoke<BOOL>(0xA1750FFAFA181661, (ulong)p0); }
        internal static BOOL STAT_SAVE_PENDING() { return NativeInvoker.Invoke<BOOL>(0x7D3A583856F2C5AC); } // 0x7D3A583856F2C5AC 0xC3FD3822 b323, (ulong)7D3A583856F2C5AC); }
        internal static BOOL STAT_SAVE_PENDING_OR_REQUESTED() { return NativeInvoker.Invoke<BOOL>(0xBBB6AD006F1BBEA3); } // 0xBBB6AD006F1BBEA3 0xA3407CA3 b323, (ulong)BBB6AD006F1BBEA3); }
        internal static Any STAT_DELETE_SLOT(Any p0) { return NativeInvoker.Invoke<Any>(0x49A49BED12794D70, (ulong)p0); }
        internal static BOOL STAT_SLOT_IS_LOADED(Any p0) { return NativeInvoker.Invoke<BOOL>(0x0D0A9F0E7BD91E3C, (ulong)p0); }
        internal static BOOL N_0x7F2C4CDF2E82DF4C(Any p0) { return NativeInvoker.Invoke<BOOL>(0x7F2C4CDF2E82DF4C, (ulong)p0); }
        internal static Any N_0xE496A53BA5F50A56(Any p0) { return NativeInvoker.Invoke<Any>(0xE496A53BA5F50A56, (ulong)p0); }
        internal static void STAT_SET_BLOCK_SAVES(BOOL toggle) { NativeInvoker.Invoke(0xF434A10BA01C37D0, (ulong)toggle); }
        internal static BOOL N_0x6A7F19756F1A9016() { return NativeInvoker.Invoke<BOOL>(0x6A7F19756F1A9016); } // 0x6A7F19756F1A9016 b2060, (ulong)6A7F19756F1A9016); }
        internal static BOOL N_0x7E6946F68A38B74F(Any p0) { return NativeInvoker.Invoke<BOOL>(0x7E6946F68A38B74F, (ulong)p0); }
        internal static void N_0xA8733668D1047B51(Any p0) { NativeInvoker.Invoke(0xA8733668D1047B51, (ulong)p0); }
        internal static BOOL N_0xECB41AC6AB754401() { return NativeInvoker.Invoke<BOOL>(0xECB41AC6AB754401); } // 0xECB41AC6AB754401 0xED7000C8 b323, (ulong)ECB41AC6AB754401); }
        internal static void N_0x9B4BD21D69B1E609() { NativeInvoker.Invoke(0x9B4BD21D69B1E609); } // 0x9B4BD21D69B1E609 b323<, (ulong)9B4BD21D69B1E609); }
        internal static Any N_0xC0E0D686DDFC6EAE() { return NativeInvoker.Invoke<Any>(0xC0E0D686DDFC6EAE); } // 0xC0E0D686DDFC6EAE 0x099FCC86 b323, (ulong)C0E0D686DDFC6EAE); }
        internal static BOOL STAT_SET_INT(Hash statName, int value, BOOL save) { return NativeInvoker.Invoke<BOOL>(0xB3271D7AB655B441, (ulong)statName, (ulong)value, (ulong)save); }
        internal static BOOL STAT_SET_FLOAT(Hash statName, float value, BOOL save) { return NativeInvoker.Invoke<BOOL>(0x4851997F37FE9B3C, (ulong)statName, *(uint*)&value, (ulong)save); }
        internal static BOOL STAT_SET_BOOL(Hash statName, BOOL value, BOOL save) { return NativeInvoker.Invoke<BOOL>(0x4B33C4243DE0C432, (ulong)statName, (ulong)value, (ulong)save); }
        internal static BOOL STAT_SET_GXT_LABEL(Hash statName, char* value, BOOL save) { return NativeInvoker.Invoke<BOOL>(0x17695002FD8B2AE0, (ulong)statName, (ulong)value, (ulong)save); }
        internal static BOOL STAT_SET_DATE(Hash statName, Any* value, int numFields, BOOL save) { return NativeInvoker.Invoke<BOOL>(0x2C29BFB64F4FCBE4, (ulong)statName, (ulong)value, (ulong)numFields, (ulong)save); }
        internal static BOOL STAT_SET_STRING(Hash statName, char* value, BOOL save) { return NativeInvoker.Invoke<BOOL>(0xA87B2335D12531D7, (ulong)statName, (ulong)value, (ulong)save); }
        internal static BOOL STAT_SET_POS(Hash statName, float x, float y, float z, BOOL save) { return NativeInvoker.Invoke<BOOL>(0xDB283FDE680FE72E, (ulong)statName, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)save); }
        internal static BOOL STAT_SET_MASKED_INT(Hash statName, Any p1, Any p2, int p3, BOOL save) { return NativeInvoker.Invoke<BOOL>(0x7BBB1B54583ED410, (ulong)statName, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)save); }
        internal static BOOL STAT_SET_USER_ID(Hash statName, char* value, BOOL save) { return NativeInvoker.Invoke<BOOL>(0x8CDDF1E452BABE11, (ulong)statName, (ulong)value, (ulong)save); }
        internal static BOOL STAT_SET_CURRENT_POSIX_TIME(Hash statName, BOOL p1) { return NativeInvoker.Invoke<BOOL>(0xC2F84B7F9C4D0C61, (ulong)statName, (ulong)p1); }
        internal static BOOL STAT_GET_INT(Hash statHash, int* outValue, int p2) { return NativeInvoker.Invoke<BOOL>(0x767FBC2AC802EF3D, (ulong)statHash, (ulong)outValue, (ulong)p2); }
        internal static BOOL STAT_GET_FLOAT(Hash statHash, float* outValue, Any p2) { return NativeInvoker.Invoke<BOOL>(0xD7AE6C9C9C6AC54C, (ulong)statHash, (ulong)outValue, (ulong)p2); }
        internal static BOOL STAT_GET_BOOL(Hash statHash, BOOL* outValue, Any p2) { return NativeInvoker.Invoke<BOOL>(0x11B5E6D2AE73F48E, (ulong)statHash, (ulong)outValue, (ulong)p2); }
        internal static BOOL STAT_GET_DATE(Hash statHash, Any* p1, Any p2, Any p3) { return NativeInvoker.Invoke<BOOL>(0x8B0FACEFC36C824B, (ulong)statHash, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static char* STAT_GET_STRING(Hash statHash, int p1) { return (char*)NativeInvoker.Invoke<IntPtr>(0xE50384ACC2C3DB74, (ulong)statHash, (ulong)p1); }
        internal static BOOL STAT_GET_POS(Any p0, Any* p1, Any* p2, Any* p3, Any p4) { return NativeInvoker.Invoke<BOOL>(0x350F82CCB186AA1B, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static BOOL STAT_GET_MASKED_INT(Any p0, Any* p1, Any p2, Any p3, Any p4) { return NativeInvoker.Invoke<BOOL>(0x655185A06D9EEAAB, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static char* STAT_GET_USER_ID(Any p0) { return (char*)NativeInvoker.Invoke<IntPtr>(0x2365C388E393BBE2, (ulong)p0); }
        internal static char* STAT_GET_LICENSE_PLATE(Hash statName) { return (char*)NativeInvoker.Invoke<IntPtr>(0x5473D4195058B2E4, (ulong)statName); }
        internal static BOOL STAT_SET_LICENSE_PLATE(Hash statName, char* str) { return NativeInvoker.Invoke<BOOL>(0x69FF13266D7296DA, (ulong)statName, (ulong)str); }
        internal static void STAT_INCREMENT(Hash statName, float value) { NativeInvoker.Invoke(0x9B5A68C6489E9909, (ulong)statName, *(uint*)&value); }
        internal static BOOL N_0x5A556B229A169402() { return NativeInvoker.Invoke<BOOL>(0x5A556B229A169402); } // 0x5A556B229A169402 0x46F21343 b323, (ulong)5A556B229A169402); }
        internal static BOOL N_0xB1D2BB1E1631F5B1() { return NativeInvoker.Invoke<BOOL>(0xB1D2BB1E1631F5B1); } // 0xB1D2BB1E1631F5B1 0x02F283CE b323, (ulong)B1D2BB1E1631F5B1); }
        internal static BOOL N_0xBED9F5693F34ED17(Hash statName, int p1, float* outValue) { return NativeInvoker.Invoke<BOOL>(0xBED9F5693F34ED17, (ulong)statName, (ulong)p1, (ulong)outValue); }
        internal static void N_0x26D7399B9587FE89(int p0) { NativeInvoker.Invoke(0x26D7399B9587FE89, (ulong)p0); }
        internal static void N_0xA78B8FA58200DA56(int p0) { NativeInvoker.Invoke(0xA78B8FA58200DA56, (ulong)p0); }
        internal static int STAT_GET_NUMBER_OF_DAYS(Hash statName) { return NativeInvoker.Invoke<int>(0xE0E854F5280FB769, (ulong)statName); }
        internal static int STAT_GET_NUMBER_OF_HOURS(Hash statName) { return NativeInvoker.Invoke<int>(0xF2D4B2FE415AAFC3, (ulong)statName); }
        internal static int STAT_GET_NUMBER_OF_MINUTES(Hash statName) { return NativeInvoker.Invoke<int>(0x7583B4BE4C5A41B5, (ulong)statName); }
        internal static int STAT_GET_NUMBER_OF_SECONDS(Hash statName) { return NativeInvoker.Invoke<int>(0x2CE056FF3723F00B, (ulong)statName); }
        internal static void STAT_SET_PROFILE_SETTING_VALUE(int profileSetting, int value) { NativeInvoker.Invoke(0x68F01422BE1D838F, (ulong)profileSetting, (ulong)value); }
        internal static void N_0xC01D2470F22CDE5A() { NativeInvoker.Invoke(0xC01D2470F22CDE5A); } // 0xC01D2470F22CDE5A b2372<, (ulong)C01D2470F22CDE5A); }
        internal static int STAT_GET_PACKED_BOOL_MASK_(int p0) { return NativeInvoker.Invoke<int>(0xF4D8E7AC2A27758C, (ulong)p0); }
        internal static int STAT_GET_PACKED_INT_MASK_(int p0) { return NativeInvoker.Invoke<int>(0x94F12ABF9C79E339, (ulong)p0); }
        internal static Hash GET_PACKED_BOOL_STAT_KEY(int index, BOOL spStat, BOOL charStat, int character) { return NativeInvoker.Invoke<Hash>(0x80C75307B1C42837, (ulong)index, (ulong)spStat, (ulong)charStat, (ulong)character); }
        internal static Hash GET_PACKED_INT_STAT_KEY(int index, BOOL spStat, BOOL charStat, int character) { return NativeInvoker.Invoke<Hash>(0x61E111E323419E07, (ulong)index, (ulong)spStat, (ulong)charStat, (ulong)character); }
        internal static Hash GET_PACKED_TU_BOOL_STAT_KEY(int index, BOOL spStat, BOOL charStat, int character) { return NativeInvoker.Invoke<Hash>(0xC4BB08EE7907471E, (ulong)index, (ulong)spStat, (ulong)charStat, (ulong)character); }
        internal static Hash GET_PACKED_TU_INT_STAT_KEY(int index, BOOL spStat, BOOL charStat, int character) { return NativeInvoker.Invoke<Hash>(0xD16C2AD6B8E32854, (ulong)index, (ulong)spStat, (ulong)charStat, (ulong)character); }
        internal static Hash GET_NGSTAT_BOOL_HASH_(int index, BOOL spStat, BOOL charStat, int character, char* section) { return NativeInvoker.Invoke<Hash>(0xBA52FF538ED2BC71, (ulong)index, (ulong)spStat, (ulong)charStat, (ulong)character, (ulong)section); }
        internal static Hash GET_NGSTAT_INT_HASH_(int index, BOOL spStat, BOOL charStat, int character, char* section) { return NativeInvoker.Invoke<Hash>(0x2B4CDCA6F07FF3DA, (ulong)index, (ulong)spStat, (ulong)charStat, (ulong)character, (ulong)section); }
        internal static BOOL STAT_GET_BOOL_MASKED(Hash statName, int mask, int p2) { return NativeInvoker.Invoke<BOOL>(0x10FE3F1B79F9B071, (ulong)statName, (ulong)mask, (ulong)p2); }
        internal static BOOL STAT_SET_BOOL_MASKED(Hash statName, BOOL value, int mask, BOOL save) { return NativeInvoker.Invoke<BOOL>(0x5BC62EC1937B9E5B, (ulong)statName, (ulong)value, (ulong)mask, (ulong)save); }
        internal static void PLAYSTATS_BACKGROUND_SCRIPT_ACTION(char* action, int value) { NativeInvoker.Invoke(0x5009DFD741329729, (ulong)action, (ulong)value); }
        internal static void PLAYSTATS_NPC_INVITE(Any* p0) { NativeInvoker.Invoke(0x93054C88E6AA7C44, (ulong)p0); }
        internal static void PLAYSTATS_AWARD_XP(int amount, Hash type, Hash category) { NativeInvoker.Invoke(0x46F917F6B4128FE4, (ulong)amount, (ulong)type, (ulong)category); }
        internal static void PLAYSTATS_RANK_UP(int rank) { NativeInvoker.Invoke(0xC7F2DE41D102BFB4, (ulong)rank); }
        internal static void PLAYSTATS_START_OFFLINE_MODE_() { NativeInvoker.Invoke(0x098760C7461724CD); } // 0x098760C7461724CD 0x896CDF8D b323<, (ulong)098760C7461724CD); }
        internal static void PLAYSTATS_ACTIVITY_DONE(Any p0, Any p1) { NativeInvoker.Invoke(0xA071E0ED98F91286, (ulong)p0, (ulong)p1); }
        internal static void PLAYSTATS_LEAVE_JOB_CHAIN(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0xC5BE134EC7BA96A0, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void PLAYSTATS_MISSION_STARTED(Any* p0, Any p1, Any p2, BOOL p3) { NativeInvoker.Invoke(0xC19A2925C34D2231, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void PLAYSTATS_MISSION_OVER(Any* p0, Any p1, Any p2, BOOL p3, BOOL p4, BOOL p5) { NativeInvoker.Invoke(0x7C4BB33A8CED7324, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static void PLAYSTATS_MISSION_CHECKPOINT(Any* p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xC900596A63978C1D, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void PLAYSTATS_RANDOM_MISSION_DONE(char* name, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x71862B1D855F32E1, (ulong)name, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void PLAYSTATS_ROS_BET(int amount, int act, Player player, float cm) { NativeInvoker.Invoke(0x121FB4DDDC2D5291, (ulong)amount, (ulong)act, (ulong)player, *(uint*)&cm); }
        internal static void PLAYSTATS_RACE_CHECKPOINT(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x9C375C315099DDE4, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static BOOL N_0x6DEE77AFF8C21BD1(int* playerAccountId, int* posixTime) { return NativeInvoker.Invoke<BOOL>(0x6DEE77AFF8C21BD1, (ulong)playerAccountId, (ulong)posixTime); }
        internal static void PLAYSTATS_MATCH_STARTED(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0xBC80E22DED931E3D, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void PLAYSTATS_SHOP_ITEM(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x176852ACAAC173D1, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void PLAYSTATS_CRATE_DROP_MISSION_DONE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7) { NativeInvoker.Invoke(0x1CAE5D2E3F9A07F0, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7); }
        internal static void PLAYSTATS_CRATE_CREATED_MISSION_DONE_(float p0, float p1, float p2) { NativeInvoker.Invoke(0xAFC7E5E075A96F46, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2); }
        internal static void PLAYSTATS_HOLD_UP_MISSION_DONE(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xCB00196B31C39EB1, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void PLAYSTATS_IMPORT_EXPORT_MISSION_DONE(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x2B69F5074C894811, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void PLAYSTATS_RACE_TO_POINT_MISSION_DONE(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xADDD1C754E2E2914, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void PLAYSTATS_ACQUIRED_HIDDEN_PACKAGE(Any p0) { NativeInvoker.Invoke(0x79AB33F0FBFAC40C, (ulong)p0); }
        internal static void PLAYSTATS_WEBSITE_VISITED(Hash scaleformHash, int p1) { NativeInvoker.Invoke(0xDDF24D535060F811, (ulong)scaleformHash, (ulong)p1); }
        internal static void PLAYSTATS_FRIEND_ACTIVITY(Any p0, Any p1) { NativeInvoker.Invoke(0x0F71DE29AB2258F1, (ulong)p0, (ulong)p1); }
        internal static void PLAYSTATS_ODDJOB_DONE(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x69DEA3E9DB727B4C, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void PLAYSTATS_PROP_CHANGE(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xBA739D6D5A05D6E7, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void PLAYSTATS_CLOTH_CHANGE(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x34B973047A2268B9, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void PLAYSTATS_WEAPON_MODE_CHANGE(Hash weaponHash, Hash componentHashTo, Hash componentHashFrom) { NativeInvoker.Invoke(0xE95C8A1875A02CA4, (ulong)weaponHash, (ulong)componentHashTo, (ulong)componentHashFrom); }
        internal static void PLAYSTATS_CHEAT_APPLIED(char* cheat) { NativeInvoker.Invoke(0x6058665D72302D3F, (ulong)cheat); }
        internal static void N_0xF8C54A461C3E11DC(Any* p0, Any* p1, Any* p2, Any* p3) { NativeInvoker.Invoke(0xF8C54A461C3E11DC, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0xF5BB8DAC426A52C0(Any* p0, Any* p1, Any* p2, Any* p3) { NativeInvoker.Invoke(0xF5BB8DAC426A52C0, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0xA736CF7FB7C5BFF4(Any* p0, Any* p1, Any* p2, Any* p3) { NativeInvoker.Invoke(0xA736CF7FB7C5BFF4, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x14E0B2D1AD1044E0(Any* p0, Any* p1, Any* p2, Any* p3) { NativeInvoker.Invoke(0x14E0B2D1AD1044E0, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void PLAYSTATS_QUICKFIX_TOOL(int element, char* item) { NativeInvoker.Invoke(0x90D0622866E80445, (ulong)element, (ulong)item); }
        internal static void PLAYSTATS_IDLE_KICK(int time) { NativeInvoker.Invoke(0x5DA3A8DE8CB6226F, (ulong)time); }
        internal static void N_0xD1032E482629049E(int p0) { NativeInvoker.Invoke(0xD1032E482629049E, (ulong)p0); }
        internal static void PLAYSTATS_HEIST_SAVE_CHEAT_(Hash hash, int p1) { NativeInvoker.Invoke(0xF4FF020A08BC8863, (ulong)hash, (ulong)p1); }
        internal static void PLAYSTATS_DIRECTOR_MODE_(Any* p0) { NativeInvoker.Invoke(0x46326E13DA4E0546, (ulong)p0); }
        internal static void PLAYSTATS_AWARD_BADSPORT_(int id) { NativeInvoker.Invoke(0x47B32F5611E6E483, (ulong)id); }
        internal static void PLAYSTATS_PEGASAIRCRAFT_(Hash modelHash) { NativeInvoker.Invoke(0x9572BD4DD6B72122, (ulong)modelHash); }
        internal static void N_0x6A60E43998228229(Any p0) { NativeInvoker.Invoke(0x6A60E43998228229, (ulong)p0); }
        internal static void N_0xBFAFDB5FAAA5C5AB(Any p0) { NativeInvoker.Invoke(0xBFAFDB5FAAA5C5AB, (ulong)p0); }
        internal static void N_0x8C9D11605E59D955(Any p0) { NativeInvoker.Invoke(0x8C9D11605E59D955, (ulong)p0); }
        internal static void N_0x3DE3AA516FB126A4(Any p0) { NativeInvoker.Invoke(0x3DE3AA516FB126A4, (ulong)p0); }
        internal static void N_0xBAA2F0490E146BE8(Any p0) { NativeInvoker.Invoke(0xBAA2F0490E146BE8, (ulong)p0); }
        internal static void N_0x1A7CE7CD3E653485(Any p0) { NativeInvoker.Invoke(0x1A7CE7CD3E653485, (ulong)p0); }
        internal static void N_0x419615486BBF1956(Any p0) { NativeInvoker.Invoke(0x419615486BBF1956, (ulong)p0); }
        internal static void N_0x84DFC579C2FC214C(Any p0) { NativeInvoker.Invoke(0x84DFC579C2FC214C, (ulong)p0); }
        internal static void N_0x0A9C7F36E5D7B683(Any p0) { NativeInvoker.Invoke(0x0A9C7F36E5D7B683, (ulong)p0); }
        internal static void N_0x164C5FF663790845(Any p0) { NativeInvoker.Invoke(0x164C5FF663790845, (ulong)p0); }
        internal static void N_0xEDBF6C9B0D2C65C8(Any p0) { NativeInvoker.Invoke(0xEDBF6C9B0D2C65C8, (ulong)p0); }
        internal static void N_0x6551B1F7F6CD46EA(Any p0) { NativeInvoker.Invoke(0x6551B1F7F6CD46EA, (ulong)p0); }
        internal static void N_0x2CD90358F67D0AA8(Any p0) { NativeInvoker.Invoke(0x2CD90358F67D0AA8, (ulong)p0); }
        internal static void PLAYSTATS_PI_MENU_HIDE_SETTINGS_(Any* data) { NativeInvoker.Invoke(0x203B381133817079, (ulong)data); }
        internal static Any LEADERBOARDS_GET_NUMBER_OF_COLUMNS(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0x117B45156D7EFF2E, (ulong)p0, (ulong)p1); }
        internal static Any LEADERBOARDS_GET_COLUMN_ID(Any p0, Any p1, Any p2) { return NativeInvoker.Invoke<Any>(0xC4B5467A1886EA7E, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static Any LEADERBOARDS_GET_COLUMN_TYPE(Any p0, Any p1, Any p2) { return NativeInvoker.Invoke<Any>(0xBF4FEF46DB7894D3, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static Any LEADERBOARDS_READ_CLEAR_ALL() { return NativeInvoker.Invoke<Any>(0xA34CB6E6F0DF4A0B); } // 0xA34CB6E6F0DF4A0B 0x233E058A b323, (ulong)A34CB6E6F0DF4A0B); }
        internal static Any LEADERBOARDS_READ_CLEAR(Any p0, Any p1, Any p2) { return NativeInvoker.Invoke<Any>(0x7CCE5C737A665701, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL LEADERBOARDS_READ_PENDING(Any p0, Any p1, Any p2) { return NativeInvoker.Invoke<BOOL>(0xAC392C8483342AC2, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL LEADERBOARDS_READ_ANY_PENDING() { return NativeInvoker.Invoke<BOOL>(0xA31FD15197B192BD); } // 0xA31FD15197B192BD 0x1789437B b323, (ulong)A31FD15197B192BD); }
        internal static BOOL LEADERBOARDS_READ_SUCCESSFUL(Any p0, Any p1, Any p2) { return NativeInvoker.Invoke<BOOL>(0x2FB19228983E832C, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL LEADERBOARDS2_READ_FRIENDS_BY_ROW(Any* p0, Any* p1, Any p2, BOOL p3, Any p4, Any p5) { return NativeInvoker.Invoke<BOOL>(0x918B101666F9CB83, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static BOOL LEADERBOARDS2_READ_BY_HANDLE(Any* p0, Any* p1) { return NativeInvoker.Invoke<BOOL>(0xC30713A383BFBF0E, (ulong)p0, (ulong)p1); }
        internal static BOOL LEADERBOARDS2_READ_BY_ROW(Any* p0, Any* p1, Any p2, Any* p3, Any p4, Any* p5, Any p6) { return NativeInvoker.Invoke<BOOL>(0xA9CDB1E3F0A49883, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static BOOL LEADERBOARDS2_READ_BY_RANK(Any* p0, Any p1, Any p2) { return NativeInvoker.Invoke<BOOL>(0xBA2C7DB0C129449A, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL LEADERBOARDS2_READ_BY_RADIUS(Any* p0, Any p1, Any* p2) { return NativeInvoker.Invoke<BOOL>(0x5CE587FB5A42C8C4, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL LEADERBOARDS2_READ_BY_SCORE_INT(Any* p0, Any p1, Any p2) { return NativeInvoker.Invoke<BOOL>(0x7EEC7E4F6984A16A, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL LEADERBOARDS2_READ_BY_SCORE_FLOAT(Any* p0, float p1, Any p2) { return NativeInvoker.Invoke<BOOL>(0xE662C8B759D08F3C, (ulong)p0, *(uint*)&p1, (ulong)p2); }
        internal static BOOL LEADERBOARDS2_READ_RANK_PREDICTION(Any* p0, Any* p1, Any* p2) { return NativeInvoker.Invoke<BOOL>(0xC38DC1E90D22547C, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL LEADERBOARDS2_READ_BY_PLATFORM_(Any* p0, char* gamerHandleCsv, char* platformName) { return NativeInvoker.Invoke<BOOL>(0xF1AE5DCDBFCA2721, (ulong)p0, (ulong)gamerHandleCsv, (ulong)platformName); }
        internal static BOOL N_0xA0F93D5465B3094D(Any* p0) { return NativeInvoker.Invoke<BOOL>(0xA0F93D5465B3094D, (ulong)p0); }
        internal static void N_0x71B008056E5692D6() { NativeInvoker.Invoke(0x71B008056E5692D6); } // 0x71B008056E5692D6 0xF2DB6A82 b323<, (ulong)71B008056E5692D6); }
        internal static BOOL N_0x34770B9CE0E03B91(Any p0, Any* p1) { return NativeInvoker.Invoke<BOOL>(0x34770B9CE0E03B91, (ulong)p0, (ulong)p1); }
        internal static Any N_0x88578F6EC36B4A3A(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0x88578F6EC36B4A3A, (ulong)p0, (ulong)p1); }
        internal static float N_0x38491439B6BA7F7D(Any p0, Any p1) { return NativeInvoker.Invoke<float>(0x38491439B6BA7F7D, (ulong)p0, (ulong)p1); }
        internal static BOOL LEADERBOARDS2_WRITE_DATA(Any* p0) { return NativeInvoker.Invoke<BOOL>(0xAE2206545888AE49, (ulong)p0); }
        internal static void LEADERBOARDS_WRITE_ADD_COLUMN(Any p0, Any p1, float p2) { NativeInvoker.Invoke(0x0BCA1D2C47B0D269, (ulong)p0, (ulong)p1, *(uint*)&p2); }
        internal static void LEADERBOARDS_WRITE_ADD_COLUMN_LONG(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x2E65248609523599, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static BOOL LEADERBOARDS_CACHE_DATA_ROW(Any* p0) { return NativeInvoker.Invoke<BOOL>(0xB9BB18E2C40142ED, (ulong)p0); }
        internal static void LEADERBOARDS_CLEAR_CACHE_DATA() { NativeInvoker.Invoke(0xD4B02A6B476E1FDC); } // 0xD4B02A6B476E1FDC 0x87F498C1 b323<, (ulong)D4B02A6B476E1FDC); }
        internal static void N_0x8EC74CEB042E7CFF(Any p0) { NativeInvoker.Invoke(0x8EC74CEB042E7CFF, (ulong)p0); }
        internal static BOOL LEADERBOARDS_GET_CACHE_EXISTS(Any p0) { return NativeInvoker.Invoke<BOOL>(0x9C51349BE6CDFE2C, (ulong)p0); }
        internal static Any LEADERBOARDS_GET_CACHE_TIME(Any p0) { return NativeInvoker.Invoke<Any>(0xF04C1C27DA35F6C8, (ulong)p0); }
        internal static int LEADERBOARDS_GET_CACHE_NUMBER_OF_ROWS(Any p0) { return NativeInvoker.Invoke<int>(0x58A651CD201D89AD, (ulong)p0); }
        internal static BOOL LEADERBOARDS_GET_CACHE_DATA_ROW(Any p0, Any p1, Any* p2) { return NativeInvoker.Invoke<BOOL>(0x9120E8DBA3D69273, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void UPDATE_STAT_INT_(Hash statHash, int value, int p2) { NativeInvoker.Invoke(0x11FF1C80276097ED, (ulong)statHash, (ulong)value, (ulong)p2); }
        internal static void UPDATE_STAT_FLOAT_(Hash statHash, float value, int p2) { NativeInvoker.Invoke(0x30A6614C1F7799B8, (ulong)statHash, *(uint*)&value, (ulong)p2); }
        internal static void N_0x6483C25849031C4F(Any p0, Any p1, Any p2, Any* p3) { NativeInvoker.Invoke(0x6483C25849031C4F, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static BOOL N_0x5EAD2BF6484852E4() { return NativeInvoker.Invoke<BOOL>(0x5EAD2BF6484852E4); } // 0x5EAD2BF6484852E4 0x23D70C39 b323, (ulong)5EAD2BF6484852E4); }
        internal static void N_0xC141B8917E0017EC() { NativeInvoker.Invoke(0xC141B8917E0017EC); } // 0xC141B8917E0017EC 0x0AD43306 b323<, (ulong)C141B8917E0017EC); }
        internal static void SET_PROFILE_SETTING_PROLOGUE_COMPLETE() { NativeInvoker.Invoke(0xB475F27C6A994D65); } // 0xB475F27C6A994D65 0xC7DE5C30 b323<, (ulong)B475F27C6A994D65); }
        internal static void N_0xC67E2DA1CBE759E2() { NativeInvoker.Invoke(0xC67E2DA1CBE759E2); } // 0xC67E2DA1CBE759E2 b1734<, (ulong)C67E2DA1CBE759E2); }
        internal static void N_0xF1A1803D3476F215(int value) { NativeInvoker.Invoke(0xF1A1803D3476F215, (ulong)value); }
        internal static void N_0x38BAAA5DD4C9D19F(int value) { NativeInvoker.Invoke(0x38BAAA5DD4C9D19F, (ulong)value); }
        internal static void N_0x55384438FC55AD8E(int value) { NativeInvoker.Invoke(0x55384438FC55AD8E, (ulong)value); }
        internal static void N_0x723C1CE13FBFDB67(Any p0, Any p1) { NativeInvoker.Invoke(0x723C1CE13FBFDB67, (ulong)p0, (ulong)p1); }
        internal static void N_0x0D01D20616FC73FB(Any p0, Any p1) { NativeInvoker.Invoke(0x0D01D20616FC73FB, (ulong)p0, (ulong)p1); }
        internal static void N_0x428EAF89E24F6C36(Any p0, float p1) { NativeInvoker.Invoke(0x428EAF89E24F6C36, (ulong)p0, *(uint*)&p1); }
        internal static void STAT_SET_CHEAT_IS_ACTIVE() { NativeInvoker.Invoke(0x047CBED6F6F8B63C); } // 0x047CBED6F6F8B63C 0xA063CABD b323<, (ulong)047CBED6F6F8B63C); }
        internal static BOOL LEADERBOARDS2_WRITE_DATA_FOR_EVENT_TYPE(Any* p0, Any* p1) { return NativeInvoker.Invoke<BOOL>(0xC980E62E33DF1D5C, (ulong)p0, (ulong)p1); }
        internal static void N_0x6F361B8889A792A3() { NativeInvoker.Invoke(0x6F361B8889A792A3); } // 0x6F361B8889A792A3 0x3B4EF322 b323<, (ulong)6F361B8889A792A3); }
        internal static void N_0xC847B43F369AC0B5() { NativeInvoker.Invoke(0xC847B43F369AC0B5); } // 0xC847B43F369AC0B5 b323<, (ulong)C847B43F369AC0B5); }
        internal static BOOL STAT_MIGRATE_SAVE_(char* platformName) { return NativeInvoker.Invoke<BOOL>(0xA5C80D8E768A9E66, (ulong)platformName); }
        internal static int N_0x9A62EC95AE10E011() { return NativeInvoker.Invoke<int>(0x9A62EC95AE10E011); } // 0x9A62EC95AE10E011 b323, (ulong)9A62EC95AE10E011); }
        internal static Any N_0x4C89FE2BDEB3F169() { return NativeInvoker.Invoke<Any>(0x4C89FE2BDEB3F169); } // 0x4C89FE2BDEB3F169 b323, (ulong)4C89FE2BDEB3F169); }
        internal static Any N_0xC6E0E2616A7576BB() { return NativeInvoker.Invoke<Any>(0xC6E0E2616A7576BB); } // 0xC6E0E2616A7576BB b323, (ulong)C6E0E2616A7576BB); }
        internal static Any N_0x5BD5F255321C4AAF(Any p0) { return NativeInvoker.Invoke<Any>(0x5BD5F255321C4AAF, (ulong)p0); }
        internal static Any N_0xDEAAF77EB3687E97(Any p0, Any* p1) { return NativeInvoker.Invoke<Any>(0xDEAAF77EB3687E97, (ulong)p0, (ulong)p1); }
        internal static int STAT_GET_SAVE_MIGRATION_STATUS(Any* data) { return NativeInvoker.Invoke<int>(0x886913BBEACA68C1, (ulong)data); }
        internal static BOOL STAT_SAVE_MIGRATION_CANCEL_() { return NativeInvoker.Invoke<BOOL>(0x4FEF53183C3C6414); } // 0x4FEF53183C3C6414 b323, (ulong)4FEF53183C3C6414); }
        internal static int STAT_GET_CANCEL_SAVE_MIGRATION_STATUS_() { return NativeInvoker.Invoke<int>(0x567384DFA67029E6); } // 0x567384DFA67029E6 b323, (ulong)567384DFA67029E6); }
        internal static BOOL STAT_SAVE_MIGRATION_CONSUME_CONTENT_UNLOCK_(Hash contentId, char* srcPlatform, char* srcGamerHandle) { return NativeInvoker.Invoke<BOOL>(0x3270F67EED31FBC1, (ulong)contentId, (ulong)srcPlatform, (ulong)srcGamerHandle); }
        internal static int STAT_GET_SAVE_MIGRATION_CONSUME_CONTENT_UNLOCK_STATUS_(int* p0) { return NativeInvoker.Invoke<int>(0xCE5AA445ABA8DEE0, (ulong)p0); }
        internal static void N_0x98E2BC1CA26287C3() { NativeInvoker.Invoke(0x98E2BC1CA26287C3); } // 0x98E2BC1CA26287C3 b323<, (ulong)98E2BC1CA26287C3); }
        internal static void N_0x629526ABA383BCAA() { NativeInvoker.Invoke(0x629526ABA383BCAA); } // 0x629526ABA383BCAA b323<, (ulong)629526ABA383BCAA); }
        internal static Any N_0xBE3DB208333D9844() { return NativeInvoker.Invoke<Any>(0xBE3DB208333D9844); } // 0xBE3DB208333D9844 b463, (ulong)BE3DB208333D9844); }
        internal static Any N_0x33D72899E24C3365(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0x33D72899E24C3365, (ulong)p0, (ulong)p1); }
        internal static Any N_0xA761D4AC6115623D() { return NativeInvoker.Invoke<Any>(0xA761D4AC6115623D); } // 0xA761D4AC6115623D b463, (ulong)A761D4AC6115623D); }
        internal static Any N_0xF11F01D98113536A(Any p0) { return NativeInvoker.Invoke<Any>(0xF11F01D98113536A, (ulong)p0); }
        internal static Any N_0x8B9CDBD6C566C38C() { return NativeInvoker.Invoke<Any>(0x8B9CDBD6C566C38C); } // 0x8B9CDBD6C566C38C b944, (ulong)8B9CDBD6C566C38C); }
        internal static Any N_0xE8853FBCE7D8D0D6() { return NativeInvoker.Invoke<Any>(0xE8853FBCE7D8D0D6); } // 0xE8853FBCE7D8D0D6 b463, (ulong)E8853FBCE7D8D0D6); }
        internal static Any N_0xA943FD1722E11EFD() { return NativeInvoker.Invoke<Any>(0xA943FD1722E11EFD); } // 0xA943FD1722E11EFD b463, (ulong)A943FD1722E11EFD); }
        internal static Any N_0x84A810B375E69C0E() { return NativeInvoker.Invoke<Any>(0x84A810B375E69C0E); } // 0x84A810B375E69C0E b463, (ulong)84A810B375E69C0E); }
        internal static Any N_0x9EC8858184CD253A() { return NativeInvoker.Invoke<Any>(0x9EC8858184CD253A); } // 0x9EC8858184CD253A b463, (ulong)9EC8858184CD253A); }
        internal static Any N_0xBA9749CC94C1FD85() { return NativeInvoker.Invoke<Any>(0xBA9749CC94C1FD85); } // 0xBA9749CC94C1FD85 b463, (ulong)BA9749CC94C1FD85); }
        internal static Any N_0x55A8BECAF28A4EB7() { return NativeInvoker.Invoke<Any>(0x55A8BECAF28A4EB7); } // 0x55A8BECAF28A4EB7 b463, (ulong)55A8BECAF28A4EB7); }
        internal static Any N_0x32CAC93C9DE73D32() { return NativeInvoker.Invoke<Any>(0x32CAC93C9DE73D32); } // 0x32CAC93C9DE73D32 b463, (ulong)32CAC93C9DE73D32); }
        internal static Any N_0xAFF47709F1D5DCCE() { return NativeInvoker.Invoke<Any>(0xAFF47709F1D5DCCE); } // 0xAFF47709F1D5DCCE b463, (ulong)AFF47709F1D5DCCE); }
        internal static Any N_0x6E0A5253375C4584() { return NativeInvoker.Invoke<Any>(0x6E0A5253375C4584); } // 0x6E0A5253375C4584 b463, (ulong)6E0A5253375C4584); }
        internal static Any N_0x1A8EA222F9C67DBB(Any p0) { return NativeInvoker.Invoke<Any>(0x1A8EA222F9C67DBB, (ulong)p0); }
        internal static Any N_0xF9F2922717B819EC() { return NativeInvoker.Invoke<Any>(0xF9F2922717B819EC); } // 0xF9F2922717B819EC b505, (ulong)F9F2922717B819EC); }
        internal static Any N_0x0B8B7F74BF061C6D() { return NativeInvoker.Invoke<Any>(0x0B8B7F74BF061C6D); } // 0x0B8B7F74BF061C6D b463, (ulong)0B8B7F74BF061C6D); }
        internal static BOOL N_0xB3DA2606774A8E2D() { return NativeInvoker.Invoke<BOOL>(0xB3DA2606774A8E2D); } // 0xB3DA2606774A8E2D b323, (ulong)B3DA2606774A8E2D); }
        internal static void SET_HAS_CONTENT_UNLOCKS_FLAGS_(int value) { NativeInvoker.Invoke(0xDAC073C7901F9E15, (ulong)value); }
        internal static void SET_SAVE_MIGRATION_TRANSACTION_ID_(int transactionId) { NativeInvoker.Invoke(0xF6792800AC95350D, (ulong)transactionId); }
        internal static void N_0x6BC0ACD0673ACEBE(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x6BC0ACD0673ACEBE, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0x8D8ADB562F09A245(Any p0) { NativeInvoker.Invoke(0x8D8ADB562F09A245, (ulong)p0); }
        internal static void N_0xD1A1EE3B4FA8E760(Any p0) { NativeInvoker.Invoke(0xD1A1EE3B4FA8E760, (ulong)p0); }
        internal static void N_0x88087EE1F28024AE(Any p0) { NativeInvoker.Invoke(0x88087EE1F28024AE, (ulong)p0); }
        internal static void N_0xFCC228E07217FCAC(Any p0) { NativeInvoker.Invoke(0xFCC228E07217FCAC, (ulong)p0); }
        internal static void N_0x678F86D8FC040BDB(Any p0) { NativeInvoker.Invoke(0x678F86D8FC040BDB, (ulong)p0); }
        internal static void N_0xA6F54BB2FFCA35EA(Any p0) { NativeInvoker.Invoke(0xA6F54BB2FFCA35EA, (ulong)p0); }
        internal static void N_0x5FF2C33B13A02A11(Any p0) { NativeInvoker.Invoke(0x5FF2C33B13A02A11, (ulong)p0); }
        internal static void N_0x282B6739644F4347(Any p0) { NativeInvoker.Invoke(0x282B6739644F4347, (ulong)p0); }
        internal static void N_0xF06A6F41CB445443(Any p0) { NativeInvoker.Invoke(0xF06A6F41CB445443, (ulong)p0); }
        internal static void N_0x7B18DA61F6BAE9D5(Any p0) { NativeInvoker.Invoke(0x7B18DA61F6BAE9D5, (ulong)p0); }
        internal static void N_0x06EAF70AE066441E(Any p0) { NativeInvoker.Invoke(0x06EAF70AE066441E, (ulong)p0); }
        internal static void N_0x14EDA9EE27BD1626(Any p0) { NativeInvoker.Invoke(0x14EDA9EE27BD1626, (ulong)p0); }
        internal static void N_0x930F504203F561C9(Any p0) { NativeInvoker.Invoke(0x930F504203F561C9, (ulong)p0); }
        internal static void N_0xE3261D791EB44ACB(Any p0) { NativeInvoker.Invoke(0xE3261D791EB44ACB, (ulong)p0); }
        internal static void N_0x73001E34F85137F8(Any p0) { NativeInvoker.Invoke(0x73001E34F85137F8, (ulong)p0); }
        internal static void N_0x53CAE13E9B426993(Any p0) { NativeInvoker.Invoke(0x53CAE13E9B426993, (ulong)p0); }
        internal static void N_0x7D36291161859389(Any p0) { NativeInvoker.Invoke(0x7D36291161859389, (ulong)p0); }
        internal static void PLAYSTATS_SPENT_PI_CUSTOM_LOADOUT_(int amount) { NativeInvoker.Invoke(0xBE509B0A3693DE8B, (ulong)amount); }
        internal static void PLAYSTATS_BUY_CONTRABAND_(Any* data) { NativeInvoker.Invoke(0xD6781E42755531F7, (ulong)data); }
        internal static void PLAYSTATS_SELL_CONTRABAND_(Any* data) { NativeInvoker.Invoke(0xC729991A9065376E, (ulong)data); }
        internal static void PLAYSTATS_DEFEND_CONTRABAND_(Any* data) { NativeInvoker.Invoke(0x2605663BD4F23B5D, (ulong)data); }
        internal static void PLAYSTATS_RECOVER_CONTRABAND_(Any* data) { NativeInvoker.Invoke(0x04D90BA8207ADA2D, (ulong)data); }
        internal static void N_0x60EEDC12AF66E846(Any p0) { NativeInvoker.Invoke(0x60EEDC12AF66E846, (ulong)p0); }
        internal static void N_0x3EBEAC6C3F81F6BD(Any p0) { NativeInvoker.Invoke(0x3EBEAC6C3F81F6BD, (ulong)p0); }
        internal static void N_0x96E6D5150DBF1C09(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x96E6D5150DBF1C09, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0xA3C53804BDB68ED2(Any p0, Any p1) { NativeInvoker.Invoke(0xA3C53804BDB68ED2, (ulong)p0, (ulong)p1); }
        internal static void N_0x6BCCF9948492FD85(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x6BCCF9948492FD85, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void HIRED_LIMO_(Any p0, Any p1) { NativeInvoker.Invoke(0x792271AB35C356A4, (ulong)p0, (ulong)p1); }
        internal static void ORDERED_BOSS_VEHICLE_(Any p0, Any p1, Hash vehicleHash) { NativeInvoker.Invoke(0xCEA553E35C2246E1, (ulong)p0, (ulong)p1, (ulong)vehicleHash); }
        internal static void N_0xD1C9B92BDD3F151D(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0xD1C9B92BDD3F151D, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0x44919CC079BB60BF(Any p0) { NativeInvoker.Invoke(0x44919CC079BB60BF, (ulong)p0); }
        internal static void N_0x7033EEFD9B28088E(Any p0) { NativeInvoker.Invoke(0x7033EEFD9B28088E, (ulong)p0); }
        internal static void N_0xAA525DFF66BB82F5(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0xAA525DFF66BB82F5, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0x015B03EE1C43E6EC(Any p0) { NativeInvoker.Invoke(0x015B03EE1C43E6EC, (ulong)p0); }
        internal static void PLAYSTATS_STUNT_PERFORMED_EVENT_ALLOW_TRIGGER_() { NativeInvoker.Invoke(0x928DBFB892638EF3); } // 0x928DBFB892638EF3 b791<, (ulong)928DBFB892638EF3); }
        internal static void PLAYSTATS_STUNT_PERFORMED_EVENT_DISALLOW_TRIGGER_() { NativeInvoker.Invoke(0x8A800DACCC0DA55D); } // 0x8A800DACCC0DA55D b791<, (ulong)8A800DACCC0DA55D); }
        internal static void N_0xBF371CD2B64212FD(Any p0) { NativeInvoker.Invoke(0xBF371CD2B64212FD, (ulong)p0); }
        internal static void N_0x7D8BA05688AD64C7(Any p0) { NativeInvoker.Invoke(0x7D8BA05688AD64C7, (ulong)p0); }
        internal static void N_0x0B565B0AAE56A0E8(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { NativeInvoker.Invoke(0x0B565B0AAE56A0E8, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static void N_0x28ECB8AC2F607DB2(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x28ECB8AC2F607DB2, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void PLAYSTATS_CHANGE_MC_EMBLEM_(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x0A50D2604E05CB94, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void N_0xCC25A4553DFBF9EA(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0xCC25A4553DFBF9EA, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void N_0xF534D94DFA2EAD26(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0xF534D94DFA2EAD26, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void N_0xD558BEC0BBA7E8D2(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0xD558BEC0BBA7E8D2, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void PLAYSTATS_EARNED_MC_POINTS_(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { NativeInvoker.Invoke(0x501478855A6074CE, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static void N_0x03C2EEBB04B3FB72(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { NativeInvoker.Invoke(0x03C2EEBB04B3FB72, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static void N_0x8989CBD7B4E82534(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { NativeInvoker.Invoke(0x8989CBD7B4E82534, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static void N_0x27AA1C973CACFE63(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9) { NativeInvoker.Invoke(0x27AA1C973CACFE63, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9); }
        internal static void PLAYSTATS_COPY_RANK_INTO_NEW_SLOT_(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6) { NativeInvoker.Invoke(0xB7257BA2550EA10A, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static void PLAYSTATS_DUPE_DETECTION_(Any* data) { NativeInvoker.Invoke(0x848B66100EE33B05, (ulong)data); }
        internal static void PLAYSTATS_BAN_ALERT_(int p0) { NativeInvoker.Invoke(0x516FC96EB88EEFE5, (ulong)p0); }
        internal static void PLAYSTATS_GUNRUN_MISSION_ENDED_(Any* data) { NativeInvoker.Invoke(0x0EACDF8487D5155A, (ulong)data); }
        internal static void N_0xDAF80797FC534BEC(Any p0) { NativeInvoker.Invoke(0xDAF80797FC534BEC, (ulong)p0); }
        internal static void N_0x316DB59CD14C1774(Any p0) { NativeInvoker.Invoke(0x316DB59CD14C1774, (ulong)p0); }
        internal static void N_0x2D7A9B577E72385E(Any p0) { NativeInvoker.Invoke(0x2D7A9B577E72385E, (ulong)p0); }
        internal static void N_0x830C3A44EB3F2CF9(Any p0) { NativeInvoker.Invoke(0x830C3A44EB3F2CF9, (ulong)p0); }
        internal static void N_0xB26F670685631727(Any p0, Any p1) { NativeInvoker.Invoke(0xB26F670685631727, (ulong)p0, (ulong)p1); }
        internal static void N_0xC14BD9F5337219B2(Any p0, Any p1) { NativeInvoker.Invoke(0xC14BD9F5337219B2, (ulong)p0, (ulong)p1); }
        internal static void PLAYSTATS_STONE_HATCHET_END_(Any* data) { NativeInvoker.Invoke(0x35E39E5570358630, (ulong)data); }
        internal static void PLAYSTATS_SMUG_MISSION_ENDED_(Any* data) { NativeInvoker.Invoke(0x320C35147D5B5DDD, (ulong)data); }
        internal static void PLAYSTATS_H2_FMPREP_END_(Any* data) { NativeInvoker.Invoke(0xD8AFB345A9C5CCBB, (ulong)data); }
        internal static void PLAYSTATS_H2_INSTANCE_END_(Any* data, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x1E1497D0D2108115, (ulong)data, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void PLAYSTATS_DAR_MISSION_END_(Any* data) { NativeInvoker.Invoke(0x0BC254FF3A911501, (ulong)data); }
        internal static void PLAYSTATS_ENTER_SESSION_PACK_(Any* data) { NativeInvoker.Invoke(0x878FF156D36E9956, (ulong)data); }
        internal static void PLAYSTATS_DRONE_USAGE_(int p0, int p1, int p2) { NativeInvoker.Invoke(0x66C7BB2416ED3FCE, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void PLAYSTATS_SPECTATOR_WHEEL_SPIN_(int p0, int p1, int p2, int p3) { NativeInvoker.Invoke(0x6731DE84A38BFAD0, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void PLAYSTATS_ARENA_WAR_SPECTATOR_(int p0, int p1, int p2, int p3, int p4) { NativeInvoker.Invoke(0x6F4F599753F8200A, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void PLAYSTATS_ARENA_WARS_ENDED_(Any* data) { NativeInvoker.Invoke(0xB479D9F0D48A1BC5, (ulong)data); }
        internal static void PLAYSTATS_PASSIVE_MODE_(BOOL p0, int p1, int p2, int p3) { NativeInvoker.Invoke(0x35EEC6C2BC821A71, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void PLAYSTATS_COLLECTIBLE_(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9) { NativeInvoker.Invoke(0xCD0A8A9338681CF2, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9); }
        internal static void PLAYSTATS_CASINO_STORY_MISSION_ENDED_(Any p0, Any p1) { NativeInvoker.Invoke(0xFCCCAC2BD3C1F180, (ulong)p0, (ulong)p1); }
        internal static void PLAYSTATS_CASINO_CHIP_(Any p0) { NativeInvoker.Invoke(0x0999F3F090EC5012, (ulong)p0); }
        internal static void PLAYSTATS_CASINO_ROULETTE_(Any p0) { NativeInvoker.Invoke(0x95101C443A84E7F1, (ulong)p0); }
        internal static void PLAYSTATS_CASINO_BLACKJACK_(Any p0) { NativeInvoker.Invoke(0x3EAE97309727E7AD, (ulong)p0); }
        internal static void PLAYSTATS_CASINO_THREECARDPOKER_(Any p0) { NativeInvoker.Invoke(0xF740FB339D471C35, (ulong)p0); }
        internal static void PLAYSTATS_CASINO_SLOTMACHINE_(Any p0) { NativeInvoker.Invoke(0xEF5EC67D392B830A, (ulong)p0); }
        internal static void PLAYSTATS_CASINO_INSIDETRACK_(Any p0) { NativeInvoker.Invoke(0x049F059625058A86, (ulong)p0); }
        internal static void PLAYSTATS_CASINO_LUCKYSEVEN_(Any p0) { NativeInvoker.Invoke(0x0C432C1435F5E4FA, (ulong)p0); }
        internal static void PLAYSTATS_CASINO_ROULETTE_LIGHT_(Any p0) { NativeInvoker.Invoke(0x6572ABA3DE1197FC, (ulong)p0); }
        internal static void PLAYSTATS_CASINO_BLACKJACK_LIGHT_(Any p0) { NativeInvoker.Invoke(0xD5451C7BF151EB6F, (ulong)p0); }
        internal static void PLAYSTATS_CASINO_THREECARDPOKER_LIGHT_(Any p0) { NativeInvoker.Invoke(0xC9001364B4388F22, (ulong)p0); }
        internal static void PLAYSTATS_CASINO_SLOTMACHINE_LIGHT_(Any p0) { NativeInvoker.Invoke(0xE60054A0FAE8227F, (ulong)p0); }
        internal static void PLAYSTATS_CASINO_INSIDETRACK_LIGHT_(Any p0) { NativeInvoker.Invoke(0x23A3CBCD50D54E47, (ulong)p0); }
        internal static void PLAYSTATS_ARCADEGAME_(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { NativeInvoker.Invoke(0x533A7D1EA58DF958, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static void N_0x4FCDBD3F0A813C25(Any p0, Any p1) { NativeInvoker.Invoke(0x4FCDBD3F0A813C25, (ulong)p0, (ulong)p1); }
        internal static void PLAYSTATS_CASINO_MISSION_ENDED_(Any* data) { NativeInvoker.Invoke(0x1A0D4A6C336B7BC5, (ulong)data); }
        internal static void N_0xDFBD93BF2943E29B(Any p0) { NativeInvoker.Invoke(0xDFBD93BF2943E29B, (ulong)p0); }
        internal static void N_0x92FC0EEDFAC04A14(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { NativeInvoker.Invoke(0x92FC0EEDFAC04A14, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static void N_0x0077F15613D36993(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x0077F15613D36993, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0xF9096193DF1F99D4(Any p0) { NativeInvoker.Invoke(0xF9096193DF1F99D4, (ulong)p0); }
        internal static void N_0x2E0259BABC27A327(Any p0) { NativeInvoker.Invoke(0x2E0259BABC27A327, (ulong)p0); }
        internal static void N_0x53C31853EC9531FF(Any p0) { NativeInvoker.Invoke(0x53C31853EC9531FF, (ulong)p0); }
        internal static void N_0x810B5FCC52EC7FF0(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x810B5FCC52EC7FF0, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x5BF29846C6527C54(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x5BF29846C6527C54, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void N_0xC03FAB2C2F92289B(Any p0) { NativeInvoker.Invoke(0xC03FAB2C2F92289B, (ulong)p0); }
        internal static void N_0x5CDAED54B34B0ED0(Any p0) { NativeInvoker.Invoke(0x5CDAED54B34B0ED0, (ulong)p0); }
        internal static void N_0x4AFF7E02E485E92B() { NativeInvoker.Invoke(0x4AFF7E02E485E92B); } // 0x4AFF7E02E485E92B b1868<, (ulong)4AFF7E02E485E92B); }
        internal static void N_0xDFCDB14317A9B361(Any p0) { NativeInvoker.Invoke(0xDFCDB14317A9B361, (ulong)p0); }
        internal static void N_0xC1E963C58664B556(Any p0) { NativeInvoker.Invoke(0xC1E963C58664B556, (ulong)p0); }
        internal static void N_0x2FA3173480008493(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x2FA3173480008493, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void N_0xD4367D310F079DB0(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xD4367D310F079DB0, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x4DC416F246A41FC8(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x4DC416F246A41FC8, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void N_0x2818FF6638CB09DE(Any p0) { NativeInvoker.Invoke(0x2818FF6638CB09DE, (ulong)p0); }
        internal static void N_0xD6CA58B3B53A0F22(Any p0) { NativeInvoker.Invoke(0xD6CA58B3B53A0F22, (ulong)p0); }
        internal static void PLAYSTATS_ROBBERY_PREP_(Any p0) { NativeInvoker.Invoke(0x1A67DFBF1F5C3835, (ulong)p0); }
        internal static void PLAYSTATS_ROBBERY_FINALE_(Any p0) { NativeInvoker.Invoke(0xBBA55BE9AAAABF44, (ulong)p0); }
        internal static void PLAYSTATS_EXTRA_EVENT_(Any p0) { NativeInvoker.Invoke(0xFA5B74BAB8A7EF99, (ulong)p0); }
        internal static void PLAYSTATS_CARCLUB_POINTS_(Any p0) { NativeInvoker.Invoke(0xFF14D6FEEC507BBE, (ulong)p0); }
        internal static void PLAYSTATS_CARCLUB_CHALLENGE_(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x1187CB58D7F3BED7, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void PLAYSTATS_CARCLUB_PRIZE_(Any p0, Any p1) { NativeInvoker.Invoke(0x69C922B677621428, (ulong)p0, (ulong)p1); }
    }

    internal static unsafe class STREAMING
    {
        internal static void LOAD_ALL_OBJECTS_NOW() { NativeInvoker.Invoke(0xBD6E84632DD4CB3F); } // 0xBD6E84632DD4CB3F 0xC9DBDA90 b323<, (ulong)BD6E84632DD4CB3F); }
        internal static void LOAD_SCENE(float x, float y, float z) { NativeInvoker.Invoke(0x4448EB75B4904BDB, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static BOOL NETWORK_UPDATE_LOAD_SCENE() { return NativeInvoker.Invoke<BOOL>(0xC4582015556D1C46); } // 0xC4582015556D1C46 0xC76E023C b323, (ulong)C4582015556D1C46); }
        internal static BOOL IS_NETWORK_LOADING_SCENE() { return NativeInvoker.Invoke<BOOL>(0x41CA5A33160EA4AB); } // 0x41CA5A33160EA4AB 0x6DCFC021 b323, (ulong)41CA5A33160EA4AB); }
        internal static void SET_INTERIOR_ACTIVE(int interiorID, BOOL toggle) { NativeInvoker.Invoke(0xE37B76C387BE28ED, (ulong)interiorID, (ulong)toggle); }
        internal static void REQUEST_MODEL(Hash model) { NativeInvoker.Invoke(0x963D27A58DF860AC, (ulong)model); }
        internal static void REQUEST_MENU_PED_MODEL(Hash model) { NativeInvoker.Invoke(0xA0261AEF7ACFC51E, (ulong)model); }
        internal static BOOL HAS_MODEL_LOADED(Hash model) { return NativeInvoker.Invoke<BOOL>(0x98A4EB5D89A0C952, (ulong)model); }
        internal static void REQUEST_MODELS_IN_ROOM(Interior interior, char* roomName) { NativeInvoker.Invoke(0x8A7A40100EDFEC58, (ulong)interior, (ulong)roomName); }
        internal static void SET_MODEL_AS_NO_LONGER_NEEDED(Hash model) { NativeInvoker.Invoke(0xE532F5D78798DAAB, (ulong)model); }
        internal static BOOL IS_MODEL_IN_CDIMAGE(Hash model) { return NativeInvoker.Invoke<BOOL>(0x35B9E0803292B641, (ulong)model); }
        internal static BOOL IS_MODEL_VALID(Hash model) { return NativeInvoker.Invoke<BOOL>(0xC0296A2EDF545E92, (ulong)model); }
        internal static BOOL IS_MODEL_A_PED(Hash model) { return NativeInvoker.Invoke<BOOL>(0x75816577FEA6DAD5, (ulong)model); }
        internal static BOOL IS_MODEL_A_VEHICLE(Hash model) { return NativeInvoker.Invoke<BOOL>(0x19AAC8F07BFEC53E, (ulong)model); }
        internal static void REQUEST_COLLISION_AT_COORD(float x, float y, float z) { NativeInvoker.Invoke(0x07503F7948F491A7, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void REQUEST_COLLISION_FOR_MODEL(Hash model) { NativeInvoker.Invoke(0x923CB32A3B874FCB, (ulong)model); }
        internal static BOOL HAS_COLLISION_FOR_MODEL_LOADED(Hash model) { return NativeInvoker.Invoke<BOOL>(0x22CCA434E368F03A, (ulong)model); }
        internal static void REQUEST_ADDITIONAL_COLLISION_AT_COORD(float x, float y, float z) { NativeInvoker.Invoke(0xC9156DC11411A9EA, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static BOOL DOES_ANIM_DICT_EXIST(char* animDict) { return NativeInvoker.Invoke<BOOL>(0x2DA49C3B79856961, (ulong)animDict); }
        internal static void REQUEST_ANIM_DICT(char* animDict) { NativeInvoker.Invoke(0xD3BD40951412FEF6, (ulong)animDict); }
        internal static BOOL HAS_ANIM_DICT_LOADED(char* animDict) { return NativeInvoker.Invoke<BOOL>(0xD031A9162D01088C, (ulong)animDict); }
        internal static void REMOVE_ANIM_DICT(char* animDict) { NativeInvoker.Invoke(0xF66A602F829E2A06, (ulong)animDict); }
        internal static void REQUEST_ANIM_SET(char* animSet) { NativeInvoker.Invoke(0x6EA47DAE7FAD0EED, (ulong)animSet); }
        internal static BOOL HAS_ANIM_SET_LOADED(char* animSet) { return NativeInvoker.Invoke<BOOL>(0xC4EA073D86FB29B0, (ulong)animSet); }
        internal static void REMOVE_ANIM_SET(char* animSet) { NativeInvoker.Invoke(0x16350528F93024B3, (ulong)animSet); }
        internal static void REQUEST_CLIP_SET(char* clipSet) { NativeInvoker.Invoke(0xD2A71E1A77418A49, (ulong)clipSet); }
        internal static BOOL HAS_CLIP_SET_LOADED(char* clipSet) { return NativeInvoker.Invoke<BOOL>(0x318234F4F3738AF3, (ulong)clipSet); }
        internal static void REMOVE_CLIP_SET(char* clipSet) { NativeInvoker.Invoke(0x01F73A131C18CD94, (ulong)clipSet); }
        internal static void REQUEST_IPL(char* iplName) { NativeInvoker.Invoke(0x41B4893843BBDB74, (ulong)iplName); }
        internal static void REMOVE_IPL(char* iplName) { NativeInvoker.Invoke(0xEE6C5AD3ECE0A82D, (ulong)iplName); }
        internal static BOOL IS_IPL_ACTIVE(char* iplName) { return NativeInvoker.Invoke<BOOL>(0x88A741E44A2B3495, (ulong)iplName); }
        internal static void SET_STREAMING(BOOL toggle) { NativeInvoker.Invoke(0x6E0C692677008888, (ulong)toggle); }
        internal static void LOAD_GLOBAL_WATER_TYPE_(int waterType) { NativeInvoker.Invoke(0x7E3F55ED251B76D3, (ulong)waterType); }
        internal static int GET_GLOBAL_WATER_TYPE_() { return NativeInvoker.Invoke<int>(0xF741BD853611592D); } // 0xF741BD853611592D b2189, (ulong)F741BD853611592D); }
        internal static void SET_GAME_PAUSES_FOR_STREAMING(BOOL toggle) { NativeInvoker.Invoke(0x717CD6E6FAEBBEDC, (ulong)toggle); }
        internal static void SET_REDUCE_PED_MODEL_BUDGET(BOOL toggle) { NativeInvoker.Invoke(0x77B5F9A36BF96710, (ulong)toggle); }
        internal static void SET_REDUCE_VEHICLE_MODEL_BUDGET(BOOL toggle) { NativeInvoker.Invoke(0x80C527893080CCF3, (ulong)toggle); }
        internal static void SET_DITCH_POLICE_MODELS(BOOL toggle) { NativeInvoker.Invoke(0x42CBE54462D92634, (ulong)toggle); }
        internal static int GET_NUMBER_OF_STREAMING_REQUESTS() { return NativeInvoker.Invoke<int>(0x4060057271CEBC89); } // 0x4060057271CEBC89 0xC2EE9A02 b323, (ulong)4060057271CEBC89); }
        internal static void REQUEST_PTFX_ASSET() { NativeInvoker.Invoke(0x944955FB2A3935C8); } // 0x944955FB2A3935C8 0x2C649263 b323<, (ulong)944955FB2A3935C8); }
        internal static BOOL HAS_PTFX_ASSET_LOADED() { return NativeInvoker.Invoke<BOOL>(0xCA7D9B86ECA7481B); } // 0xCA7D9B86ECA7481B 0x3EFF96BE b323, (ulong)CA7D9B86ECA7481B); }
        internal static void REMOVE_PTFX_ASSET() { NativeInvoker.Invoke(0x88C6814073DD4A73); } // 0x88C6814073DD4A73 0xC10F178C b323<, (ulong)88C6814073DD4A73); }
        internal static void REQUEST_NAMED_PTFX_ASSET(char* fxName) { NativeInvoker.Invoke(0xB80D8756B4668AB6, (ulong)fxName); }
        internal static BOOL HAS_NAMED_PTFX_ASSET_LOADED(char* fxName) { return NativeInvoker.Invoke<BOOL>(0x8702416E512EC454, (ulong)fxName); }
        internal static void REMOVE_NAMED_PTFX_ASSET(char* fxName) { NativeInvoker.Invoke(0x5F61EBBE1A00F96D, (ulong)fxName); }
        internal static void SET_VEHICLE_POPULATION_BUDGET(int p0) { NativeInvoker.Invoke(0xCB9E1EB3BE2AF4E9, (ulong)p0); }
        internal static void SET_PED_POPULATION_BUDGET(int p0) { NativeInvoker.Invoke(0x8C95333CFC3340F3, (ulong)p0); }
        internal static void CLEAR_FOCUS() { NativeInvoker.Invoke(0x31B73D1EA9F01DA2); } // 0x31B73D1EA9F01DA2 0x34D91E7A b323<, (ulong)31B73D1EA9F01DA2); }
        internal static void SET_FOCUS_POS_AND_VEL(float x, float y, float z, float offsetX, float offsetY, float offsetZ) { NativeInvoker.Invoke(0xBB7454BAFF08FE25, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&offsetX, *(uint*)&offsetY, *(uint*)&offsetZ); }
        internal static void SET_FOCUS_ENTITY(Entity entity) { NativeInvoker.Invoke(0x198F77705FA0931D, (ulong)entity); }
        internal static BOOL IS_ENTITY_FOCUS(Entity entity) { return NativeInvoker.Invoke<BOOL>(0x2DDFF3FB9075D747, (ulong)entity); }
        internal static void N_0x0811381EF5062FEC(Entity p0) { NativeInvoker.Invoke(0x0811381EF5062FEC, (ulong)p0); }
        internal static void SET_MAPDATACULLBOX_ENABLED(char* name, BOOL toggle) { NativeInvoker.Invoke(0xAF12610C644A35C9, (ulong)name, (ulong)toggle); }
        internal static void N_0x4E52E752C76E7E7A(Any p0) { NativeInvoker.Invoke(0x4E52E752C76E7E7A, (ulong)p0); }
        internal static Any STREAMVOL_CREATE_SPHERE(float x, float y, float z, float rad, Any p4, Any p5) { return NativeInvoker.Invoke<Any>(0x219C7B8D53E429FD, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&rad, (ulong)p4, (ulong)p5); }
        internal static Any STREAMVOL_CREATE_FRUSTUM(float p0, float p1, float p2, float p3, float p4, float p5, float p6, Any p7, Any p8) { return NativeInvoker.Invoke<Any>(0x1F3F018BC3AFA77C, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, (ulong)p7, (ulong)p8); }
        internal static Any STREAMVOL_CREATE_LINE(float p0, float p1, float p2, float p3, float p4, float p5, Any p6) { return NativeInvoker.Invoke<Any>(0x0AD9710CEE2F590F, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, (ulong)p6); }
        internal static void STREAMVOL_DELETE(Any unused) { NativeInvoker.Invoke(0x1EE7D8DF4425F053, (ulong)unused); }
        internal static BOOL STREAMVOL_HAS_LOADED(Any unused) { return NativeInvoker.Invoke<BOOL>(0x7D41E9D2D17C5B2D, (ulong)unused); }
        internal static BOOL STREAMVOL_IS_VALID(Any unused) { return NativeInvoker.Invoke<BOOL>(0x07C313F94746702C, (ulong)unused); }
        internal static BOOL IS_STREAMVOL_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0xBC9823AB80A3DCAC); } // 0xBC9823AB80A3DCAC 0x56253356 b323, (ulong)BC9823AB80A3DCAC); }
        internal static BOOL NEW_LOAD_SCENE_START(float posX, float posY, float posZ, float offsetX, float offsetY, float offsetZ, float radius, int p7) { return NativeInvoker.Invoke<BOOL>(0x212A8D0D2BABFAC2, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, *(uint*)&offsetX, *(uint*)&offsetY, *(uint*)&offsetZ, *(uint*)&radius, (ulong)p7); }
        internal static BOOL NEW_LOAD_SCENE_START_SPHERE(float x, float y, float z, float radius, Any p4) { return NativeInvoker.Invoke<BOOL>(0xACCFB4ACF53551B0, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)p4); }
        internal static void NEW_LOAD_SCENE_STOP() { NativeInvoker.Invoke(0xC197616D221FF4A4); } // 0xC197616D221FF4A4 0x7C05B1F6 b323<, (ulong)C197616D221FF4A4); }
        internal static BOOL IS_NEW_LOAD_SCENE_ACTIVE() { return NativeInvoker.Invoke<BOOL>(0xA41A05B6CB741B85); } // 0xA41A05B6CB741B85 0xAD234B7F b323, (ulong)A41A05B6CB741B85); }
        internal static BOOL IS_NEW_LOAD_SCENE_LOADED() { return NativeInvoker.Invoke<BOOL>(0x01B8247A7A8B9AD1); } // 0x01B8247A7A8B9AD1 0x3ECD839F b323, (ulong)01B8247A7A8B9AD1); }
        internal static Any N_0x71E7B2E657449AAD() { return NativeInvoker.Invoke<Any>(0x71E7B2E657449AAD); } // 0x71E7B2E657449AAD 0xEAA51103 b323, (ulong)71E7B2E657449AAD); }
        internal static void START_PLAYER_SWITCH(Ped from, Ped to, int flags, int switchType) { NativeInvoker.Invoke(0xFAA23F2CBA159D67, (ulong)from, (ulong)to, (ulong)flags, (ulong)switchType); }
        internal static void STOP_PLAYER_SWITCH() { NativeInvoker.Invoke(0x95C0A5BBDC189AA1); } // 0x95C0A5BBDC189AA1 0x2832C010 b323<, (ulong)95C0A5BBDC189AA1); }
        internal static BOOL IS_PLAYER_SWITCH_IN_PROGRESS() { return NativeInvoker.Invoke<BOOL>(0xD9D2CFFF49FAB35F); } // 0xD9D2CFFF49FAB35F 0x56135ACC b323, (ulong)D9D2CFFF49FAB35F); }
        internal static int GET_PLAYER_SWITCH_TYPE() { return NativeInvoker.Invoke<int>(0xB3C94A90D9FC9E62); } // 0xB3C94A90D9FC9E62 0x280DC015 b323, (ulong)B3C94A90D9FC9E62); }
        internal static int GET_IDEAL_PLAYER_SWITCH_TYPE(float x1, float y1, float z1, float x2, float y2, float z2) { return NativeInvoker.Invoke<int>(0xB5D7B26B45720E05, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2); }
        internal static int GET_PLAYER_SWITCH_STATE() { return NativeInvoker.Invoke<int>(0x470555300D10B2A5); } // 0x470555300D10B2A5 0x39A0E1F2 b323, (ulong)470555300D10B2A5); }
        internal static int GET_PLAYER_SHORT_SWITCH_STATE() { return NativeInvoker.Invoke<int>(0x20F898A5D9782800); } // 0x20F898A5D9782800 0x9B7BA38F b323, (ulong)20F898A5D9782800); }
        internal static void N_0x5F2013F8BC24EE69(int p0) { NativeInvoker.Invoke(0x5F2013F8BC24EE69, (ulong)p0); }
        internal static int GET_PLAYER_SWITCH_JUMP_CUT_INDEX() { return NativeInvoker.Invoke<int>(0x78C0D93253149435); } // 0x78C0D93253149435 0x02BA7AC2 b323, (ulong)78C0D93253149435); }
        internal static void SET_PLAYER_SWITCH_OUTRO(float cameraCoordX, float cameraCoordY, float cameraCoordZ, float camRotationX, float camRotationY, float camRotationZ, float camFov, float camFarClip, int rotationOrder) { NativeInvoker.Invoke(0xC208B673CE446B61, *(uint*)&cameraCoordX, *(uint*)&cameraCoordY, *(uint*)&cameraCoordZ, *(uint*)&camRotationX, *(uint*)&camRotationY, *(uint*)&camRotationZ, *(uint*)&camFov, *(uint*)&camFarClip, (ulong)rotationOrder); }
        internal static void SET_PLAYER_SWITCH_ESTABLISHING_SHOT(char* name) { NativeInvoker.Invoke(0x0FDE9DBFC0A6BC65, (ulong)name); }
        internal static void ALLOW_PLAYER_SWITCH_PAN() { NativeInvoker.Invoke(0x43D1680C6D19A8E9); } // 0x43D1680C6D19A8E9 0x55CB21F9 b323<, (ulong)43D1680C6D19A8E9); }
        internal static void ALLOW_PLAYER_SWITCH_OUTRO() { NativeInvoker.Invoke(0x74DE2E8739086740); } // 0x74DE2E8739086740 0x1084F2F4 b323<, (ulong)74DE2E8739086740); }
        internal static void ALLOW_PLAYER_SWITCH_ASCENT() { NativeInvoker.Invoke(0x8E2A065ABDAE6994); } // 0x8E2A065ABDAE6994 0x5B1E995D b323<, (ulong)8E2A065ABDAE6994); }
        internal static void ALLOW_PLAYER_SWITCH_DESCENT() { NativeInvoker.Invoke(0xAD5FDF34B81BFE79); } // 0xAD5FDF34B81BFE79 0x4B4B9A13 b323<, (ulong)AD5FDF34B81BFE79); }
        internal static BOOL IS_SWITCH_READY_FOR_DESCENT() { return NativeInvoker.Invoke<BOOL>(0xDFA80CB25D0A19B3); } // 0xDFA80CB25D0A19B3 0x408F7148 b323, (ulong)DFA80CB25D0A19B3); }
        internal static void ENABLE_SWITCH_PAUSE_BEFORE_DESCENT() { NativeInvoker.Invoke(0xD4793DFF3AF2ABCD); } // 0xD4793DFF3AF2ABCD 0x4062FF73 b323<, (ulong)D4793DFF3AF2ABCD); }
        internal static void DISABLE_SWITCH_OUTRO_FX() { NativeInvoker.Invoke(0xBD605B8E0E18B3BB); } // 0xBD605B8E0E18B3BB 0x59CC312D b323<, (ulong)BD605B8E0E18B3BB); }
        internal static void SWITCH_OUT_PLAYER_(Ped ped, int flags, int switchType) { NativeInvoker.Invoke(0xAAB3200ED59016BC, (ulong)ped, (ulong)flags, (ulong)switchType); }
        internal static void SWITCH_IN_PLAYER_(Ped ped) { NativeInvoker.Invoke(0xD8295AF639FD9CB8, (ulong)ped); }
        internal static BOOL N_0x933BBEEB8C61B5F4() { return NativeInvoker.Invoke<BOOL>(0x933BBEEB8C61B5F4); } // 0x933BBEEB8C61B5F4 0x74C16879 b323, (ulong)933BBEEB8C61B5F4); }
        internal static int GET_PLAYER_SWITCH_INTERP_OUT_DURATION() { return NativeInvoker.Invoke<int>(0x08C2D6C52A3104BB); } // 0x08C2D6C52A3104BB 0x569847E3 b323, (ulong)08C2D6C52A3104BB); }
        internal static Any GET_PLAYER_SWITCH_INTERP_OUT_CURRENT_TIME() { return NativeInvoker.Invoke<Any>(0x5B48A06DD0E792A5); } // 0x5B48A06DD0E792A5 0xC7A3D279 b323, (ulong)5B48A06DD0E792A5); }
        internal static BOOL IS_SWITCH_SKIPPING_DESCENT() { return NativeInvoker.Invoke<BOOL>(0x5B74EA8CFD5E3E7E); } // 0x5B74EA8CFD5E3E7E 0x90F64284 b323, (ulong)5B74EA8CFD5E3E7E); }
        internal static void N_0x1E9057A74FD73E23() { NativeInvoker.Invoke(0x1E9057A74FD73E23); } // 0x1E9057A74FD73E23 b323<, (ulong)1E9057A74FD73E23); }
        internal static float GET_LODSCALE() { return NativeInvoker.Invoke<float>(0x0C15B0E443B2349D); } // 0x0C15B0E443B2349D 0x7154B6FD b323, (ulong)0C15B0E443B2349D); }
        internal static void OVERRIDE_LODSCALE_THIS_FRAME(float scaling) { NativeInvoker.Invoke(0xA76359FC80B2438E, *(uint*)&scaling); }
        internal static void N_0xBED8CA5FF5E04113(float p0, float p1, float p2, float p3) { NativeInvoker.Invoke(0xBED8CA5FF5E04113, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3); }
        internal static void N_0x472397322E92A856() { NativeInvoker.Invoke(0x472397322E92A856); } // 0x472397322E92A856 0x4267DA87 b323<, (ulong)472397322E92A856); }
        internal static void SET_RENDER_HD_ONLY(BOOL toggle) { NativeInvoker.Invoke(0x40AEFD1A244741F2, (ulong)toggle); }
        internal static void N_0x03F1A106BDA7DD3E() { NativeInvoker.Invoke(0x03F1A106BDA7DD3E); } // 0x03F1A106BDA7DD3E b323<, (ulong)03F1A106BDA7DD3E); }
        internal static void N_0x95A7DABDDBB78AE7(char* iplName1, char* iplName2) { NativeInvoker.Invoke(0x95A7DABDDBB78AE7, (ulong)iplName1, (ulong)iplName2); }
        internal static void N_0x63EB2B972A218CAC() { NativeInvoker.Invoke(0x63EB2B972A218CAC); } // 0x63EB2B972A218CAC 0xF2CDD6A8 b323<, (ulong)63EB2B972A218CAC); }
        internal static BOOL N_0xFB199266061F820A() { return NativeInvoker.Invoke<BOOL>(0xFB199266061F820A); } // 0xFB199266061F820A 0x17B0A1CD b323, (ulong)FB199266061F820A); }
        internal static void N_0xF4A0DADB70F57FA6() { NativeInvoker.Invoke(0xF4A0DADB70F57FA6); } // 0xF4A0DADB70F57FA6 0x3DA7AA5D b323<, (ulong)F4A0DADB70F57FA6); }
        internal static Any N_0x5068F488DDB54DD8() { return NativeInvoker.Invoke<Any>(0x5068F488DDB54DD8); } // 0x5068F488DDB54DD8 0xDAB4BAC0 b323, (ulong)5068F488DDB54DD8); }
        internal static void PREFETCH_SRL(char* srl) { NativeInvoker.Invoke(0x3D245789CE12982C, (ulong)srl); }
        internal static BOOL IS_SRL_LOADED() { return NativeInvoker.Invoke<BOOL>(0xD0263801A4C5B0BB); } // 0xD0263801A4C5B0BB 0x670FA2A6 b323, (ulong)D0263801A4C5B0BB); }
        internal static void BEGIN_SRL() { NativeInvoker.Invoke(0x9BADDC94EF83B823); } // 0x9BADDC94EF83B823 0x24F49427 b323<, (ulong)9BADDC94EF83B823); }
        internal static void END_SRL() { NativeInvoker.Invoke(0x0A41540E63C9EE17); } // 0x0A41540E63C9EE17 0x1977C56A b323<, (ulong)0A41540E63C9EE17); }
        internal static void SET_SRL_TIME(float p0) { NativeInvoker.Invoke(0xA74A541C6884E7B8, *(uint*)&p0); }
        internal static void N_0xEF39EE20C537E98C(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { NativeInvoker.Invoke(0xEF39EE20C537E98C, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static void N_0xBEB2D9A1D9A8F55A(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0xBEB2D9A1D9A8F55A, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void N_0x20C6C7E4EB082A7F(BOOL p0) { NativeInvoker.Invoke(0x20C6C7E4EB082A7F, (ulong)p0); }
        internal static void N_0xF8155A7F03DDFC8E(Any p0) { NativeInvoker.Invoke(0xF8155A7F03DDFC8E, (ulong)p0); }
        internal static void SET_HD_AREA(float x, float y, float z, float radius) { NativeInvoker.Invoke(0xB85F26619073E775, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius); }
        internal static void CLEAR_HD_AREA() { NativeInvoker.Invoke(0xCE58B1CFB9290813); } // 0xCE58B1CFB9290813 0x7CAC6FA0 b323<, (ulong)CE58B1CFB9290813); }
        internal static void INIT_CREATOR_BUDGET() { NativeInvoker.Invoke(0xB5A4DB34FE89B88A); } // 0xB5A4DB34FE89B88A 0xE243B2AF b323<, (ulong)B5A4DB34FE89B88A); }
        internal static void SHUTDOWN_CREATOR_BUDGET() { NativeInvoker.Invoke(0xCCE26000E9A6FAD7); } // 0xCCE26000E9A6FAD7 0x897A510F b323<, (ulong)CCE26000E9A6FAD7); }
        internal static BOOL ADD_MODEL_TO_CREATOR_BUDGET(Hash modelHash) { return NativeInvoker.Invoke<BOOL>(0x0BC3144DEB678666, (ulong)modelHash); }
        internal static void REMOVE_MODEL_FROM_CREATOR_BUDGET(Hash modelHash) { NativeInvoker.Invoke(0xF086AD9354FAC3A3, (ulong)modelHash); }
        internal static float GET_USED_CREATOR_MODEL_MEMORY_PERCENTAGE_() { return NativeInvoker.Invoke<float>(0x3D3D8B3BE5A83D35); } // 0x3D3D8B3BE5A83D35 0x3E9C4CBE b323, (ulong)3D3D8B3BE5A83D35); }
        internal static void SET_ISLAND_HOPPER_ENABLED_(char* name, BOOL toggle) { NativeInvoker.Invoke(0x9A9D1BA639675CF1, (ulong)name, (ulong)toggle); }
    }

    internal static unsafe class TASK
    {
        internal static void TASK_PAUSE(Ped ped, int ms) { NativeInvoker.Invoke(0xE73A266DB0CA9042, (ulong)ped, (ulong)ms); }
        internal static void TASK_STAND_STILL(Ped ped, int time) { NativeInvoker.Invoke(0x919BE13EED931959, (ulong)ped, (ulong)time); }
        internal static void TASK_JUMP(Ped ped, BOOL unused, Any p2, Any p3) { NativeInvoker.Invoke(0x0AE4086104E067B1, (ulong)ped, (ulong)unused, (ulong)p2, (ulong)p3); }
        internal static void TASK_COWER(Ped ped, int duration) { NativeInvoker.Invoke(0x3EB1FE9E8E908E15, (ulong)ped, (ulong)duration); }
        internal static void TASK_HANDS_UP(Ped ped, int duration, Ped facingPed, int p3, BOOL p4) { NativeInvoker.Invoke(0xF2EAB31979A7F910, (ulong)ped, (ulong)duration, (ulong)facingPed, (ulong)p3, (ulong)p4); }
        internal static void UPDATE_TASK_HANDS_UP_DURATION(Ped ped, int duration) { NativeInvoker.Invoke(0xA98FCAFD7893C834, (ulong)ped, (ulong)duration); }
        internal static void TASK_OPEN_VEHICLE_DOOR(Ped ped, Vehicle vehicle, int timeOut, int seat, float speed) { NativeInvoker.Invoke(0x965791A9A488A062, (ulong)ped, (ulong)vehicle, (ulong)timeOut, (ulong)seat, *(uint*)&speed); }
        internal static void TASK_ENTER_VEHICLE(Ped ped, Vehicle vehicle, int timeout, int seat, float speed, int flag, Any p6) { NativeInvoker.Invoke(0xC20E50AA46D09CA8, (ulong)ped, (ulong)vehicle, (ulong)timeout, (ulong)seat, *(uint*)&speed, (ulong)flag, (ulong)p6); }
        internal static void TASK_LEAVE_VEHICLE(Ped ped, Vehicle vehicle, int flags) { NativeInvoker.Invoke(0xD3DBCE61A490BE02, (ulong)ped, (ulong)vehicle, (ulong)flags); }
        internal static void TASK_GET_OFF_BOAT(Ped ped, Vehicle boat) { NativeInvoker.Invoke(0x9C00E77AF14B2DFF, (ulong)ped, (ulong)boat); }
        internal static void TASK_SKY_DIVE(Ped ped, BOOL p1) { NativeInvoker.Invoke(0x601736CFE536B0A0, (ulong)ped, (ulong)p1); }
        internal static void TASK_PARACHUTE(Ped ped, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0xD2F1C53C97EE81AB, (ulong)ped, (ulong)p1, (ulong)p2); }
        internal static void TASK_PARACHUTE_TO_TARGET(Ped ped, float x, float y, float z) { NativeInvoker.Invoke(0xB33E291AFA6BD03A, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void SET_PARACHUTE_TASK_TARGET(Ped ped, float x, float y, float z) { NativeInvoker.Invoke(0xC313379AF0FCEDA7, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void SET_PARACHUTE_TASK_THRUST(Ped ped, float thrust) { NativeInvoker.Invoke(0x0729BAC1B8C64317, (ulong)ped, *(uint*)&thrust); }
        internal static void TASK_RAPPEL_FROM_HELI(Ped ped, float p1) { NativeInvoker.Invoke(0x09693B0312F91649, (ulong)ped, *(uint*)&p1); }
        internal static void TASK_VEHICLE_DRIVE_TO_COORD(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, Any p6, Hash vehicleModel, int drivingMode, float stopRange, float p10) { NativeInvoker.Invoke(0xE2A2AA2F659D77A7, (ulong)ped, (ulong)vehicle, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&speed, (ulong)p6, (ulong)vehicleModel, (ulong)drivingMode, *(uint*)&stopRange, *(uint*)&p10); }
        internal static void TASK_VEHICLE_DRIVE_TO_COORD_LONGRANGE(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, int driveMode, float stopRange) { NativeInvoker.Invoke(0x158BB33F920D360C, (ulong)ped, (ulong)vehicle, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&speed, (ulong)driveMode, *(uint*)&stopRange); }
        internal static void TASK_VEHICLE_DRIVE_WANDER(Ped ped, Vehicle vehicle, float speed, int drivingStyle) { NativeInvoker.Invoke(0x480142959D337D00, (ulong)ped, (ulong)vehicle, *(uint*)&speed, (ulong)drivingStyle); }
        internal static void TASK_FOLLOW_TO_OFFSET_OF_ENTITY(Ped ped, Entity entity, float offsetX, float offsetY, float offsetZ, float movementSpeed, int timeout, float stoppingRange, BOOL persistFollowing) { NativeInvoker.Invoke(0x304AE42E357B8C7E, (ulong)ped, (ulong)entity, *(uint*)&offsetX, *(uint*)&offsetY, *(uint*)&offsetZ, *(uint*)&movementSpeed, (ulong)timeout, *(uint*)&stoppingRange, (ulong)persistFollowing); }
        internal static void TASK_GO_STRAIGHT_TO_COORD(Ped ped, float x, float y, float z, float speed, int timeout, float targetHeading, float distanceToSlide) { NativeInvoker.Invoke(0xD76B57B44F1E6F8B, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&speed, (ulong)timeout, *(uint*)&targetHeading, *(uint*)&distanceToSlide); }
        internal static void TASK_GO_STRAIGHT_TO_COORD_RELATIVE_TO_ENTITY(Entity entity1, Entity entity2, float p2, float p3, float p4, float p5, Any p6) { NativeInvoker.Invoke(0x61E360B7E040D12E, (ulong)entity1, (ulong)entity2, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, (ulong)p6); }
        internal static void TASK_ACHIEVE_HEADING(Ped ped, float heading, int timeout) { NativeInvoker.Invoke(0x93B93A37987F1F3D, (ulong)ped, *(uint*)&heading, (ulong)timeout); }
        internal static void TASK_FLUSH_ROUTE() { NativeInvoker.Invoke(0x841142A1376E9006); } // 0x841142A1376E9006 0x34219154 b323<, (ulong)841142A1376E9006); }
        internal static void TASK_EXTEND_ROUTE(float x, float y, float z) { NativeInvoker.Invoke(0x1E7889778264843A, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void TASK_FOLLOW_POINT_ROUTE(Ped ped, float speed, int unknown) { NativeInvoker.Invoke(0x595583281858626E, (ulong)ped, *(uint*)&speed, (ulong)unknown); }
        internal static void TASK_GO_TO_ENTITY(Entity entity, Entity target, int duration, float distance, float speed, float p5, int p6) { NativeInvoker.Invoke(0x6A071245EB0D1882, (ulong)entity, (ulong)target, (ulong)duration, *(uint*)&distance, *(uint*)&speed, *(uint*)&p5, (ulong)p6); }
        internal static void TASK_SMART_FLEE_COORD(Ped ped, float x, float y, float z, float distance, int time, BOOL p6, BOOL p7) { NativeInvoker.Invoke(0x94587F17E9C365D5, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&distance, (ulong)time, (ulong)p6, (ulong)p7); }
        internal static void TASK_SMART_FLEE_PED(Ped ped, Ped fleeTarget, float distance, Any fleeTime, BOOL p4, BOOL p5) { NativeInvoker.Invoke(0x22B0D0E37CCB840D, (ulong)ped, (ulong)fleeTarget, *(uint*)&distance, (ulong)fleeTime, (ulong)p4, (ulong)p5); }
        internal static void TASK_REACT_AND_FLEE_PED(Ped ped, Ped fleeTarget) { NativeInvoker.Invoke(0x72C896464915D1B1, (ulong)ped, (ulong)fleeTarget); }
        internal static void TASK_SHOCKING_EVENT_REACT(Ped ped, int @eventHandle) { NativeInvoker.Invoke(0x452419CBD838065B, (ulong)ped, (ulong)@eventHandle); }
        internal static void TASK_WANDER_IN_AREA(Ped ped, float x, float y, float z, float radius, float minimalLength, float timeBetweenWalks) { NativeInvoker.Invoke(0xE054346CA3A0F315, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, *(uint*)&minimalLength, *(uint*)&timeBetweenWalks); }
        internal static void TASK_WANDER_STANDARD(Ped ped, float p1, int p2) { NativeInvoker.Invoke(0xBB9CE077274F6A1B, (ulong)ped, *(uint*)&p1, (ulong)p2); }
        internal static void TASK_WANDER_SPECIFIC(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x6919A2F136426098, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void TASK_VEHICLE_PARK(Ped ped, Vehicle vehicle, float x, float y, float z, float heading, int mode, float radius, BOOL keepEngineOn) { NativeInvoker.Invoke(0x0F3E34E968EA374E, (ulong)ped, (ulong)vehicle, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&heading, (ulong)mode, *(uint*)&radius, (ulong)keepEngineOn); }
        internal static void TASK_STEALTH_KILL(Ped killer, Ped target, Hash actionType, float p3, Any p4) { NativeInvoker.Invoke(0xAA5DC05579D60BD9, (ulong)killer, (ulong)target, (ulong)actionType, *(uint*)&p3, (ulong)p4); }
        internal static void TASK_PLANT_BOMB(Ped ped, float x, float y, float z, float heading) { NativeInvoker.Invoke(0x965FEC691D55E9BF, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&heading); }
        internal static void TASK_FOLLOW_NAV_MESH_TO_COORD(Ped ped, float x, float y, float z, float speed, int timeout, float stoppingRange, BOOL persistFollowing, float unk) { NativeInvoker.Invoke(0x15D3A79D4E44B913, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&speed, (ulong)timeout, *(uint*)&stoppingRange, (ulong)persistFollowing, *(uint*)&unk); }
        internal static void TASK_FOLLOW_NAV_MESH_TO_COORD_ADVANCED(Ped ped, float x, float y, float z, float speed, int timeout, float unkFloat, int unkInt, float unkX, float unkY, float unkZ, float unk_40000f) { NativeInvoker.Invoke(0x17F58B88D085DBAC, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&speed, (ulong)timeout, *(uint*)&unkFloat, (ulong)unkInt, *(uint*)&unkX, *(uint*)&unkY, *(uint*)&unkZ, *(uint*)&unk_40000f); }
        internal static void SET_PED_PATH_CAN_USE_CLIMBOVERS(Ped ped, BOOL Toggle) { NativeInvoker.Invoke(0x8E06A6FE76C9EFF4, (ulong)ped, (ulong)Toggle); }
        internal static void SET_PED_PATH_CAN_USE_LADDERS(Ped ped, BOOL Toggle) { NativeInvoker.Invoke(0x77A5B103C87F476E, (ulong)ped, (ulong)Toggle); }
        internal static void SET_PED_PATH_CAN_DROP_FROM_HEIGHT(Ped ped, BOOL Toggle) { NativeInvoker.Invoke(0xE361C5C71C431A4F, (ulong)ped, (ulong)Toggle); }
        internal static void SET_PED_PATH_CLIMB_COST_MODIFIER(Ped ped, float modifier) { NativeInvoker.Invoke(0x88E32DB8C1A4AA4B, (ulong)ped, *(uint*)&modifier); }
        internal static void SET_PED_PATH_MAY_ENTER_WATER(Ped ped, BOOL mayEnterWater) { NativeInvoker.Invoke(0xF35425A4204367EC, (ulong)ped, (ulong)mayEnterWater); }
        internal static void SET_PED_PATH_PREFER_TO_AVOID_WATER(Ped ped, BOOL avoidWater) { NativeInvoker.Invoke(0x38FE1EC73743793C, (ulong)ped, (ulong)avoidWater); }
        internal static void SET_PED_PATH_AVOID_FIRE(Ped ped, BOOL avoidFire) { NativeInvoker.Invoke(0x4455517B28441E60, (ulong)ped, (ulong)avoidFire); }
        internal static void SET_GLOBAL_MIN_BIRD_FLIGHT_HEIGHT(float height) { NativeInvoker.Invoke(0x6C6B148586F934F7, *(uint*)&height); }
        internal static int GET_NAVMESH_ROUTE_DISTANCE_REMAINING(Ped ped, float* distanceRemaining, BOOL* isPathReady) { return NativeInvoker.Invoke<int>(0xC6F5C0BCDC74D62D, (ulong)ped, (ulong)distanceRemaining, (ulong)isPathReady); }
        internal static int GET_NAVMESH_ROUTE_RESULT(Ped ped) { return NativeInvoker.Invoke<int>(0x632E831F382A0FA8, (ulong)ped); }
        internal static BOOL N_0x3E38E28A1D80DDF6(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x3E38E28A1D80DDF6, (ulong)ped); }
        internal static void TASK_GO_TO_COORD_ANY_MEANS(Ped ped, float x, float y, float z, float speed, Any p5, BOOL p6, int walkingStyle, float p8) { NativeInvoker.Invoke(0x5BC448CB78FA3E88, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&speed, (ulong)p5, (ulong)p6, (ulong)walkingStyle, *(uint*)&p8); }
        internal static void TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS(Ped ped, float x, float y, float z, float speed, Any p5, BOOL p6, int walkingStyle, float p8, Any p9, Any p10, Any p11, Any p12) { NativeInvoker.Invoke(0x1DD45F9ECFDB1BC9, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&speed, (ulong)p5, (ulong)p6, (ulong)walkingStyle, *(uint*)&p8, (ulong)p9, (ulong)p10, (ulong)p11, (ulong)p12); }
        internal static void TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS_WITH_CRUISE_SPEED(Ped ped, float x, float y, float z, float speed, Any p5, BOOL p6, int walkingStyle, float p8, Any p9, Any p10, Any p11, Any p12, Any p13) { NativeInvoker.Invoke(0xB8ECD61F531A7B02, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&speed, (ulong)p5, (ulong)p6, (ulong)walkingStyle, *(uint*)&p8, (ulong)p9, (ulong)p10, (ulong)p11, (ulong)p12, (ulong)p13); }
        internal static void TASK_PLAY_ANIM(Ped ped, char* animDictionary, char* animationName, float blendInSpeed, float blendOutSpeed, int duration, int flag, float playbackRate, BOOL lockX, BOOL lockY, BOOL lockZ) { NativeInvoker.Invoke(0xEA47FE3719165B94, (ulong)ped, (ulong)animDictionary, (ulong)animationName, *(uint*)&blendInSpeed, *(uint*)&blendOutSpeed, (ulong)duration, (ulong)flag, *(uint*)&playbackRate, (ulong)lockX, (ulong)lockY, (ulong)lockZ); }
        internal static void TASK_PLAY_ANIM_ADVANCED(Ped ped, char* animDict, char* animName, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float animEnterSpeed, float animExitSpeed, int duration, Any flag, float animTime, Any p14, Any p15) { NativeInvoker.Invoke(0x83CDB10EA29B370B, (ulong)ped, (ulong)animDict, (ulong)animName, *(uint*)&posX, *(uint*)&posY, *(uint*)&posZ, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, *(uint*)&animEnterSpeed, *(uint*)&animExitSpeed, (ulong)duration, (ulong)flag, *(uint*)&animTime, (ulong)p14, (ulong)p15); }
        internal static void STOP_ANIM_TASK(Ped ped, char* animDictionary, char* animationName, float p3) { NativeInvoker.Invoke(0x97FF36A1D40EA00A, (ulong)ped, (ulong)animDictionary, (ulong)animationName, *(uint*)&p3); }
        internal static void TASK_SCRIPTED_ANIMATION(Ped ped, Any* p1, Any* p2, Any* p3, float p4, float p5) { NativeInvoker.Invoke(0x126EF75F1E17ABE5, (ulong)ped, (ulong)p1, (ulong)p2, (ulong)p3, *(uint*)&p4, *(uint*)&p5); }
        internal static void PLAY_ENTITY_SCRIPTED_ANIM(Any p0, Any* p1, Any* p2, Any* p3, float p4, float p5) { NativeInvoker.Invoke(0x77A1EEC547E7FCF1, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, *(uint*)&p4, *(uint*)&p5); }
        internal static void STOP_ANIM_PLAYBACK(Ped ped, int p1, BOOL p2) { NativeInvoker.Invoke(0xEE08C992D238C5D1, (ulong)ped, (ulong)p1, (ulong)p2); }
        internal static void SET_ANIM_WEIGHT(Any p0, float p1, Any p2, Any p3, BOOL p4) { NativeInvoker.Invoke(0x207F1A47C0342F48, (ulong)p0, *(uint*)&p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void SET_ANIM_PLAYBACK_TIME_(Entity entity, float p1, Any p2, BOOL p3) { NativeInvoker.Invoke(0xDDF3CB5A0A4C0B49, (ulong)entity, *(uint*)&p1, (ulong)p2, (ulong)p3); }
        internal static void SET_ANIM_RATE(Any p0, float p1, Any p2, BOOL p3) { NativeInvoker.Invoke(0x032D49C5E359C847, (ulong)p0, *(uint*)&p1, (ulong)p2, (ulong)p3); }
        internal static void SET_ANIM_LOOPED(Any p0, BOOL p1, Any p2, BOOL p3) { NativeInvoker.Invoke(0x70033C3CC29A1FF4, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void TASK_PLAY_PHONE_GESTURE_ANIMATION(Ped ped, char* animDict, char* animation, char* boneMaskType, float p4, float p5, BOOL p6, BOOL p7) { NativeInvoker.Invoke(0x8FBB6758B3B3E9EC, (ulong)ped, (ulong)animDict, (ulong)animation, (ulong)boneMaskType, *(uint*)&p4, *(uint*)&p5, (ulong)p6, (ulong)p7); }
        internal static void TASK_STOP_PHONE_GESTURE_ANIMATION(Ped ped, Any p1) { NativeInvoker.Invoke(0x3FA00D4F4641BFAE, (ulong)ped, (ulong)p1); }
        internal static BOOL IS_PLAYING_PHONE_GESTURE_ANIM(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xB8EBB1E9D3588C10, (ulong)ped); }
        internal static float GET_PHONE_GESTURE_ANIM_CURRENT_TIME(Ped ped) { return NativeInvoker.Invoke<float>(0x47619ABE8B268C60, (ulong)ped); }
        internal static float GET_PHONE_GESTURE_ANIM_TOTAL_TIME(Ped ped) { return NativeInvoker.Invoke<float>(0x1EE0F68A7C25DEC6, (ulong)ped); }
        internal static void TASK_VEHICLE_PLAY_ANIM(Vehicle vehicle, char* animationSet, char* animationName) { NativeInvoker.Invoke(0x69F5C3BD0F3EBD89, (ulong)vehicle, (ulong)animationSet, (ulong)animationName); }
        internal static void TASK_LOOK_AT_COORD(Entity entity, float x, float y, float z, int duration, Any p5, Any p6) { NativeInvoker.Invoke(0x6FA46612594F7973, (ulong)entity, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)duration, (ulong)p5, (ulong)p6); }
        internal static void TASK_LOOK_AT_ENTITY(Ped ped, Entity lookAt, int duration, int unknown1, int unknown2) { NativeInvoker.Invoke(0x69F4BE8C8CC4796C, (ulong)ped, (ulong)lookAt, (ulong)duration, (ulong)unknown1, (ulong)unknown2); }
        internal static void TASK_CLEAR_LOOK_AT(Ped ped) { NativeInvoker.Invoke(0x0F804F1DB19B9689, (ulong)ped); }
        internal static void OPEN_SEQUENCE_TASK(int* taskSequenceId) { NativeInvoker.Invoke(0xE8854A4326B9E12B, (ulong)taskSequenceId); }
        internal static void CLOSE_SEQUENCE_TASK(int taskSequenceId) { NativeInvoker.Invoke(0x39E72BC99E6360CB, (ulong)taskSequenceId); }
        internal static void TASK_PERFORM_SEQUENCE(Ped ped, int taskSequenceId) { NativeInvoker.Invoke(0x5ABA3986D90D8A3B, (ulong)ped, (ulong)taskSequenceId); }
        internal static void TASK_PERFORM_SEQUENCE_LOCALLY(Ped ped, int taskSequenceId) { NativeInvoker.Invoke(0x8C33220C8D78CA0D, (ulong)ped, (ulong)taskSequenceId); }
        internal static void CLEAR_SEQUENCE_TASK(int* taskSequenceId) { NativeInvoker.Invoke(0x3841422E9C488D8C, (ulong)taskSequenceId); }
        internal static void SET_SEQUENCE_TO_REPEAT(int taskSequenceId, BOOL repeat) { NativeInvoker.Invoke(0x58C70CF3A41E4AE7, (ulong)taskSequenceId, (ulong)repeat); }
        internal static int GET_SEQUENCE_PROGRESS(Ped ped) { return NativeInvoker.Invoke<int>(0x00A9010CFE1E3533, (ulong)ped); }
        internal static BOOL GET_IS_TASK_ACTIVE(Ped ped, int taskIndex) { return NativeInvoker.Invoke<BOOL>(0xB0760331C7AA4155, (ulong)ped, (ulong)taskIndex); }
        internal static int GET_SCRIPT_TASK_STATUS(Ped ped, Hash taskHash) { return NativeInvoker.Invoke<int>(0x77F1BEB8863288D5, (ulong)ped, (ulong)taskHash); }
        internal static int GET_ACTIVE_VEHICLE_MISSION_TYPE(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x534AEBA6E5ED4CAB, (ulong)vehicle); }
        internal static void TASK_LEAVE_ANY_VEHICLE(Ped ped, int p1, int flags) { NativeInvoker.Invoke(0x504D54DF3F6F2247, (ulong)ped, (ulong)p1, (ulong)flags); }
        internal static void TASK_AIM_GUN_SCRIPTED(Ped ped, Hash scriptTask, BOOL p2, BOOL p3) { NativeInvoker.Invoke(0x7A192BE16D373D00, (ulong)ped, (ulong)scriptTask, (ulong)p2, (ulong)p3); }
        internal static void TASK_AIM_GUN_SCRIPTED_WITH_TARGET(Any p0, Any p1, float p2, float p3, float p4, Any p5, BOOL p6, BOOL p7) { NativeInvoker.Invoke(0x8605AF0DE8B3A5AC, (ulong)p0, (ulong)p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, (ulong)p5, (ulong)p6, (ulong)p7); }
        internal static void UPDATE_TASK_AIM_GUN_SCRIPTED_TARGET(Ped p0, Ped p1, float p2, float p3, float p4, BOOL p5) { NativeInvoker.Invoke(0x9724FB59A3E72AD0, (ulong)p0, (ulong)p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, (ulong)p5); }
        internal static char* GET_CLIP_SET_FOR_SCRIPTED_GUN_TASK(int p0) { return (char*)NativeInvoker.Invoke<IntPtr>(0x3A8CADC7D37AACC5, (ulong)p0); }
        internal static void TASK_AIM_GUN_AT_ENTITY(Ped ped, Entity entity, int duration, BOOL p3) { NativeInvoker.Invoke(0x9B53BB6E8943AF53, (ulong)ped, (ulong)entity, (ulong)duration, (ulong)p3); }
        internal static void TASK_TURN_PED_TO_FACE_ENTITY(Ped ped, Entity entity, int duration) { NativeInvoker.Invoke(0x5AD23D40115353AC, (ulong)ped, (ulong)entity, (ulong)duration); }
        internal static void TASK_AIM_GUN_AT_COORD(Ped ped, float x, float y, float z, int time, BOOL p5, BOOL p6) { NativeInvoker.Invoke(0x6671F3EEC681BDA1, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)time, (ulong)p5, (ulong)p6); }
        internal static void TASK_SHOOT_AT_COORD(Ped ped, float x, float y, float z, int duration, Hash firingPattern) { NativeInvoker.Invoke(0x46A6CC01E0826106, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)duration, (ulong)firingPattern); }
        internal static void TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT(Ped ped, Vehicle vehicle, Any p2) { NativeInvoker.Invoke(0x7AA80209BDA643EB, (ulong)ped, (ulong)vehicle, (ulong)p2); }
        internal static void CLEAR_PED_TASKS(Ped ped) { NativeInvoker.Invoke(0xE1EF3C1216AFF2CD, (ulong)ped); }
        internal static void CLEAR_PED_SECONDARY_TASK(Ped ped) { NativeInvoker.Invoke(0x176CECF6F920D707, (ulong)ped); }
        internal static void TASK_EVERYONE_LEAVE_VEHICLE(Vehicle vehicle) { NativeInvoker.Invoke(0x7F93691AB4B92272, (ulong)vehicle); }
        internal static void TASK_GOTO_ENTITY_OFFSET(Ped ped, Any p1, Any p2, float x, float y, float z, int duration) { NativeInvoker.Invoke(0xE39B4FF4FDEBDE27, (ulong)ped, (ulong)p1, (ulong)p2, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)duration); }
        internal static void TASK_GOTO_ENTITY_OFFSET_XY(int p0, Ped oed, int duration, float p3, float p4, float p5, float p6, BOOL p7) { NativeInvoker.Invoke(0x338E7EF52B6095A9, (ulong)p0, (ulong)oed, (ulong)duration, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, (ulong)p7); }
        internal static void TASK_TURN_PED_TO_FACE_COORD(Ped ped, float x, float y, float z, int duration) { NativeInvoker.Invoke(0x1DDA930A0AC38571, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)duration); }
        internal static void TASK_VEHICLE_TEMP_ACTION(Ped driver, Vehicle vehicle, int action, int time) { NativeInvoker.Invoke(0xC429DCEEB339E129, (ulong)driver, (ulong)vehicle, (ulong)action, (ulong)time); }
        internal static void TASK_VEHICLE_MISSION(Ped driver, Vehicle vehicle, Vehicle vehicleTarget, int missionType, float p4, Any p5, float p6, float p7, BOOL DriveAgainstTraffic) { NativeInvoker.Invoke(0x659427E0EF36BCDE, (ulong)driver, (ulong)vehicle, (ulong)vehicleTarget, (ulong)missionType, *(uint*)&p4, (ulong)p5, *(uint*)&p6, *(uint*)&p7, (ulong)DriveAgainstTraffic); }
        internal static void TASK_VEHICLE_MISSION_PED_TARGET(Ped ped, Vehicle vehicle, Ped pedTarget, int missionType, float maxSpeed, int drivingStyle, float minDistance, float p7, BOOL DriveAgainstTraffic) { NativeInvoker.Invoke(0x9454528DF15D657A, (ulong)ped, (ulong)vehicle, (ulong)pedTarget, (ulong)missionType, *(uint*)&maxSpeed, (ulong)drivingStyle, *(uint*)&minDistance, *(uint*)&p7, (ulong)DriveAgainstTraffic); }
        internal static void TASK_VEHICLE_MISSION_COORS_TARGET(Ped ped, Vehicle vehicle, float x, float y, float z, int p5, int p6, int p7, float p8, float p9, BOOL DriveAgainstTraffic) { NativeInvoker.Invoke(0xF0AF20AA7731F8C3, (ulong)ped, (ulong)vehicle, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)p5, (ulong)p6, (ulong)p7, *(uint*)&p8, *(uint*)&p9, (ulong)DriveAgainstTraffic); }
        internal static void TASK_VEHICLE_ESCORT(Ped ped, Vehicle vehicle, Vehicle targetVehicle, int mode, float speed, int drivingStyle, float minDistance, int p7, float noRoadsDistance) { NativeInvoker.Invoke(0x0FA6E4B75F302400, (ulong)ped, (ulong)vehicle, (ulong)targetVehicle, (ulong)mode, *(uint*)&speed, (ulong)drivingStyle, *(uint*)&minDistance, (ulong)p7, *(uint*)&noRoadsDistance); }
        internal static void TASK_VEHICLE_FOLLOW(Ped driver, Vehicle vehicle, Entity targetEntity, float speed, int drivingStyle, int minDistance) { NativeInvoker.Invoke(0xFC545A9F0626E3B6, (ulong)driver, (ulong)vehicle, (ulong)targetEntity, *(uint*)&speed, (ulong)drivingStyle, (ulong)minDistance); }
        internal static void TASK_VEHICLE_CHASE(Ped driver, Entity targetEnt) { NativeInvoker.Invoke(0x3C08A8E30363B353, (ulong)driver, (ulong)targetEnt); }
        internal static void TASK_VEHICLE_HELI_PROTECT(Ped pilot, Vehicle vehicle, Entity entityToFollow, float targetSpeed, int p4, float radius, int altitude, int p7) { NativeInvoker.Invoke(0x1E09C32048FEFD1C, (ulong)pilot, (ulong)vehicle, (ulong)entityToFollow, *(uint*)&targetSpeed, (ulong)p4, *(uint*)&radius, (ulong)altitude, (ulong)p7); }
        internal static void SET_TASK_VEHICLE_CHASE_BEHAVIOR_FLAG(Ped ped, int flag, BOOL set) { NativeInvoker.Invoke(0xCC665AAC360D31E7, (ulong)ped, (ulong)flag, (ulong)set); }
        internal static void SET_TASK_VEHICLE_CHASE_IDEAL_PURSUIT_DISTANCE(Ped ped, float distance) { NativeInvoker.Invoke(0x639B642FACBE4EDD, (ulong)ped, *(uint*)&distance); }
        internal static void TASK_HELI_CHASE(Ped pilot, Entity entityToFollow, float x, float y, float z) { NativeInvoker.Invoke(0xAC83B1DB38D0ADA0, (ulong)pilot, (ulong)entityToFollow, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void TASK_PLANE_CHASE(Ped pilot, Entity entityToFollow, float x, float y, float z) { NativeInvoker.Invoke(0x2D2386F273FF7A25, (ulong)pilot, (ulong)entityToFollow, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void TASK_PLANE_LAND(Ped pilot, Vehicle plane, float runwayStartX, float runwayStartY, float runwayStartZ, float runwayEndX, float runwayEndY, float runwayEndZ) { NativeInvoker.Invoke(0xBF19721FA34D32C0, (ulong)pilot, (ulong)plane, *(uint*)&runwayStartX, *(uint*)&runwayStartY, *(uint*)&runwayStartZ, *(uint*)&runwayEndX, *(uint*)&runwayEndY, *(uint*)&runwayEndZ); }
        internal static void N_0x6100B3CEFD43452E(Ped p0) { NativeInvoker.Invoke(0x6100B3CEFD43452E, (ulong)p0); }
        internal static void CLEAR_VEHICLE_TASKS_(Vehicle vehicle) { NativeInvoker.Invoke(0xDBBC7A2432524127, (ulong)vehicle); }
        internal static void N_0x53DDC75BC3AC0A90(Vehicle vehicle) { NativeInvoker.Invoke(0x53DDC75BC3AC0A90, (ulong)vehicle); }
        internal static void TASK_PLANE_GOTO_PRECISE_VTOL(Ped ped, Vehicle vehicle, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9) { NativeInvoker.Invoke(0xF7F9DCCA89E7505B, (ulong)ped, (ulong)vehicle, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9); }
        internal static void TASK_SUBMARINE_GOTO_AND_STOP(Any p0, Vehicle submarine, float x, float y, float z, Any p5) { NativeInvoker.Invoke(0xC22B40579A498CA4, (ulong)p0, (ulong)submarine, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)p5); }
        internal static void TASK_HELI_MISSION(Ped pilot, Vehicle aircraft, Vehicle targetVehicle, Ped targetPed, float destinationX, float destinationY, float destinationZ, int missionFlag, float maxSpeed, float radius, float targetHeading, int maxHeight, int minHeight, float unk3, int behaviorFlags) { NativeInvoker.Invoke(0xDAD029E187A2BEB4, (ulong)pilot, (ulong)aircraft, (ulong)targetVehicle, (ulong)targetPed, *(uint*)&destinationX, *(uint*)&destinationY, *(uint*)&destinationZ, (ulong)missionFlag, *(uint*)&maxSpeed, *(uint*)&radius, *(uint*)&targetHeading, (ulong)maxHeight, (ulong)minHeight, *(uint*)&unk3, (ulong)behaviorFlags); }
        internal static void TASK_HELI_ESCORT_HELI(Ped pilot, Vehicle heli1, Vehicle heli2, float p3, float p4, float p5) { NativeInvoker.Invoke(0xB385523325077210, (ulong)pilot, (ulong)heli1, (ulong)heli2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5); }
        internal static void TASK_PLANE_MISSION(Ped pilot, Vehicle aircraft, Vehicle targetVehicle, Ped targetPed, float destinationX, float destinationY, float destinationZ, int missionFlag, float angularDrag, float unk, float targetHeading, float maxZ, float minZ, Any p13) { NativeInvoker.Invoke(0x23703CD154E83B88, (ulong)pilot, (ulong)aircraft, (ulong)targetVehicle, (ulong)targetPed, *(uint*)&destinationX, *(uint*)&destinationY, *(uint*)&destinationZ, (ulong)missionFlag, *(uint*)&angularDrag, *(uint*)&unk, *(uint*)&targetHeading, *(uint*)&maxZ, *(uint*)&minZ, (ulong)p13); }
        internal static void TASK_PLANE_TAXI(Ped pilot, Vehicle aircraft, Any p2, Any p3, Any p4, Any p5, Any p6) { NativeInvoker.Invoke(0x92C360B5F15D2302, (ulong)pilot, (ulong)aircraft, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static void TASK_BOAT_MISSION(Ped pedDriver, Vehicle boat, Any p2, Any p3, float x, float y, float z, Any p7, float maxSpeed, int drivingStyle, float p10, Any p11) { NativeInvoker.Invoke(0x15C86013127CE63F, (ulong)pedDriver, (ulong)boat, (ulong)p2, (ulong)p3, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)p7, *(uint*)&maxSpeed, (ulong)drivingStyle, *(uint*)&p10, (ulong)p11); }
        internal static void TASK_DRIVE_BY(Ped driverPed, Ped targetPed, Vehicle targetVehicle, float targetX, float targetY, float targetZ, float distanceToShoot, int pedAccuracy, BOOL p8, Hash firingPattern) { NativeInvoker.Invoke(0x2F8AF0E82773A171, (ulong)driverPed, (ulong)targetPed, (ulong)targetVehicle, *(uint*)&targetX, *(uint*)&targetY, *(uint*)&targetZ, *(uint*)&distanceToShoot, (ulong)pedAccuracy, (ulong)p8, (ulong)firingPattern); }
        internal static void SET_DRIVEBY_TASK_TARGET(Ped shootingPed, Ped targetPed, Vehicle targetVehicle, float x, float y, float z) { NativeInvoker.Invoke(0xE5B302114D8162EE, (ulong)shootingPed, (ulong)targetPed, (ulong)targetVehicle, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void CLEAR_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK(Ped ped) { NativeInvoker.Invoke(0xC35B5CDB2824CF69, (ulong)ped); }
        internal static BOOL IS_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x8785E6E40C7A8818, (ulong)ped); }
        internal static BOOL CONTROL_MOUNTED_WEAPON(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xDCFE42068FE0135A, (ulong)ped); }
        internal static void SET_MOUNTED_WEAPON_TARGET(Ped shootingPed, Ped targetPed, Vehicle targetVehicle, float x, float y, float z, Any p6, Any p7) { NativeInvoker.Invoke(0xCCD892192C6D2BB9, (ulong)shootingPed, (ulong)targetPed, (ulong)targetVehicle, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)p6, (ulong)p7); }
        internal static BOOL IS_MOUNTED_WEAPON_TASK_UNDERNEATH_DRIVING_TASK(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xA320EF046186FA3B, (ulong)ped); }
        internal static void TASK_USE_MOBILE_PHONE(Ped ped, int p1, Any p2) { NativeInvoker.Invoke(0xBD2A8EC3AF4DE7DB, (ulong)ped, (ulong)p1, (ulong)p2); }
        internal static void TASK_USE_MOBILE_PHONE_TIMED(Ped ped, int duration) { NativeInvoker.Invoke(0x5EE02954A14C69DB, (ulong)ped, (ulong)duration); }
        internal static void TASK_CHAT_TO_PED(Ped ped, Ped target, Any p2, float p3, float p4, float p5, float p6, float p7) { NativeInvoker.Invoke(0x8C338E0263E4FD19, (ulong)ped, (ulong)target, (ulong)p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, *(uint*)&p7); }
        internal static void TASK_WARP_PED_INTO_VEHICLE(Ped ped, Vehicle vehicle, int seat) { NativeInvoker.Invoke(0x9A7D091411C5F684, (ulong)ped, (ulong)vehicle, (ulong)seat); }
        internal static void TASK_SHOOT_AT_ENTITY(Entity entity, Entity target, int duration, Hash firingPattern) { NativeInvoker.Invoke(0x08DA95E8298AE772, (ulong)entity, (ulong)target, (ulong)duration, (ulong)firingPattern); }
        internal static void TASK_CLIMB(Ped ped, BOOL unused) { NativeInvoker.Invoke(0x89D9FCC2435112F1, (ulong)ped, (ulong)unused); }
        internal static void TASK_CLIMB_LADDER(Ped ped, int p1) { NativeInvoker.Invoke(0xB6C987F9285A3814, (ulong)ped, (ulong)p1); }
        internal static void TASK_RAPPEL_DOWN_WALL(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9, Any p10) { NativeInvoker.Invoke(0xEAF66ACDDC794793, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9, (ulong)p10); }
        internal static Any N_0x9D252648778160DF(Any p0) { return NativeInvoker.Invoke<Any>(0x9D252648778160DF, (ulong)p0); }
        internal static void CLEAR_PED_TASKS_IMMEDIATELY(Ped ped) { NativeInvoker.Invoke(0xAAA34F8A7CB32098, (ulong)ped); }
        internal static void TASK_PERFORM_SEQUENCE_FROM_PROGRESS(Any p0, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x89221B16730234F0, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void SET_NEXT_DESIRED_MOVE_STATE(float p0) { NativeInvoker.Invoke(0xF1B9F16E89E2C93A, *(uint*)&p0); }
        internal static void SET_PED_DESIRED_MOVE_BLEND_RATIO(Ped ped, float p1) { NativeInvoker.Invoke(0x1E982AC8716912C5, (ulong)ped, *(uint*)&p1); }
        internal static float GET_PED_DESIRED_MOVE_BLEND_RATIO(Ped ped) { return NativeInvoker.Invoke<float>(0x8517D4A6CA8513ED, (ulong)ped); }
        internal static void TASK_GOTO_ENTITY_AIMING(Ped ped, Entity target, float distanceToStopAt, float StartAimingDist) { NativeInvoker.Invoke(0xA9DA48FAB8A76C12, (ulong)ped, (ulong)target, *(uint*)&distanceToStopAt, *(uint*)&StartAimingDist); }
        internal static void TASK_SET_DECISION_MAKER(Ped ped, Hash p1) { NativeInvoker.Invoke(0xEB8517DDA73720DA, (ulong)ped, (ulong)p1); }
        internal static void TASK_SET_SPHERE_DEFENSIVE_AREA(Any p0, float p1, float p2, float p3, float p4) { NativeInvoker.Invoke(0x933C06518B52A9A4, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4); }
        internal static void TASK_CLEAR_DEFENSIVE_AREA(Any p0) { NativeInvoker.Invoke(0x95A6C46A31D1917D, (ulong)p0); }
        internal static void TASK_PED_SLIDE_TO_COORD(Ped ped, float x, float y, float z, float heading, float p5) { NativeInvoker.Invoke(0xD04FE6765D990A06, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&heading, *(uint*)&p5); }
        internal static void TASK_PED_SLIDE_TO_COORD_HDG_RATE(Ped ped, float x, float y, float z, float heading, float p5, float p6) { NativeInvoker.Invoke(0x5A4A6A6D3DC64F52, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&heading, *(uint*)&p5, *(uint*)&p6); }
        internal static ScrHandle ADD_COVER_POINT(float p0, float p1, float p2, float p3, Any p4, Any p5, Any p6, BOOL p7) { return NativeInvoker.Invoke<ScrHandle>(0xD5C12A75C7B9497F, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7); }
        internal static void REMOVE_COVER_POINT(ScrHandle coverpoint) { NativeInvoker.Invoke(0xAE287C923D891715, (ulong)coverpoint); }
        internal static BOOL DOES_SCRIPTED_COVER_POINT_EXIST_AT_COORDS(float x, float y, float z) { return NativeInvoker.Invoke<BOOL>(0xA98B8E3C088E5A31, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static Vector3 GET_SCRIPTED_COVER_POINT_COORDS(ScrHandle coverpoint) { return NativeInvoker.Invoke<Vector3>(0x594A1028FC2A3E85, (ulong)coverpoint); }
        internal static void TASK_COMBAT_PED(Ped ped, Ped targetPed, int p2, int p3) { NativeInvoker.Invoke(0xF166E48407BAC484, (ulong)ped, (ulong)targetPed, (ulong)p2, (ulong)p3); }
        internal static void TASK_COMBAT_PED_TIMED(Any p0, Ped ped, int p2, Any p3) { NativeInvoker.Invoke(0x944F30DCB7096BDE, (ulong)p0, (ulong)ped, (ulong)p2, (ulong)p3); }
        internal static void TASK_SEEK_COVER_FROM_POS(Ped ped, float x, float y, float z, int duration, BOOL p5) { NativeInvoker.Invoke(0x75AC2B60386D89F2, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)duration, (ulong)p5); }
        internal static void TASK_SEEK_COVER_FROM_PED(Ped ped, Ped target, int duration, BOOL p3) { NativeInvoker.Invoke(0x84D32B3BEC531324, (ulong)ped, (ulong)target, (ulong)duration, (ulong)p3); }
        internal static void TASK_SEEK_COVER_TO_COVER_POINT(Any p0, Any p1, float p2, float p3, float p4, Any p5, BOOL p6) { NativeInvoker.Invoke(0xD43D95C7A869447F, (ulong)p0, (ulong)p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, (ulong)p5, (ulong)p6); }
        internal static void TASK_SEEK_COVER_TO_COORDS(Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, Any p7, BOOL p8) { NativeInvoker.Invoke(0x39246A6958EF072C, (ulong)ped, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)p7, (ulong)p8); }
        internal static void TASK_PUT_PED_DIRECTLY_INTO_COVER(Ped ped, float x, float y, float z, Any timeout, BOOL p5, float p6, BOOL p7, BOOL p8, Any p9, BOOL p10) { NativeInvoker.Invoke(0x4172393E6BE1FECE, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)timeout, (ulong)p5, *(uint*)&p6, (ulong)p7, (ulong)p8, (ulong)p9, (ulong)p10); }
        internal static void TASK_EXIT_COVER(Any p0, Any p1, float p2, float p3, float p4) { NativeInvoker.Invoke(0x79B258E397854D29, (ulong)p0, (ulong)p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4); }
        internal static void TASK_PUT_PED_DIRECTLY_INTO_MELEE(Ped ped, Ped meleeTarget, float p2, float p3, float p4, BOOL p5) { NativeInvoker.Invoke(0x1C6CD14A876FFE39, (ulong)ped, (ulong)meleeTarget, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, (ulong)p5); }
        internal static void TASK_TOGGLE_DUCK(BOOL p0, BOOL p1) { NativeInvoker.Invoke(0xAC96609B9995EDF8, (ulong)p0, (ulong)p1); }
        internal static void TASK_GUARD_CURRENT_POSITION(Ped p0, float p1, float p2, BOOL p3) { NativeInvoker.Invoke(0x4A58A47A72E3FCB4, (ulong)p0, *(uint*)&p1, *(uint*)&p2, (ulong)p3); }
        internal static void TASK_GUARD_ASSIGNED_DEFENSIVE_AREA(Any p0, float p1, float p2, float p3, float p4, float p5, Any p6) { NativeInvoker.Invoke(0xD2A207EEBDF9889B, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, (ulong)p6); }
        internal static void TASK_GUARD_SPHERE_DEFENSIVE_AREA(Ped p0, float p1, float p2, float p3, float p4, float p5, Any p6, float p7, float p8, float p9, float p10) { NativeInvoker.Invoke(0xC946FE14BE0EB5E2, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, (ulong)p6, *(uint*)&p7, *(uint*)&p8, *(uint*)&p9, *(uint*)&p10); }
        internal static void TASK_STAND_GUARD(Ped ped, float x, float y, float z, float heading, char* scenarioName) { NativeInvoker.Invoke(0xAE032F8BBA959E90, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&heading, (ulong)scenarioName); }
        internal static void SET_DRIVE_TASK_CRUISE_SPEED(Ped driver, float cruiseSpeed) { NativeInvoker.Invoke(0x5C9B84BD7D31D908, (ulong)driver, *(uint*)&cruiseSpeed); }
        internal static void SET_DRIVE_TASK_MAX_CRUISE_SPEED(Any p0, float p1) { NativeInvoker.Invoke(0x404A5AA9B9F0B746, (ulong)p0, *(uint*)&p1); }
        internal static void SET_DRIVE_TASK_DRIVING_STYLE(Ped ped, int drivingStyle) { NativeInvoker.Invoke(0xDACE1BE37D88AF67, (ulong)ped, (ulong)drivingStyle); }
        internal static void ADD_COVER_BLOCKING_AREA(float playerX, float playerY, float playerZ, float radiusX, float radiusY, float radiusZ, BOOL p6, BOOL p7, BOOL p8, BOOL p9) { NativeInvoker.Invoke(0x45C597097DD7CB81, *(uint*)&playerX, *(uint*)&playerY, *(uint*)&playerZ, *(uint*)&radiusX, *(uint*)&radiusY, *(uint*)&radiusZ, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9); }
        internal static void REMOVE_ALL_COVER_BLOCKING_AREAS() { NativeInvoker.Invoke(0xDB6708C0B46F56D8); } // 0xDB6708C0B46F56D8 0xCF9221A7 b323<, (ulong)DB6708C0B46F56D8); }
        internal static void N_0xFA83CA6776038F64(float x, float y, float z) { NativeInvoker.Invoke(0xFA83CA6776038F64, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void N_0x1F351CF1C6475734(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9) { NativeInvoker.Invoke(0x1F351CF1C6475734, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9); }
        internal static void TASK_START_SCENARIO_IN_PLACE(Ped ped, char* scenarioName, int unkDelay, BOOL playEnterAnim) { NativeInvoker.Invoke(0x142A02425FF02BD9, (ulong)ped, (ulong)scenarioName, (ulong)unkDelay, (ulong)playEnterAnim); }
        internal static void TASK_START_SCENARIO_AT_POSITION(Ped ped, char* scenarioName, float x, float y, float z, float heading, int duration, BOOL sittingScenario, BOOL teleport) { NativeInvoker.Invoke(0xFA4EFC79F69D4F07, (ulong)ped, (ulong)scenarioName, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&heading, (ulong)duration, (ulong)sittingScenario, (ulong)teleport); }
        internal static void TASK_USE_NEAREST_SCENARIO_TO_COORD(Ped ped, float x, float y, float z, float distance, int duration) { NativeInvoker.Invoke(0x277F471BA9DB000B, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&distance, (ulong)duration); }
        internal static void TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP(Ped ped, float x, float y, float z, float radius, Any p5) { NativeInvoker.Invoke(0x58E2E0F23F6B76C3, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)p5); }
        internal static void TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD(Any p0, float p1, float p2, float p3, float p4, Any p5) { NativeInvoker.Invoke(0x9FDA1B3D7E7028B3, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, (ulong)p5); }
        internal static void TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD_WARP(Any p0, float p1, float p2, float p3, float p4, Any p5) { NativeInvoker.Invoke(0x97A28E63F0BA5631, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, (ulong)p5); }
        internal static BOOL DOES_SCENARIO_EXIST_IN_AREA(float x, float y, float z, float radius, BOOL b) { return NativeInvoker.Invoke<BOOL>(0x5A59271FFADD33C1, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)b); }
        internal static BOOL DOES_SCENARIO_OF_TYPE_EXIST_IN_AREA(float p0, float p1, float p2, Any* p3, float p4, BOOL p5) { return NativeInvoker.Invoke<BOOL>(0x0A9D0C2A3BBC86C1, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, (ulong)p3, *(uint*)&p4, (ulong)p5); }
        internal static BOOL IS_SCENARIO_OCCUPIED(float p0, float p1, float p2, float p3, BOOL p4) { return NativeInvoker.Invoke<BOOL>(0x788756D73AC2E07C, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, (ulong)p4); }
        internal static BOOL PED_HAS_USE_SCENARIO_TASK(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x295E3CCEC879CCD7, (ulong)ped); }
        internal static void PLAY_ANIM_ON_RUNNING_SCENARIO(Ped ped, char* animDict, char* animName) { NativeInvoker.Invoke(0x748040460F8DF5DC, (ulong)ped, (ulong)animDict, (ulong)animName); }
        internal static BOOL DOES_SCENARIO_GROUP_EXIST(char* scenarioGroup) { return NativeInvoker.Invoke<BOOL>(0xF9034C136C9E00D3, (ulong)scenarioGroup); }
        internal static BOOL IS_SCENARIO_GROUP_ENABLED(char* scenarioGroup) { return NativeInvoker.Invoke<BOOL>(0x367A09DED4E05B99, (ulong)scenarioGroup); }
        internal static void SET_SCENARIO_GROUP_ENABLED(char* scenarioGroup, BOOL p1) { NativeInvoker.Invoke(0x02C8E5B49848664E, (ulong)scenarioGroup, (ulong)p1); }
        internal static void RESET_SCENARIO_GROUPS_ENABLED() { NativeInvoker.Invoke(0xDD902D0349AFAD3A); } // 0xDD902D0349AFAD3A 0xBF55025D b323<, (ulong)DD902D0349AFAD3A); }
        internal static void SET_EXCLUSIVE_SCENARIO_GROUP(char* scenarioGroup) { NativeInvoker.Invoke(0x535E97E1F7FC0C6A, (ulong)scenarioGroup); }
        internal static void RESET_EXCLUSIVE_SCENARIO_GROUP() { NativeInvoker.Invoke(0x4202BBCB8684563D); } // 0x4202BBCB8684563D 0x17F9DFE8 b323<, (ulong)4202BBCB8684563D); }
        internal static BOOL IS_SCENARIO_TYPE_ENABLED(char* scenarioType) { return NativeInvoker.Invoke<BOOL>(0x3A815DB3EA088722, (ulong)scenarioType); }
        internal static void SET_SCENARIO_TYPE_ENABLED(char* scenarioType, BOOL toggle) { NativeInvoker.Invoke(0xEB47EC4E34FB7EE1, (ulong)scenarioType, (ulong)toggle); }
        internal static void RESET_SCENARIO_TYPES_ENABLED() { NativeInvoker.Invoke(0x0D40EE2A7F2B2D6D); } // 0x0D40EE2A7F2B2D6D 0xF58FDEB4 b323<, (ulong)0D40EE2A7F2B2D6D); }
        internal static BOOL IS_PED_ACTIVE_IN_SCENARIO(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xAA135F9482C82CC3, (ulong)ped); }
        internal static BOOL IS_PED_PLAYING_BASE_CLIP_IN_SCENARIO(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x621C6E4729388E41, (ulong)ped); }
        internal static void SET_PED_CAN_PLAY_AMBIENT_IDLES(Ped ped, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x8FD89A6240813FD0, (ulong)ped, (ulong)p1, (ulong)p2); }
        internal static void TASK_COMBAT_HATED_TARGETS_IN_AREA(Ped ped, float x, float y, float z, float radius, Any p5) { NativeInvoker.Invoke(0x4CF5F55DAC3280A0, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)p5); }
        internal static void TASK_COMBAT_HATED_TARGETS_AROUND_PED(Ped ped, float radius, int p2) { NativeInvoker.Invoke(0x7BF835BB9E2698C8, (ulong)ped, *(uint*)&radius, (ulong)p2); }
        internal static void TASK_COMBAT_HATED_TARGETS_AROUND_PED_TIMED(Any p0, float p1, Any p2, Any p3) { NativeInvoker.Invoke(0x2BBA30B854534A0C, (ulong)p0, *(uint*)&p1, (ulong)p2, (ulong)p3); }
        internal static void TASK_THROW_PROJECTILE(Ped ped, float x, float y, float z, Any p4, Any p5) { NativeInvoker.Invoke(0x7285951DBF6B5A51, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)p4, (ulong)p5); }
        internal static void TASK_SWAP_WEAPON(Ped ped, BOOL p1) { NativeInvoker.Invoke(0xA21C51255B205245, (ulong)ped, (ulong)p1); }
        internal static void TASK_RELOAD_WEAPON(Ped ped, BOOL unused) { NativeInvoker.Invoke(0x62D2916F56B9CD2D, (ulong)ped, (ulong)unused); }
        internal static BOOL IS_PED_GETTING_UP(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x2A74E1D5F2F00EEC, (ulong)ped); }
        internal static void TASK_WRITHE(Ped ped, Ped target, int time, int p3, Any p4, Any p5) { NativeInvoker.Invoke(0xCDDC2B77CE54AC6E, (ulong)ped, (ulong)target, (ulong)time, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static BOOL IS_PED_IN_WRITHE(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xDEB6D52126E7D640, (ulong)ped); }
        internal static void OPEN_PATROL_ROUTE(char* patrolRoute) { NativeInvoker.Invoke(0xA36BFB5EE89F3D82, (ulong)patrolRoute); }
        internal static void CLOSE_PATROL_ROUTE() { NativeInvoker.Invoke(0xB043ECA801B8CBC1); } // 0xB043ECA801B8CBC1 0x67305E59 b323<, (ulong)B043ECA801B8CBC1); }
        internal static void ADD_PATROL_ROUTE_NODE(int p0, char* p1, float x1, float y1, float z1, float x2, float y2, float z2, int p8) { NativeInvoker.Invoke(0x8EDF950167586B7C, (ulong)p0, (ulong)p1, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)p8); }
        internal static void ADD_PATROL_ROUTE_LINK(Any p0, Any p1) { NativeInvoker.Invoke(0x23083260DEC3A551, (ulong)p0, (ulong)p1); }
        internal static void CREATE_PATROL_ROUTE() { NativeInvoker.Invoke(0xAF8A443CCC8018DC); } // 0xAF8A443CCC8018DC 0x0A6C7864 b323<, (ulong)AF8A443CCC8018DC); }
        internal static void DELETE_PATROL_ROUTE(char* patrolRoute) { NativeInvoker.Invoke(0x7767DD9D65E91319, (ulong)patrolRoute); }
        internal static void TASK_PATROL(Ped ped, char* p1, Any p2, BOOL p3, BOOL p4) { NativeInvoker.Invoke(0xBDA5DF49D080FE4E, (ulong)ped, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void TASK_STAY_IN_COVER(Ped ped) { NativeInvoker.Invoke(0xE5DA8615A6180789, (ulong)ped); }
        internal static void ADD_VEHICLE_SUBTASK_ATTACK_COORD(Ped ped, float x, float y, float z) { NativeInvoker.Invoke(0x5CF0D8F9BBA0DD75, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void ADD_VEHICLE_SUBTASK_ATTACK_PED(Ped ped, Ped ped2) { NativeInvoker.Invoke(0x85F462BADC7DA47F, (ulong)ped, (ulong)ped2); }
        internal static void TASK_VEHICLE_SHOOT_AT_PED(Ped ped, Ped target, float p2) { NativeInvoker.Invoke(0x10AB107B887214D8, (ulong)ped, (ulong)target, *(uint*)&p2); }
        internal static void TASK_VEHICLE_AIM_AT_PED(Ped ped, Ped target) { NativeInvoker.Invoke(0xE41885592B08B097, (ulong)ped, (ulong)target); }
        internal static void TASK_VEHICLE_SHOOT_AT_COORD(Ped ped, float x, float y, float z, float p4) { NativeInvoker.Invoke(0x5190796ED39C9B6D, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&p4); }
        internal static void TASK_VEHICLE_AIM_AT_COORD(Ped ped, float x, float y, float z) { NativeInvoker.Invoke(0x447C1E9EF844BC0F, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void TASK_VEHICLE_GOTO_NAVMESH(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, int behaviorFlag, float stoppingRange) { NativeInvoker.Invoke(0x195AEEB13CEFE2EE, (ulong)ped, (ulong)vehicle, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&speed, (ulong)behaviorFlag, *(uint*)&stoppingRange); }
        internal static void TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD(Ped ped, float x, float y, float z, float aimAtX, float aimAtY, float aimAtZ, float moveSpeed, BOOL p8, float p9, float p10, BOOL p11, Any flags, BOOL p13, Hash firingPattern) { NativeInvoker.Invoke(0x11315AB3385B8AC0, (ulong)ped, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&aimAtX, *(uint*)&aimAtY, *(uint*)&aimAtZ, *(uint*)&moveSpeed, (ulong)p8, *(uint*)&p9, *(uint*)&p10, (ulong)p11, (ulong)flags, (ulong)p13, (ulong)firingPattern); }
        internal static void TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY(Any p0, float p1, float p2, float p3, Any p4, float p5, BOOL p6, float p7, float p8, BOOL p9, Any p10, BOOL p11, Any p12, Any p13) { NativeInvoker.Invoke(0xB2A16444EAD9AE47, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, (ulong)p4, *(uint*)&p5, (ulong)p6, *(uint*)&p7, *(uint*)&p8, (ulong)p9, (ulong)p10, (ulong)p11, (ulong)p12, (ulong)p13); }
        internal static void TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(Ped pedHandle, float goToLocationX, float goToLocationY, float goToLocationZ, float focusLocationX, float focusLocationY, float focusLocationZ, float speed, BOOL shootAtEnemies, float distanceToStopAt, float noRoadsDistance, BOOL unkTrue, int unkFlag, int aimingFlag, Hash firingPattern) { NativeInvoker.Invoke(0xA55547801EB331FC, (ulong)pedHandle, *(uint*)&goToLocationX, *(uint*)&goToLocationY, *(uint*)&goToLocationZ, *(uint*)&focusLocationX, *(uint*)&focusLocationY, *(uint*)&focusLocationZ, *(uint*)&speed, (ulong)shootAtEnemies, *(uint*)&distanceToStopAt, *(uint*)&noRoadsDistance, (ulong)unkTrue, (ulong)unkFlag, (ulong)aimingFlag, (ulong)firingPattern); }
        internal static void TASK_GO_TO_ENTITY_WHILE_AIMING_AT_COORD(Any p0, Any p1, float p2, float p3, float p4, float p5, BOOL p6, float p7, float p8, BOOL p9, BOOL p10, Any p11) { NativeInvoker.Invoke(0x04701832B739DCE5, (ulong)p0, (ulong)p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, (ulong)p6, *(uint*)&p7, *(uint*)&p8, (ulong)p9, (ulong)p10, (ulong)p11); }
        internal static void TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY(Ped ped, Entity entityToWalkTo, Entity entityToAimAt, float speed, BOOL shootatEntity, float p5, float p6, BOOL p7, BOOL p8, Hash firingPattern) { NativeInvoker.Invoke(0x97465886D35210E9, (ulong)ped, (ulong)entityToWalkTo, (ulong)entityToAimAt, *(uint*)&speed, (ulong)shootatEntity, *(uint*)&p5, *(uint*)&p6, (ulong)p7, (ulong)p8, (ulong)firingPattern); }
        internal static void SET_HIGH_FALL_TASK(Ped ped, Any p1, Any p2, Any p3) { NativeInvoker.Invoke(0x8C825BDC7741D37C, (ulong)ped, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void REQUEST_WAYPOINT_RECORDING(char* name) { NativeInvoker.Invoke(0x9EEFB62EB27B5792, (ulong)name); }
        internal static BOOL GET_IS_WAYPOINT_RECORDING_LOADED(char* name) { return NativeInvoker.Invoke<BOOL>(0xCB4E8BE8A0063C5D, (ulong)name); }
        internal static void REMOVE_WAYPOINT_RECORDING(char* name) { NativeInvoker.Invoke(0xFF1B8B4AA1C25DC8, (ulong)name); }
        internal static BOOL WAYPOINT_RECORDING_GET_NUM_POINTS(char* name, int* points) { return NativeInvoker.Invoke<BOOL>(0x5343532C01A07234, (ulong)name, (ulong)points); }
        internal static BOOL WAYPOINT_RECORDING_GET_COORD(char* name, int point, Vector3* coord) { return NativeInvoker.Invoke<BOOL>(0x2FB897405C90B361, (ulong)name, (ulong)point, (ulong)coord); }
        internal static float WAYPOINT_RECORDING_GET_SPEED_AT_POINT(char* name, int point) { return NativeInvoker.Invoke<float>(0x005622AEBC33ACA9, (ulong)name, (ulong)point); }
        internal static BOOL WAYPOINT_RECORDING_GET_CLOSEST_WAYPOINT(char* name, float x, float y, float z, int* point) { return NativeInvoker.Invoke<BOOL>(0xB629A298081F876F, (ulong)name, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)point); }
        internal static void TASK_FOLLOW_WAYPOINT_RECORDING(Any p0, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x0759591819534F7B, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static BOOL IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_PED(Any p0) { return NativeInvoker.Invoke<BOOL>(0xE03B3F2D3DC59B64, (ulong)p0); }
        internal static int GET_PED_WAYPOINT_PROGRESS(Ped ped) { return NativeInvoker.Invoke<int>(0x2720AAA75001E094, (ulong)ped); }
        internal static float GET_PED_WAYPOINT_DISTANCE(Any p0) { return NativeInvoker.Invoke<float>(0xE6A877C64CAF1BC5, (ulong)p0); }
        internal static Any SET_PED_WAYPOINT_ROUTE_OFFSET(Any p0, Any p1, Any p2, Any p3) { return NativeInvoker.Invoke<Any>(0xED98E10B0AFCE4B4, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static float GET_WAYPOINT_DISTANCE_ALONG_ROUTE(char* p0, int p1) { return NativeInvoker.Invoke<float>(0xA5B769058763E497, (ulong)p0, (ulong)p1); }
        internal static BOOL WAYPOINT_PLAYBACK_GET_IS_PAUSED(Any p0) { return NativeInvoker.Invoke<BOOL>(0x701375A7D43F01CB, (ulong)p0); }
        internal static void WAYPOINT_PLAYBACK_PAUSE(Any p0, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x0F342546AA06FED5, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void WAYPOINT_PLAYBACK_RESUME(Any p0, BOOL p1, Any p2, Any p3) { NativeInvoker.Invoke(0x244F70C84C547D2D, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void WAYPOINT_PLAYBACK_OVERRIDE_SPEED(Any p0, float p1, BOOL p2) { NativeInvoker.Invoke(0x7D7D2B47FA788E85, (ulong)p0, *(uint*)&p1, (ulong)p2); }
        internal static void WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED(Any p0) { NativeInvoker.Invoke(0x6599D834B12D0800, (ulong)p0); }
        internal static void USE_WAYPOINT_RECORDING_AS_ASSISTED_MOVEMENT_ROUTE(char* name, BOOL p1, float p2, float p3) { NativeInvoker.Invoke(0x5A353B8E6B1095B5, (ulong)name, (ulong)p1, *(uint*)&p2, *(uint*)&p3); }
        internal static void WAYPOINT_PLAYBACK_START_AIMING_AT_PED(Any p0, Any p1, BOOL p2) { NativeInvoker.Invoke(0x20E330937C399D29, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void WAYPOINT_PLAYBACK_START_AIMING_AT_COORD(Any p0, float p1, float p2, float p3, BOOL p4) { NativeInvoker.Invoke(0x8968400D900ED8B3, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, (ulong)p4); }
        internal static void WAYPOINT_PLAYBACK_START_SHOOTING_AT_PED(Any p0, Any p1, BOOL p2, Any p3) { NativeInvoker.Invoke(0xE70BA7B90F8390DC, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static void WAYPOINT_PLAYBACK_START_SHOOTING_AT_COORD(Any p0, float p1, float p2, float p3, BOOL p4, Any p5) { NativeInvoker.Invoke(0x057A25CFCC9DB671, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, (ulong)p4, (ulong)p5); }
        internal static void WAYPOINT_PLAYBACK_STOP_AIMING_OR_SHOOTING(Any p0) { NativeInvoker.Invoke(0x47EFA040EBB8E2EA, (ulong)p0); }
        internal static void ASSISTED_MOVEMENT_REQUEST_ROUTE(char* route) { NativeInvoker.Invoke(0x817268968605947A, (ulong)route); }
        internal static void ASSISTED_MOVEMENT_REMOVE_ROUTE(char* route) { NativeInvoker.Invoke(0x3548536485DD792B, (ulong)route); }
        internal static BOOL ASSISTED_MOVEMENT_IS_ROUTE_LOADED(char* route) { return NativeInvoker.Invoke<BOOL>(0x60F9A4393A21F741, (ulong)route); }
        internal static void ASSISTED_MOVEMENT_SET_ROUTE_PROPERTIES(char* route, int props) { NativeInvoker.Invoke(0xD5002D78B7162E1B, (ulong)route, (ulong)props); }
        internal static void ASSISTED_MOVEMENT_OVERRIDE_LOAD_DISTANCE_THIS_FRAME(float dist) { NativeInvoker.Invoke(0x13945951E16EF912, *(uint*)&dist); }
        internal static void TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING(Ped ped, Vehicle vehicle, char* WPRecording, int p3, int p4, int p5, int p6, float p7, BOOL p8, float p9) { NativeInvoker.Invoke(0x3123FAA6DB1CF7ED, (ulong)ped, (ulong)vehicle, (ulong)WPRecording, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, *(uint*)&p7, (ulong)p8, *(uint*)&p9); }
        internal static BOOL IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_VEHICLE(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xF5134943EA29868C, (ulong)vehicle); }
        internal static int GET_VEHICLE_WAYPOINT_PROGRESS(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x9824CFF8FC66E159, (ulong)vehicle); }
        internal static int GET_VEHICLE_WAYPOINT_TARGET_POINT(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x416B62AC8B9E5BBD, (ulong)vehicle); }
        internal static void VEHICLE_WAYPOINT_PLAYBACK_PAUSE(Vehicle vehicle) { NativeInvoker.Invoke(0x8A4E6AC373666BC5, (ulong)vehicle); }
        internal static void VEHICLE_WAYPOINT_PLAYBACK_RESUME(Vehicle vehicle) { NativeInvoker.Invoke(0xDC04FCAA7839D492, (ulong)vehicle); }
        internal static void VEHICLE_WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED(Vehicle vehicle) { NativeInvoker.Invoke(0x5CEB25A7D2848963, (ulong)vehicle); }
        internal static void VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED(Vehicle vehicle, float speed) { NativeInvoker.Invoke(0x121F0593E0A431D7, (ulong)vehicle, *(uint*)&speed); }
        internal static void TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x90D2156198831D69, (ulong)ped, (ulong)toggle); }
        internal static void TASK_FORCE_MOTION_STATE(Ped ped, Hash state, BOOL p2) { NativeInvoker.Invoke(0x4F056E1AFFEF17AB, (ulong)ped, (ulong)state, (ulong)p2); }
        internal static void TASK_MOVE_NETWORK_BY_NAME(Ped ped, char* task, float multiplier, BOOL p3, char* animDict, int flags) { NativeInvoker.Invoke(0x2D537BA194896636, (ulong)ped, (ulong)task, *(uint*)&multiplier, (ulong)p3, (ulong)animDict, (ulong)flags); }
        internal static void TASK_MOVE_NETWORK_ADVANCED_BY_NAME(Ped ped, char* p1, float p2, float p3, float p4, float p5, float p6, float p7, Any p8, float p9, BOOL p10, char* animDict, int flags) { NativeInvoker.Invoke(0xD5B35BEA41919ACB, (ulong)ped, (ulong)p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, *(uint*)&p7, (ulong)p8, *(uint*)&p9, (ulong)p10, (ulong)animDict, (ulong)flags); }
        internal static void TASK_MOVE_NETWORK_BY_NAME_WITH_INIT_PARAMS_(Ped ped, char* p1, Any* data, float p3, BOOL p4, char* animDict, int flags) { NativeInvoker.Invoke(0x3D45B0B355C5E0C9, (ulong)ped, (ulong)p1, (ulong)data, *(uint*)&p3, (ulong)p4, (ulong)animDict, (ulong)flags); }
        internal static void N_0x29682E2CCF21E9B5(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any p9, Any p10, Any p11, Any p12, Any p13) { NativeInvoker.Invoke(0x29682E2CCF21E9B5, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8, (ulong)p9, (ulong)p10, (ulong)p11, (ulong)p12, (ulong)p13); }
        internal static BOOL IS_TASK_MOVE_NETWORK_ACTIVE(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x921CE12C489C4C41, (ulong)ped); }
        internal static BOOL IS_TASK_MOVE_NETWORK_READY_FOR_TRANSITION(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x30ED88D5E0C56A37, (ulong)ped); }
        internal static BOOL REQUEST_TASK_MOVE_NETWORK_STATE_TRANSITION(Ped ped, char* name) { return NativeInvoker.Invoke<BOOL>(0xD01015C7316AE176, (ulong)ped, (ulong)name); }
        internal static Any N_0xAB13A5565480B6D9(Ped ped, char* p1) { return NativeInvoker.Invoke<Any>(0xAB13A5565480B6D9, (ulong)ped, (ulong)p1); }
        internal static char* GET_TASK_MOVE_NETWORK_STATE(Ped ped) { return (char*)NativeInvoker.Invoke<IntPtr>(0x717E4D1F2048376D, (ulong)ped); }
        internal static void N_0x8423541E8B3A1589(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x8423541E8B3A1589, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT(Ped ped, char* signalName, float value) { NativeInvoker.Invoke(0xD5BB4025AE449A4E, (ulong)ped, (ulong)signalName, *(uint*)&value); }
        internal static void SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT_2_(Ped ped, char* signalName, float value) { NativeInvoker.Invoke(0x373EF409B82697A3, (ulong)ped, (ulong)signalName, *(uint*)&value); }
        internal static void N_0x8634CEF2522D987B(Ped ped, char* p1, float value) { NativeInvoker.Invoke(0x8634CEF2522D987B, (ulong)ped, (ulong)p1, *(uint*)&value); }
        internal static void SET_TASK_MOVE_NETWORK_SIGNAL_BOOL(Ped ped, char* signalName, BOOL value) { NativeInvoker.Invoke(0xB0A6CFD2C69C1088, (ulong)ped, (ulong)signalName, (ulong)value); }
        internal static float GET_TASK_MOVE_NETWORK_SIGNAL_FLOAT_(Ped ped, char* signalName) { return NativeInvoker.Invoke<float>(0x44AB0B3AFECCE242, (ulong)ped, (ulong)signalName); }
        internal static BOOL GET_TASK_MOVE_NETWORK_SIGNAL_BOOL(Ped ped, char* signalName) { return NativeInvoker.Invoke<BOOL>(0xA7FFBA498E4AAF67, (ulong)ped, (ulong)signalName); }
        internal static BOOL GET_TASK_MOVE_NETWORK_EVENT(Ped ped, char* @eventName) { return NativeInvoker.Invoke<BOOL>(0xB4F47213DF45A64C, (ulong)ped, (ulong)@eventName); }
        internal static Any N_0x0FFB3C758E8C07B9(Ped ped, BOOL p1) { return NativeInvoker.Invoke<Any>(0x0FFB3C758E8C07B9, (ulong)ped, (ulong)p1); }
        internal static BOOL IS_MOVE_BLEND_RATIO_STILL(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x349CE7B56DAFD95C, (ulong)ped); }
        internal static BOOL IS_MOVE_BLEND_RATIO_WALKING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xF133BBBE91E1691F, (ulong)ped); }
        internal static BOOL IS_MOVE_BLEND_RATIO_RUNNING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xD4D8636C0199A939, (ulong)ped); }
        internal static BOOL IS_MOVE_BLEND_RATIO_SPRINTING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x24A2AD74FA9814E2, (ulong)ped); }
        internal static BOOL IS_PED_STILL(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xAC29253EEF8F0180, (ulong)ped); }
        internal static BOOL IS_PED_WALKING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xDE4C184B2B9B071A, (ulong)ped); }
        internal static BOOL IS_PED_RUNNING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xC5286FFC176F28A2, (ulong)ped); }
        internal static BOOL IS_PED_SPRINTING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x57E457CD2C0FC168, (ulong)ped); }
        internal static BOOL IS_PED_STRAFING(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xE45B7F222DE47E09, (ulong)ped); }
        internal static void TASK_SYNCHRONIZED_SCENE(Ped ped, int scene, char* animDictionary, char* animationName, float speed, float speedMultiplier, int duration, int flag, float playbackRate, Any p9) { NativeInvoker.Invoke(0xEEA929141F699854, (ulong)ped, (ulong)scene, (ulong)animDictionary, (ulong)animationName, *(uint*)&speed, *(uint*)&speedMultiplier, (ulong)duration, (ulong)flag, *(uint*)&playbackRate, (ulong)p9); }
        internal static void TASK_AGITATED_ACTION(Ped ped, Ped ped2) { NativeInvoker.Invoke(0x19D1B791CB3670FE, (ulong)ped, (ulong)ped2); }
        internal static void TASK_SWEEP_AIM_ENTITY(Ped ped, char* anim, char* p2, char* p3, char* p4, int p5, Vehicle vehicle, float p7, float p8) { NativeInvoker.Invoke(0x2047C02158D6405A, (ulong)ped, (ulong)anim, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)vehicle, *(uint*)&p7, *(uint*)&p8); }
        internal static void UPDATE_TASK_SWEEP_AIM_ENTITY(Ped ped, Entity entity) { NativeInvoker.Invoke(0xE4973DBDBE6E44B3, (ulong)ped, (ulong)entity); }
        internal static void TASK_SWEEP_AIM_POSITION(Any p0, Any* p1, Any* p2, Any* p3, Any* p4, Any p5, float p6, float p7, float p8, float p9, float p10) { NativeInvoker.Invoke(0x7AFE8FDC10BC07D2, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, *(uint*)&p6, *(uint*)&p7, *(uint*)&p8, *(uint*)&p9, *(uint*)&p10); }
        internal static void UPDATE_TASK_SWEEP_AIM_POSITION(Any p0, float p1, float p2, float p3) { NativeInvoker.Invoke(0xBB106883F5201FC4, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3); }
        internal static void TASK_ARREST_PED(Ped ped, Ped target) { NativeInvoker.Invoke(0xF3B9A78A178572B1, (ulong)ped, (ulong)target); }
        internal static BOOL IS_PED_RUNNING_ARREST_TASK(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x3DC52677769B4AE0, (ulong)ped); }
        internal static BOOL IS_PED_BEING_ARRESTED(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x90A09F3A45FED688, (ulong)ped); }
        internal static void UNCUFF_PED(Ped ped) { NativeInvoker.Invoke(0x67406F2C8F87FC4F, (ulong)ped); }
        internal static BOOL IS_PED_CUFFED(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x74E559B3BC910685, (ulong)ped); }
    }

    internal static unsafe class VEHICLE
    {
        internal static Vehicle CREATE_VEHICLE(Hash modelHash, float x, float y, float z, float heading, BOOL isNetwork, BOOL bScriptHostVeh, BOOL p7) { return NativeInvoker.Invoke<Vehicle>(0xAF35D0D2583051B0, (ulong)modelHash, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&heading, (ulong)isNetwork, (ulong)bScriptHostVeh, (ulong)p7); }
        internal static void DELETE_VEHICLE(Vehicle* vehicle) { NativeInvoker.Invoke(0xEA386986E786A54F, (ulong)vehicle); }
        internal static void N_0x7D6F9A3EF26136A0(Vehicle vehicle, BOOL toggle, BOOL p2) { NativeInvoker.Invoke(0x7D6F9A3EF26136A0, (ulong)vehicle, (ulong)toggle, (ulong)p2); }
        internal static void SET_VEHICLE_CAN_BE_LOCKED_ON_(Vehicle vehicle, BOOL canBeLockedOn, BOOL unk) { NativeInvoker.Invoke(0x1DDA078D12879EEE, (ulong)vehicle, (ulong)canBeLockedOn, (ulong)unk); }
        internal static void SET_VEHICLE_ALLOW_NO_PASSENGERS_LOCKON(Vehicle veh, BOOL toggle) { NativeInvoker.Invoke(0x5D14D4154BFE7B2C, (ulong)veh, (ulong)toggle); }
        internal static int GET_VEHICLE_HOMING_LOCKON_STATE(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0xE6B0E8CFC3633BF0, (ulong)vehicle); }
        internal static Any N_0x6EAAEFC76ACC311F(Any p0) { return NativeInvoker.Invoke<Any>(0x6EAAEFC76ACC311F, (ulong)p0); }
        internal static void N_0x407DC5E97DB1A4D3(Any p0, Any p1) { NativeInvoker.Invoke(0x407DC5E97DB1A4D3, (ulong)p0, (ulong)p1); }
        internal static BOOL IS_VEHICLE_MODEL(Vehicle vehicle, Hash model) { return NativeInvoker.Invoke<BOOL>(0x423E8DE37D934D89, (ulong)vehicle, (ulong)model); }
        internal static BOOL DOES_SCRIPT_VEHICLE_GENERATOR_EXIST(int vehicleGenerator) { return NativeInvoker.Invoke<BOOL>(0xF6086BC836400876, (ulong)vehicleGenerator); }
        internal static int CREATE_SCRIPT_VEHICLE_GENERATOR(float x, float y, float z, float heading, float p4, float p5, Hash modelHash, int p7, int p8, int p9, int p10, BOOL p11, BOOL p12, BOOL p13, BOOL p14, BOOL p15, int p16) { return NativeInvoker.Invoke<int>(0x9DEF883114668116, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&heading, *(uint*)&p4, *(uint*)&p5, (ulong)modelHash, (ulong)p7, (ulong)p8, (ulong)p9, (ulong)p10, (ulong)p11, (ulong)p12, (ulong)p13, (ulong)p14, (ulong)p15, (ulong)p16); }
        internal static void DELETE_SCRIPT_VEHICLE_GENERATOR(int vehicleGenerator) { NativeInvoker.Invoke(0x22102C9ABFCF125D, (ulong)vehicleGenerator); }
        internal static void SET_SCRIPT_VEHICLE_GENERATOR(int vehicleGenerator, BOOL enabled) { NativeInvoker.Invoke(0xD9D620E0AC6DC4B0, (ulong)vehicleGenerator, (ulong)enabled); }
        internal static void SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL p6, BOOL p7) { NativeInvoker.Invoke(0xC12321827687FE4D, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)p6, (ulong)p7); }
        internal static void SET_ALL_VEHICLE_GENERATORS_ACTIVE() { NativeInvoker.Invoke(0x34AD89078831A4BC); } // 0x34AD89078831A4BC 0xAB1FDD76 b323<, (ulong)34AD89078831A4BC); }
        internal static void SET_ALL_LOW_PRIORITY_VEHICLE_GENERATORS_ACTIVE(BOOL active) { NativeInvoker.Invoke(0x608207E7A8FB787C, (ulong)active); }
        internal static void N_0x9A75585FB2E54FAD(float x, float y, float z, float radius) { NativeInvoker.Invoke(0x9A75585FB2E54FAD, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius); }
        internal static void N_0x0A436B8643716D14() { NativeInvoker.Invoke(0x0A436B8643716D14); } // 0x0A436B8643716D14 0x6C73E45A b323<, (ulong)0A436B8643716D14); }
        internal static BOOL SET_VEHICLE_ON_GROUND_PROPERLY(Vehicle vehicle, float p1) { return NativeInvoker.Invoke<BOOL>(0x49733E92263139D1, (ulong)vehicle, *(uint*)&p1); }
        internal static Any SET_VEHICLE_USE_CUTSCENE_WHEEL_COMPRESSION(Vehicle p0, BOOL p1, BOOL p2, BOOL p3) { return NativeInvoker.Invoke<Any>(0xE023E8AC4EF7C117, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static BOOL IS_VEHICLE_STUCK_ON_ROOF(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xB497F06B288DCFDF, (ulong)vehicle); }
        internal static void ADD_VEHICLE_UPSIDEDOWN_CHECK(Vehicle vehicle) { NativeInvoker.Invoke(0xB72E26D81006005B, (ulong)vehicle); }
        internal static void REMOVE_VEHICLE_UPSIDEDOWN_CHECK(Vehicle vehicle) { NativeInvoker.Invoke(0xC53EB42A499A7E90, (ulong)vehicle); }
        internal static BOOL IS_VEHICLE_STOPPED(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x5721B434AD84D57A, (ulong)vehicle); }
        internal static int GET_VEHICLE_NUMBER_OF_PASSENGERS(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x24CB2137731FFE89, (ulong)vehicle); }
        internal static int GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0xA7C4F2C6E744A550, (ulong)vehicle); }
        internal static int GET_VEHICLE_MODEL_NUMBER_OF_SEATS(Hash modelHash) { return NativeInvoker.Invoke<int>(0x2AD93716F184EDA4, (ulong)modelHash); }
        internal static BOOL IS_SEAT_WARP_ONLY(Vehicle vehicle, int seatIndex) { return NativeInvoker.Invoke<BOOL>(0xF7F203E31F96F6A1, (ulong)vehicle, (ulong)seatIndex); }
        internal static BOOL IS_TURRET_SEAT(Vehicle vehicle, int seatIndex) { return NativeInvoker.Invoke<BOOL>(0xE33FFA906CE74880, (ulong)vehicle, (ulong)seatIndex); }
        internal static BOOL DOES_VEHICLE_ALLOW_RAPPEL_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x4E417C547182C84D, (ulong)vehicle); }
        internal static void SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier) { NativeInvoker.Invoke(0x245A6883D966D537, *(uint*)&multiplier); }
        internal static void SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier) { NativeInvoker.Invoke(0xB3B3359379FE77D3, *(uint*)&multiplier); }
        internal static void SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier) { NativeInvoker.Invoke(0xEAE6DCC7EEE3DB1D, *(uint*)&multiplier); }
        internal static void SET_DISABLE_RANDOM_TRAINS_THIS_FRAME(BOOL toggle) { NativeInvoker.Invoke(0xD4B8E3D1917BC86B, (ulong)toggle); }
        internal static void SET_AMBIENT_VEHICLE_RANGE_MULTIPLIER_THIS_FRAME(float value) { NativeInvoker.Invoke(0x90B6DA738A9A25DA, *(uint*)&value); }
        internal static void SET_FAR_DRAW_VEHICLES(BOOL toggle) { NativeInvoker.Invoke(0x26324F33423F3CC3, (ulong)toggle); }
        internal static void SET_NUMBER_OF_PARKED_VEHICLES(int value) { NativeInvoker.Invoke(0xCAA15F13EBD417FF, (ulong)value); }
        internal static void SET_VEHICLE_DOORS_LOCKED(Vehicle vehicle, int doorLockStatus) { NativeInvoker.Invoke(0xB664292EAECF7FA6, (ulong)vehicle, (ulong)doorLockStatus); }
        internal static void SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED(Vehicle vehicle, int doorId, int doorLockStatus) { NativeInvoker.Invoke(0xBE70724027F85BCD, (ulong)vehicle, (ulong)doorId, (ulong)doorLockStatus); }
        internal static void SET_VEHICLE_HAS_MUTED_SIRENS(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xD8050E0EB60CF274, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(Vehicle vehicle, Player player, BOOL toggle) { NativeInvoker.Invoke(0x517AAF684BB50CD1, (ulong)vehicle, (ulong)player, (ulong)toggle); }
        internal static BOOL GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(Vehicle vehicle, Player player) { return NativeInvoker.Invoke<BOOL>(0xF6AF6CB341349015, (ulong)vehicle, (ulong)player); }
        internal static void SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xA2F80B8D040727CC, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_DOORS_LOCKED_FOR_NON_SCRIPT_PLAYERS(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x9737A37136F07E75, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_DOORS_LOCKED_FOR_TEAM(Vehicle vehicle, int team, BOOL toggle) { NativeInvoker.Invoke(0xB81F6D4A8F5EEBA8, (ulong)vehicle, (ulong)team, (ulong)toggle); }
        internal static void SET_VEHICLE_DOORS_LOCKED_FOR_UNK_(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x203B527D1B77904C, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0x76D26A22750E849E(Vehicle vehicle) { NativeInvoker.Invoke(0x76D26A22750E849E, (ulong)vehicle); }
        internal static void EXPLODE_VEHICLE(Vehicle vehicle, BOOL isAudible, BOOL isInvisible) { NativeInvoker.Invoke(0xBA71116ADF5B514C, (ulong)vehicle, (ulong)isAudible, (ulong)isInvisible); }
        internal static void SET_VEHICLE_OUT_OF_CONTROL(Vehicle vehicle, BOOL killDriver, BOOL explodeOnImpact) { NativeInvoker.Invoke(0xF19D095E42D430CC, (ulong)vehicle, (ulong)killDriver, (ulong)explodeOnImpact); }
        internal static void SET_VEHICLE_TIMED_EXPLOSION(Vehicle vehicle, Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x2E0A74E1002380B1, (ulong)vehicle, (ulong)ped, (ulong)toggle); }
        internal static void ADD_VEHICLE_PHONE_EXPLOSIVE_DEVICE(Vehicle vehicle) { NativeInvoker.Invoke(0x99AD4CCCB128CBC9, (ulong)vehicle); }
        internal static void CLEAR_VEHICLE_PHONE_EXPLOSIVE_DEVICE_() { NativeInvoker.Invoke(0xAA3F739ABDDCF21F); } // 0xAA3F739ABDDCF21F b463<, (ulong)AA3F739ABDDCF21F); }
        internal static BOOL HAS_VEHICLE_PHONE_EXPLOSIVE_DEVICE() { return NativeInvoker.Invoke<BOOL>(0x6ADAABD3068C5235); } // 0x6ADAABD3068C5235 0xA4E69134 b323, (ulong)6ADAABD3068C5235); }
        internal static void DETONATE_VEHICLE_PHONE_EXPLOSIVE_DEVICE() { NativeInvoker.Invoke(0xEF49CF0270307CBE); } // 0xEF49CF0270307CBE 0x65255524 b323<, (ulong)EF49CF0270307CBE); }
        internal static void SET_TAXI_LIGHTS(Vehicle vehicle, BOOL state) { NativeInvoker.Invoke(0x598803E85E8448D9, (ulong)vehicle, (ulong)state); }
        internal static BOOL IS_TAXI_LIGHT_ON(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x7504C0F113AB50FC, (ulong)vehicle); }
        internal static BOOL IS_VEHICLE_IN_GARAGE_AREA(char* garageName, Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xCEE4490CD57BB3C2, (ulong)garageName, (ulong)vehicle); }
        internal static void SET_VEHICLE_COLOURS(Vehicle vehicle, int colorPrimary, int colorSecondary) { NativeInvoker.Invoke(0x4F1D4BE3A7F24601, (ulong)vehicle, (ulong)colorPrimary, (ulong)colorSecondary); }
        internal static void SET_VEHICLE_FULLBEAM(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x8B7FD87F0DDB421E, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_IS_RACING(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x07116E24E9D1929D, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(Vehicle vehicle, int r, int g, int b) { NativeInvoker.Invoke(0x7141766F91D15BEA, (ulong)vehicle, (ulong)r, (ulong)g, (ulong)b); }
        internal static void GET_VEHICLE_CUSTOM_PRIMARY_COLOUR(Vehicle vehicle, int* r, int* g, int* b) { NativeInvoker.Invoke(0xB64CF2CCA9D95F52, (ulong)vehicle, (ulong)r, (ulong)g, (ulong)b); }
        internal static void CLEAR_VEHICLE_CUSTOM_PRIMARY_COLOUR(Vehicle vehicle) { NativeInvoker.Invoke(0x55E1D2758F34E437, (ulong)vehicle); }
        internal static BOOL GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xF095C0405307B21B, (ulong)vehicle); }
        internal static void SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(Vehicle vehicle, int r, int g, int b) { NativeInvoker.Invoke(0x36CED73BFED89754, (ulong)vehicle, (ulong)r, (ulong)g, (ulong)b); }
        internal static void GET_VEHICLE_CUSTOM_SECONDARY_COLOUR(Vehicle vehicle, int* r, int* g, int* b) { NativeInvoker.Invoke(0x8389CD56CA8072DC, (ulong)vehicle, (ulong)r, (ulong)g, (ulong)b); }
        internal static void CLEAR_VEHICLE_CUSTOM_SECONDARY_COLOUR(Vehicle vehicle) { NativeInvoker.Invoke(0x5FFBDEEC3E8E2009, (ulong)vehicle); }
        internal static BOOL GET_IS_VEHICLE_SECONDARY_COLOUR_CUSTOM(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x910A32E7AAD2656C, (ulong)vehicle); }
        internal static void SET_VEHICLE_ENVEFF_SCALE(Vehicle vehicle, float fade) { NativeInvoker.Invoke(0x3AFDC536C3D01674, (ulong)vehicle, *(uint*)&fade); }
        internal static float GET_VEHICLE_ENVEFF_SCALE(Vehicle vehicle) { return NativeInvoker.Invoke<float>(0xA82819CAC9C4C403, (ulong)vehicle); }
        internal static void SET_CAN_RESPRAY_VEHICLE(Vehicle vehicle, BOOL state) { NativeInvoker.Invoke(0x52BBA29D5EC69356, (ulong)vehicle, (ulong)state); }
        internal static void N_0xAB31EF4DE6800CE9(Any p0, Any p1) { NativeInvoker.Invoke(0xAB31EF4DE6800CE9, (ulong)p0, (ulong)p1); }
        internal static void N_0x1B212B26DD3C04DF(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x1B212B26DD3C04DF, (ulong)vehicle, (ulong)toggle); }
        internal static void FORCE_SUBMARINE_SURFACE_MODE(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x33506883545AC0DF, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0xC67DB108A9ADE3BE(Any p0, Any p1) { NativeInvoker.Invoke(0xC67DB108A9ADE3BE, (ulong)p0, (ulong)p1); }
        internal static void SET_SUBMARINE_CRUSH_DEPTHS(Vehicle vehicle, BOOL p1, float depth1, float depth2, float depth3) { NativeInvoker.Invoke(0xC59872A5134879C7, (ulong)vehicle, (ulong)p1, *(uint*)&depth1, *(uint*)&depth2, *(uint*)&depth3); }
        internal static BOOL GET_SUBMARINE_IS_BELOW_FIRST_CRUSH_DEPTH_(Vehicle submarine) { return NativeInvoker.Invoke<BOOL>(0x3E71D0B300B7AA79, (ulong)submarine); }
        internal static int GET_SUBMARINE_CRUSH_DEPTH_WARNING_STATE_(Vehicle submarine) { return NativeInvoker.Invoke<int>(0x093D6DDCA5B8FBAE, (ulong)submarine); }
        internal static void N_0xED5EDE9E676643C9(Any p0, Any p1) { NativeInvoker.Invoke(0xED5EDE9E676643C9, (ulong)p0, (ulong)p1); }
        internal static void SET_BOAT_ANCHOR(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x75DBEC174AEEAD10, (ulong)vehicle, (ulong)toggle); }
        internal static BOOL CAN_ANCHOR_BOAT_HERE(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x26C10ECBDA5D043B, (ulong)vehicle); }
        internal static BOOL CAN_ANCHOR_BOAT_HERE_2_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x24F4121D07579880, (ulong)vehicle); }
        internal static void SET_BOAT_FROZEN_WHEN_ANCHORED_(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xE3EBAAE484798530, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0xB28B1FE5BFADD7F5(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0xB28B1FE5BFADD7F5, (ulong)vehicle, (ulong)p1); }
        internal static void SET_BOAT_MOVEMENT_RESISTANCE_(Vehicle vehicle, float value) { NativeInvoker.Invoke(0xE842A9398079BD82, (ulong)vehicle, *(uint*)&value); }
        internal static BOOL IS_BOAT_ANCHORED_AND_FROZEN_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xB0AD1238A709B1A2, (ulong)vehicle); }
        internal static void SET_BOAT_SINKS_WHEN_WRECKED(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x8F719973E1445BA2, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_BOAT_IS_SINKING_(Any p0) { NativeInvoker.Invoke(0xBD32E46AA95C1DD2, (ulong)p0); }
        internal static void SET_VEHICLE_SIREN(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xF4924635A19EB37D, (ulong)vehicle, (ulong)toggle); }
        internal static BOOL IS_VEHICLE_SIREN_ON(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x4C9BF537BE2634B2, (ulong)vehicle); }
        internal static BOOL IS_VEHICLE_SIREN_AUDIO_ON(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xB5CC40FBCB586380, (ulong)vehicle); }
        internal static void SET_VEHICLE_STRONG(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x3E8C8727991A8A0B, (ulong)vehicle, (ulong)toggle); }
        internal static void REMOVE_VEHICLE_STUCK_CHECK(Vehicle vehicle) { NativeInvoker.Invoke(0x8386BFB614D06749, (ulong)vehicle); }
        internal static void GET_VEHICLE_COLOURS(Vehicle vehicle, int* colorPrimary, int* colorSecondary) { NativeInvoker.Invoke(0xA19435F193E081AC, (ulong)vehicle, (ulong)colorPrimary, (ulong)colorSecondary); }
        internal static BOOL IS_VEHICLE_SEAT_FREE(Vehicle vehicle, int seatIndex, BOOL isTaskRunning) { return NativeInvoker.Invoke<BOOL>(0x22AC59A870E6A669, (ulong)vehicle, (ulong)seatIndex, (ulong)isTaskRunning); }
        internal static Ped GET_PED_IN_VEHICLE_SEAT(Vehicle vehicle, int seatIndex, BOOL p2) { return NativeInvoker.Invoke<Ped>(0xBB40DD2270B65366, (ulong)vehicle, (ulong)seatIndex, (ulong)p2); }
        internal static Ped GET_LAST_PED_IN_VEHICLE_SEAT(Vehicle vehicle, int seatIndex) { return NativeInvoker.Invoke<Ped>(0x83F969AA1EE2A664, (ulong)vehicle, (ulong)seatIndex); }
        internal static BOOL GET_VEHICLE_LIGHTS_STATE(Vehicle vehicle, BOOL* lightsOn, BOOL* highbeamsOn) { return NativeInvoker.Invoke<BOOL>(0xB91B4C20085BD12F, (ulong)vehicle, (ulong)lightsOn, (ulong)highbeamsOn); }
        internal static BOOL IS_VEHICLE_TYRE_BURST(Vehicle vehicle, int wheelID, BOOL completely) { return NativeInvoker.Invoke<BOOL>(0xBA291848A0815CA9, (ulong)vehicle, (ulong)wheelID, (ulong)completely); }
        internal static void SET_VEHICLE_FORWARD_SPEED(Vehicle vehicle, float speed) { NativeInvoker.Invoke(0xAB54A438726D25D5, (ulong)vehicle, *(uint*)&speed); }
        internal static void N_0x6501129C9E0FFA05(Any p0, Any p1) { NativeInvoker.Invoke(0x6501129C9E0FFA05, (ulong)p0, (ulong)p1); }
        internal static void BRING_VEHICLE_TO_HALT(Vehicle vehicle, float distance, int duration, BOOL unknown) { NativeInvoker.Invoke(0x260BE8F09E326A20, (ulong)vehicle, *(uint*)&distance, (ulong)duration, (ulong)unknown); }
        internal static void N_0xDCE97BDF8A0EABC8(Vehicle vehicle, Any p1) { NativeInvoker.Invoke(0xDCE97BDF8A0EABC8, (ulong)vehicle, (ulong)p1); }
        internal static void N_0x9849DE24FCF23CCC(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x9849DE24FCF23CCC, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0x8664170EF165C4A6(Any p0, Any p1) { NativeInvoker.Invoke(0x8664170EF165C4A6, (ulong)p0, (ulong)p1); }
        internal static void STOP_BRING_VEHICLE_TO_HALT_(Vehicle vehicle) { NativeInvoker.Invoke(0x7C06330BFDDA182E, (ulong)vehicle); }
        internal static BOOL IS_VEHICLE_BEING_HALTED_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xC69BB1D832A710EF, (ulong)vehicle); }
        internal static void SET_FORKLIFT_FORK_HEIGHT(Vehicle vehicle, float height) { NativeInvoker.Invoke(0x37EBBF3117BD6A25, (ulong)vehicle, *(uint*)&height); }
        internal static BOOL IS_ENTITY_ATTACHED_TO_HANDLER_FRAME(Vehicle vehicle, Entity entity) { return NativeInvoker.Invoke<BOOL>(0x57715966069157AD, (ulong)vehicle, (ulong)entity); }
        internal static BOOL IS_ANY_ENTITY_ATTACHED_TO_HANDLER_FRAME(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x62CA17B74C435651, (ulong)vehicle); }
        internal static Vehicle FIND_VEHICLE_CARRYING_THIS_ENTITY_(Entity entity) { return NativeInvoker.Invoke<Vehicle>(0x375E7FC44F21C8AB, (ulong)entity); }
        internal static BOOL IS_HANDLER_FRAME_ABOVE_CONTAINER_(Vehicle vehicle, Entity entity) { return NativeInvoker.Invoke<BOOL>(0x89D630CF5EA96D23, (ulong)vehicle, (ulong)entity); }
        internal static void N_0x6A98C2ECF57FA5D4(Vehicle vehicle, Entity entity) { NativeInvoker.Invoke(0x6A98C2ECF57FA5D4, (ulong)vehicle, (ulong)entity); }
        internal static void DETACH_CONTAINER_FROM_HANDLER_FRAME(Vehicle vehicle) { NativeInvoker.Invoke(0x7C0043FDFF6436BC, (ulong)vehicle); }
        internal static void N_0x8AA9180DE2FEDD45(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0x8AA9180DE2FEDD45, (ulong)vehicle, (ulong)p1); }
        internal static void SET_BOAT_DISABLE_AVOIDANCE(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0x0A6A279F3AA4FD70, (ulong)vehicle, (ulong)p1); }
        internal static BOOL IS_HELI_LANDING_AREA_BLOCKED(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x634148744F385576, (ulong)vehicle); }
        internal static void N_0x107A473D7A6647A9(Vehicle vehicle) { NativeInvoker.Invoke(0x107A473D7A6647A9, (ulong)vehicle); }
        internal static void SET_HELI_TURBULENCE_SCALAR(Vehicle vehicle, float p1) { NativeInvoker.Invoke(0xE6F13851780394DA, (ulong)vehicle, *(uint*)&p1); }
        internal static void SET_CAR_BOOT_OPEN(Vehicle vehicle) { NativeInvoker.Invoke(0xFC40CBF7B90CA77C, (ulong)vehicle); }
        internal static void SET_VEHICLE_TYRE_BURST(Vehicle vehicle, int index, BOOL onRim, float p3) { NativeInvoker.Invoke(0xEC6A202EE4960385, (ulong)vehicle, (ulong)index, (ulong)onRim, *(uint*)&p3); }
        internal static void SET_VEHICLE_DOORS_SHUT(Vehicle vehicle, BOOL closeInstantly) { NativeInvoker.Invoke(0x781B3D62BB013EF5, (ulong)vehicle, (ulong)closeInstantly); }
        internal static void SET_VEHICLE_TYRES_CAN_BURST(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xEB9DC3C7D8596C46, (ulong)vehicle, (ulong)toggle); }
        internal static BOOL GET_VEHICLE_TYRES_CAN_BURST(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x678B9BB8C3F58FEB, (ulong)vehicle); }
        internal static void SET_VEHICLE_WHEELS_CAN_BREAK(Vehicle vehicle, BOOL enabled) { NativeInvoker.Invoke(0x29B18B4FD460CA8F, (ulong)vehicle, (ulong)enabled); }
        internal static void SET_VEHICLE_DOOR_OPEN(Vehicle vehicle, int doorId, BOOL loose, BOOL openInstantly) { NativeInvoker.Invoke(0x7C65DAC73C35C862, (ulong)vehicle, (ulong)doorId, (ulong)loose, (ulong)openInstantly); }
        internal static void N_0x3B458DDB57038F08(Vehicle vehicle, int doorId, BOOL toggle) { NativeInvoker.Invoke(0x3B458DDB57038F08, (ulong)vehicle, (ulong)doorId, (ulong)toggle); }
        internal static void N_0xA247F9EF01D8082E(Any p0) { NativeInvoker.Invoke(0xA247F9EF01D8082E, (ulong)p0); }
        internal static void REMOVE_VEHICLE_WINDOW(Vehicle vehicle, int windowIndex) { NativeInvoker.Invoke(0xA711568EEDB43069, (ulong)vehicle, (ulong)windowIndex); }
        internal static void ROLL_DOWN_WINDOWS(Vehicle vehicle) { NativeInvoker.Invoke(0x85796B0549DDE156, (ulong)vehicle); }
        internal static void ROLL_DOWN_WINDOW(Vehicle vehicle, int windowIndex) { NativeInvoker.Invoke(0x7AD9E6CE657D69E3, (ulong)vehicle, (ulong)windowIndex); }
        internal static void ROLL_UP_WINDOW(Vehicle vehicle, int windowIndex) { NativeInvoker.Invoke(0x602E548F46E24D59, (ulong)vehicle, (ulong)windowIndex); }
        internal static void SMASH_VEHICLE_WINDOW(Vehicle vehicle, int index) { NativeInvoker.Invoke(0x9E5B5E4D2CCD2259, (ulong)vehicle, (ulong)index); }
        internal static void FIX_VEHICLE_WINDOW(Vehicle vehicle, int index) { NativeInvoker.Invoke(0x772282EBEB95E682, (ulong)vehicle, (ulong)index); }
        internal static void POP_OUT_VEHICLE_WINDSCREEN(Vehicle vehicle) { NativeInvoker.Invoke(0x6D645D59FB5F5AD3, (ulong)vehicle); }
        internal static void EJECT_JB700_ROOF_(Vehicle vehicle, float x, float y, float z) { NativeInvoker.Invoke(0xE38CB9D7D39FDBCC, (ulong)vehicle, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void SET_VEHICLE_LIGHTS(Vehicle vehicle, int state) { NativeInvoker.Invoke(0x34E710FF01247C5A, (ulong)vehicle, (ulong)state); }
        internal static void SET_VEHICLE_USE_PLAYER_LIGHT_SETTINGS(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xC45C27EF50F36ADC, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_LIGHTS_MODE_(Vehicle vehicle, int p1) { NativeInvoker.Invoke(0x1FD09E7390A74D54, (ulong)vehicle, (ulong)p1); }
        internal static void SET_VEHICLE_ALARM(Vehicle vehicle, BOOL state) { NativeInvoker.Invoke(0xCDE5E70C1DDB954C, (ulong)vehicle, (ulong)state); }
        internal static void START_VEHICLE_ALARM(Vehicle vehicle) { NativeInvoker.Invoke(0xB8FF7AB45305C345, (ulong)vehicle); }
        internal static BOOL IS_VEHICLE_ALARM_ACTIVATED(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x4319E335B71FFF34, (ulong)vehicle); }
        internal static void SET_VEHICLE_INTERIORLIGHT(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xBC2042F090AF6AD3, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0x8821196D91FA2DE5(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x8821196D91FA2DE5, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_LIGHT_MULTIPLIER(Vehicle vehicle, float multiplier) { NativeInvoker.Invoke(0xB385454F8791F57C, (ulong)vehicle, *(uint*)&multiplier); }
        internal static void ATTACH_VEHICLE_TO_TRAILER(Vehicle vehicle, Vehicle trailer, float radius) { NativeInvoker.Invoke(0x3C7D42D58F770B54, (ulong)vehicle, (ulong)trailer, *(uint*)&radius); }
        internal static void ATTACH_VEHICLE_ON_TO_TRAILER(Vehicle vehicle, Vehicle trailer, float offsetX, float offsetY, float offsetZ, float coordsX, float coordsY, float coordsZ, float rotationX, float rotationY, float rotationZ, float disableCollisions) { NativeInvoker.Invoke(0x16B5E274BDE402F8, (ulong)vehicle, (ulong)trailer, *(uint*)&offsetX, *(uint*)&offsetY, *(uint*)&offsetZ, *(uint*)&coordsX, *(uint*)&coordsY, *(uint*)&coordsZ, *(uint*)&rotationX, *(uint*)&rotationY, *(uint*)&rotationZ, *(uint*)&disableCollisions); }
        internal static void STABILISE_ENTITY_ATTACHED_TO_HELI(Vehicle vehicle, Entity entity, float p2) { NativeInvoker.Invoke(0x374706271354CB18, (ulong)vehicle, (ulong)entity, *(uint*)&p2); }
        internal static void DETACH_VEHICLE_FROM_TRAILER(Vehicle vehicle) { NativeInvoker.Invoke(0x90532EDF0D2BDD86, (ulong)vehicle); }
        internal static BOOL IS_VEHICLE_ATTACHED_TO_TRAILER(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xE7CF3C4F9F489F0C, (ulong)vehicle); }
        internal static void SET_TRAILER_INVERSE_MASS_SCALE(Vehicle vehicle, float p1) { NativeInvoker.Invoke(0x2A8F319B392E7B3F, (ulong)vehicle, *(uint*)&p1); }
        internal static void SET_TRAILER_LEGS_RAISED(Vehicle vehicle) { NativeInvoker.Invoke(0x95CF53B3D687F9FA, (ulong)vehicle); }
        internal static void SET_TRAILER_LEGS_LOWERED_(Any p0) { NativeInvoker.Invoke(0x878C75C09FBDB942, (ulong)p0); }
        internal static void SET_VEHICLE_TYRE_FIXED(Vehicle vehicle, int tyreIndex) { NativeInvoker.Invoke(0x6E13FC662B882D1D, (ulong)vehicle, (ulong)tyreIndex); }
        internal static void SET_VEHICLE_NUMBER_PLATE_TEXT(Vehicle vehicle, char* plateText) { NativeInvoker.Invoke(0x95A88F0B409CDA47, (ulong)vehicle, (ulong)plateText); }
        internal static char* GET_VEHICLE_NUMBER_PLATE_TEXT(Vehicle vehicle) { return (char*)NativeInvoker.Invoke<IntPtr>(0x7CE1CCB9B293020E, (ulong)vehicle); }
        internal static int GET_NUMBER_OF_VEHICLE_NUMBER_PLATES() { return NativeInvoker.Invoke<int>(0x4C4D6B2644F458CB); } // 0x4C4D6B2644F458CB 0xD24BC1AE b323, (ulong)4C4D6B2644F458CB); }
        internal static void SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(Vehicle vehicle, int plateIndex) { NativeInvoker.Invoke(0x9088EB5A43FFB0A1, (ulong)vehicle, (ulong)plateIndex); }
        internal static int GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0xF11BC2DD9A3E7195, (ulong)vehicle); }
        internal static void SET_RANDOM_TRAINS(BOOL toggle) { NativeInvoker.Invoke(0x80D9F74197EA47D9, (ulong)toggle); }
        internal static Vehicle CREATE_MISSION_TRAIN(int variation, float x, float y, float z, BOOL direction, Any p5, Any p6) { return NativeInvoker.Invoke<Vehicle>(0x63C6CCA8E68AE8C8, (ulong)variation, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)direction, (ulong)p5, (ulong)p6); }
        internal static void SWITCH_TRAIN_TRACK(int trackId, BOOL state) { NativeInvoker.Invoke(0xFD813BB7DB977F20, (ulong)trackId, (ulong)state); }
        internal static void SET_TRAIN_TRACK_SPAWN_FREQUENCY(int trackIndex, int frequency) { NativeInvoker.Invoke(0x21973BBF8D17EDFA, (ulong)trackIndex, (ulong)frequency); }
        internal static void N_0x2310A8F9421EBF43(Any p0) { NativeInvoker.Invoke(0x2310A8F9421EBF43, (ulong)p0); }
        internal static void DELETE_ALL_TRAINS() { NativeInvoker.Invoke(0x736A718577F39C7D); } // 0x736A718577F39C7D 0x83DE7ABF b323<, (ulong)736A718577F39C7D); }
        internal static void SET_TRAIN_SPEED(Vehicle train, float speed) { NativeInvoker.Invoke(0xAA0BC91BE0B796E3, (ulong)train, *(uint*)&speed); }
        internal static void SET_TRAIN_CRUISE_SPEED(Vehicle train, float speed) { NativeInvoker.Invoke(0x16469284DB8C62B5, (ulong)train, *(uint*)&speed); }
        internal static void SET_RANDOM_BOATS(BOOL toggle) { NativeInvoker.Invoke(0x84436EC293B1415F, (ulong)toggle); }
        internal static void SET_RANDOM_BOATS_IN_MP_(BOOL toggle) { NativeInvoker.Invoke(0xDA5E12F728DB30CA, (ulong)toggle); }
        internal static void SET_GARBAGE_TRUCKS(BOOL toggle) { NativeInvoker.Invoke(0x2AFD795EEAC8D30D, (ulong)toggle); }
        internal static BOOL DOES_VEHICLE_HAVE_STUCK_VEHICLE_CHECK(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x57E4C39DE5EE8470, (ulong)vehicle); }
        internal static int GET_VEHICLE_RECORDING_ID(int recording, char* script) { return NativeInvoker.Invoke<int>(0x21543C612379DB3C, (ulong)recording, (ulong)script); }
        internal static void REQUEST_VEHICLE_RECORDING(int recording, char* script) { NativeInvoker.Invoke(0xAF514CABE74CBF15, (ulong)recording, (ulong)script); }
        internal static BOOL HAS_VEHICLE_RECORDING_BEEN_LOADED(int recording, char* script) { return NativeInvoker.Invoke<BOOL>(0x300D614A4C785FC4, (ulong)recording, (ulong)script); }
        internal static void REMOVE_VEHICLE_RECORDING(int recording, char* script) { NativeInvoker.Invoke(0xF1160ACCF98A3FC8, (ulong)recording, (ulong)script); }
        internal static Vector3 GET_POSITION_OF_VEHICLE_RECORDING_ID_AT_TIME(int id, float time) { return NativeInvoker.Invoke<Vector3>(0x92523B76657A517D, (ulong)id, *(uint*)&time); }
        internal static Vector3 GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME(int recording, float time, char* script) { return NativeInvoker.Invoke<Vector3>(0xD242728AA6F0FBA2, (ulong)recording, *(uint*)&time, (ulong)script); }
        internal static Vector3 GET_ROTATION_OF_VEHICLE_RECORDING_ID_AT_TIME(int id, float time) { return NativeInvoker.Invoke<Vector3>(0xF0F2103EFAF8CBA7, (ulong)id, *(uint*)&time); }
        internal static Vector3 GET_ROTATION_OF_VEHICLE_RECORDING_AT_TIME(int recording, float time, char* script) { return NativeInvoker.Invoke<Vector3>(0x2058206FBE79A8AD, (ulong)recording, *(uint*)&time, (ulong)script); }
        internal static float GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID(int id) { return NativeInvoker.Invoke<float>(0x102D125411A7B6E6, (ulong)id); }
        internal static float GET_TOTAL_DURATION_OF_VEHICLE_RECORDING(int recording, char* script) { return NativeInvoker.Invoke<float>(0x0E48D1C262390950, (ulong)recording, (ulong)script); }
        internal static float GET_POSITION_IN_RECORDING(Vehicle vehicle) { return NativeInvoker.Invoke<float>(0x2DACD605FC681475, (ulong)vehicle); }
        internal static float GET_TIME_POSITION_IN_RECORDING(Vehicle vehicle) { return NativeInvoker.Invoke<float>(0x5746F3A7AB7FE544, (ulong)vehicle); }
        internal static void START_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle, int recording, char* script, BOOL p3) { NativeInvoker.Invoke(0x3F878F92B3A7A071, (ulong)vehicle, (ulong)recording, (ulong)script, (ulong)p3); }
        internal static void START_PLAYBACK_RECORDED_VEHICLE_WITH_FLAGS(Vehicle vehicle, int recording, char* script, int flags, int time, int drivingStyle) { NativeInvoker.Invoke(0x7D80FD645D4DA346, (ulong)vehicle, (ulong)recording, (ulong)script, (ulong)flags, (ulong)time, (ulong)drivingStyle); }
        internal static void FORCE_PLAYBACK_RECORDED_VEHICLE_UPDATE(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0x1F2E4E06DEA8992B, (ulong)vehicle, (ulong)p1); }
        internal static void STOP_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle) { NativeInvoker.Invoke(0x54833611C17ABDEA, (ulong)vehicle); }
        internal static void PAUSE_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle) { NativeInvoker.Invoke(0x632A689BF42301B1, (ulong)vehicle); }
        internal static void UNPAUSE_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle) { NativeInvoker.Invoke(0x8879EE09268305D5, (ulong)vehicle); }
        internal static BOOL IS_PLAYBACK_GOING_ON_FOR_VEHICLE(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x1C8A4C2C19E68EEC, (ulong)vehicle); }
        internal static BOOL IS_PLAYBACK_USING_AI_GOING_ON_FOR_VEHICLE(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xAEA8FD591FAD4106, (ulong)vehicle); }
        internal static int GET_CURRENT_PLAYBACK_FOR_VEHICLE(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x42BC05C27A946054, (ulong)vehicle); }
        internal static void SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle) { NativeInvoker.Invoke(0xAB8E2EDA0C0A5883, (ulong)vehicle); }
        internal static void SET_PLAYBACK_SPEED(Vehicle vehicle, float speed) { NativeInvoker.Invoke(0x6683AB880E427778, (ulong)vehicle, *(uint*)&speed); }
        internal static void START_PLAYBACK_RECORDED_VEHICLE_USING_AI(Vehicle vehicle, int recording, char* script, float speed, int drivingStyle) { NativeInvoker.Invoke(0x29DE5FA52D00428C, (ulong)vehicle, (ulong)recording, (ulong)script, *(uint*)&speed, (ulong)drivingStyle); }
        internal static void SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle, float time) { NativeInvoker.Invoke(0x9438F7AD68771A20, (ulong)vehicle, *(uint*)&time); }
        internal static void SET_PLAYBACK_TO_USE_AI(Vehicle vehicle, int drivingStyle) { NativeInvoker.Invoke(0xA549C3B37EA28131, (ulong)vehicle, (ulong)drivingStyle); }
        internal static void SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER(Vehicle vehicle, int time, int drivingStyle, BOOL p3) { NativeInvoker.Invoke(0x6E63860BBB190730, (ulong)vehicle, (ulong)time, (ulong)drivingStyle, (ulong)p3); }
        internal static void N_0x5845066D8A1EA7F7(Vehicle vehicle, float x, float y, float z, Any p4) { NativeInvoker.Invoke(0x5845066D8A1EA7F7, (ulong)vehicle, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)p4); }
        internal static void N_0x796A877E459B99EA(Any p0, float p1, float p2, float p3) { NativeInvoker.Invoke(0x796A877E459B99EA, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3); }
        internal static void N_0xFAF2A78061FD9EF4(Any p0, float p1, float p2, float p3) { NativeInvoker.Invoke(0xFAF2A78061FD9EF4, (ulong)p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3); }
        internal static void N_0x063AE2B2CC273588(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0x063AE2B2CC273588, (ulong)vehicle, (ulong)p1); }
        internal static void EXPLODE_VEHICLE_IN_CUTSCENE(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0x786A4EB67B01BF0B, (ulong)vehicle, (ulong)p1); }
        internal static void ADD_VEHICLE_STUCK_CHECK_WITH_WARP(Any p0, float p1, Any p2, BOOL p3, BOOL p4, BOOL p5, Any p6) { NativeInvoker.Invoke(0x2FA9923062DD396C, (ulong)p0, *(uint*)&p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static void SET_VEHICLE_MODEL_IS_SUPPRESSED(Hash model, BOOL suppressed) { NativeInvoker.Invoke(0x0FC2D89AC25A5814, (ulong)model, (ulong)suppressed); }
        internal static Vehicle GET_RANDOM_VEHICLE_IN_SPHERE(float x, float y, float z, float radius, Hash modelHash, int flags) { return NativeInvoker.Invoke<Vehicle>(0x386F6CE5BAF6091C, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)modelHash, (ulong)flags); }
        internal static Vehicle GET_RANDOM_VEHICLE_FRONT_BUMPER_IN_SPHERE(float p0, float p1, float p2, float p3, int p4, int p5, int p6) { return NativeInvoker.Invoke<Vehicle>(0xC5574E0AEB86BA68, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static Vehicle GET_RANDOM_VEHICLE_BACK_BUMPER_IN_SPHERE(float p0, float p1, float p2, float p3, int p4, int p5, int p6) { return NativeInvoker.Invoke<Vehicle>(0xB50807EABE20A8DC, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, (ulong)p4, (ulong)p5, (ulong)p6); }
        internal static Vehicle GET_CLOSEST_VEHICLE(float x, float y, float z, float radius, Hash modelHash, int flags) { return NativeInvoker.Invoke<Vehicle>(0xF73EB622C4F1689B, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)modelHash, (ulong)flags); }
        internal static Entity GET_TRAIN_CARRIAGE(Vehicle train, int trailerNumber) { return NativeInvoker.Invoke<Entity>(0x08AAFD0814722BC3, (ulong)train, (ulong)trailerNumber); }
        internal static BOOL IS_MISSION_TRAIN_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xAD464F2E18836BFC, (ulong)vehicle); }
        internal static void DELETE_MISSION_TRAIN(Vehicle* train) { NativeInvoker.Invoke(0x5B76B14AE875C795, (ulong)train); }
        internal static void SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED(Vehicle* train, BOOL p1) { NativeInvoker.Invoke(0xBBE7648349B49BE8, (ulong)train, (ulong)p1); }
        internal static void SET_MISSION_TRAIN_COORDS(Vehicle train, float x, float y, float z) { NativeInvoker.Invoke(0x591CA673AA6AB736, (ulong)train, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static BOOL IS_THIS_MODEL_A_BOAT(Hash model) { return NativeInvoker.Invoke<BOOL>(0x45A9187928F4B9E3, (ulong)model); }
        internal static BOOL IS_THIS_MODEL_A_JETSKI(Hash model) { return NativeInvoker.Invoke<BOOL>(0x9537097412CF75FE, (ulong)model); }
        internal static BOOL IS_THIS_MODEL_A_PLANE(Hash model) { return NativeInvoker.Invoke<BOOL>(0xA0948AB42D7BA0DE, (ulong)model); }
        internal static BOOL IS_THIS_MODEL_A_HELI(Hash model) { return NativeInvoker.Invoke<BOOL>(0xDCE4334788AF94EA, (ulong)model); }
        internal static BOOL IS_THIS_MODEL_A_CAR(Hash model) { return NativeInvoker.Invoke<BOOL>(0x7F6DB52EEFC96DF8, (ulong)model); }
        internal static BOOL IS_THIS_MODEL_A_TRAIN(Hash model) { return NativeInvoker.Invoke<BOOL>(0xAB935175B22E822B, (ulong)model); }
        internal static BOOL IS_THIS_MODEL_A_BIKE(Hash model) { return NativeInvoker.Invoke<BOOL>(0xB50C0B0CEDC6CE84, (ulong)model); }
        internal static BOOL IS_THIS_MODEL_A_BICYCLE(Hash model) { return NativeInvoker.Invoke<BOOL>(0xBF94DD42F63BDED2, (ulong)model); }
        internal static BOOL IS_THIS_MODEL_A_QUADBIKE(Hash model) { return NativeInvoker.Invoke<BOOL>(0x39DAC362EE65FA28, (ulong)model); }
        internal static BOOL IS_THIS_MODEL_AN_AMPHIBIOUS_CAR_(Hash model) { return NativeInvoker.Invoke<BOOL>(0x633F6F44A537EBB6, (ulong)model); }
        internal static BOOL IS_THIS_MODEL_AN_AMPHIBIOUS_QUADBIKE_(Hash model) { return NativeInvoker.Invoke<BOOL>(0xA1A9FC1C76A6730D, (ulong)model); }
        internal static void SET_HELI_BLADES_FULL_SPEED(Vehicle vehicle) { NativeInvoker.Invoke(0xA178472EBB8AE60D, (ulong)vehicle); }
        internal static void SET_HELI_BLADES_SPEED(Vehicle vehicle, float speed) { NativeInvoker.Invoke(0xFD280B4D7F3ABC4D, (ulong)vehicle, *(uint*)&speed); }
        internal static void N_0x99CAD8E7AFDB60FA(Vehicle vehicle, float p1, float p2) { NativeInvoker.Invoke(0x99CAD8E7AFDB60FA, (ulong)vehicle, *(uint*)&p1, *(uint*)&p2); }
        internal static void SET_VEHICLE_CAN_BE_TARGETTED(Vehicle vehicle, BOOL state) { NativeInvoker.Invoke(0x3750146A28097A82, (ulong)vehicle, (ulong)state); }
        internal static void N_0xDBC631F109350B8C(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0xDBC631F109350B8C, (ulong)vehicle, (ulong)p1); }
        internal static void SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED(Vehicle vehicle, BOOL state) { NativeInvoker.Invoke(0x4C7028F78FFD3681, (ulong)vehicle, (ulong)state); }
        internal static void SET_VEHICLE_HAS_UNBREAKABLE_LIGHTS(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0x1AA8A837D2169D94, (ulong)vehicle, (ulong)p1); }
        internal static void N_0x2311DD7159F00582(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0x2311DD7159F00582, (ulong)vehicle, (ulong)p1); }
        internal static void N_0x065D03A9D6B2C6B5(Any p0, Any p1) { NativeInvoker.Invoke(0x065D03A9D6B2C6B5, (ulong)p0, (ulong)p1); }
        internal static float GET_VEHICLE_DIRT_LEVEL(Vehicle vehicle) { return NativeInvoker.Invoke<float>(0x8F17BC8BA08DA62B, (ulong)vehicle); }
        internal static void SET_VEHICLE_DIRT_LEVEL(Vehicle vehicle, float dirtLevel) { NativeInvoker.Invoke(0x79D3B596FE44EE8B, (ulong)vehicle, *(uint*)&dirtLevel); }
        internal static BOOL IS_VEHICLE_DAMAGED_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xBCDC5017D3CE1E9E, (ulong)vehicle); }
        internal static BOOL IS_VEHICLE_DOOR_FULLY_OPEN(Vehicle vehicle, int doorId) { return NativeInvoker.Invoke<BOOL>(0x3E933CFF7B111C22, (ulong)vehicle, (ulong)doorId); }
        internal static void SET_VEHICLE_ENGINE_ON(Vehicle vehicle, BOOL value, BOOL instantly, BOOL disableAutoStart) { NativeInvoker.Invoke(0x2497C4717C8B881E, (ulong)vehicle, (ulong)value, (ulong)instantly, (ulong)disableAutoStart); }
        internal static void SET_VEHICLE_UNDRIVEABLE(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x8ABA6AF54B942B95, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_PROVIDES_COVER(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x5AFEEDD9BB2899D7, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_DOOR_CONTROL(Vehicle vehicle, int doorId, int speed, float angle) { NativeInvoker.Invoke(0xF2BFA0430F0A0FCB, (ulong)vehicle, (ulong)doorId, (ulong)speed, *(uint*)&angle); }
        internal static void SET_VEHICLE_DOOR_LATCHED(Vehicle vehicle, int doorId, BOOL p2, BOOL p3, BOOL p4) { NativeInvoker.Invoke(0xA5A9653A8D2CAF48, (ulong)vehicle, (ulong)doorId, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static float GET_VEHICLE_DOOR_ANGLE_RATIO(Vehicle vehicle, int doorId) { return NativeInvoker.Invoke<float>(0xFE3F9C29F7B32BD5, (ulong)vehicle, (ulong)doorId); }
        internal static Ped GET_PED_USING_VEHICLE_DOOR(Vehicle vehicle, int doord) { return NativeInvoker.Invoke<Ped>(0x218297BF0CFD853B, (ulong)vehicle, (ulong)doord); }
        internal static void SET_VEHICLE_DOOR_SHUT(Vehicle vehicle, int doorId, BOOL closeInstantly) { NativeInvoker.Invoke(0x93D9BD300D7789E5, (ulong)vehicle, (ulong)doorId, (ulong)closeInstantly); }
        internal static void SET_VEHICLE_DOOR_BROKEN(Vehicle vehicle, int doorId, BOOL deleteDoor) { NativeInvoker.Invoke(0xD4D4F6A4AB575A33, (ulong)vehicle, (ulong)doorId, (ulong)deleteDoor); }
        internal static void SET_VEHICLE_CAN_BREAK(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x59BF8C3D52C92F66, (ulong)vehicle, (ulong)toggle); }
        internal static BOOL DOES_VEHICLE_HAVE_ROOF(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x8AC862B0B32C5B80, (ulong)vehicle); }
        internal static void N_0xC4B3347BD68BD609(Any p0) { NativeInvoker.Invoke(0xC4B3347BD68BD609, (ulong)p0); }
        internal static void N_0xD3301660A57C9272(Any p0) { NativeInvoker.Invoke(0xD3301660A57C9272, (ulong)p0); }
        internal static void N_0xB9562064627FF9DB(Any p0, Any p1) { NativeInvoker.Invoke(0xB9562064627FF9DB, (ulong)p0, (ulong)p1); }
        internal static BOOL IS_BIG_VEHICLE(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x9F243D3919F442FE, (ulong)vehicle); }
        internal static int GET_NUMBER_OF_VEHICLE_COLOURS(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x3B963160CD65D41E, (ulong)vehicle); }
        internal static void SET_VEHICLE_COLOUR_COMBINATION(Vehicle vehicle, int colorCombination) { NativeInvoker.Invoke(0x33E8CD3322E2FE31, (ulong)vehicle, (ulong)colorCombination); }
        internal static int GET_VEHICLE_COLOUR_COMBINATION(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x6A842D197F845D56, (ulong)vehicle); }
        internal static void SET_VEHICLE_XENON_LIGHTS_COLOR_(Vehicle vehicle, int colorIndex) { NativeInvoker.Invoke(0xE41033B25D003A07, (ulong)vehicle, (ulong)colorIndex); }
        internal static int GET_VEHICLE_XENON_LIGHTS_COLOR_(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x3DFF319A831E0CDB, (ulong)vehicle); }
        internal static void SET_VEHICLE_IS_CONSIDERED_BY_PLAYER(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x31B927BBC44156CD, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0xBE5C1255A1830FF5(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xBE5C1255A1830FF5, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0x9BECD4B9FEF3F8A6(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0x9BECD4B9FEF3F8A6, (ulong)vehicle, (ulong)p1); }
        internal static void N_0x88BC673CA9E0AE99(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0x88BC673CA9E0AE99, (ulong)vehicle, (ulong)p1); }
        internal static void N_0xE851E480B814D4BA(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0xE851E480B814D4BA, (ulong)vehicle, (ulong)p1); }
        internal static void GET_RANDOM_VEHICLE_MODEL_IN_MEMORY(BOOL p0, Hash* modelHash, int* successIndicator) { NativeInvoker.Invoke(0x055BF0AC0C34F4FD, (ulong)p0, (ulong)modelHash, (ulong)successIndicator); }
        internal static int GET_VEHICLE_DOOR_LOCK_STATUS(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x25BC98A59C2EA962, (ulong)vehicle); }
        internal static int GET_VEHICLE_DOOR_DESTROY_TYPE_(Vehicle vehicle, int doorId) { return NativeInvoker.Invoke<int>(0xCA4AC3EAAE46EC7B, (ulong)vehicle, (ulong)doorId); }
        internal static BOOL IS_VEHICLE_DOOR_DAMAGED(Vehicle veh, int doorID) { return NativeInvoker.Invoke<BOOL>(0xB8E181E559464527, (ulong)veh, (ulong)doorID); }
        internal static void SET_VEHICLE_DOOR_CAN_BREAK_(Vehicle vehicle, int doorId, BOOL isBreakable) { NativeInvoker.Invoke(0x2FA133A4A9D37ED8, (ulong)vehicle, (ulong)doorId, (ulong)isBreakable); }
        internal static BOOL IS_VEHICLE_BUMPER_BOUNCING(Vehicle vehicle, BOOL frontBumper) { return NativeInvoker.Invoke<BOOL>(0x27B926779DEB502D, (ulong)vehicle, (ulong)frontBumper); }
        internal static BOOL IS_VEHICLE_BUMPER_BROKEN_OFF(Vehicle vehicle, BOOL front) { return NativeInvoker.Invoke<BOOL>(0x468056A6BB6F3846, (ulong)vehicle, (ulong)front); }
        internal static BOOL IS_COP_VEHICLE_IN_AREA_3D(float x1, float x2, float y1, float y2, float z1, float z2) { return NativeInvoker.Invoke<BOOL>(0x7EEF65D5F153E26A, *(uint*)&x1, *(uint*)&x2, *(uint*)&y1, *(uint*)&y2, *(uint*)&z1, *(uint*)&z2); }
        internal static BOOL IS_VEHICLE_ON_ALL_WHEELS(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xB104CD1BABF302E2, (ulong)vehicle); }
        internal static int GET_VEHICLE_MODEL_MONETARY_VALUE_(Hash vehicleModel) { return NativeInvoker.Invoke<int>(0x5873C14A52D74236, (ulong)vehicleModel); }
        internal static Hash GET_VEHICLE_LAYOUT_HASH(Vehicle vehicle) { return NativeInvoker.Invoke<Hash>(0x28D37D4F71AC5C58, (ulong)vehicle); }
        internal static Any N_0xA01BC64DD4BFBBAC(Vehicle vehicle, int p1) { return NativeInvoker.Invoke<Any>(0xA01BC64DD4BFBBAC, (ulong)vehicle, (ulong)p1); }
        internal static void SET_RENDER_TRAIN_AS_DERAILED(Vehicle train, BOOL toggle) { NativeInvoker.Invoke(0x317B11A312DF5534, (ulong)train, (ulong)toggle); }
        internal static void SET_VEHICLE_EXTRA_COLOURS(Vehicle vehicle, int pearlescentColor, int wheelColor) { NativeInvoker.Invoke(0x2036F561ADD12E33, (ulong)vehicle, (ulong)pearlescentColor, (ulong)wheelColor); }
        internal static void GET_VEHICLE_EXTRA_COLOURS(Vehicle vehicle, int* pearlescentColor, int* wheelColor) { NativeInvoker.Invoke(0x3BC4245933A166F7, (ulong)vehicle, (ulong)pearlescentColor, (ulong)wheelColor); }
        internal static void SET_VEHICLE_INTERIOR_COLOR_(Vehicle vehicle, int color) { NativeInvoker.Invoke(0xF40DD601A65F7F19, (ulong)vehicle, (ulong)color); }
        internal static void GET_VEHICLE_INTERIOR_COLOR_(Vehicle vehicle, int* color) { NativeInvoker.Invoke(0x7D1464D472D32136, (ulong)vehicle, (ulong)color); }
        internal static void SET_VEHICLE_DASHBOARD_COLOR_(Vehicle vehicle, int color) { NativeInvoker.Invoke(0x6089CDF6A57F326C, (ulong)vehicle, (ulong)color); }
        internal static void GET_VEHICLE_DASHBOARD_COLOR_(Vehicle vehicle, int* color) { NativeInvoker.Invoke(0xB7635E80A5C31BFF, (ulong)vehicle, (ulong)color); }
        internal static void STOP_ALL_GARAGE_ACTIVITY() { NativeInvoker.Invoke(0x0F87E938BDF29D66); } // 0x0F87E938BDF29D66 0x17A0BCE5 b323<, (ulong)0F87E938BDF29D66); }
        internal static void SET_VEHICLE_FIXED(Vehicle vehicle) { NativeInvoker.Invoke(0x115722B1B9C14C1C, (ulong)vehicle); }
        internal static void SET_VEHICLE_DEFORMATION_FIXED(Vehicle vehicle) { NativeInvoker.Invoke(0x953DA1E1B12C0491, (ulong)vehicle); }
        internal static void SET_VEHICLE_CAN_ENGINE_OPERATE_ON_FIRE_(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x206BC5DC9D1AC70A, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_CAN_LEAK_OIL(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x51BB2D88D31A914B, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_CAN_LEAK_PETROL(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x192547247864DFDD, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_DISABLE_VEHICLE_PETROL_TANK_FIRES(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x465BF26AB9684352, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_DISABLE_VEHICLE_PETROL_TANK_DAMAGE(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x37C8252A7C92D017, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_DISABLE_VEHICLE_ENGINE_FIRES(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x91A0BD635321F145, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0xC50CE861B55EAB8B(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0xC50CE861B55EAB8B, (ulong)vehicle, (ulong)p1); }
        internal static void N_0x6EBFB22D646FFC18(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0x6EBFB22D646FFC18, (ulong)vehicle, (ulong)p1); }
        internal static void SET_DISABLE_PRETEND_OCCUPANTS(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x25367DE49D64CF16, (ulong)vehicle, (ulong)toggle); }
        internal static void REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, Any unk) { NativeInvoker.Invoke(0x46A1E1A299EC4BBA, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)unk); }
        internal static void SET_VEHICLE_STEER_BIAS(Vehicle vehicle, float value) { NativeInvoker.Invoke(0x42A8EC77D5150CBE, (ulong)vehicle, *(uint*)&value); }
        internal static BOOL IS_VEHICLE_EXTRA_TURNED_ON(Vehicle vehicle, int extraId) { return NativeInvoker.Invoke<BOOL>(0xD2E6822DBFD6C8BD, (ulong)vehicle, (ulong)extraId); }
        internal static void SET_VEHICLE_EXTRA(Vehicle vehicle, int extraId, BOOL disable) { NativeInvoker.Invoke(0x7EE3A3C5E4A40CC9, (ulong)vehicle, (ulong)extraId, (ulong)disable); }
        internal static BOOL DOES_EXTRA_EXIST(Vehicle vehicle, int extraId) { return NativeInvoker.Invoke<BOOL>(0x1262D55792428154, (ulong)vehicle, (ulong)extraId); }
        internal static BOOL DOES_VEHICLE_TYRE_EXIST_(Vehicle vehicle, int tyreIndex) { return NativeInvoker.Invoke<BOOL>(0x534E36D4DB9ECC5D, (ulong)vehicle, (ulong)tyreIndex); }
        internal static void SET_CONVERTIBLE_ROOF(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0xF39C4F538B5124C2, (ulong)vehicle, (ulong)p1); }
        internal static void LOWER_CONVERTIBLE_ROOF(Vehicle vehicle, BOOL instantlyLower) { NativeInvoker.Invoke(0xDED51F703D0FA83D, (ulong)vehicle, (ulong)instantlyLower); }
        internal static void RAISE_CONVERTIBLE_ROOF(Vehicle vehicle, BOOL instantlyRaise) { NativeInvoker.Invoke(0x8F5FB35D7E88FC70, (ulong)vehicle, (ulong)instantlyRaise); }
        internal static int GET_CONVERTIBLE_ROOF_STATE(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0xF8C397922FC03F41, (ulong)vehicle); }
        internal static BOOL IS_VEHICLE_A_CONVERTIBLE(Vehicle vehicle, BOOL p1) { return NativeInvoker.Invoke<BOOL>(0x52F357A30698BCCE, (ulong)vehicle, (ulong)p1); }
        internal static void TRANSFORM_VEHICLE_TO_SUBMARINE_(Vehicle vehicle, BOOL noAnimation) { NativeInvoker.Invoke(0xBE4C854FFDB6EEBE, (ulong)vehicle, (ulong)noAnimation); }
        internal static void TRANSFORM_SUBMARINE_TO_VEHICLE_(Vehicle vehicle, BOOL noAnimation) { NativeInvoker.Invoke(0x2A69FFD1B42BFF9E, (ulong)vehicle, (ulong)noAnimation); }
        internal static BOOL GET_IS_SUBMARINE_VEHICLE_TRANSFORMED_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xA77DC70BD689A1E5, (ulong)vehicle); }
        internal static BOOL IS_VEHICLE_STOPPED_AT_TRAFFIC_LIGHTS(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x2959F696AE390A99, (ulong)vehicle); }
        internal static void SET_VEHICLE_DAMAGE(Vehicle vehicle, float xOffset, float yOffset, float zOffset, float damage, float radius, BOOL focusOnModel) { NativeInvoker.Invoke(0xA1DD317EA8FD4F29, (ulong)vehicle, *(uint*)&xOffset, *(uint*)&yOffset, *(uint*)&zOffset, *(uint*)&damage, *(uint*)&radius, (ulong)focusOnModel); }
        internal static void N_0x35BB21DE06784373(Any p0, Any p1) { NativeInvoker.Invoke(0x35BB21DE06784373, (ulong)p0, (ulong)p1); }
        internal static float GET_VEHICLE_ENGINE_HEALTH(Vehicle vehicle) { return NativeInvoker.Invoke<float>(0xC45D23BAF168AAB8, (ulong)vehicle); }
        internal static void SET_VEHICLE_ENGINE_HEALTH(Vehicle vehicle, float health) { NativeInvoker.Invoke(0x45F6D8EEF34ABEF1, (ulong)vehicle, *(uint*)&health); }
        internal static void SET_PLANE_ENGINE_HEALTH_(Vehicle vehicle, float health) { NativeInvoker.Invoke(0x2A86A0475B6A1434, (ulong)vehicle, *(uint*)&health); }
        internal static float GET_VEHICLE_PETROL_TANK_HEALTH(Vehicle vehicle) { return NativeInvoker.Invoke<float>(0x7D5DABE888D2D074, (ulong)vehicle); }
        internal static void SET_VEHICLE_PETROL_TANK_HEALTH(Vehicle vehicle, float health) { NativeInvoker.Invoke(0x70DB57649FA8D0D8, (ulong)vehicle, *(uint*)&health); }
        internal static BOOL IS_VEHICLE_STUCK_TIMER_UP(Vehicle vehicle, int p1, int p2) { return NativeInvoker.Invoke<BOOL>(0x679BE1DAF71DA874, (ulong)vehicle, (ulong)p1, (ulong)p2); }
        internal static void RESET_VEHICLE_STUCK_TIMER(Vehicle vehicle, int nullAttributes) { NativeInvoker.Invoke(0xD7591B0065AFAA7A, (ulong)vehicle, (ulong)nullAttributes); }
        internal static BOOL IS_VEHICLE_DRIVEABLE(Vehicle vehicle, BOOL isOnFireCheck) { return NativeInvoker.Invoke<BOOL>(0x4C241E39B23DF959, (ulong)vehicle, (ulong)isOnFireCheck); }
        internal static void SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER(Vehicle vehicle, BOOL owned) { NativeInvoker.Invoke(0x2B5F9D2AF1F1722D, (ulong)vehicle, (ulong)owned); }
        internal static void SET_VEHICLE_NEEDS_TO_BE_HOTWIRED(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xFBA550EA44404EE6, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0x9F3F689B814F2599(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0x9F3F689B814F2599, (ulong)vehicle, (ulong)p1); }
        internal static void N_0x4E74E62E0A97E901(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0x4E74E62E0A97E901, (ulong)vehicle, (ulong)p1); }
        internal static void START_VEHICLE_HORN(Vehicle vehicle, int duration, Hash mode, BOOL forever) { NativeInvoker.Invoke(0x9C8C6504B5B63D2C, (ulong)vehicle, (ulong)duration, (ulong)mode, (ulong)forever); }
        internal static void SET_VEHICLE_SILENT_(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x9D44FCCE98450843, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_HAS_STRONG_AXLES(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x92F0CF722BC4202F, (ulong)vehicle, (ulong)toggle); }
        internal static char* GET_DISPLAY_NAME_FROM_VEHICLE_MODEL(Hash modelHash) { return (char*)NativeInvoker.Invoke<IntPtr>(0xB215AAC32D25D019, (ulong)modelHash); }
        internal static char* GET_MAKE_NAME_FROM_VEHICLE_MODEL_(Hash modelHash) { return (char*)NativeInvoker.Invoke<IntPtr>(0xF7AF4F159FF99F97, (ulong)modelHash); }
        internal static Vector3 GET_VEHICLE_DEFORMATION_AT_POS(Vehicle vehicle, float offsetX, float offsetY, float offsetZ) { return NativeInvoker.Invoke<Vector3>(0x4EC6CFBC7B2E9536, (ulong)vehicle, *(uint*)&offsetX, *(uint*)&offsetY, *(uint*)&offsetZ); }
        internal static void SET_VEHICLE_LIVERY(Vehicle vehicle, int livery) { NativeInvoker.Invoke(0x60BF608F1B8CD1B6, (ulong)vehicle, (ulong)livery); }
        internal static int GET_VEHICLE_LIVERY(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x2BB9230590DA5E8A, (ulong)vehicle); }
        internal static int GET_VEHICLE_LIVERY_COUNT(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x87B63E25A529D526, (ulong)vehicle); }
        internal static void SET_VEHICLE_ROOF_LIVERY_(Vehicle vehicle, int livery) { NativeInvoker.Invoke(0xA6D3A8750DC73270, (ulong)vehicle, (ulong)livery); }
        internal static int GET_VEHICLE_ROOF_LIVERY_(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x60190048C0764A26, (ulong)vehicle); }
        internal static int GET_VEHICLE_ROOF_LIVERY_COUNT_(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x5ECB40269053C0D4, (ulong)vehicle); }
        internal static BOOL IS_VEHICLE_WINDOW_INTACT(Vehicle vehicle, int windowIndex) { return NativeInvoker.Invoke<BOOL>(0x46E571A0E20D01F1, (ulong)vehicle, (ulong)windowIndex); }
        internal static BOOL ARE_ALL_VEHICLE_WINDOWS_INTACT(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x11D862A3E977A9EF, (ulong)vehicle); }
        internal static BOOL ARE_ANY_VEHICLE_SEATS_FREE(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x2D34FC3BC4ADB780, (ulong)vehicle); }
        internal static void RESET_VEHICLE_WHEELS(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x21D2E5662C1F6FED, (ulong)vehicle, (ulong)toggle); }
        internal static BOOL IS_HELI_PART_BROKEN(Vehicle vehicle, BOOL p1, BOOL p2, BOOL p3) { return NativeInvoker.Invoke<BOOL>(0xBC74B4BE25EB6C8A, (ulong)vehicle, (ulong)p1, (ulong)p2, (ulong)p3); }
        internal static float GET_HELI_MAIN_ROTOR_HEALTH(Vehicle vehicle) { return NativeInvoker.Invoke<float>(0xE4CB7541F413D2C5, (ulong)vehicle); }
        internal static float GET_HELI_TAIL_ROTOR_HEALTH(Vehicle vehicle) { return NativeInvoker.Invoke<float>(0xAE8CE82A4219AC8C, (ulong)vehicle); }
        internal static float GET_HELI_TAIL_BOOM_HEALTH(Vehicle vehicle) { return NativeInvoker.Invoke<float>(0xAC51915D27E4A5F7, (ulong)vehicle); }
        internal static void SET_HELI_MAIN_ROTOR_HEALTH_(Vehicle vehicle, float health) { NativeInvoker.Invoke(0x4056EA1105F5ABD7, (ulong)vehicle, *(uint*)&health); }
        internal static void SET_HELI_TAIL_ROTOR_HEALTH_(Vehicle vehicle, float health) { NativeInvoker.Invoke(0xFE205F38AAA58E5B, (ulong)vehicle, *(uint*)&health); }
        internal static void SET_HELI_TAIL_EXPLODE_THROW_DASHBOARD(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0x3EC8BF18AA453FE9, (ulong)vehicle, (ulong)p1); }
        internal static void SET_VEHICLE_NAME_DEBUG(Vehicle vehicle, char* name) { NativeInvoker.Invoke(0xBFDF984E2C22B94F, (ulong)vehicle, (ulong)name); }
        internal static void SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x71B0892EC081D60A, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0xD565F438137F0E10(Any p0, Any p1) { NativeInvoker.Invoke(0xD565F438137F0E10, (ulong)p0, (ulong)p1); }
        internal static void N_0x3441CAD2F2231923(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0x3441CAD2F2231923, (ulong)vehicle, (ulong)p1); }
        internal static void SET_VEHICLE_DISABLE_TOWING(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x2B6747FAA9DB9D6B, (ulong)vehicle, (ulong)toggle); }
        internal static BOOL DOES_VEHICLE_HAVE_LANDING_GEAR_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xE43701C36CAFF1A4, (ulong)vehicle); }
        internal static void CONTROL_LANDING_GEAR(Vehicle vehicle, int state) { NativeInvoker.Invoke(0xCFC8BE9A5E1FE575, (ulong)vehicle, (ulong)state); }
        internal static int GET_LANDING_GEAR_STATE(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x9B0F3DCA3DB0F4CD, (ulong)vehicle); }
        internal static BOOL IS_ANY_VEHICLE_NEAR_POINT(float x, float y, float z, float radius) { return NativeInvoker.Invoke<BOOL>(0x61E1DD6125A3EEE6, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius); }
        internal static void REQUEST_VEHICLE_HIGH_DETAIL_MODEL(Vehicle vehicle) { NativeInvoker.Invoke(0xA6E9FDCB2C76785E, (ulong)vehicle); }
        internal static void REMOVE_VEHICLE_HIGH_DETAIL_MODEL(Vehicle vehicle) { NativeInvoker.Invoke(0x00689CDE5F7C6787, (ulong)vehicle); }
        internal static BOOL IS_VEHICLE_HIGH_DETAIL(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x1F25887F3C104278, (ulong)vehicle); }
        internal static void REQUEST_VEHICLE_ASSET(Hash vehicleHash, int vehicleAsset) { NativeInvoker.Invoke(0x81A15811460FAB3A, (ulong)vehicleHash, (ulong)vehicleAsset); }
        internal static BOOL HAS_VEHICLE_ASSET_LOADED(int vehicleAsset) { return NativeInvoker.Invoke<BOOL>(0x1BBE0523B8DB9A21, (ulong)vehicleAsset); }
        internal static void REMOVE_VEHICLE_ASSET(int vehicleAsset) { NativeInvoker.Invoke(0xACE699C71AB9DEB5, (ulong)vehicleAsset); }
        internal static void SET_VEHICLE_TOW_TRUCK_ARM_POSITION(Vehicle vehicle, float position) { NativeInvoker.Invoke(0xFE54B92A344583CA, (ulong)vehicle, *(uint*)&position); }
        internal static void ATTACH_VEHICLE_TO_TOW_TRUCK(Vehicle towTruck, Vehicle vehicle, BOOL rear, float hookOffsetX, float hookOffsetY, float hookOffsetZ) { NativeInvoker.Invoke(0x29A16F8D621C4508, (ulong)towTruck, (ulong)vehicle, (ulong)rear, *(uint*)&hookOffsetX, *(uint*)&hookOffsetY, *(uint*)&hookOffsetZ); }
        internal static void DETACH_VEHICLE_FROM_TOW_TRUCK(Vehicle towTruck, Vehicle vehicle) { NativeInvoker.Invoke(0xC2DB6B6708350ED8, (ulong)towTruck, (ulong)vehicle); }
        internal static BOOL DETACH_VEHICLE_FROM_ANY_TOW_TRUCK(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xD0E9CE05A1E68CD8, (ulong)vehicle); }
        internal static BOOL IS_VEHICLE_ATTACHED_TO_TOW_TRUCK(Vehicle towTruck, Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x146DF9EC4C4B9FD4, (ulong)towTruck, (ulong)vehicle); }
        internal static Entity GET_ENTITY_ATTACHED_TO_TOW_TRUCK(Vehicle towTruck) { return NativeInvoker.Invoke<Entity>(0xEFEA18DCF10F8F75, (ulong)towTruck); }
        internal static Any SET_VEHICLE_AUTOMATICALLY_ATTACHES(Vehicle vehicle, BOOL p1, Any p2) { return NativeInvoker.Invoke<Any>(0x8BA6F76BC53A1493, (ulong)vehicle, (ulong)p1, (ulong)p2); }
        internal static void SET_VEHICLE_BULLDOZER_ARM_POSITION(Vehicle vehicle, float position, BOOL p2) { NativeInvoker.Invoke(0xF8EBCCC96ADB9FB7, (ulong)vehicle, *(uint*)&position, (ulong)p2); }
        internal static void SET_VEHICLE_TANK_TURRET_POSITION(Vehicle vehicle, float position, BOOL p2) { NativeInvoker.Invoke(0x56B94C6D7127DFBA, (ulong)vehicle, *(uint*)&position, (ulong)p2); }
        internal static void N_0x0581730AB9380412(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { NativeInvoker.Invoke(0x0581730AB9380412, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static void N_0x737E398138550FFF(Any p0, Any p1) { NativeInvoker.Invoke(0x737E398138550FFF, (ulong)p0, (ulong)p1); }
        internal static void SET_VEHICLE_TURRET_SPEED_THIS_FRAME(Vehicle vehicle, float speed) { NativeInvoker.Invoke(0x1093408B4B9D1146, (ulong)vehicle, *(uint*)&speed); }
        internal static void DISABLE_VEHICLE_TURRET_MOVEMENT_THIS_FRAME_(Vehicle vehicle) { NativeInvoker.Invoke(0x32CAEDF24A583345, (ulong)vehicle); }
        internal static void SET_VEHICLE_FLIGHT_NOZZLE_POSITION(Vehicle vehicle, float angleRatio) { NativeInvoker.Invoke(0x30D779DE7C4F6DD3, (ulong)vehicle, *(uint*)&angleRatio); }
        internal static void SET_VEHICLE_FLIGHT_NOZZLE_POSITION_IMMEDIATE(Vehicle vehicle, float angle) { NativeInvoker.Invoke(0x9AA47FFF660CB932, (ulong)vehicle, *(uint*)&angle); }
        internal static float GET_VEHICLE_FLIGHT_NOZZLE_POSITION_(Vehicle plane) { return NativeInvoker.Invoke<float>(0xDA62027C8BDB326E, (ulong)plane); }
        internal static void SET_DISABLE_VEHICLE_FLIGHT_NOZZLE_POSITION_(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xCE2B43770B655F8F, (ulong)vehicle, (ulong)toggle); }
        internal static BOOL N_0xA4822F1CF23F4810(Vector3* outVec, Any p1, Vector3* outVec1, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8) { return NativeInvoker.Invoke<BOOL>(0xA4822F1CF23F4810, (ulong)outVec, (ulong)p1, (ulong)outVec1, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7, (ulong)p8); }
        internal static void SET_VEHICLE_BURNOUT(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xFB8794444A7D60FB, (ulong)vehicle, (ulong)toggle); }
        internal static BOOL IS_VEHICLE_IN_BURNOUT(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x1297A88E081430EB, (ulong)vehicle); }
        internal static void SET_VEHICLE_REDUCE_GRIP(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x222FF6A823D122E2, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_REDUCE_TRACTION_(Vehicle vehicle, int val) { NativeInvoker.Invoke(0x6DEE944E1EE90CFB, (ulong)vehicle, (ulong)val); }
        internal static void SET_VEHICLE_INDICATOR_LIGHTS(Vehicle vehicle, int turnSignal, BOOL toggle) { NativeInvoker.Invoke(0xB5D45264751B7DF0, (ulong)vehicle, (ulong)turnSignal, (ulong)toggle); }
        internal static void SET_VEHICLE_BRAKE_LIGHTS(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x92B35082E0B42F66, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_HANDBRAKE(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x684785568EF26A22, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_BRAKE(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xE4E2FD323574965C, (ulong)vehicle, (ulong)toggle); }
        internal static void INSTANTLY_FILL_VEHICLE_POPULATION() { NativeInvoker.Invoke(0x48ADC8A773564670); } // 0x48ADC8A773564670 0x37BC6ACB b323<, (ulong)48ADC8A773564670); }
        internal static BOOL HAS_FILLED_VEHICLE_POPULATION_() { return NativeInvoker.Invoke<BOOL>(0x91D6DD290888CBAB); } // 0x91D6DD290888CBAB 0x71D898EF b323, (ulong)91D6DD290888CBAB); }
        internal static void N_0x51DB102F4A3BA5E0(BOOL toggle) { NativeInvoker.Invoke(0x51DB102F4A3BA5E0, (ulong)toggle); }
        internal static void N_0xA4A9A4C40E615885(int p0) { NativeInvoker.Invoke(0xA4A9A4C40E615885, (ulong)p0); }
        internal static BOOL GET_VEHICLE_TRAILER_VEHICLE(Vehicle vehicle, Vehicle* trailer) { return NativeInvoker.Invoke<BOOL>(0x1CDD6BADC297830D, (ulong)vehicle, (ulong)trailer); }
        internal static void SET_VEHICLE_USES_LARGE_REAR_RAMP(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xCAC66558B944DA67, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_RUDDER_BROKEN(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x09606148B6C71DEF, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_CONVERTIBLE_ROOF_LATCH_STATE(Vehicle vehicle, BOOL state) { NativeInvoker.Invoke(0x1A78AD3D8240536F, (ulong)vehicle, (ulong)state); }
        internal static float GET_VEHICLE_ESTIMATED_MAX_SPEED(Vehicle vehicle) { return NativeInvoker.Invoke<float>(0x53AF99BAA671CA47, (ulong)vehicle); }
        internal static float GET_VEHICLE_MAX_BRAKING(Vehicle vehicle) { return NativeInvoker.Invoke<float>(0xAD7E85FC227197C4, (ulong)vehicle); }
        internal static float GET_VEHICLE_MAX_TRACTION(Vehicle vehicle) { return NativeInvoker.Invoke<float>(0xA132FB5370554DB0, (ulong)vehicle); }
        internal static float GET_VEHICLE_ACCELERATION(Vehicle vehicle) { return NativeInvoker.Invoke<float>(0x5DD35C8D074E57AE, (ulong)vehicle); }
        internal static float GET_VEHICLE_MODEL_ESTIMATED_MAX_SPEED(Hash modelHash) { return NativeInvoker.Invoke<float>(0xF417C2502FFFED43, (ulong)modelHash); }
        internal static float GET_VEHICLE_MODEL_MAX_BRAKING(Hash modelHash) { return NativeInvoker.Invoke<float>(0xDC53FD41B4ED944C, (ulong)modelHash); }
        internal static float GET_VEHICLE_MODEL_MAX_BRAKING_MAX_MODS(Hash modelHash) { return NativeInvoker.Invoke<float>(0xBFBA3BA79CFF7EBF, (ulong)modelHash); }
        internal static float GET_VEHICLE_MODEL_MAX_TRACTION(Hash modelHash) { return NativeInvoker.Invoke<float>(0x539DE94D44FDFD0D, (ulong)modelHash); }
        internal static float GET_VEHICLE_MODEL_ACCELERATION(Hash modelHash) { return NativeInvoker.Invoke<float>(0x8C044C5C84505B6A, (ulong)modelHash); }
        internal static float GET_VEHICLE_MODEL_ESTIMATED_AGILITY_(Hash modelHash) { return NativeInvoker.Invoke<float>(0x53409B5163D5B846, (ulong)modelHash); }
        internal static float GET_VEHICLE_MODEL_MAX_KNOTS_(Hash modelHash) { return NativeInvoker.Invoke<float>(0xC6AD107DDC9054CC, (ulong)modelHash); }
        internal static float GET_VEHICLE_MODEL_MOVE_RESISTANCE_(Hash modelHash) { return NativeInvoker.Invoke<float>(0x5AA3F878A178C4FC, (ulong)modelHash); }
        internal static float GET_VEHICLE_CLASS_ESTIMATED_MAX_SPEED(int vehicleClass) { return NativeInvoker.Invoke<float>(0x00C09F246ABEDD82, (ulong)vehicleClass); }
        internal static float GET_VEHICLE_CLASS_MAX_TRACTION(int vehicleClass) { return NativeInvoker.Invoke<float>(0xDBC86D85C5059461, (ulong)vehicleClass); }
        internal static float GET_VEHICLE_CLASS_MAX_AGILITY(int vehicleClass) { return NativeInvoker.Invoke<float>(0x4F930AD022D6DE3B, (ulong)vehicleClass); }
        internal static float GET_VEHICLE_CLASS_MAX_ACCELERATION(int vehicleClass) { return NativeInvoker.Invoke<float>(0x2F83E7E45D9EA7AE, (ulong)vehicleClass); }
        internal static float GET_VEHICLE_CLASS_MAX_BRAKING(int vehicleClass) { return NativeInvoker.Invoke<float>(0x4BF54C16EC8FEC03, (ulong)vehicleClass); }
        internal static int ADD_ROAD_NODE_SPEED_ZONE(float x, float y, float z, float radius, float speed, BOOL p5) { return NativeInvoker.Invoke<int>(0x2CE544C68FB812A0, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, *(uint*)&speed, (ulong)p5); }
        internal static BOOL REMOVE_ROAD_NODE_SPEED_ZONE(int speedzone) { return NativeInvoker.Invoke<BOOL>(0x1033371FC8E842A7, (ulong)speedzone); }
        internal static void OPEN_BOMB_BAY_DOORS(Vehicle vehicle) { NativeInvoker.Invoke(0x87E7F24270732CB1, (ulong)vehicle); }
        internal static void CLOSE_BOMB_BAY_DOORS(Vehicle vehicle) { NativeInvoker.Invoke(0x3556041742A0DC74, (ulong)vehicle); }
        internal static BOOL ARE_BOMB_BAY_DOORS_OPEN_(Vehicle aircraft) { return NativeInvoker.Invoke<BOOL>(0xD0917A423314BBA8, (ulong)aircraft); }
        internal static BOOL IS_VEHICLE_SEARCHLIGHT_ON(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xC0F97FCE55094987, (ulong)vehicle); }
        internal static void SET_VEHICLE_SEARCHLIGHT(Vehicle heli, BOOL toggle, BOOL canBeUsedByAI) { NativeInvoker.Invoke(0x14E85C5EE7A4D542, (ulong)heli, (ulong)toggle, (ulong)canBeUsedByAI); }
        internal static BOOL DOES_VEHICLE_HAVE_SEARCHLIGHT_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x99015ED7DBEA5113, (ulong)vehicle); }
        internal static BOOL IS_VEHICLE_SEAT_ACCESSIBLE_(Ped ped, Vehicle vehicle, int seatIndex, BOOL side, BOOL onEnter) { return NativeInvoker.Invoke<BOOL>(0x639431E895B9AA57, (ulong)ped, (ulong)vehicle, (ulong)seatIndex, (ulong)side, (ulong)onEnter); }
        internal static Vector3 GET_ENTRY_POSITION_OF_DOOR_(Vehicle vehicle, int doorId) { return NativeInvoker.Invoke<Vector3>(0xC0572928C0ABFDA3, (ulong)vehicle, (ulong)doorId); }
        internal static BOOL CAN_SHUFFLE_SEAT(Vehicle vehicle, int seatIndex) { return NativeInvoker.Invoke<BOOL>(0x30785D90C956BF35, (ulong)vehicle, (ulong)seatIndex); }
        internal static int GET_NUM_MOD_KITS(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x33F2E3FE70EAAE1D, (ulong)vehicle); }
        internal static void SET_VEHICLE_MOD_KIT(Vehicle vehicle, int modKit) { NativeInvoker.Invoke(0x1F2AA07F00B3217A, (ulong)vehicle, (ulong)modKit); }
        internal static int GET_VEHICLE_MOD_KIT(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x6325D1A044AE510D, (ulong)vehicle); }
        internal static int GET_VEHICLE_MOD_KIT_TYPE(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0xFC058F5121E54C32, (ulong)vehicle); }
        internal static int GET_VEHICLE_WHEEL_TYPE(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0xB3ED1BFB4BE636DC, (ulong)vehicle); }
        internal static void SET_VEHICLE_WHEEL_TYPE(Vehicle vehicle, int WheelType) { NativeInvoker.Invoke(0x487EB21CC7295BA1, (ulong)vehicle, (ulong)WheelType); }
        internal static int GET_NUM_MOD_COLORS(int paintType, BOOL p1) { return NativeInvoker.Invoke<int>(0xA551BE18C11A476D, (ulong)paintType, (ulong)p1); }
        internal static void SET_VEHICLE_MOD_COLOR_1(Vehicle vehicle, int paintType, int color, int pearlescentColor) { NativeInvoker.Invoke(0x43FEB945EE7F85B8, (ulong)vehicle, (ulong)paintType, (ulong)color, (ulong)pearlescentColor); }
        internal static void SET_VEHICLE_MOD_COLOR_2(Vehicle vehicle, int paintType, int color) { NativeInvoker.Invoke(0x816562BADFDEC83E, (ulong)vehicle, (ulong)paintType, (ulong)color); }
        internal static void GET_VEHICLE_MOD_COLOR_1(Vehicle vehicle, int* paintType, int* color, int* pearlescentColor) { NativeInvoker.Invoke(0xE8D65CA700C9A693, (ulong)vehicle, (ulong)paintType, (ulong)color, (ulong)pearlescentColor); }
        internal static void GET_VEHICLE_MOD_COLOR_2(Vehicle vehicle, int* paintType, int* color) { NativeInvoker.Invoke(0x81592BE4E3878728, (ulong)vehicle, (ulong)paintType, (ulong)color); }
        internal static char* GET_VEHICLE_MOD_COLOR_1_NAME(Vehicle vehicle, BOOL p1) { return (char*)NativeInvoker.Invoke<IntPtr>(0xB45085B721EFD38C, (ulong)vehicle, (ulong)p1); }
        internal static char* GET_VEHICLE_MOD_COLOR_2_NAME(Vehicle vehicle) { return (char*)NativeInvoker.Invoke<IntPtr>(0x4967A516ED23A5A1, (ulong)vehicle); }
        internal static BOOL HAVE_VEHICLE_MODS_STREAMED_IN(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x9A83F5F9963775EF, (ulong)vehicle); }
        internal static void SET_VEHICLE_MOD(Vehicle vehicle, int modType, int modIndex, BOOL customTires) { NativeInvoker.Invoke(0x6AF0636DDEDCB6DD, (ulong)vehicle, (ulong)modType, (ulong)modIndex, (ulong)customTires); }
        internal static int GET_VEHICLE_MOD(Vehicle vehicle, int modType) { return NativeInvoker.Invoke<int>(0x772960298DA26FDB, (ulong)vehicle, (ulong)modType); }
        internal static BOOL GET_VEHICLE_MOD_VARIATION(Vehicle vehicle, int modType) { return NativeInvoker.Invoke<BOOL>(0xB3924ECD70E095DC, (ulong)vehicle, (ulong)modType); }
        internal static int GET_NUM_VEHICLE_MODS(Vehicle vehicle, int modType) { return NativeInvoker.Invoke<int>(0xE38E9162A2500646, (ulong)vehicle, (ulong)modType); }
        internal static void REMOVE_VEHICLE_MOD(Vehicle vehicle, int modType) { NativeInvoker.Invoke(0x92D619E420858204, (ulong)vehicle, (ulong)modType); }
        internal static void TOGGLE_VEHICLE_MOD(Vehicle vehicle, int modType, BOOL toggle) { NativeInvoker.Invoke(0x2A1F4F37F95BAD08, (ulong)vehicle, (ulong)modType, (ulong)toggle); }
        internal static BOOL IS_TOGGLE_MOD_ON(Vehicle vehicle, int modType) { return NativeInvoker.Invoke<BOOL>(0x84B233A8C8FC8AE7, (ulong)vehicle, (ulong)modType); }
        internal static char* GET_MOD_TEXT_LABEL(Vehicle vehicle, int modType, int modValue) { return (char*)NativeInvoker.Invoke<IntPtr>(0x8935624F8C5592CC, (ulong)vehicle, (ulong)modType, (ulong)modValue); }
        internal static char* GET_MOD_SLOT_NAME(Vehicle vehicle, int modType) { return (char*)NativeInvoker.Invoke<IntPtr>(0x51F0FEB9F6AE98C0, (ulong)vehicle, (ulong)modType); }
        internal static char* GET_LIVERY_NAME(Vehicle vehicle, int liveryIndex) { return (char*)NativeInvoker.Invoke<IntPtr>(0xB4C7A93837C91A1F, (ulong)vehicle, (ulong)liveryIndex); }
        internal static int GET_VEHICLE_MOD_MODIFIER_VALUE(Vehicle vehicle, int modType, int modIndex) { return NativeInvoker.Invoke<int>(0x90A38E9838E0A8C1, (ulong)vehicle, (ulong)modType, (ulong)modIndex); }
        internal static Hash GET_VEHICLE_MOD_IDENTIFIER_HASH(Vehicle vehicle, int modType, int modIndex) { return NativeInvoker.Invoke<Hash>(0x4593CF82AA179706, (ulong)vehicle, (ulong)modType, (ulong)modIndex); }
        internal static void PRELOAD_VEHICLE_MOD(Any p0, int modType, Any p2) { NativeInvoker.Invoke(0x758F49C24925568A, (ulong)p0, (ulong)modType, (ulong)p2); }
        internal static BOOL HAS_PRELOAD_MODS_FINISHED(Any p0) { return NativeInvoker.Invoke<BOOL>(0x06F43E5175EB6D96, (ulong)p0); }
        internal static void RELEASE_PRELOAD_MODS(Vehicle vehicle) { NativeInvoker.Invoke(0x445D79F995508307, (ulong)vehicle); }
        internal static void SET_VEHICLE_TYRE_SMOKE_COLOR(Vehicle vehicle, int r, int g, int b) { NativeInvoker.Invoke(0xB5BA80F839791C0F, (ulong)vehicle, (ulong)r, (ulong)g, (ulong)b); }
        internal static void GET_VEHICLE_TYRE_SMOKE_COLOR(Vehicle vehicle, int* r, int* g, int* b) { NativeInvoker.Invoke(0xB635392A4938B3C3, (ulong)vehicle, (ulong)r, (ulong)g, (ulong)b); }
        internal static void SET_VEHICLE_WINDOW_TINT(Vehicle vehicle, int tint) { NativeInvoker.Invoke(0x57C51E6BAD752696, (ulong)vehicle, (ulong)tint); }
        internal static int GET_VEHICLE_WINDOW_TINT(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x0EE21293DAD47C95, (ulong)vehicle); }
        internal static int GET_NUM_VEHICLE_WINDOW_TINTS() { return NativeInvoker.Invoke<int>(0x9D1224004B3A6707); } // 0x9D1224004B3A6707 0x625C7B66 b323, (ulong)9D1224004B3A6707); }
        internal static void GET_VEHICLE_COLOR(Vehicle vehicle, int* r, int* g, int* b) { NativeInvoker.Invoke(0xF3CC740D36221548, (ulong)vehicle, (ulong)r, (ulong)g, (ulong)b); }
        internal static int N_0xEEBFC7A7EFDC35B4(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0xEEBFC7A7EFDC35B4, (ulong)vehicle); }
        internal static Hash GET_VEHICLE_CAUSE_OF_DESTRUCTION(Vehicle vehicle) { return NativeInvoker.Invoke<Hash>(0xE495D1EF4C91FD20, (ulong)vehicle); }
        internal static void N_0x5EE5632F47AE9695(Vehicle vehicle, float health) { NativeInvoker.Invoke(0x5EE5632F47AE9695, (ulong)vehicle, *(uint*)&health); }
        internal static BOOL GET_IS_LEFT_VEHICLE_HEADLIGHT_DAMAGED(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x5EF77C9ADD3B11A3, (ulong)vehicle); }
        internal static BOOL GET_IS_RIGHT_VEHICLE_HEADLIGHT_DAMAGED(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xA7ECB73355EB2F20, (ulong)vehicle); }
        internal static BOOL IS_VEHICLE_ENGINE_ON_FIRE_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xEC69ADF931AAE0C3, (ulong)vehicle); }
        internal static void MODIFY_VEHICLE_TOP_SPEED(Vehicle vehicle, float value) { NativeInvoker.Invoke(0x93A3996368C94158, (ulong)vehicle, *(uint*)&value); }
        internal static void SET_VEHICLE_MAX_SPEED_(Vehicle vehicle, float speed) { NativeInvoker.Invoke(0xBAA045B4E42F3C06, (ulong)vehicle, *(uint*)&speed); }
        internal static void N_0x1CF38D529D7441D9(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x1CF38D529D7441D9, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0x1F9FB66F3A3842D2(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0x1F9FB66F3A3842D2, (ulong)vehicle, (ulong)p1); }
        internal static void N_0x59C3757B3B7408E8(Vehicle vehicle, BOOL toggle, float p2) { NativeInvoker.Invoke(0x59C3757B3B7408E8, (ulong)vehicle, (ulong)toggle, *(uint*)&p2); }
        internal static Any ADD_VEHICLE_COMBAT_ANGLED_AVOIDANCE_AREA(float p0, float p1, float p2, float p3, float p4, float p5, float p6) { return NativeInvoker.Invoke<Any>(0x54B0F614960F4A5F, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6); }
        internal static void REMOVE_VEHICLE_COMBAT_AVOIDANCE_AREA(Any p0) { NativeInvoker.Invoke(0xE30524E1871F481D, (ulong)p0); }
        internal static BOOL IS_ANY_PED_RAPPELLING_FROM_HELI(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x291E373D483E7EE7, (ulong)vehicle); }
        internal static void SET_VEHICLE_CHEAT_POWER_INCREASE(Vehicle vehicle, float value) { NativeInvoker.Invoke(0xB59E4BD37AE292DB, (ulong)vehicle, *(uint*)&value); }
        internal static void N_0x0AD9E8F87FF7C16F(Any p0, BOOL p1) { NativeInvoker.Invoke(0x0AD9E8F87FF7C16F, (ulong)p0, (ulong)p1); }
        internal static void SET_VEHICLE_IS_WANTED(Vehicle vehicle, BOOL state) { NativeInvoker.Invoke(0xF7EC25A3EBEEC726, (ulong)vehicle, (ulong)state); }
        internal static void SET_BOAT_BOOM_POSITION_RATIO_(Vehicle vehicle, float ratio) { NativeInvoker.Invoke(0xF488C566413B4232, (ulong)vehicle, *(uint*)&ratio); }
        internal static void GET_BOAT_BOOM_POSITION_RATIO_2_(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0xC1F981A6F74F0C23, (ulong)vehicle, (ulong)p1); }
        internal static void GET_BOAT_BOOM_POSITION_RATIO_3_(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0x0F3B4D4E43177236, (ulong)vehicle, (ulong)p1); }
        internal static float GET_BOAT_BOOM_POSITION_RATIO(Vehicle vehicle) { return NativeInvoker.Invoke<float>(0x6636C535F6CC2725, (ulong)vehicle); }
        internal static void DISABLE_PLANE_AILERON(Vehicle vehicle, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x23428FC53C60919C, (ulong)vehicle, (ulong)p1, (ulong)p2); }
        internal static BOOL GET_IS_VEHICLE_ENGINE_RUNNING(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xAE31E7DF9B5B132E, (ulong)vehicle); }
        internal static void SET_VEHICLE_USE_ALTERNATE_HANDLING(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x1D97D1E3A70A649F, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_BIKE_ON_STAND(Vehicle vehicle, float x, float y) { NativeInvoker.Invoke(0x9CFA4896C3A53CBB, (ulong)vehicle, *(uint*)&x, *(uint*)&y); }
        internal static void N_0xAB04325045427AAE(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0xAB04325045427AAE, (ulong)vehicle, (ulong)p1); }
        internal static void N_0xCFD778E7904C255E(Vehicle vehicle) { NativeInvoker.Invoke(0xCFD778E7904C255E, (ulong)vehicle); }
        internal static void SET_LAST_DRIVEN_VEHICLE(Vehicle vehicle) { NativeInvoker.Invoke(0xACFB2463CC22BED2, (ulong)vehicle); }
        internal static Vehicle GET_LAST_DRIVEN_VEHICLE() { return NativeInvoker.Invoke<Vehicle>(0xB2D06FAEDE65B577); } // 0xB2D06FAEDE65B577 0xFEB0C0C8 b323, (ulong)B2D06FAEDE65B577); }
        internal static void CLEAR_LAST_DRIVEN_VEHICLE() { NativeInvoker.Invoke(0xE01903C47C7AC89E); } // 0xE01903C47C7AC89E 0x07186AD9 b323<, (ulong)E01903C47C7AC89E); }
        internal static void SET_VEHICLE_HAS_BEEN_DRIVEN_FLAG(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x02398B627547189C, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_TASK_VEHICLE_GOTO_PLANE_MIN_HEIGHT_ABOVE_TERRAIN(Vehicle plane, int height) { NativeInvoker.Invoke(0xB893215D8D4C015B, (ulong)plane, (ulong)height); }
        internal static void SET_VEHICLE_LOD_MULTIPLIER(Vehicle vehicle, float multiplier) { NativeInvoker.Invoke(0x93AE6A61BE015BF1, (ulong)vehicle, *(uint*)&multiplier); }
        internal static void SET_VEHICLE_CAN_SAVE_IN_GARAGE(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x428BACCDF5E26EAD, (ulong)vehicle, (ulong)toggle); }
        internal static int GET_VEHICLE_NUMBER_OF_BROKEN_OFF_BONES_(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x42A4BEB35D372407, (ulong)vehicle); }
        internal static int GET_VEHICLE_NUMBER_OF_BROKEN_BONES_(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x2C8CBFE1EA5FC631, (ulong)vehicle); }
        internal static void N_0x4D9D109F63FEE1D4(Any p0, BOOL p1) { NativeInvoker.Invoke(0x4D9D109F63FEE1D4, (ulong)p0, (ulong)p1); }
        internal static void SET_VEHICLE_GENERATES_ENGINE_SHOCKING_EVENTS(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x279D50DE5652D935, (ulong)vehicle, (ulong)toggle); }
        internal static void COPY_VEHICLE_DAMAGES(Vehicle sourceVehicle, Vehicle targetVehicle) { NativeInvoker.Invoke(0xE44A982368A4AF23, (ulong)sourceVehicle, (ulong)targetVehicle); }
        internal static void N_0xF25E02CB9C5818F8() { NativeInvoker.Invoke(0xF25E02CB9C5818F8); } // 0xF25E02CB9C5818F8 0xF0E59BC1 b323<, (ulong)F25E02CB9C5818F8); }
        internal static void SET_LIGHTS_CUTOFF_DISTANCE_TWEAK(float distance) { NativeInvoker.Invoke(0xBC3CCA5844452B06, *(uint*)&distance); }
        internal static void SET_VEHICLE_SHOOT_AT_TARGET(Ped driver, Entity entity, float xTarget, float yTarget, float zTarget) { NativeInvoker.Invoke(0x74CD9A9327A282EA, (ulong)driver, (ulong)entity, *(uint*)&xTarget, *(uint*)&yTarget, *(uint*)&zTarget); }
        internal static BOOL GET_VEHICLE_LOCK_ON_TARGET(Vehicle vehicle, Entity* entity) { return NativeInvoker.Invoke<BOOL>(0x8F5EBAB1F260CFCE, (ulong)vehicle, (ulong)entity); }
        internal static void SET_FORCE_HD_VEHICLE(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x97CE68CB032583F0, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0x182F266C2D9E2BEB(Vehicle vehicle, float p1) { NativeInvoker.Invoke(0x182F266C2D9E2BEB, (ulong)vehicle, *(uint*)&p1); }
        internal static int GET_VEHICLE_PLATE_TYPE(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x9CCC9525BF2408E0, (ulong)vehicle); }
        internal static void TRACK_VEHICLE_VISIBILITY(Vehicle vehicle) { NativeInvoker.Invoke(0x64473AEFDCF47DCA, (ulong)vehicle); }
        internal static BOOL IS_VEHICLE_VISIBLE(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xAA0A52D24FB98293, (ulong)vehicle); }
        internal static void SET_VEHICLE_GRAVITY(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x89F149B6131E57DA, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_ENABLE_VEHICLE_SLIPSTREAMING(BOOL toggle) { NativeInvoker.Invoke(0xE6C0C80B8C867537, (ulong)toggle); }
        internal static void N_0xF051D9BFB6BA39C0(Any p0) { NativeInvoker.Invoke(0xF051D9BFB6BA39C0, (ulong)p0); }
        internal static float GET_VEHICLE_CURRENT_SLIPSTREAM_DRAFT_(Vehicle vehicle) { return NativeInvoker.Invoke<float>(0x36492C2F0D134C56, (ulong)vehicle); }
        internal static BOOL IS_VEHICLE_SLIPSTREAM_LEADER_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x48C633E94A8142A7, (ulong)vehicle); }
        internal static void SET_VEHICLE_INACTIVE_DURING_PLAYBACK(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x06582AFF74894C75, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_ACTIVE_DURING_PLAYBACK(Any p0, BOOL p1) { NativeInvoker.Invoke(0xDFFCEF48E511DB48, (ulong)p0, (ulong)p1); }
        internal static BOOL IS_VEHICLE_SPRAYABLE(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x8D474C8FAEFF6CDE, (ulong)vehicle); }
        internal static void SET_VEHICLE_ENGINE_CAN_DEGRADE(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x983765856F2564F9, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_SHADOW_EFFECT_(Vehicle vehicle, int p1, int p2) { NativeInvoker.Invoke(0xF0E4BA16D1DB546C, (ulong)vehicle, (ulong)p1, (ulong)p2); }
        internal static void REMOVE_VEHICLE_SHADOW_EFFECT_(Vehicle vehicle) { NativeInvoker.Invoke(0xF87D9F2301F7D206, (ulong)vehicle); }
        internal static BOOL IS_PLANE_LANDING_GEAR_INTACT(Vehicle plane) { return NativeInvoker.Invoke<BOOL>(0x4198AB0022B15F87, (ulong)plane); }
        internal static BOOL ARE_PLANE_PROPELLERS_INTACT(Vehicle plane) { return NativeInvoker.Invoke<BOOL>(0x755D6D5267CBBD7E, (ulong)plane); }
        internal static void SET_PLANE_PROPELLERS_HEALTH_(Vehicle plane, float health) { NativeInvoker.Invoke(0x4C815EB175086F84, (ulong)plane, *(uint*)&health); }
        internal static void SET_VEHICLE_CAN_DEFORM_WHEELS(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x0CDDA42F9E360CA6, (ulong)vehicle, (ulong)toggle); }
        internal static BOOL IS_VEHICLE_STOLEN(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x4AF9BD80EEBEB453, (ulong)vehicle); }
        internal static void SET_VEHICLE_IS_STOLEN(Vehicle vehicle, BOOL isStolen) { NativeInvoker.Invoke(0x67B2C79AA7FF5738, (ulong)vehicle, (ulong)isStolen); }
        internal static void SET_PLANE_TURBULENCE_MULTIPLIER(Vehicle vehicle, float multiplier) { NativeInvoker.Invoke(0xAD2D28A1AFDFF131, (ulong)vehicle, *(uint*)&multiplier); }
        internal static BOOL ARE_PLANE_WINGS_INTACT_(Vehicle plane) { return NativeInvoker.Invoke<BOOL>(0x5991A01434CE9677, (ulong)plane); }
        internal static void N_0xB264C4D2F2B0A78B(Vehicle vehicle) { NativeInvoker.Invoke(0xB264C4D2F2B0A78B, (ulong)vehicle); }
        internal static void DETACH_VEHICLE_FROM_CARGOBOB(Vehicle vehicle, Vehicle cargobob) { NativeInvoker.Invoke(0x0E21D3DF1051399D, (ulong)vehicle, (ulong)cargobob); }
        internal static BOOL DETACH_VEHICLE_FROM_ANY_CARGOBOB(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xADF7BE450512C12F, (ulong)vehicle); }
        internal static Any DETACH_ENTITY_FROM_CARGOBOB_(Vehicle cargobob, Entity entity) { return NativeInvoker.Invoke<Any>(0xAF03011701811146, (ulong)cargobob, (ulong)entity); }
        internal static BOOL IS_VEHICLE_ATTACHED_TO_CARGOBOB(Vehicle cargobob, Vehicle vehicleAttached) { return NativeInvoker.Invoke<BOOL>(0xD40148F22E81A1D9, (ulong)cargobob, (ulong)vehicleAttached); }
        internal static Vehicle GET_VEHICLE_ATTACHED_TO_CARGOBOB(Vehicle cargobob) { return NativeInvoker.Invoke<Vehicle>(0x873B82D42AC2B9E5, (ulong)cargobob); }
        internal static Any GET_ENTITY_ATTACHED_TO_CARGOBOB_(Any p0) { return NativeInvoker.Invoke<Any>(0x99093F60746708CA, (ulong)p0); }
        internal static void ATTACH_VEHICLE_TO_CARGOBOB(Vehicle vehicle, Vehicle cargobob, int p2, float x, float y, float z) { NativeInvoker.Invoke(0x4127F1D84E347769, (ulong)vehicle, (ulong)cargobob, (ulong)p2, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void ATTACH_ENTITY_TO_CARGOBOB_(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5) { NativeInvoker.Invoke(0xA1DD82F3CCF9A01E, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5); }
        internal static void SET_CARGOBOB_HOOK_CAN_DETACH_(Vehicle cargobob, BOOL toggle) { NativeInvoker.Invoke(0x571FEB383F629926, (ulong)cargobob, (ulong)toggle); }
        internal static void N_0x1F34B0626C594380(Any p0, Any p1) { NativeInvoker.Invoke(0x1F34B0626C594380, (ulong)p0, (ulong)p1); }
        internal static Any N_0x2C1D8B3B19E517CC(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0x2C1D8B3B19E517CC, (ulong)p0, (ulong)p1); }
        internal static Vector3 GET_CARGOBOB_HOOK_POSITION_(Vehicle cargobob) { return NativeInvoker.Invoke<Vector3>(0xCBDB9B923CACC92D, (ulong)cargobob); }
        internal static BOOL DOES_CARGOBOB_HAVE_PICK_UP_ROPE(Vehicle cargobob) { return NativeInvoker.Invoke<BOOL>(0x1821D91AD4B56108, (ulong)cargobob); }
        internal static void CREATE_PICK_UP_ROPE_FOR_CARGOBOB(Vehicle cargobob, int state) { NativeInvoker.Invoke(0x7BEB0C7A235F6F3B, (ulong)cargobob, (ulong)state); }
        internal static void REMOVE_PICK_UP_ROPE_FOR_CARGOBOB(Vehicle cargobob) { NativeInvoker.Invoke(0x9768CF648F54C804, (ulong)cargobob); }
        internal static void SET_PICKUP_ROPE_LENGTH_FOR_CARGOBOB(Vehicle cargobob, float length1, float length2, BOOL p3) { NativeInvoker.Invoke(0x877C1EAEAC531023, (ulong)cargobob, *(uint*)&length1, *(uint*)&length2, (ulong)p3); }
        internal static void N_0xC0ED6438E6D39BA8(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0xC0ED6438E6D39BA8, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void SET_CARGOBOB_PICKUP_ROPE_DAMPING_MULTIPLIER(Any p0, Any p1) { NativeInvoker.Invoke(0xCF1182F682F65307, (ulong)p0, (ulong)p1); }
        internal static void SET_CARGOBOB_PICKUP_ROPE_TYPE(Any p0, Any p1) { NativeInvoker.Invoke(0x0D5F65A8F4EBDAB5, (ulong)p0, (ulong)p1); }
        internal static BOOL DOES_CARGOBOB_HAVE_PICKUP_MAGNET(Vehicle cargobob) { return NativeInvoker.Invoke<BOOL>(0x6E08BF5B3722BAC9, (ulong)cargobob); }
        internal static void SET_CARGOBOB_PICKUP_MAGNET_ACTIVE(Vehicle cargobob, BOOL isActive) { NativeInvoker.Invoke(0x9A665550F8DA349B, (ulong)cargobob, (ulong)isActive); }
        internal static void SET_CARGOBOB_PICKUP_MAGNET_STRENGTH(Vehicle cargobob, float strength) { NativeInvoker.Invoke(0xBCBFCD9D1DAC19E2, (ulong)cargobob, *(uint*)&strength); }
        internal static void SET_CARGOBOB_PICKUP_MAGNET_EFFECT_RADIUS(Vehicle cargobob, float p1) { NativeInvoker.Invoke(0xA17BAD153B51547E, (ulong)cargobob, *(uint*)&p1); }
        internal static void SET_CARGOBOB_PICKUP_MAGNET_REDUCED_FALLOFF(Vehicle cargobob, float p1) { NativeInvoker.Invoke(0x66979ACF5102FD2F, (ulong)cargobob, *(uint*)&p1); }
        internal static void SET_CARGOBOB_PICKUP_MAGNET_PULL_ROPE_LENGTH(Vehicle cargobob, float p1) { NativeInvoker.Invoke(0x6D8EAC07506291FB, (ulong)cargobob, *(uint*)&p1); }
        internal static void SET_CARGOBOB_PICKUP_MAGNET_PULL_STRENGTH(Vehicle cargobob, float p1) { NativeInvoker.Invoke(0xED8286F71A819BAA, (ulong)cargobob, *(uint*)&p1); }
        internal static void SET_CARGOBOB_PICKUP_MAGNET_FALLOFF(Vehicle vehicle, float p1) { NativeInvoker.Invoke(0x685D5561680D088B, (ulong)vehicle, *(uint*)&p1); }
        internal static void SET_CARGOBOB_PICKUP_MAGNET_REDUCED_STRENGTH(Vehicle vehicle, Vehicle cargobob) { NativeInvoker.Invoke(0xE301BD63E9E13CF0, (ulong)vehicle, (ulong)cargobob); }
        internal static void N_0x9BDDC73CC6A115D4(Vehicle vehicle, BOOL p1, BOOL p2) { NativeInvoker.Invoke(0x9BDDC73CC6A115D4, (ulong)vehicle, (ulong)p1, (ulong)p2); }
        internal static void N_0x56EB5E94318D3FB6(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0x56EB5E94318D3FB6, (ulong)vehicle, (ulong)p1); }
        internal static BOOL DOES_VEHICLE_HAVE_WEAPONS(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x25ECB9F8017D98E0, (ulong)vehicle); }
        internal static void N_0x2C4A1590ABF43E8B(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0x2C4A1590ABF43E8B, (ulong)vehicle, (ulong)p1); }
        internal static void DISABLE_VEHICLE_WEAPON(BOOL disabled, Hash weaponHash, Vehicle vehicle, Ped owner) { NativeInvoker.Invoke(0xF4FC6A6F67D8D856, (ulong)disabled, (ulong)weaponHash, (ulong)vehicle, (ulong)owner); }
        internal static BOOL IS_VEHICLE_WEAPON_DISABLED_(Hash weaponHash, Vehicle vehicle, Ped owner) { return NativeInvoker.Invoke<BOOL>(0x563B65A643ED072E, (ulong)weaponHash, (ulong)vehicle, (ulong)owner); }
        internal static void N_0xE05DD0E9707003A3(Any p0, BOOL p1) { NativeInvoker.Invoke(0xE05DD0E9707003A3, (ulong)p0, (ulong)p1); }
        internal static void SET_VEHICLE_ACTIVE_FOR_PED_NAVIGATION(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x21115BCD6E44656A, (ulong)vehicle, (ulong)toggle); }
        internal static int GET_VEHICLE_CLASS(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x29439776AAA00A62, (ulong)vehicle); }
        internal static int GET_VEHICLE_CLASS_FROM_NAME(Hash modelHash) { return NativeInvoker.Invoke<int>(0xDEDF1C8BD47C2200, (ulong)modelHash); }
        internal static void SET_PLAYERS_LAST_VEHICLE(Vehicle vehicle) { NativeInvoker.Invoke(0xBCDF8BAF56C87B6A, (ulong)vehicle); }
        internal static void SET_VEHICLE_CAN_BE_USED_BY_FLEEING_PEDS(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x300504B23BD3B711, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0xE5810AC70602F2F5(Vehicle vehicle, float p1) { NativeInvoker.Invoke(0xE5810AC70602F2F5, (ulong)vehicle, *(uint*)&p1); }
        internal static void SET_VEHICLE_DROPS_MONEY_WHEN_BLOWN_UP(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x068F64F2470F9656, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_JET_ENGINE_ON_(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xB8FBC8B1330CA9B4, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0x6A973569BA094650(Vehicle vehicle, Any p1) { NativeInvoker.Invoke(0x6A973569BA094650, (ulong)vehicle, (ulong)p1); }
        internal static void SET_VEHICLE_HANDLING_HASH_FOR_AI_(Vehicle vehicle, Hash hash) { NativeInvoker.Invoke(0x10655FAB9915623D, (ulong)vehicle, (ulong)hash); }
        internal static void SET_VEHICLE_EXTENDED_REMOVAL_RANGE(Vehicle vehicle, int range) { NativeInvoker.Invoke(0x79DF7E806202CE01, (ulong)vehicle, (ulong)range); }
        internal static void SET_VEHICLE_STEERING_BIAS_SCALAR(Any p0, float p1) { NativeInvoker.Invoke(0x9007A2F21DC108D4, (ulong)p0, *(uint*)&p1); }
        internal static void SET_HELICOPTER_ROLL_PITCH_YAW_MULT_(Vehicle helicopter, float multiplier) { NativeInvoker.Invoke(0x6E0859B530A365CC, (ulong)helicopter, *(uint*)&multiplier); }
        internal static void SET_VEHICLE_FRICTION_OVERRIDE(Vehicle vehicle, float friction) { NativeInvoker.Invoke(0x1837AF7C627009BA, (ulong)vehicle, *(uint*)&friction); }
        internal static void SET_VEHICLE_WHEELS_CAN_BREAK_OFF_WHEN_BLOW_UP(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xA37B9A517B133349, (ulong)vehicle, (ulong)toggle); }
        internal static BOOL N_0xF78F94D60248C737(Vehicle vehicle, BOOL p1) { return NativeInvoker.Invoke<BOOL>(0xF78F94D60248C737, (ulong)vehicle, (ulong)p1); }
        internal static void SET_VEHICLE_CEILING_HEIGHT(Vehicle vehicle, float height) { NativeInvoker.Invoke(0xA46413066687A328, (ulong)vehicle, *(uint*)&height); }
        internal static void N_0x5E569EC46EC21CAE(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x5E569EC46EC21CAE, (ulong)vehicle, (ulong)toggle); }
        internal static void CLEAR_VEHICLE_ROUTE_HISTORY(Vehicle vehicle) { NativeInvoker.Invoke(0x6D6AF961B72728AE, (ulong)vehicle); }
        internal static BOOL DOES_VEHICLE_EXIST_WITH_DECORATOR(char* decorator) { return NativeInvoker.Invoke<BOOL>(0x956B409B984D9BF7, (ulong)decorator); }
        internal static void N_0x41062318F23ED854(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x41062318F23ED854, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_EXCLUSIVE_DRIVER(Vehicle vehicle, Ped ped, int index) { NativeInvoker.Invoke(0xB5C51B5502E85E83, (ulong)vehicle, (ulong)ped, (ulong)index); }
        internal static BOOL IS_PED_EXCLUSIVE_DRIVER_OF_VEHICLE_(Ped ped, Vehicle vehicle, int* outIndex) { return NativeInvoker.Invoke<BOOL>(0xB09D25E77C33EB3F, (ulong)ped, (ulong)vehicle, (ulong)outIndex); }
        internal static void DISABLE_INDIVIDUAL_PLANE_PROPELLER(Vehicle vehicle, int propeller) { NativeInvoker.Invoke(0x500873A45724C863, (ulong)vehicle, (ulong)propeller); }
        internal static void SET_VEHICLE_FORCE_AFTERBURNER(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xB055A34527CB8FD7, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_DISABLE_VEHICLE_WINDOW_COLLISIONS_(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x1087BC8EC540DAEB, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0x4AD280EB48B2D8E6(Vehicle vehicle, BOOL togle) { NativeInvoker.Invoke(0x4AD280EB48B2D8E6, (ulong)vehicle, (ulong)togle); }
        internal static void N_0xB68CFAF83A02768D(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xB68CFAF83A02768D, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0x0205F5365292D2EB(Vehicle vehicle, float p1) { NativeInvoker.Invoke(0x0205F5365292D2EB, (ulong)vehicle, *(uint*)&p1); }
        internal static void N_0xCF9159024555488C(Any p0) { NativeInvoker.Invoke(0xCF9159024555488C, (ulong)p0); }
        internal static void SET_DISTANT_CARS_ENABLED(BOOL toggle) { NativeInvoker.Invoke(0xF796359A959DF65D, (ulong)toggle); }
        internal static void SET_VEHICLE_NEON_LIGHTS_COLOUR_(Vehicle vehicle, int r, int g, int b) { NativeInvoker.Invoke(0x8E0A582209A62695, (ulong)vehicle, (ulong)r, (ulong)g, (ulong)b); }
        internal static void N_0xB93B2867F7B479D1(Vehicle vehicle, int index) { NativeInvoker.Invoke(0xB93B2867F7B479D1, (ulong)vehicle, (ulong)index); }
        internal static void GET_VEHICLE_NEON_LIGHTS_COLOUR_(Vehicle vehicle, int* r, int* g, int* b) { NativeInvoker.Invoke(0x7619EEE8C886757F, (ulong)vehicle, (ulong)r, (ulong)g, (ulong)b); }
        internal static void SET_VEHICLE_NEON_LIGHT_ENABLED_(Vehicle vehicle, int index, BOOL toggle) { NativeInvoker.Invoke(0x2AA720E4287BF269, (ulong)vehicle, (ulong)index, (ulong)toggle); }
        internal static BOOL IS_VEHICLE_NEON_LIGHT_ENABLED_(Vehicle vehicle, int index) { return NativeInvoker.Invoke<BOOL>(0x8C4B92553E4766A5, (ulong)vehicle, (ulong)index); }
        internal static void N_0x35E0654F4BAD7971(BOOL p0) { NativeInvoker.Invoke(0x35E0654F4BAD7971, (ulong)p0); }
        internal static void DISABLE_VEHICLE_NEON_LIGHTS_(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x83F813570FF519DE, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_DISABLE_SUPERDUMMY_MODE_(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0xB088E9A47AE6EDD5, (ulong)vehicle, (ulong)p1); }
        internal static void REQUEST_VEHICLE_DASHBOARD_SCALEFORM_MOVIE_(Vehicle vehicle) { NativeInvoker.Invoke(0xDBA3C090E3D74690, (ulong)vehicle); }
        internal static float GET_VEHICLE_BODY_HEALTH(Vehicle vehicle) { return NativeInvoker.Invoke<float>(0xF271147EB7B40F12, (ulong)vehicle); }
        internal static void SET_VEHICLE_BODY_HEALTH(Vehicle vehicle, float value) { NativeInvoker.Invoke(0xB77D05AC8C78AADB, (ulong)vehicle, *(uint*)&value); }
        internal static void GET_VEHICLE_SUSPENSION_BOUNDS_(Vehicle vehicle, Vector3* out1, Vector3* out2) { NativeInvoker.Invoke(0xDF7E3EEB29642C38, (ulong)vehicle, (ulong)out1, (ulong)out2); }
        internal static float GET_VEHICLE_SUSPENSION_HEIGHT_(Vehicle vehicle) { return NativeInvoker.Invoke<float>(0x53952FD2BAA19F17, (ulong)vehicle); }
        internal static void SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER_(float multiplier) { NativeInvoker.Invoke(0x84FD40F56075E816, *(uint*)&multiplier); }
        internal static int GET_NUMBER_OF_VEHICLE_DOORS_(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0x92922A607497B14D, (ulong)vehicle); }
        internal static void SET_HYDRAULIC_RAISED_(Any p0, Any p1) { NativeInvoker.Invoke(0x28B18377EB6E25F6, (ulong)p0, (ulong)p1); }
        internal static void N_0xA7DCDF4DED40A8F4(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0xA7DCDF4DED40A8F4, (ulong)vehicle, (ulong)p1); }
        internal static float GET_VEHICLE_BODY_HEALTH_2_(Vehicle vehicle, float maxEngineHealth, float maxPetrolTankHealth, float maxBodyHealth, float maxMainRotorHealth, float maxTailRotorHealth, float maxUnkHealth) { return NativeInvoker.Invoke<float>(0xB8EF61207C2393A9, (ulong)vehicle, *(uint*)&maxEngineHealth, *(uint*)&maxPetrolTankHealth, *(uint*)&maxBodyHealth, *(uint*)&maxMainRotorHealth, *(uint*)&maxTailRotorHealth, *(uint*)&maxUnkHealth); }
        internal static BOOL N_0xD4C4642CB7F50B5D(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xD4C4642CB7F50B5D, (ulong)vehicle); }
        internal static void N_0xC361AA040D6637A8(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0xC361AA040D6637A8, (ulong)vehicle, (ulong)p1); }
        internal static void SET_VEHICLE_KERS_ALLOWED(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x99C82F8A139F3E4E, (ulong)vehicle, (ulong)toggle); }
        internal static BOOL GET_VEHICLE_HAS_KERS(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x50634E348C8D44EF, (ulong)vehicle); }
        internal static void N_0xE16142B94664DEFD(Vehicle vehicle, BOOL p1) { NativeInvoker.Invoke(0xE16142B94664DEFD, (ulong)vehicle, (ulong)p1); }
        internal static void N_0x26D99D5A82FD18E8(Any p0) { NativeInvoker.Invoke(0x26D99D5A82FD18E8, (ulong)p0); }
        internal static void SET_HYDRAULIC_WHEEL_VALUE_(Vehicle vehicle, int wheelId, float value) { NativeInvoker.Invoke(0x84EA99C62CB3EF0C, (ulong)vehicle, (ulong)wheelId, *(uint*)&value); }
        internal static float GET_HYDRAULIC_WHEEL_VALUE_(Vehicle vehicle, int wheelId) { return NativeInvoker.Invoke<float>(0x0BB5CBDDD0F25AE3, (ulong)vehicle, (ulong)wheelId); }
        internal static void SET_CAMBERED_WHEELS_DISABLED_(Any p0, Any p1) { NativeInvoker.Invoke(0x1201E8A3290A3B98, (ulong)p0, (ulong)p1); }
        internal static void SET_HYDRAULIC_WHEEL_STATE_(Any p0, Any p1) { NativeInvoker.Invoke(0x8EA86DF356801C7D, (ulong)p0, (ulong)p1); }
        internal static void SET_HYDRAULIC_WHEEL_STATE_TRANSITION_(Vehicle vehicle, int wheelId, int state, float value, Any p4) { NativeInvoker.Invoke(0xC24075310A8B9CD1, (ulong)vehicle, (ulong)wheelId, (ulong)state, *(uint*)&value, (ulong)p4); }
        internal static Any N_0x5BA68A0840D546AC(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0x5BA68A0840D546AC, (ulong)p0, (ulong)p1); }
        internal static void N_0x4419966C9936071A(Vehicle vehicle) { NativeInvoker.Invoke(0x4419966C9936071A, (ulong)vehicle); }
        internal static void N_0x870B8B7A766615C8(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x870B8B7A766615C8, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static Any N_0x8533CAFDE1F0F336(Any p0) { return NativeInvoker.Invoke<Any>(0x8533CAFDE1F0F336, (ulong)p0); }
        internal static Any SET_VEHICLE_DAMAGE_MODIFIER_(Vehicle vehicle, float p1) { return NativeInvoker.Invoke<Any>(0x4E20D2A627011E8E, (ulong)vehicle, *(uint*)&p1); }
        internal static void SET_VEHICLE_UNK_DAMAGE_MULTIPLIER_(Vehicle vehicle, float multiplier) { NativeInvoker.Invoke(0x45A561A9421AB6AD, (ulong)vehicle, *(uint*)&multiplier); }
        internal static Any N_0xD4196117AF7BB974(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0xD4196117AF7BB974, (ulong)p0, (ulong)p1); }
        internal static void N_0xBB2333BB87DDD87F(Any p0, Any p1) { NativeInvoker.Invoke(0xBB2333BB87DDD87F, (ulong)p0, (ulong)p1); }
        internal static void N_0x73561D4425A021A2(Any p0, Any p1) { NativeInvoker.Invoke(0x73561D4425A021A2, (ulong)p0, (ulong)p1); }
        internal static void SET_VEHICLE_CONTROLS_INVERTED_(Vehicle vehicle, BOOL state) { NativeInvoker.Invoke(0x5B91B229243351A8, (ulong)vehicle, (ulong)state); }
        internal static void N_0x7BBE7FF626A591FE(Any p0) { NativeInvoker.Invoke(0x7BBE7FF626A591FE, (ulong)p0); }
        internal static void N_0x65B080555EA48149(Any p0) { NativeInvoker.Invoke(0x65B080555EA48149, (ulong)p0); }
        internal static void N_0x428AD3E26C8D9EB0(Vehicle vehicle, float x, float y, float z, float p4) { NativeInvoker.Invoke(0x428AD3E26C8D9EB0, (ulong)vehicle, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&p4); }
        internal static void N_0xE2F53F172B45EDE1() { NativeInvoker.Invoke(0xE2F53F172B45EDE1); } // 0xE2F53F172B45EDE1 b877<, (ulong)E2F53F172B45EDE1); }
        internal static BOOL N_0xBA91D045575699AD(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xBA91D045575699AD, (ulong)vehicle); }
        internal static void N_0x80E3357FDEF45C21(Any p0, Any p1) { NativeInvoker.Invoke(0x80E3357FDEF45C21, (ulong)p0, (ulong)p1); }
        internal static void SET_VEHICLE_RAMP_LAUNCH_MODIFIER_(Any p0, Any p1) { NativeInvoker.Invoke(0xEFC13B1CE30D755D, (ulong)p0, (ulong)p1); }
        internal static BOOL GET_IS_DOOR_VALID_(Vehicle vehicle, int doorId) { return NativeInvoker.Invoke<BOOL>(0x645F4B6E8499F632, (ulong)vehicle, (ulong)doorId); }
        internal static void SET_VEHICLE_ROCKET_BOOST_REFILL_TIME_(Vehicle vehicle, float seconds) { NativeInvoker.Invoke(0xE00F2AB100B76E89, (ulong)vehicle, *(uint*)&seconds); }
        internal static BOOL GET_HAS_ROCKET_BOOST_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x36D782F68B309BDA, (ulong)vehicle); }
        internal static BOOL IS_VEHICLE_ROCKET_BOOST_ACTIVE_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x3D34E80EED4AE3BE, (ulong)vehicle); }
        internal static void SET_VEHICLE_ROCKET_BOOST_ACTIVE_(Vehicle vehicle, BOOL active) { NativeInvoker.Invoke(0x81E1552E35DC3839, (ulong)vehicle, (ulong)active); }
        internal static BOOL GET_HAS_RETRACTABLE_WHEELS_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xDCA174A42133F08C, (ulong)vehicle); }
        internal static BOOL GET_IS_WHEELS_LOWERED_STATE_ACTIVE_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x1DA0DA9CB3F0C8BF, (ulong)vehicle); }
        internal static void RAISE_RETRACTABLE_WHEELS_(Vehicle vehicle) { NativeInvoker.Invoke(0xF660602546D27BA8, (ulong)vehicle); }
        internal static void LOWER_RETRACTABLE_WHEELS_(Vehicle vehicle) { NativeInvoker.Invoke(0x5335BE58C083E74E, (ulong)vehicle); }
        internal static BOOL GET_CAN_VEHICLE_JUMP_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x9078C0C5EF8C19E9, (ulong)vehicle); }
        internal static void SET_USE_HIGHER_VEHICLE_JUMP_FORCE_(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xF06A16CA55D138D8, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0xB2E0C0D6922D31F2(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xB2E0C0D6922D31F2, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_WEAPON_CAPACITY_(Vehicle vehicle, int weaponIndex, int capacity) { NativeInvoker.Invoke(0x44CD1F493DB2A0A6, (ulong)vehicle, (ulong)weaponIndex, (ulong)capacity); }
        internal static int GET_VEHICLE_WEAPON_CAPACITY_(Vehicle vehicle, int weaponIndex) { return NativeInvoker.Invoke<int>(0x8181CE2F25CB9BB7, (ulong)vehicle, (ulong)weaponIndex); }
        internal static BOOL GET_VEHICLE_HAS_PARACHUTE_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xBC9CFF381338CB4F, (ulong)vehicle); }
        internal static BOOL GET_VEHICLE_CAN_ACTIVATE_PARACHUTE_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xA916396DF4154EE3, (ulong)vehicle); }
        internal static void SET_VEHICLE_PARACHUTE_ACTIVE_(Vehicle vehicle, BOOL active) { NativeInvoker.Invoke(0x0BFFB028B3DD0A97, (ulong)vehicle, (ulong)active); }
        internal static Any N_0x3DE51E9C80B116CF(Any p0) { return NativeInvoker.Invoke<Any>(0x3DE51E9C80B116CF, (ulong)p0); }
        internal static void SET_VEHICLE_RECEIVES_RAMP_DAMAGE_(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x28D034A93FE31BF5, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_RAMP_SIDEWAYS_LAUNCH_MOTION_(Any p0, Any p1) { NativeInvoker.Invoke(0x1BBAC99C0BC53656, (ulong)p0, (ulong)p1); }
        internal static void SET_VEHICLE_RAMP_UPWARDS_LAUNCH_MOTION_(Any p0, Any p1) { NativeInvoker.Invoke(0x756AE6E962168A04, (ulong)p0, (ulong)p1); }
        internal static void N_0x9D30687C57BAA0BB(Any p0) { NativeInvoker.Invoke(0x9D30687C57BAA0BB, (ulong)p0); }
        internal static void SET_VEHICLE_WEAPONS_DISABLED_(Any p0, Any p1) { NativeInvoker.Invoke(0x86B4B6212CB8B627, (ulong)p0, (ulong)p1); }
        internal static void N_0x41290B40FA63E6DA(Any p0) { NativeInvoker.Invoke(0x41290B40FA63E6DA, (ulong)p0); }
        internal static void SET_VEHICLE_PARACHUTE_MODEL_(Vehicle vehicle, Hash modelHash) { NativeInvoker.Invoke(0x4D610C6B56031351, (ulong)vehicle, (ulong)modelHash); }
        internal static void SET_VEHICLE_PARACHUTE_TEXTURE_VARIATION_(Vehicle vehicle, int textureVariation) { NativeInvoker.Invoke(0xA74AD2439468C883, (ulong)vehicle, (ulong)textureVariation); }
        internal static Any N_0x0419B167EE128F33(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0x0419B167EE128F33, (ulong)p0, (ulong)p1); }
        internal static Any N_0xF3B0E0AED097A3F5(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0xF3B0E0AED097A3F5, (ulong)p0, (ulong)p1); }
        internal static Any N_0xD3E51C0AB8C26EEE(Any p0, Any p1) { return NativeInvoker.Invoke<Any>(0xD3E51C0AB8C26EEE, (ulong)p0, (ulong)p1); }
        internal static int GET_ALL_VEHICLES_(int* vehsStruct) { return NativeInvoker.Invoke<int>(0x9B8E1BF04B51F2E8, (ulong)vehsStruct); }
        internal static void N_0x72BECCF4B829522E(Any p0, Any p1) { NativeInvoker.Invoke(0x72BECCF4B829522E, (ulong)p0, (ulong)p1); }
        internal static void N_0x66E3AAFACE2D1EB8(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x66E3AAFACE2D1EB8, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void N_0x1312DDD8385AEE4E(Any p0, Any p1) { NativeInvoker.Invoke(0x1312DDD8385AEE4E, (ulong)p0, (ulong)p1); }
        internal static void N_0xEDBC8405B3895CC9(Any p0, Any p1) { NativeInvoker.Invoke(0xEDBC8405B3895CC9, (ulong)p0, (ulong)p1); }
        internal static void N_0x26E13D440E7F6064(Vehicle vehicle, float value) { NativeInvoker.Invoke(0x26E13D440E7F6064, (ulong)vehicle, *(uint*)&value); }
        internal static void N_0x2FA2494B47FDD009(Any p0, Any p1) { NativeInvoker.Invoke(0x2FA2494B47FDD009, (ulong)p0, (ulong)p1); }
        internal static void SET_VEHICLE_ROCKET_BOOST_PERCENTAGE_(Vehicle vehicle, float percentage) { NativeInvoker.Invoke(0xFEB2DDED3509562E, (ulong)vehicle, *(uint*)&percentage); }
        internal static void SET_OPPRESSOR_TRANSFORM_STATE_(Vehicle vehicle, BOOL state) { NativeInvoker.Invoke(0x544996C0081ABDEB, (ulong)vehicle, (ulong)state); }
        internal static void N_0x78CEEE41F49F421F(Any p0, Any p1) { NativeInvoker.Invoke(0x78CEEE41F49F421F, (ulong)p0, (ulong)p1); }
        internal static void N_0xAF60E6A2936F982A(Any p0, Any p1) { NativeInvoker.Invoke(0xAF60E6A2936F982A, (ulong)p0, (ulong)p1); }
        internal static void N_0x430A7631A84C9BE7(Any p0) { NativeInvoker.Invoke(0x430A7631A84C9BE7, (ulong)p0); }
        internal static void DISABLE_VEHICLE_WORLD_COLLISION_(Vehicle vehicle) { NativeInvoker.Invoke(0x75627043C6AA90AD, (ulong)vehicle); }
        internal static void N_0x8235F1BEAD557629(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x8235F1BEAD557629, (ulong)vehicle, (ulong)toggle); }
        internal static void N_0x9640E30A7F395E4B(Vehicle vehicle, Any p1, Any p2, Any p3, Any p4) { NativeInvoker.Invoke(0x9640E30A7F395E4B, (ulong)vehicle, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4); }
        internal static void N_0x0BBB9A7A8FFE931B(Any p0, Any p1, Any p2) { NativeInvoker.Invoke(0x0BBB9A7A8FFE931B, (ulong)p0, (ulong)p1, (ulong)p2); }
        internal static void SET_CARGOBOB_HOOK_CAN_ATTACH_(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x94A68DA412C4007D, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_BOMB_COUNT_(Vehicle vehicle, int bombCount) { NativeInvoker.Invoke(0xF4B2ED59DEB5D774, (ulong)vehicle, (ulong)bombCount); }
        internal static int GET_VEHICLE_BOMB_COUNT_(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0xEA12BD130D7569A1, (ulong)vehicle); }
        internal static void SET_VEHICLE_COUNTERMEASURE_COUNT_(Vehicle vehicle, int counterMeasureCount) { NativeInvoker.Invoke(0x9BDA23BF666F0855, (ulong)vehicle, (ulong)counterMeasureCount); }
        internal static int GET_VEHICLE_COUNTERMEASURE_COUNT_(Vehicle vehicle) { return NativeInvoker.Invoke<int>(0xF846AA63DF56B804, (ulong)vehicle); }
        internal static void N_0x0A3F820A9A9A9AC5(Vehicle vehicle, float x, float y, float z) { NativeInvoker.Invoke(0x0A3F820A9A9A9AC5, (ulong)vehicle, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static BOOL N_0x51F30DB60626A20E(Vehicle vehicle, float x, float y, float z, float rotX, float rotY, float rotZ, int p7, Any p8) { return NativeInvoker.Invoke<BOOL>(0x51F30DB60626A20E, (ulong)vehicle, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&rotX, *(uint*)&rotY, *(uint*)&rotZ, (ulong)p7, (ulong)p8); }
        internal static void N_0x97841634EF7DF1D6(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x97841634EF7DF1D6, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_HOVER_TRANSFORM_RATIO_(Vehicle vehicle, float ratio) { NativeInvoker.Invoke(0xD138FA15C9776837, (ulong)vehicle, *(uint*)&ratio); }
        internal static void SET_VEHICLE_HOVER_TRANSFORM_PERCENTAGE_(Vehicle vehicle, float percentage) { NativeInvoker.Invoke(0x438B3D7CA026FE91, (ulong)vehicle, *(uint*)&percentage); }
        internal static void SET_VEHICLE_HOVER_TRANSFORM_ENABLED_(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xF1211889DF15A763, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_HOVER_TRANSFORM_ACTIVE_(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x2D55FE374D5FDB91, (ulong)vehicle, (ulong)toggle); }
        internal static Any N_0x3A9128352EAC9E85(Any p0) { return NativeInvoker.Invoke<Any>(0x3A9128352EAC9E85, (ulong)p0); }
        internal static Vector3 FIND_RANDOM_POINT_IN_SPACE_(Ped ped) { return NativeInvoker.Invoke<Vector3>(0x8DC9675797123522, (ulong)ped); }
        internal static void SET_DEPLOY_HELI_STUB_WINGS_(Vehicle vehicle, BOOL deploy, BOOL p2) { NativeInvoker.Invoke(0xB251E0B33E58B424, (ulong)vehicle, (ulong)deploy, (ulong)p2); }
        internal static BOOL ARE_HELI_STUB_WINGS_DEPLOYED_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xAEF12960FA943792, (ulong)vehicle); }
        internal static void N_0xAA653AE61924B0A0(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xAA653AE61924B0A0, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_VEHICLE_TURRET_UNK_(Vehicle vehicle, int index, BOOL toggle) { NativeInvoker.Invoke(0xC60060EB0D8AC7B1, (ulong)vehicle, (ulong)index, (ulong)toggle); }
        internal static void SET_SPECIALFLIGHT_WING_RATIO_(Vehicle vehicle, float ratio) { NativeInvoker.Invoke(0x70A252F60A3E036B, (ulong)vehicle, *(uint*)&ratio); }
        internal static void SET_DISABLE_TURRET_MOVEMENT_THIS_FRAME_(Vehicle vehicle, int turretId) { NativeInvoker.Invoke(0xE615BB7A7752C76A, (ulong)vehicle, (ulong)turretId); }
        internal static void N_0x887FA38787DE8C72(Vehicle vehicle) { NativeInvoker.Invoke(0x887FA38787DE8C72, (ulong)vehicle); }
        internal static void SET_UNK_FLOAT_0x104_FOR_SUBMARINE_VEHICLE_TASK_(Vehicle vehicle, float value) { NativeInvoker.Invoke(0x498218259FB7C72D, (ulong)vehicle, *(uint*)&value); }
        internal static void SET_UNK_BOOL_0x102_FOR_SUBMARINE_VEHICLE_TASK_(Vehicle vehicle, BOOL value) { NativeInvoker.Invoke(0x41B9FB92EDED32A6, (ulong)vehicle, (ulong)value); }
        internal static void N_0x36DE109527A2C0C4(BOOL toggle) { NativeInvoker.Invoke(0x36DE109527A2C0C4, (ulong)toggle); }
        internal static void N_0x82E0AC411E41A5B4(BOOL toggle) { NativeInvoker.Invoke(0x82E0AC411E41A5B4, (ulong)toggle); }
        internal static void N_0x99A05839C46CE316(BOOL toggle) { NativeInvoker.Invoke(0x99A05839C46CE316, (ulong)toggle); }
        internal static BOOL GET_IS_VEHICLE_SHUNT_BOOST_ACTIVE_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xA2459F72C14E2E8D, (ulong)vehicle); }
        internal static BOOL N_0xE8718FAF591FD224(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0xE8718FAF591FD224, (ulong)vehicle); }
        internal static Vehicle GET_LAST_RAMMED_VEHICLE_(Vehicle vehicle) { return NativeInvoker.Invoke<Vehicle>(0x04F2FA6E234162F7, (ulong)vehicle); }
        internal static void SET_DISABLE_VEHICLE_UNK_(BOOL toggle) { NativeInvoker.Invoke(0x143921E45EC44D62, (ulong)toggle); }
        internal static void SET_VEHICLE_NITRO_ENABLED_(Vehicle vehicle, BOOL toggle, float level, float power, float rechargeTime, BOOL disableSound) { NativeInvoker.Invoke(0xC8E9B6B71B8E660D, (ulong)vehicle, (ulong)toggle, *(uint*)&level, *(uint*)&power, *(uint*)&rechargeTime, (ulong)disableSound); }
        internal static void SET_VEHICLE_WHEELS_DEAL_DAMAGE_(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x2970EAA18FD5E42F, (ulong)vehicle, (ulong)toggle); }
        internal static void SET_DISABLE_VEHICLE_UNK_2_(BOOL toggle) { NativeInvoker.Invoke(0x211E95CE9903940C, (ulong)toggle); }
        internal static void N_0x5BBCF35BF6E456F7(BOOL toggle) { NativeInvoker.Invoke(0x5BBCF35BF6E456F7, (ulong)toggle); }
        internal static BOOL GET_DOES_VEHICLE_HAVE_TOMBSTONE_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x71AFB258CCED3A27, (ulong)vehicle); }
        internal static void HIDE_VEHICLE_TOMBSTONE_(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xAE71FB656C600587, (ulong)vehicle, (ulong)toggle); }
        internal static BOOL GET_IS_VEHICLE_EMP_DISABLED_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x0506ED94363AD905, (ulong)vehicle); }
        internal static void N_0x8F0D5BA1C2CC91D7(BOOL toggle) { NativeInvoker.Invoke(0x8F0D5BA1C2CC91D7, (ulong)toggle); }
        internal static float GET_TYRE_HEALTH_(Vehicle vehicle, int wheelIndex) { return NativeInvoker.Invoke<float>(0x55EAB010FAEE9380, (ulong)vehicle, (ulong)wheelIndex); }
        internal static void SET_TYRE_HEALTH_(Vehicle vehicle, int wheelIndex, float health) { NativeInvoker.Invoke(0x74C68EF97645E79D, (ulong)vehicle, (ulong)wheelIndex, *(uint*)&health); }
        internal static float GET_TYRE_WEAR_MULTIPLIER_(Vehicle vehicle, int wheelIndex) { return NativeInvoker.Invoke<float>(0x6E387895952F4F71, (ulong)vehicle, (ulong)wheelIndex); }
        internal static void SET_TYRE_WEAR_MULTIPLIER_(Vehicle vehicle, int wheelIndex, float multiplier) { NativeInvoker.Invoke(0x01894E2EDE923CA2, (ulong)vehicle, (ulong)wheelIndex, *(uint*)&multiplier); }
        internal static void SET_TYRE_SOFTNESS_MULTIPLIER_(Vehicle vehicle, int wheelIndex, float multiplier) { NativeInvoker.Invoke(0x392183BB9EA57697, (ulong)vehicle, (ulong)wheelIndex, *(uint*)&multiplier); }
        internal static void SET_TYRE_TRACTION_LOSS_MULTIPLIER_(Vehicle vehicle, int wheelIndex, float multiplier) { NativeInvoker.Invoke(0xC970D0E0FC31D768, (ulong)vehicle, (ulong)wheelIndex, *(uint*)&multiplier); }
        internal static void N_0xF8B49F5BA7F850E7(Vehicle vehicle, int p1) { NativeInvoker.Invoke(0xF8B49F5BA7F850E7, (ulong)vehicle, (ulong)p1); }
        internal static void SET_REDUCE_DRIFT_VEHICLE_SUSPENSION_(Vehicle vehicle, BOOL enable) { NativeInvoker.Invoke(0x3A375167F5782A65, (ulong)vehicle, (ulong)enable); }
        internal static void SET_DRIFT_TYRES_ENABLED_(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0x5AC79C98C5C17F05, (ulong)vehicle, (ulong)toggle); }
        internal static BOOL GET_DRIFT_TYRES_ENABLED_(Vehicle vehicle) { return NativeInvoker.Invoke<BOOL>(0x2F5A72430E78C8D3, (ulong)vehicle); }
        internal static void NETWORK_USE_HIGH_PRECISION_VEHICLE_BLENDING_(Vehicle vehicle, BOOL toggle) { NativeInvoker.Invoke(0xEC0C1D4922AF9754, (ulong)vehicle, (ulong)toggle); }
    }

    internal static unsafe class WATER
    {
        internal static BOOL GET_WATER_HEIGHT(float x, float y, float z, float* height) { return NativeInvoker.Invoke<BOOL>(0xF6829842C06AE524, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)height); }
        internal static BOOL GET_WATER_HEIGHT_NO_WAVES(float x, float y, float z, float* height) { return NativeInvoker.Invoke<BOOL>(0x8EE6B53CE13A9794, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)height); }
        internal static BOOL TEST_PROBE_AGAINST_WATER(float x1, float y1, float z1, float x2, float y2, float z2, Vector3* result) { return NativeInvoker.Invoke<BOOL>(0xFFA5D878809819DB, *(uint*)&x1, *(uint*)&y1, *(uint*)&z1, *(uint*)&x2, *(uint*)&y2, *(uint*)&z2, (ulong)result); }
        internal static BOOL TEST_PROBE_AGAINST_ALL_WATER(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7) { return NativeInvoker.Invoke<BOOL>(0x8974647ED222EA5F, (ulong)p0, (ulong)p1, (ulong)p2, (ulong)p3, (ulong)p4, (ulong)p5, (ulong)p6, (ulong)p7); }
        internal static BOOL TEST_VERTICAL_PROBE_AGAINST_ALL_WATER(float x, float y, float z, Any p3, float* height) { return NativeInvoker.Invoke<BOOL>(0x2B3451FA1E3142E2, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)p3, (ulong)height); }
        internal static void MODIFY_WATER(float x, float y, float radius, float height) { NativeInvoker.Invoke(0xC443FD757C3BA637, *(uint*)&x, *(uint*)&y, *(uint*)&radius, *(uint*)&height); }
        internal static int ADD_CURRENT_RISE_(float xLow, float yLow, float xHigh, float yHigh, float height) { return NativeInvoker.Invoke<int>(0xFDBF4CDBC07E1706, *(uint*)&xLow, *(uint*)&yLow, *(uint*)&xHigh, *(uint*)&yHigh, *(uint*)&height); }
        internal static void REMOVE_CURRENT_RISE_(int p0) { NativeInvoker.Invoke(0xB1252E3E59A82AAF, (ulong)p0); }
        internal static void SET_DEEP_OCEAN_SCALER(float intensity) { NativeInvoker.Invoke(0xB96B00E976BE977F, *(uint*)&intensity); }
        internal static float GET_DEEP_OCEAN_SCALER() { return NativeInvoker.Invoke<float>(0x2B2A2CC86778B619); } // 0x2B2A2CC86778B619 0xBD0A67FB b323, (ulong)2B2A2CC86778B619); }
        internal static void N_0x547237AA71AB44DE(float p0) { NativeInvoker.Invoke(0x547237AA71AB44DE, *(uint*)&p0); }
        internal static void RESET_DEEP_OCEAN_SCALER() { NativeInvoker.Invoke(0x5E5E99285AE812DB); } // 0x5E5E99285AE812DB 0x4AD23212 b323<, (ulong)5E5E99285AE812DB); }
    }

    internal static unsafe class WEAPON
    {
        internal static void ENABLE_LASER_SIGHT_RENDERING(BOOL toggle) { NativeInvoker.Invoke(0xC8B46D7727D864AA, (ulong)toggle); }
        internal static Hash GET_WEAPON_COMPONENT_TYPE_MODEL(Hash componentHash) { return NativeInvoker.Invoke<Hash>(0x0DB57B41EC1DB083, (ulong)componentHash); }
        internal static Hash GET_WEAPONTYPE_MODEL(Hash weaponHash) { return NativeInvoker.Invoke<Hash>(0xF46CDC33180FDA94, (ulong)weaponHash); }
        internal static Hash GET_WEAPONTYPE_SLOT(Hash weaponHash) { return NativeInvoker.Invoke<Hash>(0x4215460B9B8B7FA0, (ulong)weaponHash); }
        internal static Hash GET_WEAPONTYPE_GROUP(Hash weaponHash) { return NativeInvoker.Invoke<Hash>(0xC3287EE3050FB74C, (ulong)weaponHash); }
        internal static int GET_WEAPON_COMPONENT_VARIANT_EXTRA_COMPONENT_COUNT_(Hash componentHash) { return NativeInvoker.Invoke<int>(0x6558AC7C17BFEF58, (ulong)componentHash); }
        internal static Hash GET_WEAPON_COMPONENT_VARIANT_EXTRA_COMPONENT_MODEL_(Hash componentHash, int extraComponentIndex) { return NativeInvoker.Invoke<Hash>(0x4D1CB8DC40208A17, (ulong)componentHash, (ulong)extraComponentIndex); }
        internal static void SET_CURRENT_PED_WEAPON(Ped ped, Hash weaponHash, BOOL bForceInHand) { NativeInvoker.Invoke(0xADF692B254977C0C, (ulong)ped, (ulong)weaponHash, (ulong)bForceInHand); }
        internal static BOOL GET_CURRENT_PED_WEAPON(Ped ped, Hash* weaponHash, BOOL p2) { return NativeInvoker.Invoke<BOOL>(0x3A87E44BB9A01D54, (ulong)ped, (ulong)weaponHash, (ulong)p2); }
        internal static Entity GET_CURRENT_PED_WEAPON_ENTITY_INDEX(Ped ped, Any p1) { return NativeInvoker.Invoke<Entity>(0x3B390A939AF0B5FC, (ulong)ped, (ulong)p1); }
        internal static Hash GET_BEST_PED_WEAPON(Ped ped, BOOL p1) { return NativeInvoker.Invoke<Hash>(0x8483E98E8B888AE2, (ulong)ped, (ulong)p1); }
        internal static BOOL SET_CURRENT_PED_VEHICLE_WEAPON(Ped ped, Hash weaponHash) { return NativeInvoker.Invoke<BOOL>(0x75C55983C2C39DAA, (ulong)ped, (ulong)weaponHash); }
        internal static BOOL GET_CURRENT_PED_VEHICLE_WEAPON(Ped ped, Hash* weaponHash) { return NativeInvoker.Invoke<BOOL>(0x1017582BCD3832DC, (ulong)ped, (ulong)weaponHash); }
        internal static void N_0x50276EF8172F5F12(Ped ped) { NativeInvoker.Invoke(0x50276EF8172F5F12, (ulong)ped); }
        internal static BOOL IS_PED_ARMED(Ped ped, int typeFlags) { return NativeInvoker.Invoke<BOOL>(0x475768A975D5AD17, (ulong)ped, (ulong)typeFlags); }
        internal static BOOL IS_WEAPON_VALID(Hash weaponHash) { return NativeInvoker.Invoke<BOOL>(0x937C71165CF334B3, (ulong)weaponHash); }
        internal static BOOL HAS_PED_GOT_WEAPON(Ped ped, Hash weaponHash, BOOL p2) { return NativeInvoker.Invoke<BOOL>(0x8DECB02F88F428BC, (ulong)ped, (ulong)weaponHash, (ulong)p2); }
        internal static BOOL IS_PED_WEAPON_READY_TO_SHOOT(Ped ped) { return NativeInvoker.Invoke<BOOL>(0xB80CA294F2F26749, (ulong)ped); }
        internal static Hash GET_PED_WEAPONTYPE_IN_SLOT(Ped ped, Hash weaponSlot) { return NativeInvoker.Invoke<Hash>(0xEFFED78E9011134D, (ulong)ped, (ulong)weaponSlot); }
        internal static int GET_AMMO_IN_PED_WEAPON(Ped ped, Hash weaponhash) { return NativeInvoker.Invoke<int>(0x015A522136D7F951, (ulong)ped, (ulong)weaponhash); }
        internal static void ADD_AMMO_TO_PED(Ped ped, Hash weaponHash, int ammo) { NativeInvoker.Invoke(0x78F0424C34306220, (ulong)ped, (ulong)weaponHash, (ulong)ammo); }
        internal static void SET_PED_AMMO(Ped ped, Hash weaponHash, int ammo, BOOL p3) { NativeInvoker.Invoke(0x14E56BC5B5DB6A19, (ulong)ped, (ulong)weaponHash, (ulong)ammo, (ulong)p3); }
        internal static void SET_PED_INFINITE_AMMO(Ped ped, BOOL toggle, Hash weaponHash) { NativeInvoker.Invoke(0x3EDCB0505123623B, (ulong)ped, (ulong)toggle, (ulong)weaponHash); }
        internal static void SET_PED_INFINITE_AMMO_CLIP(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x183DADC6AA953186, (ulong)ped, (ulong)toggle); }
        internal static void N_0x24C024BA8379A70A(Any p0, Any p1) { NativeInvoker.Invoke(0x24C024BA8379A70A, (ulong)p0, (ulong)p1); }
        internal static void GIVE_WEAPON_TO_PED(Ped ped, Hash weaponHash, int ammoCount, BOOL isHidden, BOOL bForceInHand) { NativeInvoker.Invoke(0xBF0FD6E56C964FCB, (ulong)ped, (ulong)weaponHash, (ulong)ammoCount, (ulong)isHidden, (ulong)bForceInHand); }
        internal static void GIVE_DELAYED_WEAPON_TO_PED(Ped ped, Hash weaponHash, int ammoCount, BOOL bForceInHand) { NativeInvoker.Invoke(0xB282DC6EBD803C75, (ulong)ped, (ulong)weaponHash, (ulong)ammoCount, (ulong)bForceInHand); }
        internal static void REMOVE_ALL_PED_WEAPONS(Ped ped, BOOL p1) { NativeInvoker.Invoke(0xF25DF915FA38C5F3, (ulong)ped, (ulong)p1); }
        internal static void REMOVE_WEAPON_FROM_PED(Ped ped, Hash weaponHash) { NativeInvoker.Invoke(0x4899CB088EDF59B8, (ulong)ped, (ulong)weaponHash); }
        internal static void HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x6F6981D2253C208F, (ulong)ped, (ulong)toggle); }
        internal static void SET_PED_CURRENT_WEAPON_VISIBLE(Ped ped, BOOL visible, BOOL deselectWeapon, BOOL p3, BOOL p4) { NativeInvoker.Invoke(0x0725A4CCFDED9A70, (ulong)ped, (ulong)visible, (ulong)deselectWeapon, (ulong)p3, (ulong)p4); }
        internal static void SET_PED_DROPS_WEAPONS_WHEN_DEAD(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x476AE72C1D19D1A8, (ulong)ped, (ulong)toggle); }
        internal static BOOL HAS_PED_BEEN_DAMAGED_BY_WEAPON(Ped ped, Hash weaponHash, int weaponType) { return NativeInvoker.Invoke<BOOL>(0x2D343D2219CD027A, (ulong)ped, (ulong)weaponHash, (ulong)weaponType); }
        internal static void CLEAR_PED_LAST_WEAPON_DAMAGE(Ped ped) { NativeInvoker.Invoke(0x0E98F88A24C5F4B8, (ulong)ped); }
        internal static BOOL HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON(Entity entity, Hash weaponHash, int weaponType) { return NativeInvoker.Invoke<BOOL>(0x131D401334815E94, (ulong)entity, (ulong)weaponHash, (ulong)weaponType); }
        internal static void CLEAR_ENTITY_LAST_WEAPON_DAMAGE(Entity entity) { NativeInvoker.Invoke(0xAC678E40BE7C74D2, (ulong)entity); }
        internal static void SET_PED_DROPS_WEAPON(Ped ped) { NativeInvoker.Invoke(0x6B7513D9966FBEC0, (ulong)ped); }
        internal static void SET_PED_DROPS_INVENTORY_WEAPON(Ped ped, Hash weaponHash, float xOffset, float yOffset, float zOffset, int ammoCount) { NativeInvoker.Invoke(0x208A1888007FC0E6, (ulong)ped, (ulong)weaponHash, *(uint*)&xOffset, *(uint*)&yOffset, *(uint*)&zOffset, (ulong)ammoCount); }
        internal static int GET_MAX_AMMO_IN_CLIP(Ped ped, Hash weaponHash, BOOL p2) { return NativeInvoker.Invoke<int>(0xA38DCFFCEA8962FA, (ulong)ped, (ulong)weaponHash, (ulong)p2); }
        internal static BOOL GET_AMMO_IN_CLIP(Ped ped, Hash weaponHash, int* ammo) { return NativeInvoker.Invoke<BOOL>(0x2E1202248937775C, (ulong)ped, (ulong)weaponHash, (ulong)ammo); }
        internal static BOOL SET_AMMO_IN_CLIP(Ped ped, Hash weaponHash, int ammo) { return NativeInvoker.Invoke<BOOL>(0xDCD2A934D65CB497, (ulong)ped, (ulong)weaponHash, (ulong)ammo); }
        internal static BOOL GET_MAX_AMMO(Ped ped, Hash weaponHash, int* ammo) { return NativeInvoker.Invoke<BOOL>(0xDC16122C7A20C933, (ulong)ped, (ulong)weaponHash, (ulong)ammo); }
        internal static BOOL GET_MAX_AMMO_BY_TYPE_(Ped ped, Hash ammoTypeHash, int* ammo) { return NativeInvoker.Invoke<BOOL>(0x585847C5E4E11709, (ulong)ped, (ulong)ammoTypeHash, (ulong)ammo); }
        internal static void ADD_AMMO_TO_PED_BY_TYPE_(Ped ped, Hash ammoTypeHash, int ammo) { NativeInvoker.Invoke(0x2472622CE1F2D45F, (ulong)ped, (ulong)ammoTypeHash, (ulong)ammo); }
        internal static void SET_PED_AMMO_BY_TYPE(Ped ped, Hash ammoTypeHash, int ammo) { NativeInvoker.Invoke(0x5FD1E1F011E76D7E, (ulong)ped, (ulong)ammoTypeHash, (ulong)ammo); }
        internal static int GET_PED_AMMO_BY_TYPE(Ped ped, Hash ammoTypeHash) { return NativeInvoker.Invoke<int>(0x39D22031557946C1, (ulong)ped, (ulong)ammoTypeHash); }
        internal static void SET_PED_AMMO_TO_DROP(Ped ped, int p1) { NativeInvoker.Invoke(0xA4EFEF9440A5B0EF, (ulong)ped, (ulong)p1); }
        internal static void SET_PICKUP_AMMO_AMOUNT_SCALER(float p0) { NativeInvoker.Invoke(0xE620FD3512A04F18, *(uint*)&p0); }
        internal static Hash GET_PED_AMMO_TYPE_FROM_WEAPON(Ped ped, Hash weaponHash) { return NativeInvoker.Invoke<Hash>(0x7FEAD38B326B9F74, (ulong)ped, (ulong)weaponHash); }
        internal static Hash GET_PED_AMMO_TYPE_FROM_WEAPON_2_(Ped ped, Hash weaponHash) { return NativeInvoker.Invoke<Hash>(0xF489B44DD5AF4BD9, (ulong)ped, (ulong)weaponHash); }
        internal static BOOL GET_PED_LAST_WEAPON_IMPACT_COORD(Ped ped, Vector3* coords) { return NativeInvoker.Invoke<BOOL>(0x6C4D0409BA1A2BC2, (ulong)ped, (ulong)coords); }
        internal static void SET_PED_GADGET(Ped ped, Hash gadgetHash, BOOL p2) { NativeInvoker.Invoke(0xD0D7B1E680ED4A1A, (ulong)ped, (ulong)gadgetHash, (ulong)p2); }
        internal static BOOL GET_IS_PED_GADGET_EQUIPPED(Ped ped, Hash gadgetHash) { return NativeInvoker.Invoke<BOOL>(0xF731332072F5156C, (ulong)ped, (ulong)gadgetHash); }
        internal static Hash GET_SELECTED_PED_WEAPON(Ped ped) { return NativeInvoker.Invoke<Hash>(0x0A6DB4965674D243, (ulong)ped); }
        internal static void EXPLODE_PROJECTILES(Ped ped, Hash weaponHash, BOOL p2) { NativeInvoker.Invoke(0xFC4BD125DE7611E4, (ulong)ped, (ulong)weaponHash, (ulong)p2); }
        internal static void REMOVE_ALL_PROJECTILES_OF_TYPE(Hash weaponHash, BOOL explode) { NativeInvoker.Invoke(0xFC52E0F37E446528, (ulong)weaponHash, (ulong)explode); }
        internal static float GET_LOCKON_DISTANCE_OF_CURRENT_PED_WEAPON(Ped ped) { return NativeInvoker.Invoke<float>(0x840F03E9041E2C9C, (ulong)ped); }
        internal static float GET_MAX_RANGE_OF_CURRENT_PED_WEAPON(Ped ped) { return NativeInvoker.Invoke<float>(0x814C9D19DFD69679, (ulong)ped); }
        internal static BOOL HAS_VEHICLE_GOT_PROJECTILE_ATTACHED(Ped driver, Vehicle vehicle, Hash weaponHash, Any p3) { return NativeInvoker.Invoke<BOOL>(0x717C8481234E3B88, (ulong)driver, (ulong)vehicle, (ulong)weaponHash, (ulong)p3); }
        internal static void GIVE_WEAPON_COMPONENT_TO_PED(Ped ped, Hash weaponHash, Hash componentHash) { NativeInvoker.Invoke(0xD966D51AA5B28BB9, (ulong)ped, (ulong)weaponHash, (ulong)componentHash); }
        internal static void REMOVE_WEAPON_COMPONENT_FROM_PED(Ped ped, Hash weaponHash, Hash componentHash) { NativeInvoker.Invoke(0x1E8BE90C74FB4C09, (ulong)ped, (ulong)weaponHash, (ulong)componentHash); }
        internal static BOOL HAS_PED_GOT_WEAPON_COMPONENT(Ped ped, Hash weaponHash, Hash componentHash) { return NativeInvoker.Invoke<BOOL>(0xC593212475FAE340, (ulong)ped, (ulong)weaponHash, (ulong)componentHash); }
        internal static BOOL IS_PED_WEAPON_COMPONENT_ACTIVE(Ped ped, Hash weaponHash, Hash componentHash) { return NativeInvoker.Invoke<BOOL>(0x0D78DE0572D3969E, (ulong)ped, (ulong)weaponHash, (ulong)componentHash); }
        internal static BOOL REFILL_AMMO_INSTANTLY(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x8C0D57EA686FAD87, (ulong)ped); }
        internal static BOOL MAKE_PED_RELOAD(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x20AE33F3AC9C0033, (ulong)ped); }
        internal static void REQUEST_WEAPON_ASSET(Hash weaponHash, int p1, int p2) { NativeInvoker.Invoke(0x5443438F033E29C3, (ulong)weaponHash, (ulong)p1, (ulong)p2); }
        internal static BOOL HAS_WEAPON_ASSET_LOADED(Hash weaponHash) { return NativeInvoker.Invoke<BOOL>(0x36E353271F0E90EE, (ulong)weaponHash); }
        internal static void REMOVE_WEAPON_ASSET(Hash weaponHash) { NativeInvoker.Invoke(0xAA08EF13F341C8FC, (ulong)weaponHash); }
        internal static Object CREATE_WEAPON_OBJECT(Hash weaponHash, int ammoCount, float x, float y, float z, BOOL showWorldModel, float scale, Any p7, Any p8, Any p9) { return NativeInvoker.Invoke<Object>(0x9541D3CF0D398F36, (ulong)weaponHash, (ulong)ammoCount, *(uint*)&x, *(uint*)&y, *(uint*)&z, (ulong)showWorldModel, *(uint*)&scale, (ulong)p7, (ulong)p8, (ulong)p9); }
        internal static void GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT(Object weaponObject, Hash addonHash) { NativeInvoker.Invoke(0x33E179436C0B31DB, (ulong)weaponObject, (ulong)addonHash); }
        internal static void REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT(Any p0, Any p1) { NativeInvoker.Invoke(0xF7D82B0D66777611, (ulong)p0, (ulong)p1); }
        internal static BOOL HAS_WEAPON_GOT_WEAPON_COMPONENT(Object weapon, Hash addonHash) { return NativeInvoker.Invoke<BOOL>(0x76A18844E743BF91, (ulong)weapon, (ulong)addonHash); }
        internal static void GIVE_WEAPON_OBJECT_TO_PED(Object weaponObject, Ped ped) { NativeInvoker.Invoke(0xB1FA61371AF7C4B7, (ulong)weaponObject, (ulong)ped); }
        internal static BOOL DOES_WEAPON_TAKE_WEAPON_COMPONENT(Hash weaponHash, Hash componentHash) { return NativeInvoker.Invoke<BOOL>(0x5CEE3DF569CECAB0, (ulong)weaponHash, (ulong)componentHash); }
        internal static Object GET_WEAPON_OBJECT_FROM_PED(Ped ped, BOOL p1) { return NativeInvoker.Invoke<Object>(0xCAE1DC9A0E22A16D, (ulong)ped, (ulong)p1); }
        internal static void GIVE_LOADOUT_TO_PED_(Ped ped, Hash loadoutHash) { NativeInvoker.Invoke(0x68F8BE6AF5CDF8A6, (ulong)ped, (ulong)loadoutHash); }
        internal static void SET_PED_WEAPON_TINT_INDEX(Ped ped, Hash weaponHash, int tintIndex) { NativeInvoker.Invoke(0x50969B9B89ED5738, (ulong)ped, (ulong)weaponHash, (ulong)tintIndex); }
        internal static int GET_PED_WEAPON_TINT_INDEX(Ped ped, Hash weaponHash) { return NativeInvoker.Invoke<int>(0x2B9EEDC07BD06B9F, (ulong)ped, (ulong)weaponHash); }
        internal static void SET_WEAPON_OBJECT_TINT_INDEX(Object weapon, int tintIndex) { NativeInvoker.Invoke(0xF827589017D4E4A9, (ulong)weapon, (ulong)tintIndex); }
        internal static int GET_WEAPON_OBJECT_TINT_INDEX(Object weapon) { return NativeInvoker.Invoke<int>(0xCD183314F7CD2E57, (ulong)weapon); }
        internal static int GET_WEAPON_TINT_COUNT(Hash weaponHash) { return NativeInvoker.Invoke<int>(0x5DCF6C5CAB2E9BF7, (ulong)weaponHash); }
        internal static void SET_PED_WEAPON_LIVERY_COLOR_(Ped ped, Hash weaponHash, Hash camoComponentHash, int colorIndex) { NativeInvoker.Invoke(0x9FE5633880ECD8ED, (ulong)ped, (ulong)weaponHash, (ulong)camoComponentHash, (ulong)colorIndex); }
        internal static int GET_PED_WEAPON_LIVERY_COLOR_(Ped ped, Hash weaponHash, Hash camoComponentHash) { return NativeInvoker.Invoke<int>(0xF0A60040BE558F2D, (ulong)ped, (ulong)weaponHash, (ulong)camoComponentHash); }
        internal static void SET_WEAPON_OBJECT_LIVERY_COLOR_(Object weaponObject, Hash camoComponentHash, int colorIndex) { NativeInvoker.Invoke(0x5DA825A85D0EA6E6, (ulong)weaponObject, (ulong)camoComponentHash, (ulong)colorIndex); }
        internal static int GET_WEAPON_OBJECT_LIVERY_COLOR_(Object weaponObject, Hash camoComponentHash) { return NativeInvoker.Invoke<int>(0xB3EA4FEABF41464B, (ulong)weaponObject, (ulong)camoComponentHash); }
        internal static int N_0xA2C9AC24B4061285(Ped ped, Hash weaponHash) { return NativeInvoker.Invoke<int>(0xA2C9AC24B4061285, (ulong)ped, (ulong)weaponHash); }
        internal static void N_0x977CA98939E82E4B(Object weaponObject, int p1) { NativeInvoker.Invoke(0x977CA98939E82E4B, (ulong)weaponObject, (ulong)p1); }
        internal static BOOL GET_WEAPON_HUD_STATS(Hash weaponHash, Any* outData) { return NativeInvoker.Invoke<BOOL>(0xD92C739EE34C9EBA, (ulong)weaponHash, (ulong)outData); }
        internal static BOOL GET_WEAPON_COMPONENT_HUD_STATS(Hash componentHash, int* outData) { return NativeInvoker.Invoke<BOOL>(0xB3CAF387AE12E9F8, (ulong)componentHash, (ulong)outData); }
        internal static float GET_WEAPON_DAMAGE(Hash weaponHash, Hash componentHash) { return NativeInvoker.Invoke<float>(0x3133B907D8B32053, (ulong)weaponHash, (ulong)componentHash); }
        internal static int GET_WEAPON_CLIP_SIZE(Hash weaponHash) { return NativeInvoker.Invoke<int>(0x583BE370B1EC6EB4, (ulong)weaponHash); }
        internal static float GET_WEAPON_TIME_BETWEEN_SHOTS_(Hash weaponHash) { return NativeInvoker.Invoke<float>(0x065D2AACAD8CF7A4, (ulong)weaponHash); }
        internal static void SET_PED_CHANCE_OF_FIRING_BLANKS(Ped ped, float xBias, float yBias) { NativeInvoker.Invoke(0x8378627201D5497D, (ulong)ped, *(uint*)&xBias, *(uint*)&yBias); }
        internal static Object SET_PED_SHOOT_ORDNANCE_WEAPON(Ped ped, float p1) { return NativeInvoker.Invoke<Object>(0xB4C8D77C80C0421E, (ulong)ped, *(uint*)&p1); }
        internal static void REQUEST_WEAPON_HIGH_DETAIL_MODEL(Entity weaponObject) { NativeInvoker.Invoke(0x48164DBB970AC3F0, (ulong)weaponObject); }
        internal static void SET_WEAPON_DAMAGE_MODIFIER_THIS_FRAME_(Hash weaponHash, float damageMultiplier) { NativeInvoker.Invoke(0x4757F00BC6323CFE, (ulong)weaponHash, *(uint*)&damageMultiplier); }
        internal static void SET_WEAPON_EXPLOSION_RADIUS_MULTIPLIER_(Hash weaponHash, float multiplier) { NativeInvoker.Invoke(0x4AE5AC8B852D642C, (ulong)weaponHash, *(uint*)&multiplier); }
        internal static void N_0xE6D2CEDD370FF98E(Any p0, Any p1) { NativeInvoker.Invoke(0xE6D2CEDD370FF98E, (ulong)p0, (ulong)p1); }
        internal static BOOL IS_PED_CURRENT_WEAPON_SILENCED(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x65F0C5AE05943EC7, (ulong)ped); }
        internal static BOOL IS_FLASH_LIGHT_ON(Ped ped) { return NativeInvoker.Invoke<BOOL>(0x4B7620C47217126C, (ulong)ped); }
        internal static Any SET_FLASH_LIGHT_FADE_DISTANCE(float distance) { return NativeInvoker.Invoke<Any>(0xCEA66DAD478CD39B, *(uint*)&distance); }
        internal static void SET_FLASH_LIGHT_ENABLED_(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0x988DB6FE9B3AC000, (ulong)ped, (ulong)toggle); }
        internal static void SET_WEAPON_ANIMATION_OVERRIDE(Ped ped, Hash animStyle) { NativeInvoker.Invoke(0x1055AC3A667F09D9, (ulong)ped, (ulong)animStyle); }
        internal static int GET_WEAPON_DAMAGE_TYPE(Hash weaponHash) { return NativeInvoker.Invoke<int>(0x3BE0BB12D25FB305, (ulong)weaponHash); }
        internal static void N_0xE4DCEC7FD5B739A5(Ped ped) { NativeInvoker.Invoke(0xE4DCEC7FD5B739A5, (ulong)ped); }
        internal static BOOL CAN_USE_WEAPON_ON_PARACHUTE(Hash weaponHash) { return NativeInvoker.Invoke<BOOL>(0xBC7BE5ABC0879F74, (ulong)weaponHash); }
        internal static int CREATE_AIR_DEFENSE_SPHERE_(float x, float y, float z, float radius, float p4, float p5, float p6, Hash weaponHash) { return NativeInvoker.Invoke<int>(0x91EF34584710BE99, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, (ulong)weaponHash); }
        internal static int CREATE_AIR_DEFENSE_AREA_(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, float p8, float p9, Hash weaponHash) { return NativeInvoker.Invoke<int>(0x9DA58CDBF6BDBC08, *(uint*)&p0, *(uint*)&p1, *(uint*)&p2, *(uint*)&p3, *(uint*)&p4, *(uint*)&p5, *(uint*)&p6, *(uint*)&p7, *(uint*)&p8, *(uint*)&p9, (ulong)weaponHash); }
        internal static BOOL REMOVE_AIR_DEFENSE_ZONE_(int zoneId) { return NativeInvoker.Invoke<BOOL>(0x0ABF535877897560, (ulong)zoneId); }
        internal static void REMOVE_ALL_AIR_DEFENSE_ZONES_() { NativeInvoker.Invoke(0x1E45B34ADEBEE48E); } // 0x1E45B34ADEBEE48E b573<, (ulong)1E45B34ADEBEE48E); }
        internal static void SET_PLAYER_AIR_DEFENSE_ZONE_FLAG_(Player player, int zoneId, BOOL enable) { NativeInvoker.Invoke(0xECDC202B25E5CF48, (ulong)player, (ulong)zoneId, (ulong)enable); }
        internal static BOOL IS_ANY_AIR_DEFENSE_ZONE_INSIDE_SPHERE_(float x, float y, float z, float radius, int* outZoneId) { return NativeInvoker.Invoke<BOOL>(0xDAB963831DBFD3F4, *(uint*)&x, *(uint*)&y, *(uint*)&z, *(uint*)&radius, (ulong)outZoneId); }
        internal static void FIRE_AIR_DEFENSE_WEAPON_(int zoneId, float x, float y, float z) { NativeInvoker.Invoke(0x44F1012B69313374, (ulong)zoneId, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static BOOL DOES_AIR_DEFENSE_ZONE_EXIST_(int zoneId) { return NativeInvoker.Invoke<BOOL>(0xCD79A550999D7D4F, (ulong)zoneId); }
        internal static void SET_CAN_PED_EQUIP_WEAPON_(Ped ped, Hash weaponHash, BOOL toggle) { NativeInvoker.Invoke(0xB4771B9AAF4E68E4, (ulong)ped, (ulong)weaponHash, (ulong)toggle); }
        internal static void SET_CAN_PED_EQUIP_ALL_WEAPONS_(Ped ped, BOOL toggle) { NativeInvoker.Invoke(0xEFF296097FF1E509, (ulong)ped, (ulong)toggle); }
    }

    internal static unsafe class ZONE
    {
        internal static int GET_ZONE_AT_COORDS(float x, float y, float z) { return NativeInvoker.Invoke<int>(0x27040C25DE6CB2F4, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static int GET_ZONE_FROM_NAME_ID(char* zoneName) { return NativeInvoker.Invoke<int>(0x98CD1D2934B76CC1, (ulong)zoneName); }
        internal static int GET_ZONE_POPSCHEDULE(int zoneId) { return NativeInvoker.Invoke<int>(0x4334BC40AA0CB4BB, (ulong)zoneId); }
        internal static char* GET_NAME_OF_ZONE(float x, float y, float z) { return (char*)NativeInvoker.Invoke<IntPtr>(0xCD90657D4C30E1CA, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
        internal static void SET_ZONE_ENABLED(int zoneId, BOOL toggle) { NativeInvoker.Invoke(0xBA5ECEEA120E5611, (ulong)zoneId, (ulong)toggle); }
        internal static int GET_ZONE_SCUMMINESS(int zoneId) { return NativeInvoker.Invoke<int>(0x5F7B268D15BA0739, (ulong)zoneId); }
        internal static void OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(int scheduleId, Hash vehicleHash) { NativeInvoker.Invoke(0x5F7D596BAC2E7777, (ulong)scheduleId, (ulong)vehicleHash); }
        internal static void CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(int scheduleId) { NativeInvoker.Invoke(0x5C0DE367AA0D911C, (ulong)scheduleId); }
        internal static Hash GET_HASH_OF_MAP_AREA_AT_COORDS(float x, float y, float z) { return NativeInvoker.Invoke<Hash>(0x7EE64D51E8498728, *(uint*)&x, *(uint*)&y, *(uint*)&z); }
    }
}
